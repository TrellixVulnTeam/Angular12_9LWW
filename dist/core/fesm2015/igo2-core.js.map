{"version":3,"file":"igo2-core.js","sources":["../../../packages/core/src/lib/activity/activity.service.ts","../../../packages/core/src/lib/activity/activity.interceptor.ts","../../../packages/core/src/lib/activity/activity.module.ts","../../../packages/core/src/lib/config/version.ts","../../../packages/core/src/lib/config/config.service.ts","../../../packages/core/src/lib/config/config.provider.ts","../../../packages/core/src/lib/config/config.module.ts","../../../packages/core/src/lib/language/shared/language.loader.ts","../../../packages/core/src/lib/language/shared/language.provider.ts","../../../packages/core/src/lib/language/shared/missing-translation.guard.ts","../../../packages/core/src/lib/language/language.module.ts","../../../packages/core/src/lib/message/message.module.ts","../../../packages/core/src/lib/language/shared/language.service.ts","../../../packages/core/src/lib/message/shared/message.enum.ts","../../../packages/core/src/lib/message/shared/message.service.ts","../../../packages/core/src/lib/request/error.interceptor.ts","../../../packages/core/src/lib/request/error.module.ts","../../../packages/core/src/lib/core.module.ts","../../../packages/core/src/lib/gesture/gesture.provider.ts","../../../packages/core/src/lib/gesture/gesture.module.ts","../../../packages/core/src/lib/request/logging.interceptor.ts","../../../packages/core/src/lib/request/logging.module.ts","../../../packages/core/src/lib/route/route.service.ts","../../../packages/core/src/lib/analytics/shared/analytics.service.ts","../../../packages/core/src/lib/media/media.enum.ts","../../../packages/core/src/lib/media/media.service.ts","../../../packages/core/src/lib/storage/storage.interface.ts","../../../packages/core/src/lib/storage/storage.service.ts","../../../packages/core/src/lib/network/network.service.ts","../../../packages/core/src/public_api.ts","../../../packages/core/src/igo2-core.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { uuid } from '@igo2/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n  public counter$ = new BehaviorSubject<number>(0);\n\n  private ids: string[] = [];\n\n  constructor() {}\n\n  register(): string {\n    const id = uuid();\n    this.ids.push(id);\n    this.counter$.next(this.ids.length);\n\n    return id;\n  }\n\n  unregister(id: string) {\n    const index = this.ids.indexOf(id);\n    if (index === -1) {\n      return;\n    }\n    this.ids.splice(index, 1);\n\n    this.counter$.next(this.ids.length);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { ActivityService } from './activity.service';\n\n@Injectable()\nexport class ActivityInterceptor implements HttpInterceptor {\n  constructor(private activityService: ActivityService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const activity = req.headers.get('activityInterceptor');\n    if (activity) {\n      const actReq = req.clone({\n        headers: req.headers.delete('activityInterceptor')\n      });\n      if (activity === 'false') {\n        return next.handle(actReq);\n      }\n    }\n\n    const id = this.activityService.register();\n\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.activityService.unregister(id);\n      })\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ActivityInterceptor } from './activity.interceptor';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoActivityModule {\n  static forRoot(): ModuleWithProviders<IgoActivityModule> {\n    return {\n      ngModule: IgoActivityModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: ActivityInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","export interface Version {\n  lib: string;\n  releaseDate: number;\n}\n\nexport const version: Version = {\n  lib: '1.11.1',\n  releaseDate: 1649355043171\n};\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ObjectUtils } from '@igo2/utils';\n\nimport { ConfigOptions } from './config.interface';\nimport { version } from './version';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  private config: object = {};\n\n  constructor(private injector: Injector) {}\n\n  /**\n   * Use to get the data found in config file\n   */\n  public getConfig(key: string): any {\n    return ObjectUtils.resolve(this.config, key);\n  }\n\n  /**\n   * This method loads \"[path]\" to get all config's variables\n   */\n  public load(options: ConfigOptions) {\n    const baseConfig = options.default || {};\n    if (!options.path) {\n      this.config = baseConfig;\n      return true;\n    }\n\n    const http = this.injector.get(HttpClient);\n\n    return new Promise((resolve, _reject) => {\n      http\n        .get(options.path)\n        .pipe(\n          catchError((error: any): any => {\n            console.log(`Configuration file ${options.path} could not be read`);\n            resolve(true);\n            return throwError(error.error || 'Server error');\n          })\n        )\n        .subscribe((configResponse: object) => {\n          this.config = ObjectUtils.mergeDeep(\n            ObjectUtils.mergeDeep({ version }, baseConfig),\n            configResponse\n          );\n          resolve(true);\n        });\n    });\n  }\n}\n","import { APP_INITIALIZER, InjectionToken } from '@angular/core';\n\nimport { ConfigService } from './config.service';\nimport { ConfigOptions } from './config.interface';\n\nexport let CONFIG_OPTIONS = new InjectionToken<ConfigOptions>('configOptions');\n\nexport function provideConfigOptions(options: ConfigOptions) {\n  return {\n    provide: CONFIG_OPTIONS,\n    useValue: options\n  };\n}\n\nexport function configFactory(\n  configService: ConfigService,\n  options: ConfigOptions\n) {\n  return () => configService.load(options);\n}\n\nexport function provideConfigLoader() {\n  return {\n    provide: APP_INITIALIZER,\n    useFactory: configFactory,\n    multi: true,\n    deps: [ConfigService, CONFIG_OPTIONS]\n  };\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { provideConfigOptions, provideConfigLoader } from './config.provider';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoConfigModule {\n  static forRoot(): ModuleWithProviders<IgoConfigModule> {\n    return {\n      ngModule: IgoConfigModule,\n      providers: [provideConfigOptions({}), provideConfigLoader()]\n    };\n  }\n}\n","import { HttpClient } from '@angular/common/http';\n\nimport { of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { TranslateLoader } from '@ngx-translate/core';\n\nimport { ObjectUtils } from '@igo2/utils';\n\nimport { ConfigService } from '../../config/config.service';\n\ndeclare function require(arg: string): any;\n\nexport class LanguageLoader implements TranslateLoader {\n  constructor(\n    private http: HttpClient,\n    private prefix?: string | string[],\n    private suffix: string = '.json',\n    private config?: ConfigService\n  ) {}\n\n  public getTranslation(lang: string): any {\n    const translation = require(`../locale/${lang}.json`);\n    const igoLocale$ = of(translation);\n\n    if (this.config && !this.prefix) {\n      const prefix = this.config.getConfig('language.prefix');\n      this.prefix = !prefix || Array.isArray(prefix) ? prefix : [prefix];\n    }\n\n    if (!this.prefix || this.prefix.length === 0) {\n      return igoLocale$;\n    }\n\n    const appLocale$ = (this.prefix as string[]).map((prefix) =>\n      this.http.get(`${prefix}${lang}${this.suffix}`)\n    );\n\n    const locale$ = combineLatest([igoLocale$, ...appLocale$]);\n\n    return locale$.pipe(\n      map((translations) => {\n        return translations.reduce(\n          (acc, current) => ObjectUtils.mergeDeep(acc, current),\n          {}\n        );\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { TranslateLoader } from '@ngx-translate/core';\n\nimport { ConfigService } from '../../config/config.service';\nimport { LanguageLoader } from './language.loader';\n\nexport function defaultLanguageLoader(\n  http: HttpClient,\n  config?: ConfigService\n) {\n  return new LanguageLoader(http, undefined, undefined, config);\n}\n\nexport function provideLanguageLoader(loader?) {\n  return {\n    provide: TranslateLoader,\n    useFactory: loader || defaultLanguageLoader,\n    deps: [HttpClient]\n  };\n}\n\nexport function provideDefaultLanguageLoader(loader?) {\n  return {\n    provide: TranslateLoader,\n    useFactory: loader || defaultLanguageLoader,\n    deps: [HttpClient, ConfigService]\n  };\n}\n","import {\n  MissingTranslationHandler,\n  MissingTranslationHandlerParams\n} from '@ngx-translate/core';\n\nexport class IgoMissingTranslationHandler implements MissingTranslationHandler {\n  handle(params: MissingTranslationHandlerParams) {\n    if (!params.translateService.langs.length) {\n      const error =\n        'Translations are not yet loaded. \\\n         Check that the LanguageService is injected.';\n      throw new Error(error);\n    }\n\n    if (params.key.substr(0, 4) === 'igo.') {\n      throw new Error(`The Key \"${params.key}\" is missing in locale file.`);\n    } else {\n      return params.key;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  TranslateModule,\n  MissingTranslationHandler\n} from '@ngx-translate/core';\n\nimport { provideDefaultLanguageLoader } from './shared/language.provider';\nimport { IgoMissingTranslationHandler } from './shared/missing-translation.guard';\n\n@NgModule({\n  imports: [\n    TranslateModule.forRoot({\n      missingTranslationHandler: {\n        provide: MissingTranslationHandler,\n        useClass: IgoMissingTranslationHandler\n      }\n    })\n  ],\n  declarations: [],\n  exports: [TranslateModule]\n})\nexport class IgoLanguageModule {\n  static forRoot(): ModuleWithProviders<IgoLanguageModule> {\n    return {\n      ngModule: IgoLanguageModule,\n      providers: [provideDefaultLanguageLoader()]\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GlobalConfig, ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  imports: [CommonModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n      timeOut: 10000,\n      extendedTimeOut: 10000,\n      messageClass: 'toast-message mat-typography',\n      closeButton: true,\n      progressBar: true,\n      enableHtml: true,\n      tapToDismiss: true,\n      maxOpened: 4,\n      preventDuplicates: true,\n      resetTimeoutOnDuplicate: true,\n      countDuplicates: false,\n      includeTitleDuplicates: true\n    } as GlobalConfig)],\n  declarations: [],\n  exports: []\n})\nexport class IgoMessageModule {\n  static forRoot(): ModuleWithProviders<IgoMessageModule> {\n    return {\n      ngModule: IgoMessageModule,\n      providers: []\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  private language: string = this.translate.getBrowserLang();\n\n  constructor(public translate: TranslateService) {\n    const lang = this.getLanguage();\n    this.translate.setDefaultLang(lang);\n  }\n\n  public getLanguage(): string {\n    return this.language.match(/en|fr/) ? this.language : 'en';\n  }\n\n  public setLanguage(language: string) {\n    this.language = language.match(/en|fr/) ? language : 'en';\n    this.translate.use(this.language);\n    this.translate.reloadLang(this.language);\n  }\n}\n","export enum MessageType {\n  ERROR = 'error',\n  ALERT = 'warning', // todo delete (transition to ngx-toastr)\n  WARNING = 'warning',\n  INFO = 'info',\n  SUCCESS = 'success'\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ConfigService } from '../../config/config.service';\n\nimport { Message, MessageOptions } from './message.interface';\nimport { ActiveToast, IndividualConfig, ToastrService } from 'ngx-toastr';\nimport { MessageType } from './message.enum';\nimport { LanguageService } from '../../language/shared/language.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  public messages$ = new BehaviorSubject<Message[]>([]);\n  private options: MessageOptions;\n\n  constructor(\n    @Inject(Injector) private injector: Injector,\n    private configService: ConfigService,\n    private languageService: LanguageService\n  ) {\n    this.options = this.configService.getConfig('message') || {};\n  }\n\n  private get toastr(): ToastrService {\n    return this.injector.get(ToastrService);\n  }\n\n  showError(httpError: HttpErrorResponse) {\n    httpError.error.caught = true;\n    return this.error(httpError.error.message, httpError.error.title);\n  }\n\n  message(message: Message) {\n    this.messages$.next(this.messages$.value.concat([message]));\n\n    message.options = message.options || {} as MessageOptions;\n    const currentDate = new Date();\n\n    message.options.from = message.options.from ? message.options.from : new Date('1 jan 1900');\n    message.options.to = message.options.to ? message.options.to : new Date('1 jan 3000');\n    if (typeof message.options.from === 'string') {\n      message.options.from = new Date(Date.parse(message.options.from.replace(/-/g, ' ')));\n    }\n    if (typeof message.options.to === 'string') {\n      message.options.to = new Date(Date.parse(message.options.to.replace(/-/g, ' ')));\n    }\n    if (\n      currentDate > message.options.from && currentDate < message.options.to) {\n\n      message = this.handleTemplate(message);\n\n      if (message.text) {\n        let messageShown: ActiveToast<any>;\n        switch (message.type) {\n          case MessageType.SUCCESS:\n            messageShown = this.success(message.text, message.title, message.options);\n            break;\n          case MessageType.ERROR:\n            messageShown = this.error(message.text, message.title, message.options);\n            break;\n          case MessageType.INFO:\n            messageShown = this.info(message.text, message.title, message.options);\n            break;\n          case MessageType.ALERT:\n          case MessageType.WARNING:\n            messageShown = this.alert(message.text, message.title, message.options);\n            break;\n          default:\n            messageShown = this.info(message.text, message.title, message.options);\n            break;\n        }\n        message.options.id = messageShown.toastId;\n      }\n    }\n  }\n\n  success(text: string, title: string = 'igo.core.message.success', options: Partial<IndividualConfig> = {}): ActiveToast<any> {\n    const message = this.languageService.translate.instant(text);\n    const translatedTitle = this.languageService.translate.instant(title);\n    return this.toastr.success(message, translatedTitle, options);\n  }\n\n  error(text: string, title: string = 'igo.core.message.error', options: Partial<IndividualConfig> = {}): ActiveToast<any> {\n    const message = this.languageService.translate.instant(text);\n    const translatedTitle = this.languageService.translate.instant(title);\n    return this.toastr.error(message, translatedTitle, options);\n  }\n\n  info(text: string, title: string = 'igo.core.message.info', options: Partial<IndividualConfig> = {}): ActiveToast<any> {\n    const message = this.languageService.translate.instant(text);\n    const translatedTitle = this.languageService.translate.instant(title);\n    return this.toastr.info(message, translatedTitle, options);\n  }\n\n  alert(text: string, title: string = 'igo.core.message.alert', options: Partial<IndividualConfig> = {}): ActiveToast<any> {\n    const message = this.languageService.translate.instant(text);\n    const translatedTitle = this.languageService.translate.instant(title);\n    return this.toastr.warning(message, translatedTitle, options);\n  }\n\n  remove(id?: number) {\n    this.toastr.remove(id);\n  }\n\n  removeAllAreNotError() {\n    for (const mess of this.messages$.value) {\n      if (mess.type !== MessageType.ERROR) {\n        this.remove(mess.options.id);\n      }\n    }\n  }\n\n  private handleTemplate(message: Message): Message {\n    if (!this.options.template || message.html) {\n      return message;\n    }\n\n    let html = this.options.template;\n    html = html.replace('${text}', message.text);\n    html = html.replace('${title}', message.title);\n\n    message.html = undefined;\n    message.text = html;\n    message.title = undefined;\n    return message;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpEvent,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\nimport { MessageService } from '../message/shared/message.service';\nimport { LanguageService } from '../language/shared/language.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private messageService: MessageService,\n    private injector: Injector\n  ) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const errorContainer = { httpError: undefined };\n    return next.handle(req).pipe(\n      catchError(error => this.handleError(error, errorContainer)),\n      finalize(() => {\n        this.handleCaughtError(errorContainer);\n        this.handleUncaughtError(errorContainer);\n      })\n    );\n  }\n\n  private handleError(\n    httpError: HttpErrorResponse,\n    errorContainer: { httpError: HttpErrorResponse }\n  ) {\n    if (httpError instanceof HttpErrorResponse) {\n      const errorObj = httpError.error === 'object' ? httpError.error : {};\n      errorObj.message = httpError.error.message || httpError.statusText;\n      errorObj.caught = false;\n\n      httpError = new HttpErrorResponse({\n        error: errorObj,\n        headers: httpError.headers,\n        status: httpError.status,\n        statusText: httpError.statusText,\n        url: httpError.url\n      });\n    }\n\n    errorContainer.httpError = httpError;\n    return throwError(httpError);\n  }\n\n  private handleCaughtError(errorContainer: { httpError: HttpErrorResponse }) {\n    const httpError = errorContainer.httpError;\n    if (httpError && httpError.error.toDisplay) {\n      httpError.error.caught = true;\n      this.messageService.error(httpError.error.message, httpError.error.title);\n    }\n  }\n\n  private handleUncaughtError(errorContainer: {\n    httpError: HttpErrorResponse;\n  }) {\n    const httpError = errorContainer.httpError;\n    if (httpError && !httpError.error.caught) {\n      const translate = this.injector.get(LanguageService).translate;\n      const message = translate.instant('igo.core.errors.uncaught.message');\n      const title = translate.instant('igo.core.errors.uncaught.title');\n      httpError.error.caught = true;\n      this.messageService.error(message, title);\n    }\n  }\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf\n} from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ErrorInterceptor } from './error.interceptor';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoErrorModule {\n  static forRoot(): ModuleWithProviders<IgoErrorModule> {\n    return {\n      ngModule: IgoErrorModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: ErrorInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule: IgoErrorModule) {\n    if (parentModule) {\n      throw new Error(\n        'IgoErrorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\n\nimport { IgoActivityModule } from './activity/activity.module';\nimport { IgoConfigModule } from './config/config.module';\nimport { IgoLanguageModule } from './language/language.module';\nimport { IgoMessageModule } from './message/message.module';\nimport { IgoErrorModule } from './request/error.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    IgoActivityModule.forRoot(),\n    IgoConfigModule.forRoot(),\n    IgoErrorModule.forRoot(),\n    IgoLanguageModule.forRoot(),\n    IgoMessageModule.forRoot()\n  ],\n  declarations: [],\n  exports: [\n    IgoActivityModule,\n    IgoConfigModule,\n    IgoErrorModule,\n    IgoLanguageModule,\n    IgoMessageModule\n  ]\n})\nexport class IgoCoreModule {\n  static forRoot(): ModuleWithProviders<IgoCoreModule> {\n    return {\n      ngModule: IgoCoreModule,\n      providers: []\n    };\n  }\n\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    matIconRegistry.addSvgIconSet(\n      domSanitizer.bypassSecurityTrustResourceUrl(\n        './assets/igo2/core/icons/mdi.svg'\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HammerGestureConfig } from '@angular/platform-browser';\n\n\n@Injectable()\nexport class IgoGestureConfig extends HammerGestureConfig {\n  buildHammer(element: HTMLElement) {\n    const mc = super.buildHammer(element) as any;\n    mc.set({ touchAction: 'pan-y' });\n    return mc;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HammerModule, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\nimport { IgoGestureConfig } from './gesture.provider';\n\n@NgModule({\n  imports: [HammerModule],\n  declarations: [],\n  exports: []\n})\nexport class IgoGestureModule {\n  static forRoot(): ModuleWithProviders<IgoGestureModule> {\n    return {\n      ngModule: IgoGestureModule,\n      providers: [\n        {\n          provide: HAMMER_GESTURE_CONFIG,\n          useClass: IgoGestureConfig\n        }\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpHandler,\n  HttpEvent,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const started = Date.now();\n    let ok: string;\n\n    // extend server response observable with logging\n    return next.handle(req).pipe(\n      tap(\n        // Succeeds when there is a response; ignore other events\n        event => (ok = event instanceof HttpResponse ? 'succeeded' : ''),\n        // Operation failed; error is an HttpErrorResponse\n        error => (ok = 'failed')\n      ),\n      // Log when response observable either completes or errors\n      finalize(() => {\n        const elapsed = Date.now() - started;\n        const msg = `${req.method} \"${req.urlWithParams}\"\n             ${ok} in ${elapsed} ms.`;\n\n        console.log(msg);\n      })\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { LoggingInterceptor } from './logging.interceptor';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoLoggingModule {\n  static forRoot(): ModuleWithProviders<IgoLoggingModule> {\n    return {\n      ngModule: IgoLoggingModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: LoggingInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { Injectable, Inject, InjectionToken, Optional } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { RouteServiceOptions } from './route.interface';\n\nexport let ROUTE_SERVICE_OPTIONS = new InjectionToken<RouteServiceOptions>(\n  'routeServiceOptions'\n);\n\nexport function provideRouteServiceOptions(options: RouteServiceOptions) {\n  return {\n    provide: ROUTE_SERVICE_OPTIONS,\n    useValue: options\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteService {\n  public options: RouteServiceOptions;\n\n  constructor(\n    private router: Router,\n    public route: ActivatedRoute,\n    @Inject(ROUTE_SERVICE_OPTIONS)\n    @Optional()\n    options: RouteServiceOptions\n  ) {\n    const defaultOptions = {\n      centerKey: 'center',\n      zoomKey: 'zoom',\n      projectionKey: 'projection',\n      contextKey: 'context',\n      searchKey: 'search',\n      visibleOnLayersKey: 'visiblelayers',\n      visibleOffLayersKey: 'invisiblelayers',\n      directionsCoordKey: 'routing',\n      directionsOptionsKey: 'routingOptions',\n      toolKey: 'tool',\n      wmsUrlKey: 'wmsUrl',\n      wmsLayersKey:  'wmsLayers',\n      wmtsUrlKey: 'wmtsUrl',\n      wmtsLayersKey:  'wmtsLayers',\n      arcgisUrlKey: 'arcgisUrl',\n      arcgisLayersKey:  'arcgisLayers',\n      iarcgisUrlKey: 'iarcgisUrl',\n      iarcgisLayersKey:  'iarcgisLayers',\n      tarcgisUrlKey: 'tarcgisUrl',\n      tarcgisLayersKey:  'tarcgisLayers',\n      vectorKey: 'vector'\n    };\n    this.options = Object.assign({}, defaultOptions, options);\n  }\n\n  get queryParams(): Observable<Params> {\n    let url = decodeURIComponent(location.search);\n    if (url.includes('¢er=')) {\n      url = url.replace('¢er', '&center');\n      const queryParams: any = url\n      .slice(1)\n      .split('&')\n      .map(p => p.split('='))\n      .reduce((obj, pair) => {\n        const [key, value] = pair.map(decodeURIComponent);\n        obj[key] = value;\n        return obj;\n      }, {});\n      this.router.navigate([], { queryParams });\n    }\n    return this.route.queryParams;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ConfigService } from '../../config/config.service';\n\nimport { AnalyticsOptions } from './analytics.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalyticsService {\n  private options: AnalyticsOptions;\n\n  get paq() {\n    return ((window as any)._paq = (window as any)._paq || []);\n  }\n\n  constructor(private config: ConfigService) {\n    this.options = this.config.getConfig('analytics') || {};\n\n    if (this.options.provider === 'matomo') {\n      this.initMatomo();\n    }\n  }\n\n  private initMatomo() {\n    if (!this.options.url || !this.options.id) {\n      return;\n    }\n    const url =\n      this.options.url.substr(-1) === '/'\n        ? this.options.url + 'matomo'\n        : this.options.url;\n\n    // this.paq.push(['trackPageView']);\n    // this.paq.push(['enableLinkTracking']);\n    (() => {\n      this.paq.push(['setTrackerUrl', url + '.php']);\n      this.paq.push(['setSiteId', this.options.id]);\n      const g = document.createElement('script');\n      const s = document.getElementsByTagName('script')[0];\n      g.type = 'text/javascript';\n      g.async = true;\n      g.defer = true;\n      g.src = url + '.js';\n      s.parentNode.insertBefore(g, s);\n    })();\n  }\n\n  public setUser(\n    user?: {\n      id: number;\n      sourceId?: string;\n      firstName?: string;\n      lastName?: string;\n    },\n    profils?: string[]\n  ) {\n    if (this.options.provider === 'matomo') {\n      if (!user) {\n        this.paq.push(['resetUserId']);\n        this.paq.push(['deleteCustomVariable', 1, 'user']);\n        this.paq.push(['deleteCustomVariable', 2, 'name']);\n        this.paq.push(['deleteCustomVariable', 3, 'profils']);\n      } else {\n        this.paq.push(['setUserId', user.id]);\n\n        const name = `${user.firstName} ${user.lastName}`;\n        this.paq.push(['setCustomVariable', 1, 'user', user.sourceId, 'visit']);\n        this.paq.push(['setCustomVariable', 2, 'name', name, 'visit']);\n        this.paq.push(['setCustomVariable', 3, 'profils', profils, 'visit']);\n      }\n\n      this.paq.push(['trackPageView']);\n      this.paq.push(['enableLinkTracking']);\n    }\n  }\n\n  public trackSearch(term: string, nbResults: number) {\n    if (this.options.provider === 'matomo') {\n      this.paq.push(['trackSiteSearch', term, false, nbResults]);\n    }\n  }\n\n  public trackEvent(category: string, action: string, name: string) {\n    if (this.options.provider === 'matomo') {\n      this.paq.push(['trackEvent', category, action, name]);\n    }\n  }\n}\n","export enum Media {\n  Mobile = 'mobile',\n  Tablet = 'tablet',\n  Desktop = 'desktop'\n}\n\nexport enum MediaOrientation {\n  Portrait = 'portrait',\n  Landscape = 'landscape'\n}\n","import { Injectable } from '@angular/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Media, MediaOrientation } from './media.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaService {\n  public media$ = new BehaviorSubject<Media>(undefined);\n  public orientation$ = new BehaviorSubject<MediaOrientation>(undefined);\n\n  constructor(breakpointObserver: BreakpointObserver) {\n    breakpointObserver\n      .observe([Breakpoints.HandsetLandscape])\n      .subscribe(res => {\n        if (res.matches) {\n          this.media$.next(Media.Mobile);\n          this.orientation$.next(MediaOrientation.Landscape);\n        }\n      });\n\n    breakpointObserver.observe([Breakpoints.HandsetPortrait]).subscribe(res => {\n      if (res.matches) {\n        this.media$.next(Media.Mobile);\n        this.orientation$.next(MediaOrientation.Portrait);\n      }\n    });\n\n    breakpointObserver.observe([Breakpoints.TabletLandscape]).subscribe(res => {\n      if (res.matches) {\n        this.media$.next(Media.Tablet);\n        this.orientation$.next(MediaOrientation.Landscape);\n      }\n    });\n\n    breakpointObserver.observe([Breakpoints.TabletPortrait]).subscribe(res => {\n      if (res.matches) {\n        this.media$.next(Media.Tablet);\n        this.orientation$.next(MediaOrientation.Portrait);\n      }\n    });\n\n    breakpointObserver.observe([Breakpoints.WebLandscape]).subscribe(res => {\n      if (res.matches) {\n        this.media$.next(Media.Desktop);\n        this.orientation$.next(MediaOrientation.Landscape);\n      }\n    });\n\n    breakpointObserver.observe([Breakpoints.WebPortrait]).subscribe(res => {\n      if (res.matches) {\n        this.media$.next(Media.Desktop);\n        this.orientation$.next(MediaOrientation.Portrait);\n      }\n    });\n  }\n\n  getMedia(): Media {\n    return this.media$.value;\n  }\n\n  getOrientation(): MediaOrientation {\n    return this.orientation$.value;\n  }\n\n  isTouchScreen(): boolean {\n    return 'ontouchstart' in document.documentElement ? true : false;\n  }\n\n  isMobile(): boolean {\n    const media = this.getMedia();\n    return media === 'mobile';\n  }\n\n  isDesktop(): boolean {\n    const media = this.getMedia();\n    return media === 'desktop';\n  }\n}\n","export enum StorageScope {\n  SESSION = 'Session',\n  LOCAL = 'Local'\n}\n\nexport interface StorageOptions {\n  key: string;\n}\n\nexport interface StorageServiceEvent {\n  key?: string;\n  scope: StorageScope;\n  event: StorageServiceEventEnum;\n  previousValue?: any;\n  currentValue?: any;\n}\n\nexport enum StorageServiceEventEnum {\n  ADDED = 'Added',\n  MODIFIED = 'Modified',\n  REMOVED = 'Removed',\n  CLEARED = 'Cleared'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ConfigService } from '../config/config.service';\nimport { StorageScope, StorageOptions, StorageServiceEvent, StorageServiceEventEnum } from './storage.interface';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  protected options: StorageOptions;\n\n  public storageChange$: BehaviorSubject<StorageServiceEvent> = new BehaviorSubject(undefined);\n\n  constructor(private config: ConfigService) {\n    this.options = this.config.getConfig('storage') || { key: 'igo' };\n  }\n  /**\n   * Use to get the data found in storage file\n   */\n  get(key: string, scope?: StorageScope): string | object | boolean | number {\n    let value: any;\n\n    if (!scope || scope === StorageScope.SESSION) {\n      value = sessionStorage.getItem(`${this.options.key}.${key}`);\n    }\n\n    if (scope === StorageScope.LOCAL || (!value && !scope)) {\n      value = localStorage.getItem(`${this.options.key}.${key}`);\n    }\n\n    if (value) {\n      try {\n        value = JSON.parse(value);\n      } catch {\n        value = value;\n      }\n    }\n\n    return value;\n  }\n\n  set(\n    key: string,\n    value: string | object | boolean | number,\n    scope: StorageScope = StorageScope.LOCAL\n  ) {\n    const previousValue = this.get(key, scope);\n    if (scope === StorageScope.SESSION) {\n      sessionStorage.setItem(\n        `${this.options.key}.${key}`,\n        JSON.stringify(value)\n      );\n    } else {\n      localStorage.setItem(`${this.options.key}.${key}`, JSON.stringify(value));\n    }\n    const currentValue = this.get(key, scope);\n\n    if (currentValue !== previousValue) {\n      this.storageChange$.next({\n        key, scope,\n        event: previousValue !== undefined ? StorageServiceEventEnum.MODIFIED : StorageServiceEventEnum.ADDED,\n        previousValue,\n        currentValue\n      });\n    }\n  }\n\n  remove(key: string, scope: StorageScope = StorageScope.LOCAL) {\n    const previousValue = this.get(key, scope);\n    if (scope === StorageScope.SESSION) {\n      sessionStorage.removeItem(`${this.options.key}.${key}`);\n    } else {\n      localStorage.removeItem(`${this.options.key}.${key}`);\n    }\n    this.storageChange$.next({key, scope, event: StorageServiceEventEnum.REMOVED, previousValue });\n  }\n\n  clear(scope: StorageScope = StorageScope.LOCAL) {\n    if (scope === StorageScope.SESSION) {\n      sessionStorage.clear();\n    } else {\n      localStorage.clear();\n    }\n    this.storageChange$.next({scope, event: StorageServiceEventEnum.CLEARED });\n  }\n}\n","import { Injectable, EventEmitter, OnDestroy, Injector } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { debounceTime, startWith } from 'rxjs/operators';\n\nimport { MessageService } from '../message/shared/message.service';\nimport { LanguageService } from '../language/shared/language.service';\nimport { ConnectionState } from './network.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetworkService implements OnDestroy {\n  private stateChangeEventEmitter = new EventEmitter<ConnectionState>();\n  private onlineSubscription: Subscription;\n  private offlineSubscription: Subscription;\n  private previousMessageId;\n\n  private state: ConnectionState = {\n    connection: window.navigator.onLine\n  };\n\n  constructor(\n    private messageService: MessageService,\n    private injector: Injector\n  ) {\n      this.checkNetworkState();\n  }\n\n  private checkNetworkState() {\n    this.onlineSubscription = fromEvent(window, 'online').subscribe(() => {\n      if (this.previousMessageId) {\n        this.messageService.remove(this.previousMessageId);\n      }\n      const translate = this.injector.get(LanguageService).translate;\n      const message = translate.instant('igo.core.network.online.message');\n      const title = translate.instant('igo.core.network.online.title');\n      const messageObj = this.messageService.info(message, title);\n      this.previousMessageId = messageObj.toastId;\n      this.state.connection = true;\n      this.emitEvent();\n    });\n\n    this.offlineSubscription = fromEvent(window, 'offline').subscribe(() => {\n      if (this.previousMessageId) {\n        this.messageService.remove(this.previousMessageId);\n      }\n      const translate = this.injector.get(LanguageService).translate;\n      const message = translate.instant('igo.core.network.offline.message');\n      const title = translate.instant('igo.core.network.offline.title');\n      const messageObj = this.messageService.info(message, title);\n      this.previousMessageId = messageObj.toastId;\n      this.state.connection = false;\n      this.emitEvent();\n    });\n  }\n\n  private emitEvent() {\n    this.stateChangeEventEmitter.emit(this.state);\n  }\n\n  ngOnDestroy(): void {\n    try {\n      this.offlineSubscription.unsubscribe();\n      this.onlineSubscription.unsubscribe();\n    } catch (e) {}\n  }\n\n  currentState(reportState = true): Observable<ConnectionState> {\n    return reportState\n      ? this.stateChangeEventEmitter.pipe(\n          debounceTime(300),\n          startWith(this.state)\n        )\n      : this.stateChangeEventEmitter.pipe(debounceTime(300));\n  }\n}\n","/*\n * Public API Surface of core\n */\n\nexport * from './lib/core.module';\nexport * from './lib/activity/activity.module';\nexport * from './lib/config/config.module';\nexport * from './lib/gesture/gesture.module';\nexport * from './lib/language/language.module';\nexport * from './lib/message/message.module';\nexport * from './lib/request/error.module';\nexport * from './lib/request/logging.module';\n\nexport * from './lib/config/config.provider';\nexport * from './lib/gesture/gesture.provider';\nexport * from './lib/language/shared/language.provider';\nexport * from './lib/route/route.service';\nexport * from './lib/route/route.interface';\n\nexport * from './lib/activity';\nexport * from './lib/analytics';\nexport * from './lib/config';\nexport * from './lib/language';\nexport * from './lib/media';\nexport * from './lib/message';\nexport * from './lib/request';\nexport * from './lib/storage';\nexport * from './lib/network';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}