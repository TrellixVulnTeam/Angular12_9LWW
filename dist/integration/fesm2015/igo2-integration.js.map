{"version":3,"file":"igo2-integration.js","sources":["../../../packages/integration/src/lib/analytics/analytics.module.ts","../../../packages/integration/src/lib/import-export/import-export.state.ts","../../../packages/integration/src/lib/tool/tool.state.ts","../../../packages/integration/src/lib/context/context-editor-tool/context-editor-tool.component.ts","../../../packages/integration/src/lib/context/context-editor-tool/context-editor-tool.component.html","../../../packages/integration/src/lib/map/map.state.ts","../../../packages/integration/src/lib/context/context-manager-tool/context-manager-tool.component.ts","../../../packages/integration/src/lib/context/context-manager-tool/context-manager-tool.component.html","../../../packages/integration/src/lib/context/context-permission-manager-tool/context-permission-manager-tool.component.ts","../../../packages/integration/src/lib/context/context-permission-manager-tool/context-permission-manager-tool.component.html","../../../packages/integration/src/lib/map/layer-list-tool.state.ts","../../../packages/integration/src/lib/context/context-share-tool/context-share-tool.component.ts","../../../packages/integration/src/lib/context/context-share-tool/context-share-tool.component.html","../../../packages/integration/src/lib/context/context.module.ts","../../../packages/integration/src/lib/catalog/catalog.state.ts","../../../packages/integration/src/lib/catalog/catalog-library-tool/catalog-library-tool.component.ts","../../../packages/integration/src/lib/catalog/catalog-library-tool/catalog-library-tool.component.html","../../../packages/integration/src/lib/catalog/catalog-library-tool/catalog-library-tool.module.ts","../../../packages/integration/src/lib/catalog/catalog-browser-tool/catalog-browser-tool.component.html","../../../packages/integration/src/lib/catalog/catalog-browser-tool/catalog-browser-tool.component.ts","../../../packages/integration/src/lib/catalog/catalog-browser-tool/catalog-browser-tool.module.ts","../../../packages/integration/src/lib/catalog/catalog.module.ts","../../../packages/integration/src/lib/directions/directions.state.ts","../../../packages/integration/src/lib/context/context.state.ts","../../../packages/integration/src/lib/directions/directions-tool/directions-tool.component.ts","../../../packages/integration/src/lib/directions/directions-tool/directions-tool.component.html","../../../packages/integration/src/lib/directions/directions.module.ts","../../../packages/integration/src/lib/draw/draw.state.ts","../../../packages/integration/src/lib/draw/drawing-tool/drawing-tool.component.ts","../../../packages/integration/src/lib/draw/drawing-tool/drawing-tool.component.html","../../../packages/integration/src/lib/draw/draw.module.ts","../../../packages/integration/src/lib/workspace/shared/workspace.utils.ts","../../../packages/integration/src/lib/storage/storage.state.ts","../../../packages/integration/src/lib/workspace/shared/feature-actions.service.ts","../../../packages/integration/src/lib/workspace/shared/wfs-actions.service.ts","../../../packages/integration/src/lib/workspace/shared/edition-actions.service.ts","../../../packages/integration/src/lib/workspace/workspace.state.ts","../../../packages/integration/src/lib/workspace/workspace-button/workspace-button.component.html","../../../packages/integration/src/lib/workspace/workspace-button/workspace-button.component.ts","../../../packages/integration/src/lib/workspace/workspace.module.ts","../../../packages/integration/src/lib/import-export/import-export-tool/import-export-tool.component.html","../../../packages/integration/src/lib/import-export/import-export-tool/import-export-tool.component.ts","../../../packages/integration/src/lib/import-export/import-export.module.ts","../../../packages/integration/src/lib/map/map-details-tool/map-details-tool.component.html","../../../packages/integration/src/lib/map/map-details-tool/map-details-tool.component.ts","../../../packages/integration/src/lib/map/map-tool/map-tool.component.html","../../../packages/integration/src/lib/map/map-tool/map-tool.component.ts","../../../packages/integration/src/lib/map/map-tools/map-tools.component.html","../../../packages/integration/src/lib/map/map-tools/map-tools.component.ts","../../../packages/integration/src/lib/map/map-legend/map-legend-tool.component.html","../../../packages/integration/src/lib/map/map-legend/map-legend-tool.component.ts","../../../packages/integration/src/lib/map/advanced-map-tool/advanced-swipe/advanced-swipe.component.html","../../../packages/integration/src/lib/map/advanced-map-tool/advanced-swipe/advanced-swipe.component.ts","../../../packages/integration/src/lib/map/advanced-map-tool/advanced-coordinates/advanced-coordinates.component.html","../../../packages/integration/src/lib/map/advanced-map-tool/advanced-coordinates/advanced-coordinates.component.ts","../../../packages/integration/src/lib/map/advanced-map-tool/advanced-map-tool.component.ts","../../../packages/integration/src/lib/map/advanced-map-tool/advanced-map-tool.component.html","../../../packages/integration/src/lib/map/map.module.ts","../../../packages/integration/src/lib/measure/measure.state.ts","../../../packages/integration/src/lib/measure/measurer-tool/measurer-tool.component.ts","../../../packages/integration/src/lib/measure/measurer-tool/measurer-tool.component.html","../../../packages/integration/src/lib/measure/measurer-tool/measurer-tool.module.ts","../../../packages/integration/src/lib/measure/measure.module.ts","../../../packages/integration/src/lib/print/print-tool/print-tool.component.ts","../../../packages/integration/src/lib/print/print-tool/print-tool.component.html","../../../packages/integration/src/lib/print/print.module.ts","../../../packages/integration/src/lib/search/search.state.ts","../../../packages/integration/src/lib/search/search-bar/search-bar-binding.directive.ts","../../../packages/integration/src/lib/search/search-bar/search-bar.module.ts","../../../packages/integration/src/lib/search/search-results-tool/search-results-tool.component.html","../../../packages/integration/src/lib/search/search-results-tool/search-results-tool.component.ts","../../../packages/integration/src/lib/search/search-results-tool/search-results-tool.module.ts","../../../packages/integration/src/lib/search/search.module.ts","../../../packages/integration/src/lib/filter/ogc-filter-tool/ogc-filter-tool.component.ts","../../../packages/integration/src/lib/filter/ogc-filter-tool/ogc-filter-tool.component.html","../../../packages/integration/src/lib/filter/time-filter-tool/time-filter-tool.component.ts","../../../packages/integration/src/lib/filter/time-filter-tool/time-filter-tool.component.html","../../../packages/integration/src/lib/filter/spatial-filter-tool/spatial-filter-tool.component.html","../../../packages/integration/src/lib/filter/spatial-filter-tool/spatial-filter-tool.component.ts","../../../packages/integration/src/lib/filter/active-time-filter-tool/active-time-filter-tool.animation.ts","../../../packages/integration/src/lib/filter/active-time-filter-tool/active-time-filter-tool.component.ts","../../../packages/integration/src/lib/filter/active-time-filter-tool/active-time-filter-tool.component.html","../../../packages/integration/src/lib/filter/active-ogc-filter-tool/active-ogc-filter-tool.animation.ts","../../../packages/integration/src/lib/filter/active-ogc-filter-tool/active-ogc-filter-tool.component.ts","../../../packages/integration/src/lib/filter/active-ogc-filter-tool/active-ogc-filter-tool.component.html","../../../packages/integration/src/lib/filter/filter.module.ts","../../../packages/integration/src/lib/about/about-tool/about-tool.component.html","../../../packages/integration/src/lib/about/about-tool/about-tool.component.ts","../../../packages/integration/src/lib/about/about.module.ts","../../../packages/integration/src/lib/storage/storage.module.ts","../../../packages/integration/src/lib/integration.module.ts","../../../packages/integration/src/lib/tool/tool.module.ts","../../../packages/integration/src/lib/analytics/analytics-listener.service.ts","../../../packages/integration/src/lib/search/query.state.ts","../../../packages/integration/src/public_api.ts","../../../packages/integration/src/igo2-integration.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoAppAnalyticsModule {}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { ExportOptions } from '@igo2/geo';\n\nexport enum ImportExportType {\n  layer = 'layer',\n  context = 'context'\n}\n\nexport enum ImportExportMode {\n  import = 'import',\n  export = 'export'\n}\n\n/**\n * Service that holds the state of the importExport module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImportExportState {\n\n  readonly importExportType$: BehaviorSubject<ImportExportType> = new BehaviorSubject(ImportExportType.layer);\n  readonly selectedMode$: BehaviorSubject<ImportExportMode> = new BehaviorSubject(ImportExportMode.import);\n  readonly exportOptions$: BehaviorSubject<ExportOptions> = new BehaviorSubject(undefined);\n\n  setImportExportType(type: ImportExportType) {\n    this.importExportType$.next(type);\n  }\n\n  setMode(mode: ImportExportMode) {\n    this.selectedMode$.next(mode);\n  }\n\n  setsExportOptions(exportOptions: ExportOptions) {\n      this.exportOptions$.next(exportOptions);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Toolbox, ToolService } from '@igo2/common';\n\nimport { ExportOptions } from '@igo2/geo';\nimport { BehaviorSubject } from 'rxjs';\nimport { ImportExportMode, ImportExportState } from '../import-export/import-export.state';\n\n/**\n * Service that holds the state of the search module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolState {\n  get toolbox(): Toolbox {\n    return this.toolService.toolbox;\n  }\n\n  public openSidenav$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n\n  constructor(\n    private toolService: ToolService,\n    private importExportState: ImportExportState\n    ) {}\n\n    toolToActivateFromOptions(toolToActivate: { tool: string; options: {[key: string]: any} }) {\n    if (!toolToActivate) { return; }\n    if (toolToActivate.tool === 'importExport') {\n      let exportOptions: ExportOptions = this.importExportState.exportOptions$.value;\n      if (!exportOptions) {\n        exportOptions = {\n          layers: toolToActivate.options.layers,\n          featureInMapExtent: toolToActivate.options.featureInMapExtent\n        };\n      } else {\n        exportOptions.layers = toolToActivate.options.layers;\n        exportOptions.featureInMapExtent = toolToActivate.options.featureInMapExtent;\n      }\n      this.importExportState.setsExportOptions(exportOptions);\n      this.importExportState.setMode(ImportExportMode.export);\n    }\n\n    if (this.toolbox.getTool(toolToActivate.tool)) {\n      this.toolbox.activateTool(toolToActivate.tool);\n      this.openSidenav$.next(true);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { ToolState } from '../../tool/tool.state';\n\n@ToolComponent({\n  name: 'contextEditor',\n  title: 'igo.integration.tools.contexts',\n  icon: 'star',\n  parent: 'contextManager'\n})\n@Component({\n  selector: 'igo-context-editor-tool',\n  templateUrl: './context-editor-tool.component.html'\n})\nexport class ContextEditorToolComponent {\n\n  constructor(private toolState: ToolState) {}\n\n  submitSuccessed() {\n    this.toolState.toolbox.activatePreviousTool();\n  }\n}\n","<igo-context-edit\n  igoContextEditBinding\n  (submitSuccessed)=\"submitSuccessed()\"\n></igo-context-edit>\n","import { Injectable } from '@angular/core';\n\nimport { IgoMap, MapService, ProjectionService } from '@igo2/geo';\n// import { BehaviorSubject } from 'rxjs';\n\n/**\n * Service that holds the state of the map module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapState {\n\n  // public mapCenter$ = new BehaviorSubject<boolean>(false);\n  get showAllLegendsValue(): boolean {\n    return this._legendToolShowAll;\n  }\n\n  set showAllLegendsValue(value) {\n    this._legendToolShowAll = value;\n  }\n  private _legendToolShowAll: boolean;\n\n  /**\n   * Active map\n   */\n  get map(): IgoMap { return this._map; }\n  private _map: IgoMap;\n\n  constructor(\n    private mapService: MapService,\n    private projectionService: ProjectionService // Don't remove this or it'll never be injected\n  ) {\n    this._map = new IgoMap({\n      controls: {\n        scaleLine: true,\n        attribution: {\n          collapsed: true\n        }\n      }\n    });\n\n    this.mapService.setMap(this.map);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\n\nimport { ToolState } from '../../tool/tool.state';\nimport { MapState } from '../../map/map.state';\nimport { IgoMap } from '@igo2/geo';\n\n@ToolComponent({\n  name: 'contextManager',\n  title: 'igo.integration.tools.contexts',\n  icon: 'star'\n})\n@Component({\n  selector: 'igo-context-manager-tool',\n  templateUrl: './context-manager-tool.component.html'\n})\nexport class ContextManagerToolComponent {\n\n  @Input() toolToOpenOnContextChange: string = 'mapTools';\n\n  get map(): IgoMap { return this.mapState.map; }\n\n  constructor(private toolState: ToolState, private mapState: MapState) {}\n\n  editContext() {\n    this.toolState.toolbox.activateTool('contextEditor');\n  }\n\n  managePermissions() {\n    this.toolState.toolbox.activateTool('contextPermissionManager');\n  }\n}\n","<igo-context-list\n  igoContextListBinding\n  [map]=\"map\"\n  (edit)=\"editContext()\"\n  (managePermissions)=\"managePermissions()\">\n</igo-context-list>\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\n\n@ToolComponent({\n  name: 'contextPermissionManager',\n  title: 'igo.integration.tools.contexts',\n  icon: 'star',\n  parent: 'contextManager'\n})\n@Component({\n  selector: 'igo-context-permission-manager-tool',\n  templateUrl: './context-permission-manager-tool.component.html'\n})\nexport class ContextPermissionManagerToolComponent {}\n","<igo-context-permissions igoContextPermissionsBinding></igo-context-permissions>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LayerListControlsOptions } from '@igo2/geo';\n\n/**\n * Service that holds the state of layer list tool values\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class LayerListToolState {\n\n    readonly keyword$: BehaviorSubject<string> = new BehaviorSubject('');\n    readonly sortAlpha$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n    readonly onlyVisible$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n    readonly selectedTab$: BehaviorSubject<number> = new BehaviorSubject(undefined);\n\n    setKeyword(keyword: string) {\n        this.keyword$.next(keyword);\n      }\n\n    setSortAlpha(sort: boolean) {\n        this.sortAlpha$.next(sort);\n      }\n\n    setOnlyVisible(onlyVisible: boolean) {\n        this.onlyVisible$.next(onlyVisible);\n      }\n\n    setSelectedTab(tab: number) {\n      this.selectedTab$.next(tab);\n    }\n\n    getLayerListControls(): LayerListControlsOptions {\n      return {\n        keyword: this.keyword$.value,\n        onlyVisible: this.onlyVisible$.value,\n        sortAlpha: this.sortAlpha$.value\n      };\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { IgoMap, LayerListControlsOptions } from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\nimport { LayerListToolState } from '../../map/layer-list-tool.state';\n\n@ToolComponent({\n  name: 'shareMap',\n  title: 'igo.integration.tools.shareMap',\n  icon: 'share-variant'\n})\n@Component({\n  selector: 'igo-context-share-tool',\n  templateUrl: './context-share-tool.component.html'\n})\nexport class ContextShareToolComponent {\n\n  get map(): IgoMap { return this.mapState.map; }\n\n  get layerListControls(): LayerListControlsOptions { return this.layerListToolState.getLayerListControls(); }\n\n  constructor(\n    private mapState: MapState,\n    private layerListToolState: LayerListToolState\n  ) {}\n}\n","<igo-share-map\n  [map]=\"map\"></igo-share-map>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { IgoContextModule } from '@igo2/context';\n\nimport { ContextEditorToolComponent } from './context-editor-tool/context-editor-tool.component';\nimport { ContextManagerToolComponent } from './context-manager-tool/context-manager-tool.component';\nimport { ContextPermissionManagerToolComponent } from './context-permission-manager-tool/context-permission-manager-tool.component';\nimport { ContextShareToolComponent } from './context-share-tool/context-share-tool.component';\n\n@NgModule({\n  imports: [IgoContextModule],\n  declarations: [\n    ContextEditorToolComponent,\n    ContextManagerToolComponent,\n    ContextPermissionManagerToolComponent,\n    ContextShareToolComponent\n  ],\n  exports: [\n    ContextEditorToolComponent,\n    ContextManagerToolComponent,\n    ContextPermissionManagerToolComponent,\n    ContextShareToolComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppContextModule {}\n","import { Injectable } from '@angular/core';\n\nimport { AuthService } from '@igo2/auth';\nimport { EntityStore } from '@igo2/common';\nimport { Catalog, CatalogItem } from '@igo2/geo';\n\n/**\n * Service that holds the state of the catalog module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogState {\n\n  /**\n   * Store that contains all the catalogs\n   */\n  get catalogStore(): EntityStore<Catalog> { return this._catalogStore; }\n  private _catalogStore: EntityStore<Catalog>;\n\n  /**\n   * Catalog -> Catalog items store mapping\n   */\n  private catalogItemsStores = new Map<string, EntityStore<CatalogItem>>();\n\n  constructor(authService: AuthService) {\n    this._catalogStore = new EntityStore([]);\n\n    authService.authenticate$.subscribe(() => {\n      this.clearCatalogItemsStores();\n    });\n  }\n\n  /**\n   * Get a catalog's items store\n   * @param catalog Catalog\n   * @returns Store that contains the catalog items\n   */\n  getCatalogItemsStore(catalog: Catalog): EntityStore<CatalogItem> {\n    return this.catalogItemsStores.get(catalog.id as string);\n  }\n\n  /**\n   * Bind a catalog items store to a catalog\n   * @param catalog Catalog\n   * @param store Catalog items store\n   */\n  setCatalogItemsStore(catalog: Catalog, store: EntityStore<CatalogItem>) {\n    this.catalogItemsStores.set(catalog.id as string, store);\n  }\n\n  /**\n   * Clear all catalog items stores\n   */\n  clearCatalogItemsStores() {\n    this.catalogItemsStores.clear();\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\n\nimport { ToolComponent } from '@igo2/common';\n\nimport { EntityStore } from '@igo2/common';\nimport { Catalog, CatalogService } from '@igo2/geo';\nimport { StorageService } from '@igo2/core';\n\nimport { ToolState } from '../../tool/tool.state';\nimport { CatalogState } from '../catalog.state';\n\n/**\n * Tool to browse the list of available catalogs.\n */\n@ToolComponent({\n  name: 'catalog',\n  title: 'igo.integration.tools.catalog',\n  icon: 'layers-plus'\n})\n@Component({\n  selector: 'igo-catalog-library-tool',\n  templateUrl: './catalog-library-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CatalogLibraryToolComponent implements OnInit {\n  /**\n   * Store that contains the catalogs\n   * @internal\n   */\n  get store(): EntityStore<Catalog> {\n    return this.catalogState.catalogStore;\n  }\n\n  /**\n   * Determine if the form to add a catalog is allowed\n   */\n  @Input() addCatalogAllowed: boolean = false;\n\n  /**\n   * List of predefined catalogs\n   */\n  @Input() predefinedCatalogs: Catalog[] = [];\n\n  constructor(\n    private catalogService: CatalogService,\n    private catalogState: CatalogState,\n    private toolState: ToolState,\n    private storageService: StorageService\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    if (this.store.count === 0) {\n      this.loadCatalogs();\n    }\n  }\n\n  /**\n   * When the selected catalog changes, toggle the the CatalogBrowser tool.\n   * @internal\n   * @param event Select event\n   */\n  onCatalogSelectChange(event: { selected: boolean; catalog: Catalog }) {\n    if (event.selected === false) {\n      return;\n    }\n    this.toolState.toolbox.activateTool('catalogBrowser');\n  }\n\n  /**\n   * Get all the available catalogs from the CatalogService and\n   * load them into the store.\n   */\n  private loadCatalogs() {\n    this.catalogService.loadCatalogs().pipe(take(1)).subscribe((catalogs: Catalog[]) => {\n      this.store.clear();\n      this.store.load(catalogs.concat((this.storageService.get('addedCatalogs') || []) as Catalog[]));\n    });\n  }\n}\n","<igo-catalog-library\n  [predefinedCatalogs]=\"predefinedCatalogs\"\n  [addCatalogAllowed]=\"addCatalogAllowed\"\n  [store]=\"store\"\n  (catalogSelectChange)=\"onCatalogSelectChange($event)\">\n</igo-catalog-library>\n","import { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { IgoCatalogLibraryModule } from '@igo2/geo';\nimport { CatalogLibraryToolComponent } from './catalog-library-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoCatalogLibraryModule\n  ],\n  declarations: [CatalogLibraryToolComponent],\n  exports: [CatalogLibraryToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppCatalogLibraryToolModule {}\n","<igo-catalog-browser\n  *ngIf=\"store$ | async as store\"\n  [catalog]=\"catalog\"\n  [store]=\"store\"\n  [map]=\"map\"\n  [toggleCollapsedGroup]=\"toggleCollapsedGroup\">\n</igo-catalog-browser>\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { EntityRecord, EntityStore, ToolComponent } from '@igo2/common';\nimport { AuthService } from '@igo2/auth';\n\nimport {\n  IgoMap,\n  Catalog,\n  CatalogItem,\n  CatalogItemState,\n  CatalogService\n} from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\nimport { CatalogState } from '../catalog.state';\n\n/**\n * Tool to browse a catalog's groups and layers and display them to a map.\n */\n@ToolComponent({\n  name: 'catalogBrowser',\n  title: 'igo.integration.tools.catalog',\n  icon: 'photo-browser',\n  parent: 'catalog'\n})\n@Component({\n  selector: 'igo-catalog-browser-tool',\n  templateUrl: './catalog-browser-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CatalogBrowserToolComponent implements OnInit, OnDestroy {\n  catalog: Catalog;\n\n  /**\n   * Store that contains the catalog items\n   * @internal\n   */\n  store$ = new BehaviorSubject<EntityStore<CatalogItem, CatalogItemState>>(\n    undefined\n  );\n\n  /**\n   * Subscription to the selected catalog\n   */\n  private catalog$$: Subscription;\n\n  /**\n   * Subscription for authentication\n   */\n  private authenticate$$: Subscription;\n\n  /**\n   * Whether a group can be toggled when it's collapsed\n   */\n  @Input() toggleCollapsedGroup: boolean = true;\n\n  /**\n   * Map to add layers to\n   * @internal\n   */\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  constructor(\n    private catalogService: CatalogService,\n    private catalogState: CatalogState,\n    private mapState: MapState,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    const catalogStore = this.catalogState.catalogStore;\n    this.catalog$$ = catalogStore.stateView\n      .firstBy$(\n        (record: EntityRecord<Catalog>) => record.state.selected === true\n      )\n      .subscribe((record: EntityRecord<Catalog>) => {\n        if (record && record.entity) {\n          const catalog = record.entity;\n          this.catalog = catalog;\n        }\n      });\n\n    this.authenticate$$ = this.authService.authenticate$.subscribe(() => {\n      this.loadCatalogItems(this.catalog);\n    });\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this.catalog$$.unsubscribe();\n    this.authenticate$$.unsubscribe();\n  }\n\n  /**\n   * Get the selected catalog's items from the CatalogService and\n   * load them into the store.\n   * @param catalog Selected catalog\n   */\n  private loadCatalogItems(catalog: Catalog) {\n    let store = this.catalogState.getCatalogItemsStore(catalog);\n    if (store !== undefined) {\n      this.store$.next(store);\n      return;\n    }\n\n    store = new EntityStore<CatalogItem>([]);\n    this.catalogState.setCatalogItemsStore(catalog, store);\n    this.catalogService\n      .loadCatalogItems(catalog)\n      .pipe(take(1))\n      .subscribe((items: CatalogItem[]) => {\n        store.load(items);\n        this.store$.next(store);\n      });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { IgoCatalogBrowserModule } from '@igo2/geo';\nimport { CatalogBrowserToolComponent } from './catalog-browser-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoCatalogBrowserModule\n  ],\n  declarations: [CatalogBrowserToolComponent],\n  exports: [CatalogBrowserToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppCatalogBrowserToolModule {}\n","import { NgModule } from '@angular/core';\n\nimport { IgoAppCatalogLibraryToolModule } from './catalog-library-tool/catalog-library-tool.module';\nimport { IgoAppCatalogBrowserToolModule } from './catalog-browser-tool/catalog-browser-tool.module';\n\n@NgModule({\n  imports: [],\n  exports: [\n    IgoAppCatalogLibraryToolModule,\n    IgoAppCatalogBrowserToolModule\n  ],\n  declarations: []\n})\nexport class IgoAppCatalogModule {}\n","import { Injectable } from '@angular/core';\n\nimport { AnyLayerOptions, StopsStore, StopsFeatureStore, RoutesFeatureStore, StepFeatureStore } from '@igo2/geo';\nimport { Subject } from 'rxjs';\nimport { MapState } from '../map/map.state';\n\n/**\n * Service that holds the state of the direction module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectionState {\n\n  public zoomToActiveRoute$: Subject<void> = new Subject();\n\n  /**\n   * Store that holds the stop\n   */\n  public stopsStore: StopsStore = new StopsStore([]);\n\n  /**\n   * Store that holds the driving stops as feature\n   */\n  public stopsFeatureStore: StopsFeatureStore = new StopsFeatureStore([], {\n    map: this.mapState.map\n  });\n\n  /**\n   * Store that holds the driving route as feature\n   */\n  public routesFeatureStore: RoutesFeatureStore = new RoutesFeatureStore([], {\n    map: this.mapState.map\n  });\n\n  public stepFeatureStore: StepFeatureStore = new StepFeatureStore([], {\n    map: this.mapState.map\n  });\n\n  public debounceTime: number = 200;\n\n  constructor(private mapState: MapState) {\n\n    this.mapState.map.ol.once('rendercomplete', () => {\n      this.stopsFeatureStore.empty$.subscribe((empty) => {\n        if (this.stopsFeatureStore.layer?.options) {\n          (this.stopsFeatureStore.layer.options as AnyLayerOptions).showInLayerList = !empty;\n        }\n      });\n      this.routesFeatureStore.empty$.subscribe((empty) => {\n        if (this.routesFeatureStore.layer?.options) {\n          (this.routesFeatureStore.layer.options as AnyLayerOptions).showInLayerList = !empty;\n        }\n      });\n    });\n\n    this.mapState.map.layers$.subscribe(() => {\n      if (!this.mapState.map.getLayerById('igo-direction-stops-layer')) {\n        this.stopsStore.deleteMany(this.stopsStore.all());\n        this.stopsFeatureStore.deleteMany(this.stopsFeatureStore.all()); // not necessary\n      }\n      if (!this.mapState.map.getLayerById('igo-direction-route-layer')) {\n        this.routesFeatureStore.deleteMany(this.routesFeatureStore.all());\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { LanguageService } from '@igo2/core';\nimport { Tool, ToolService } from '@igo2/common';\nimport { ContextService, DetailedContext } from '@igo2/context';\n\nimport { ToolState } from '../tool/tool.state';\n\n/**\n * Service that holds the state of the context module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContextState {\n  /**\n   * Observable of the active context\n   */\n  context$: BehaviorSubject<DetailedContext> = new BehaviorSubject(undefined);\n\n  constructor(\n    private contextService: ContextService,\n    private toolService: ToolService,\n    private toolState: ToolState,\n    private languageService: LanguageService\n  ) {\n    this.contextService.context$.subscribe((context: DetailedContext) => {\n      this.onContextChange(context);\n    });\n    this.contextService.toolsChanged$.subscribe((context: DetailedContext) => {\n      this.updateTools(context);\n    });\n  }\n\n  /**\n   * Set the active context\n   * @param context Detailed context\n   */\n  private setContext(context: DetailedContext) {\n    this.updateTools(context);\n    this.context$.next(context);\n  }\n\n  /**\n   * Update the tool state with the context's tools\n   * @param context Detailed context\n   */\n  private updateTools(context: DetailedContext) {\n    const toolbox = this.toolState.toolbox;\n\n    const tools = [];\n    const contextTools = context.tools || [];\n    contextTools.forEach((contextTool: Tool) => {\n      const baseTool = this.toolService.getTool(contextTool.name);\n      if (baseTool === undefined) {\n        return;\n      }\n\n      const options = Object.assign(\n        {},\n        baseTool.options || {},\n        contextTool.options || {}\n      );\n      const tool = Object.assign({}, baseTool, contextTool, { options });\n      tools.push(tool);\n    });\n\n    tools.forEach((tool) => {\n      if (tool.parent) {\n        const parentIndex = tools.findIndex((el) => el.name === tool.parent);\n        if (parentIndex !== -1) {\n          tools[parentIndex].children = [];\n          tools[parentIndex].children.push(tool.name);\n        }\n      }\n    });\n\n    toolbox.setTools(tools);\n    toolbox.setToolbar(context.toolbar || []);\n\n    // TODO: This is a patch so the context service can work without\n    // injecting the ToolState or without being completely refactored\n    this.contextService.setTools([].concat(tools));\n    this.contextService.setToolbar(context.toolbar || []);\n  }\n\n  /**\n   * Set a new context and update the tool state\n   * @param context Detailed context\n   */\n  private onContextChange(context: DetailedContext) {\n    if (context === undefined) {\n      return;\n    }\n    this.setContext(context);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@igo2/auth';\n\nimport { ToolComponent } from '@igo2/common';\nimport { LanguageService, MessageService, StorageScope, StorageService } from '@igo2/core';\nimport { IgoMap, RoutesFeatureStore, StopsFeatureStore, StopsStore, StepFeatureStore } from '@igo2/geo';\nimport { Subject } from 'rxjs';\nimport { ContextState } from '../../context/context.state';\n\nimport { MapState } from '../../map/map.state';\nimport { DirectionState } from '../directions.state';\n\n@ToolComponent({\n  name: 'directions',\n  title: 'igo.integration.tools.directions',\n  icon: 'directions'\n})\n@Component({\n  selector: 'igo-directions-tool',\n  templateUrl: './directions-tool.component.html'\n})\nexport class DirectionsToolComponent implements OnInit {\n\n  public currentContextUri: string;\n  /**\n   * stops\n   * @internal\n   */\n  get stopsStore(): StopsStore { return this.directionState.stopsStore; }\n\n  get debounceTime(): number { return this.directionState.debounceTime; }\n\n  /**\n   * stops\n   * @internal\n   */\n   get stopsFeatureStore(): StopsFeatureStore { return this.directionState.stopsFeatureStore; }\n\n  /**\n   * routes\n   * @internal\n   */\n  get routesFeatureStore(): RoutesFeatureStore { return this.directionState.routesFeatureStore; }\n\n  /**\n   * step store\n   * @internal\n   */\n   get stepFeatureStore(): StepFeatureStore { return this.directionState.stepFeatureStore; }\n\n  /**\n   * step store\n   * @internal\n   */\n   get zoomToActiveRoute$(): Subject<void> { return this.directionState.zoomToActiveRoute$; }\n\n\n  /**\n   * Map to measure on\n   * @internal\n   */\n  get map(): IgoMap { return this.mapState.map; }\n\n  constructor(\n    private directionState: DirectionState,\n    private mapState: MapState,\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private storageService: StorageService,\n    public contextState: ContextState,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    const warningShown = this.storageService.get('direction.warning.shown') as boolean;\n    if (!warningShown) {\n      const translate = this.languageService.translate;\n      const title = translate.instant(\n        'igo.integration.directions.warning.title'\n      );\n      const msg = translate.instant('igo.integration.directions.warning.message');\n      this.messageService.info(msg, title, { timeOut: 20000 });\n      this.storageService.set('direction.warning.shown', true, StorageScope.SESSION);\n    }\n    this.contextState.context$.subscribe(c => {\n      if (!this.authService.authenticated) {\n        this.currentContextUri = c.uri;\n      }\n    });\n  }\n\n}\n","<igo-directions\n    [contextUri]=\"currentContextUri\"\n    [debounceTime]=\"debounceTime\"\n    [stopsStore]=\"stopsStore\"\n    [stopsFeatureStore]=\"stopsFeatureStore\"\n    [stepFeatureStore]=\"stepFeatureStore\"\n    [routesFeatureStore]=\"routesFeatureStore\"\n    [zoomToActiveRoute$]=\"zoomToActiveRoute$\">  \n</igo-directions>","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\n\nimport { IgoDirectionsModule } from '@igo2/geo';\nimport { DirectionsToolComponent } from './directions-tool/directions-tool.component';\n\n@NgModule({\n  imports: [IgoDirectionsModule],\n  declarations: [DirectionsToolComponent],\n  exports: [DirectionsToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppDirectionsModule {\n  static forRoot(): ModuleWithProviders<IgoAppDirectionsModule> {\n    return {\n      ngModule: IgoAppDirectionsModule,\n      providers: []\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { FeatureStore, Feature } from '@igo2/geo';\nimport { MapState } from '../map/map.state';\n\n/**\n * Service that holds the state of the measure module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrawState {\n\n  /**\n   * Store that holds the measures\n   */\n  public store: FeatureStore<Feature> = new FeatureStore<Feature>([], {\n    map: this.mapState.map\n  });\n\n  constructor(private mapState: MapState) {\n\n    this.mapState.map.layers$.subscribe(() => {\n      if (!this.mapState.map.getLayerById('igo-draw-layer')) {\n        this.store.deleteMany(this.store.all());\n      }\n    });\n  }\n\n}\n","import {\n    Component,\n    ChangeDetectionStrategy\n  } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { FeatureStore, Feature, IgoMap } from '@igo2/geo';\nimport { MapState } from '../../map/map.state';\nimport { DrawState } from '../draw.state';\n\n/**\n * Tool to measure lengths and areas\n */\n@ToolComponent({\n    name: 'draw',\n    title: 'igo.integration.tools.draw',\n    icon: 'draw'\n})\n@Component({\n    selector: 'igo-drawing-tool',\n    templateUrl: './drawing-tool.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawingToolComponent {\n\n/**\n * Map to measure on\n * @internal\n */\nget store(): FeatureStore<Feature> { return this.drawState.store; }\n\n/**\n * Map to measure on\n * @internal\n */\nget map(): IgoMap { return this.mapState.map; }\n\nconstructor(\n    private drawState: DrawState,\n    private mapState: MapState\n) {}\n\n}\n","<igo-draw [store]=\"store\" [map]=\"map\"></igo-draw>\n","import { NgModule } from '@angular/core';\n\nimport { IgoDrawingToolModule } from '@igo2/geo';\nimport { DrawingToolComponent } from './drawing-tool/drawing-tool.component';\n\n@NgModule({\n  imports: [IgoDrawingToolModule],\n  declarations: [DrawingToolComponent],\n  exports: [\n    DrawingToolComponent\n  ]\n})\nexport class IgoAppDrawModule {}\n","import {\n    FeatureMotion,\n    FeatureStoreSelectionStrategy,\n    FeatureWorkspace,\n    WfsWorkspace,\n    EditionWorkspace\n} from '@igo2/geo';\n\n\nexport function handleZoomAuto(workspace: FeatureWorkspace | WfsWorkspace | EditionWorkspace, storageService) {\n    const zoomStrategy = workspace.entityStore\n        .getStrategyOfType(FeatureStoreSelectionStrategy) as FeatureStoreSelectionStrategy;\n    zoomStrategy.setMotion(storageService.get('zoomAuto') as boolean ? FeatureMotion.Default : FeatureMotion.None);\n}\n\n\n","import { Injectable } from '@angular/core';\n\nimport { StorageService } from '@igo2/core';\n\n/**\n * Service that holds the state of storage service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageState {\n  get storageService(): StorageService {\n    return this.igoStorageService;\n  }\n\n  constructor(private igoStorageService: StorageService) {}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport {\n  Action,\n  EntityStoreFilterCustomFuncStrategy,\n  EntityStoreFilterSelectionStrategy\n} from '@igo2/common';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {\n  FeatureWorkspace,\n  mapExtentStrategyActiveToolTip,\n  noElementSelected,\n  ExportOptions\n} from '@igo2/geo';\nimport { StorageService, StorageServiceEvent, StorageServiceEventEnum, LanguageService, MediaService} from '@igo2/core';\nimport { StorageState } from '../../storage/storage.state';\nimport { map, skipWhile } from 'rxjs/operators';\nimport { ToolState } from '../../tool/tool.state';\nimport { handleZoomAuto } from './workspace.utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeatureActionsService implements OnDestroy {\n\n  public maximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private storageChange$$: Subscription;\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n\n  get zoomAuto(): boolean {\n    return this.storageService.get('zoomAuto') as boolean;\n  }\n\n  constructor(\n    private storageState: StorageState,\n    public languageService: LanguageService,\n    private toolState: ToolState,\n    private mediaService: MediaService\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.storageChange$$) {\n      this.storageChange$$.unsubscribe();\n    }\n  }\n\n  loadActions(\n    workspace: FeatureWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ) {\n    const actions = this.buildActions(\n      workspace,\n      rowsInMapExtentCheckCondition$,\n      selectOnlyCheckCondition$\n      );\n    workspace.actionStore.load(actions);\n  }\n\n  buildActions(\n    workspace: FeatureWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ): Action[] {\n    this.zoomAuto$.next(this.zoomAuto);\n    this.storageChange$$ = this.storageService.storageChange$\n      .pipe(\n        skipWhile(\n          (storageChange: StorageServiceEvent) =>\n            storageChange.key !== 'zoomAuto' || storageChange.event === StorageServiceEventEnum.CLEARED\n        )\n      )\n      .subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n    return [\n      {\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set(\n            'zoomAuto',\n            !this.storageService.get('zoomAuto') as boolean\n          );\n        }\n      },\n      {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      },\n      {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.tooltip',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      },\n      {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: (ws: FeatureWorkspace) => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), {\n            selected: false\n          });\n        },\n        args: [workspace],\n        availability: (ws: FeatureWorkspace) => noElementSelected(ws)\n      },\n      {\n        id: 'featureDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: (ws: FeatureWorkspace) => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(\n            EntityStoreFilterCustomFuncStrategy\n          );\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(\n            EntityStoreFilterSelectionStrategy\n          );\n          const layersWithSelection = filterSelectionStrategy.active\n            ? [ws.layer.id]\n            : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: {\n              layers: [ws.layer.id],\n              featureInMapExtent: filterStrategy.active,\n              layersWithSelection\n            } as ExportOptions\n          });\n        },\n        args: [workspace]\n      },\n      {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.maximizeTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        },\n      },\n      {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtent'\n        ),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtentTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }\n    ];\n  }\n}\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\n\nimport {\n  Action,\n  EntityStoreFilterCustomFuncStrategy,\n  EntityStoreFilterSelectionStrategy,\n  Widget\n} from '@igo2/common';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {\n  WfsWorkspace,\n  mapExtentStrategyActiveToolTip,\n  noElementSelected,\n  ExportOptions,\n  OgcFilterWidget,\n  OgcFilterableDataSource,\n} from '@igo2/geo';\nimport { StorageService, StorageServiceEvent, StorageServiceEventEnum, LanguageService, MediaService} from '@igo2/core';\nimport { StorageState } from '../../storage/storage.state';\nimport { map, skipWhile } from 'rxjs/operators';\nimport { ToolState } from '../../tool/tool.state';\nimport { handleZoomAuto } from './workspace.utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WfsActionsService implements OnDestroy {\n\n  public maximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n\n  selectOnlyCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  // rowsInMapExtentCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private storageChange$$: Subscription;\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n\n  get zoomAuto(): boolean {\n    return this.storageService.get('zoomAuto') as boolean;\n  }\n\n  constructor(\n    @Inject(OgcFilterWidget) private ogcFilterWidget: Widget,\n    private storageState: StorageState,\n    public languageService: LanguageService,\n    private mediaService: MediaService,\n    private toolState: ToolState) {}\n\n  ngOnDestroy(): void {\n    if (this.storageChange$$) {\n      this.storageChange$$.unsubscribe();\n    }\n  }\n\n  loadActions(\n    workspace: WfsWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ) {\n    const actions = this.buildActions(\n      workspace,\n      rowsInMapExtentCheckCondition$,\n      selectOnlyCheckCondition$\n      );\n    workspace.actionStore.load(actions);\n  }\n\n  buildActions(\n    workspace: WfsWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ): Action[] {\n    this.zoomAuto$.next(this.zoomAuto);\n    this.storageChange$$ = this.storageService.storageChange$\n      .pipe(skipWhile((storageChange: StorageServiceEvent) =>\n        storageChange?.key !== 'zoomAuto' || storageChange?.event === StorageServiceEventEnum.CLEARED))\n      .subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n    const actions = [\n      {\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set('zoomAuto', !this.storageService.get('zoomAuto') as boolean);\n        }\n      },\n      {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      },\n      {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.title',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      },\n      {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: (ws: WfsWorkspace) => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), { selected: false });\n        },\n        args: [workspace],\n        availability: (ws: WfsWorkspace) => noElementSelected(ws)\n      },\n      {\n        id: 'wfsDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: (ws: WfsWorkspace) => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          const layersWithSelection = filterSelectionStrategy.active ? [ws.layer.id] : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: { layers: [ws.layer.id], featureInMapExtent: filterStrategy.active, layersWithSelection } as ExportOptions\n          });\n        },\n        args: [workspace]\n      },\n      {\n        id: 'ogcFilter',\n        icon: 'filter',\n        title: 'igo.integration.workspace.ogcFilter.title',\n        tooltip: 'igo.integration.workspace.ogcFilter.tooltip',\n        handler: (widget: Widget, ws: WfsWorkspace) => {\n          ws.activateWidget(widget, {\n            map: ws.map,\n            layer: ws.layer\n          });\n        },\n        args: [this.ogcFilterWidget, workspace]\n      },\n      {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.maximizeTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        },\n      },\n      {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtent'\n        ),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtentTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }\n    ];\n    return (workspace.layer.dataSource as OgcFilterableDataSource).ogcFilters$?.value?.enabled ?\n    actions : actions.filter(action => action.id !== 'ogcFilter');\n  }\n}\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\n\nimport {\n  Action,\n  EntityStoreFilterCustomFuncStrategy,\n  EntityStoreFilterSelectionStrategy,\n  Widget\n} from '@igo2/common';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {\n  EditionWorkspace,\n  mapExtentStrategyActiveToolTip,\n  noElementSelected,\n  ExportOptions,\n  OgcFilterWidget,\n  OgcFilterableDataSource,\n} from '@igo2/geo';\nimport { StorageService, StorageServiceEvent, StorageServiceEventEnum, LanguageService, MediaService} from '@igo2/core';\nimport { StorageState } from '../../storage/storage.state';\nimport { map, skipWhile } from 'rxjs/operators';\nimport { ToolState } from '../../tool/tool.state';\nimport { handleZoomAuto } from './workspace.utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditionActionsService implements OnDestroy {\n\n  public maximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private storageChange$$: Subscription;\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n\n  get zoomAuto(): boolean {\n    return this.storageService.get('zoomAuto') as boolean;\n  }\n\n  constructor(\n    @Inject(OgcFilterWidget) private ogcFilterWidget: Widget,\n    private storageState: StorageState,\n    public languageService: LanguageService,\n    private mediaService: MediaService,\n    private toolState: ToolState) {}\n\n  ngOnDestroy(): void {\n    if (this.storageChange$$) {\n      this.storageChange$$.unsubscribe();\n    }\n  }\n\n  loadActions(\n    workspace: EditionWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ) {\n    const actions = this.buildActions(\n      workspace,\n      rowsInMapExtentCheckCondition$,\n      selectOnlyCheckCondition$\n      );\n    workspace.actionStore.load(actions);\n  }\n\n  buildActions(\n    workspace: EditionWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ): Action[] {\n    this.zoomAuto$.next(this.zoomAuto);\n    this.storageChange$$ = this.storageService.storageChange$\n      .pipe(skipWhile((storageChange: StorageServiceEvent) =>\n        storageChange?.key !== 'zoomAuto' || storageChange?.event === StorageServiceEventEnum.CLEARED))\n      .subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n    const actions = [\n      {\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set('zoomAuto', !this.storageService.get('zoomAuto') as boolean);\n        }\n      },\n      {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      },\n      {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.title',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      },\n      {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: (ws: EditionWorkspace) => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), { selected: false });\n        },\n        args: [workspace],\n        availability: (ws: EditionWorkspace) => noElementSelected(ws)\n      },\n      {\n        id: 'wfsDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: (ws: EditionWorkspace) => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          const layersWithSelection = filterSelectionStrategy.active ? [ws.layer.id] : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: { layers: [ws.layer.id], featureInMapExtent: filterStrategy.active, layersWithSelection } as ExportOptions\n          });\n        },\n        args: [workspace]\n      },\n      {\n        id: 'ogcFilter',\n        icon: 'filter',\n        title: 'igo.integration.workspace.ogcFilter.title',\n        tooltip: 'igo.integration.workspace.ogcFilter.tooltip',\n        handler: (widget: Widget, ws: EditionWorkspace) => {\n          ws.activateWidget(widget, {\n            map: ws.map,\n            layer: ws.layer\n          });\n        },\n        args: [this.ogcFilterWidget, workspace]\n      },\n      {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.maximizeTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        },\n      },\n      {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtent'\n        ),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtentTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }\n    ];\n    return (workspace.layer.dataSource as OgcFilterableDataSource).ogcFilters$?.value?.enabled ?\n    actions : actions.filter(action => action.id !== 'ogcFilter');\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport {\n  EntityRecord,\n  Workspace,\n  WorkspaceStore,\n  Widget,\n  EntityStoreFilterCustomFuncStrategy,\n  EntityStoreFilterSelectionStrategy } from '@igo2/common';\nimport { WfsWorkspace, FeatureWorkspace, EditionWorkspace } from '@igo2/geo';\nimport { FeatureActionsService } from './shared/feature-actions.service';\nimport { WfsActionsService } from './shared/wfs-actions.service';\nimport { StorageService } from '@igo2/core';\nimport { EditionActionsService } from './shared/edition-actions.service';\n\n/**\n * Service that holds the state of the workspace module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkspaceState implements OnDestroy {\n\n  public workspacePanelExpanded: boolean = false;\n\n  readonly workspaceEnabled$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly rowsInMapExtentCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  readonly selectOnlyCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  readonly workspaceMaximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n  private actionMaximize$$: Subscription[] = [];\n\n  private rowsInMapExtentCheckCondition$$: Subscription;\n  private selectOnlyCheckCondition$$: Subscription;\n\n  /** Subscription to the active workspace */\n  private activeWorkspace$$: Subscription;\n\n  /** Subscription to the active workspace widget */\n  private activeWorkspaceWidget$$: Subscription;\n\n  /** Active widget observable. Only one may be active for all available workspaces */\n  readonly activeWorkspaceWidget$: BehaviorSubject<Widget> = new BehaviorSubject<Widget>(undefined);\n\n  /**\n   * Observable of the active workspace\n   */\n  public workspace$ = new BehaviorSubject<Workspace>(undefined);\n\n  /**\n   * Store that holds all the available workspaces\n   */\n  get store(): WorkspaceStore { return this._store; }\n  private _store: WorkspaceStore;\n\n  constructor(\n    private featureActionsService: FeatureActionsService,\n    private wfsActionsService: WfsActionsService,\n    private editionActionsService: EditionActionsService,\n    private storageService: StorageService\n  ) {\n    this.initWorkspaces();\n  }\n\n  /**\n   * Initialize the workspace store. Each time a workspace is activated,\n   * subscribe to it's active widget. Tracking the active widget is useful\n   * to make sure only one widget is active at a time.\n   */\n  private initWorkspaces() {\n    this._store = new WorkspaceStore([]);\n    this._store.stateView\n      .firstBy$((record: EntityRecord<Workspace>) => record.state.active === true)\n      .subscribe((record: EntityRecord<Workspace>) => {\n        const workspace = record ? record.entity : undefined;\n        this.workspace$.next(workspace);\n      });\n\n    this._store.stateView.all$()\n    .subscribe((workspaces: EntityRecord<Workspace>[]) => {\n      workspaces.map((wks: EntityRecord<Workspace>) => {\n        if (wks.entity.actionStore.empty) {\n          if (wks.entity instanceof WfsWorkspace) {\n            this.wfsActionsService.loadActions(\n              wks.entity,\n              this.rowsInMapExtentCheckCondition$,\n              this.selectOnlyCheckCondition$);\n          } else if (wks.entity instanceof FeatureWorkspace) {\n            this.featureActionsService.loadActions(\n              wks.entity,\n              this.rowsInMapExtentCheckCondition$,\n              this.selectOnlyCheckCondition$);\n          } else if (wks.entity instanceof EditionWorkspace) {\n            this.editionActionsService.loadActions(\n              wks.entity,\n              this.rowsInMapExtentCheckCondition$,\n              this.selectOnlyCheckCondition$);\n          }\n        }\n\n      });\n    });\n\n    this.actionMaximize$$.push(this.featureActionsService.maximize$.subscribe(maximized => {\n      this.setWorkspaceIsMaximized(maximized);\n    }));\n\n    this.actionMaximize$$.push(this.wfsActionsService.maximize$.subscribe(maximized => {\n      this.setWorkspaceIsMaximized(maximized);\n    }));\n\n    this.actionMaximize$$.push(this.editionActionsService.maximize$.subscribe(maximized => {\n      this.setWorkspaceIsMaximized(maximized);\n    }));\n\n    this.activeWorkspace$$ = this.workspace$\n      .subscribe((workspace: Workspace) => {\n        if (this.activeWorkspaceWidget$$ !== undefined) {\n          this.activeWorkspaceWidget$$.unsubscribe();\n          this.activeWorkspaceWidget$$ = undefined;\n        }\n\n        if (workspace !== undefined) {\n          this.activeWorkspaceWidget$$ = workspace.widget$\n            .subscribe((widget: Widget) => this.activeWorkspaceWidget$.next(widget));\n        }\n      });\n\n    this.rowsInMapExtentCheckCondition$$ = this.rowsInMapExtentCheckCondition$.subscribe((rowsInMapExtent) => {\n      this._store.stateView.all().map((wks: EntityRecord<Workspace>) => {\n        if (!wks.entity.actionStore.empty) {\n          const filterStrategy = wks.entity.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          if (filterStrategy) {\n            if (rowsInMapExtent) {\n              filterStrategy.activate();\n            } else {\n              filterStrategy.deactivate();\n            }\n          }\n        }\n      });\n    });\n\n    this.selectOnlyCheckCondition$$ = this.selectOnlyCheckCondition$.subscribe((selectOnly) => {\n      this._store.stateView.all().map((wks: EntityRecord<Workspace>) => {\n        if (!wks.entity.actionStore.empty) {\n          const filterStrategy = wks.entity.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          if (filterStrategy) {\n            if (selectOnly) {\n              filterStrategy.activate();\n            } else {\n              filterStrategy.deactivate();\n            }\n          }\n        }\n      });\n    });\n  }\n\n  private setWorkspaceIsMaximized(maximized: boolean) {\n    this.storageService.set('workspaceMaximize', maximized);\n    this.workspaceMaximize$.next(maximized);\n  }\n\n  public setActiveWorkspaceById(id: string) {\n    const wksFromId = this.store\n    .all()\n    .find(workspace => workspace.id === id);\n    if (wksFromId) {\n      this.store.activateWorkspace(wksFromId);\n    }\n  }\n\n  public setActiveWorkspaceByTitle(title: string) {\n    const wksFromTitle = this.store\n      .all()\n      .find(workspace => workspace.title === title);\n    if (wksFromTitle) {\n      this.store.activateWorkspace(wksFromTitle);\n    }\n  }\n\n  /**\n   * Teardown all the workspaces\n   * @internal\n   */\n  ngOnDestroy() {\n    this.teardownWorkspaces();\n    this.actionMaximize$$.map(a => a.unsubscribe());\n    if (this.rowsInMapExtentCheckCondition$$) {\n      this.selectOnlyCheckCondition$$.unsubscribe();\n    }\n    if (this.selectOnlyCheckCondition$$) {\n      this.selectOnlyCheckCondition$$.unsubscribe();\n    }\n  }\n\n  /**\n   * Teardown the workspace store and any subscribers\n   */\n  private teardownWorkspaces() {\n    this.store.clear();\n    if (this.activeWorkspaceWidget$$ !== undefined) {\n      this.activeWorkspaceWidget$$.unsubscribe();\n    }\n    if (this.activeWorkspace$$ !== undefined) {\n      this.activeWorkspace$$.unsubscribe();\n    }\n  }\n\n}\n","<button\n  *ngIf=\"hasWorkspace$ | async\"\n  mat-icon-button\n  tooltip-position=\"below\"\n  matTooltipShowDelay=\"500\"\n  [matTooltip]=\"'igo.integration.workspace.toggleWorkspace' | translate\"\n  [color]=\"color\"\n  (click)=\"activateWorkspace()\"\n  >\n  <mat-icon svgIcon=\"table\"></mat-icon>\n</button>\n","import { Component, Input, ChangeDetectionStrategy, OnInit, OnDestroy } from '@angular/core';\nimport type { Layer } from '@igo2/geo';\nimport { WorkspaceState } from '../workspace.state';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'igo-workspace-button',\n  templateUrl: './workspace-button.component.html',\n  styleUrls: ['./workspace-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkspaceButtonComponent implements OnInit, OnDestroy {\n\n  public hasWorkspace$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private hasWorkspace$$: Subscription;\n\n  private _layer: Layer;\n  private layer$: BehaviorSubject<Layer> = new BehaviorSubject(undefined);\n  @Input()\n  set layer(value: Layer) {\n    this._layer = value;\n    this.layer$.next(this._layer);\n  }\n\n  get layer(): Layer {\n    return this._layer;\n  }\n\n  @Input() color: string = 'primary';\n\n  constructor(private workspaceState: WorkspaceState) { }\n\n  ngOnInit(): void {\n    this.hasWorkspace$$ = combineLatest([this.workspaceState.workspaceEnabled$, this.layer$])\n      .subscribe(bunch => this.hasWorkspace$.next(bunch[0] && bunch[1]?.options.workspace?.enabled)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.hasWorkspace$$.unsubscribe();\n  }\n\n  activateWorkspace() {\n    if (\n      this.workspaceState.workspace$.value &&\n      (this.workspaceState.workspace$.value as any).layer.id === this.layer.id &&\n      this.workspaceState.workspacePanelExpanded) {\n      this.workspaceState.workspacePanelExpanded = false;\n    } else {\n      this.workspaceState.workspacePanelExpanded = true;\n      this.workspaceState.setActiveWorkspaceById(this.layer.id);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { WorkspaceButtonComponent } from './workspace-button/workspace-button.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    IgoLanguageModule\n  ],\n  declarations: [WorkspaceButtonComponent],\n  exports: [WorkspaceButtonComponent]\n})\nexport class IgoAppWorkspaceModule {}\n","<mat-tab-group *ngIf=\"importExportShowBothType\" >\n  <mat-tab [label]=\"'igo.integration.importExportTool.importExportData' | translate\">\n    <igo-import-export  \n      [map]=\"map\"\n      [selectFirstProj]=\"selectFirstProj\"\n      [projectionsLimitations]=\"projectionsLimitations\"\n      [store]=\"workspaceStore\"\n      [selectedMode]=\"importExportState.selectedMode$ | async\"\n      (selectMode)=\"modeChanged($event)\"\n      [exportOptions$]=\"importExportState.exportOptions$\"\n      (exportOptionsChange)=\"exportOptionsChange($event)\">\n    </igo-import-export>\n  </mat-tab>\n  <mat-tab [label]=\"'igo.integration.importExportTool.importExportContext' | translate\">\n    <igo-context-import-export [map]=\"map\"></igo-context-import-export>\n  </mat-tab>\n</mat-tab-group>\n\n<igo-import-export  \n  *ngIf=\"!importExportShowBothType && importExportType === 'layer'\"\n  [map]=\"map\"\n  [store]=\"workspaceStore\"\n  [selectedMode]=\"importExportState.selectedMode$ | async\"\n  (selectMode)=\"modeChanged($event)\"\n  [exportOptions$]=\"importExportState.exportOptions$\"\n  (exportOptionsChange)=\"exportOptionsChange($event)\">\n</igo-import-export>\n\n<igo-context-import-export \n  *ngIf=\"!importExportShowBothType && importExportType === 'context'\"\n  [map]=\"map\">\n</igo-context-import-export>","import { Component, ChangeDetectionStrategy, OnInit, Input } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport type { WorkspaceStore } from '@igo2/common';\nimport { IgoMap, ExportOptions, ProjectionsLimitationsOptions } from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\nimport { ImportExportMode, ImportExportState, ImportExportType } from '../import-export.state';\nimport { WorkspaceState } from '../../workspace/workspace.state';\n\n@ToolComponent({\n  name: 'importExport',\n  title: 'igo.integration.tools.importExport',\n  icon: 'file-move'\n})\n@Component({\n  selector: 'igo-import-export-tool',\n  templateUrl: './import-export-tool.component.html',\n  styleUrls: ['./import-export-tool.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImportExportToolComponent implements OnInit {\n\n  @Input() projectionsLimitations: ProjectionsLimitationsOptions;\n\n  @Input() selectFirstProj: boolean = false;\n\n  /**\n   * Map to measure on\n   * @internal\n   */\n  get map(): IgoMap { return this.mapState.map; }\n\n  get workspaceStore(): WorkspaceStore {\n    return this.workspaceState.store;\n  }\n\n  @Input() importExportType: ImportExportType = ImportExportType.layer;\n  @Input() importExportShowBothType: boolean = true;\n\n  constructor(\n    private mapState: MapState,\n    public importExportState: ImportExportState,\n    private workspaceState: WorkspaceState,\n  ) {}\n\n  ngOnInit(): void {\n    this.selectType();\n    this.selectMode();\n  }\n\n  private selectType() {\n    if (this.importExportType) {\n      this.importExportState.importExportType$.next(this.importExportType);\n    }\n    const userSelectedType = this.importExportState.importExportType$.value;\n    if (userSelectedType !== undefined) {\n      this.importExportState.setImportExportType(userSelectedType);\n    } else {\n      this.importExportState.setImportExportType(ImportExportType.layer);\n    }\n  }\n\n  private selectMode() {\n    const userSelectedMode = this.importExportState.selectedMode$.value;\n    if (userSelectedMode !== undefined) {\n      this.importExportState.setMode(userSelectedMode);\n    } else {\n      this.importExportState.setMode(ImportExportMode.import);\n\n    }\n  }\n\n  public modeChanged(mode: ImportExportMode) {\n    this.importExportState.setMode(mode);\n  }\n\n  public exportOptionsChange(exportOptions: ExportOptions) {\n    this.importExportState.setsExportOptions(exportOptions);\n  }\n\n  importExportTypeChange(event) {\n    this.importExportType = event.value;\n  }\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\n\nimport { IgoImportExportModule } from '@igo2/geo';\nimport { ImportExportToolComponent } from './import-export-tool/import-export-tool.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoContextImportExportModule } from '@igo2/context';\n\n@NgModule({\n  imports: [\n    IgoImportExportModule,\n    IgoContextImportExportModule,\n    CommonModule,\n    IgoLanguageModule,\n    MatButtonToggleModule,\n    MatTabsModule\n  ],\n  declarations: [ImportExportToolComponent],\n  exports: [ImportExportToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppImportExportModule {\n  static forRoot(): ModuleWithProviders<IgoAppImportExportModule> {\n    return {\n      ngModule: IgoAppImportExportModule,\n      providers: []\n    };\n  }\n}\n","<igo-layer-list class=\"mapDetailsList\" *ngIf=\"(layers$ | async).length; else empty\"\n  [map]=\"map\"\n  igoLayerListBinding\n  [excludeBaseLayers]=\"excludeBaseLayers\"\n  [layerFilterAndSortOptions]=\"layerFilterAndSortOptions\"\n  [expandLegendOfVisibleLayers]=\"expandLegendOfVisibleLayers\"\n  [toggleLegendOnVisibilityChange]=\"toggleLegendOnVisibilityChange\"\n  [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\"\n  floatLabel=\"never\"\n  [queryBadge]=\"queryBadge\">\n\n  <ng-template #igoLayerItemToolbar let-layer=\"layer\">\n    <!-- <igo-download-button [layer]=\"layer\"></igo-download-button> -->\n     <igo-workspace-button [layer]=\"layer\"></igo-workspace-button>\n    <igo-export-button [layer]=\"layer\" (click)=\"activateExport(layer)\"></igo-export-button>\n    <igo-ogc-filter-button [header]=\"ogcButton\" [layer]=\"layer\"></igo-ogc-filter-button>\n    <igo-time-filter-button [header]=\"timeButton\" [layer]=\"layer\"></igo-time-filter-button>\n    <igo-track-feature-button [trackFeature]=\"true\" [layer]=\"layer\"></igo-track-feature-button>\n    <igo-metadata-button [layer]=\"layer\"></igo-metadata-button>\n  </ng-template>\n\n</igo-layer-list>\n\n<ng-template #empty>\n  <mat-list *ngIf=\"delayedShowEmptyMapContent\">\n    <p class=\"map-empty mat-typography\">\n      {{'igo.integration.mapTool.empty' | translate}}</p>\n    <p *ngIf=\"layerAdditionAllowed && (searchToolInToolbar || catalogToolInToolbar || contextToolInToolbar)\" class=\"map-empty mat-typography\">\n      {{'igo.integration.mapTool.customize' | translate}}</p>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && searchToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z'> </path> </svg></mat-icon>\n      <h4 matLine class=\"search-tool mat-typography\" (click)=\"searchEmit()\">\n        {{'igo.integration.mapTool.search-tool' | translate}}\n      </h4>\n    </mat-list-item>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && catalogToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z'></path> </svg></mat-icon>\n      <h4 matLine class=\"catalog-tool mat-typography\" (click)=\"catalogEmit()\">\n        {{'igo.integration.mapTool.catalog-tool' | translate}}\n      </h4>\n    </mat-list-item>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && contextToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z'></path> </svg></mat-icon>\n      <h4 matLine class=\"context-tool mat-typography\" (click)=\"contextEmit()\">\n        {{'igo.integration.mapTool.context-tool' | translate}}\n      </h4>\n    </mat-list-item>\n  </mat-list>\n</ng-template>\n","import { Component, Input, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ToolComponent } from '@igo2/common';\nimport {\n  LayerListControlsEnum,\n  Layer,\n  IgoMap,\n  LayerListControlsOptions,\n  SearchSourceService,\n  sourceCanSearch,\n  ExportOptions\n} from '@igo2/geo';\n\nimport { ToolState } from './../../tool/tool.state';\nimport { MapState } from './../map.state';\nimport { ImportExportMode, ImportExportState } from '../../import-export/import-export.state';\n\n@ToolComponent({\n  name: 'mapDetails',\n  title: 'igo.integration.tools.map',\n  icon: 'map'\n})\n@Component({\n  selector: 'igo-map-details-tool',\n  templateUrl: './map-details-tool.component.html',\n  styleUrls: ['./map-details-tool.component.scss']\n})\nexport class MapDetailsToolComponent implements OnInit {\n  public delayedShowEmptyMapContent: boolean = false;\n\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\n\n  @Input() expandLegendOfVisibleLayers: boolean = false;\n\n  @Input() updateLegendOnResolutionChange: boolean = false;\n\n  @Input() ogcButton: boolean = true;\n\n  @Input() timeButton: boolean = true;\n\n  @Input() layerListControls: LayerListControlsOptions = {};\n\n  @Input() queryBadge: boolean = false;\n\n  @Input() layerAdditionAllowed: boolean = true;\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get layers$(): Observable<Layer[]> {\n    return this.map.layers$.pipe(\n      map((layers) =>\n        layers.filter(\n          (layer) =>\n            layer.showInLayerList !== false &&\n            (!this.excludeBaseLayers || !layer.baseLayer)\n        )\n      )\n    );\n  }\n\n  get excludeBaseLayers(): boolean {\n    return this.layerListControls.excludeBaseLayers || false;\n  }\n\n  get layerFilterAndSortOptions(): any {\n    const filterSortOptions = Object.assign(\n      {\n        showToolbar: LayerListControlsEnum.default\n      },\n      this.layerListControls\n    );\n\n    switch (this.layerListControls.showToolbar) {\n      case LayerListControlsEnum.always:\n        filterSortOptions.showToolbar = LayerListControlsEnum.always;\n        break;\n      case LayerListControlsEnum.never:\n        filterSortOptions.showToolbar = LayerListControlsEnum.never;\n        break;\n      default:\n        break;\n    }\n    return filterSortOptions;\n  }\n\n  get searchToolInToolbar(): boolean {\n    return (\n      this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 &&\n      this.searchSourceService\n        .getSources()\n        .filter(sourceCanSearch)\n        .filter((s) => s.available && s.getType() === 'Layer').length > 0\n    );\n  }\n\n  get catalogToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n  }\n\n  get contextToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n  }\n\n  constructor(\n    private mapState: MapState,\n    private toolState: ToolState,\n    private searchSourceService: SearchSourceService,\n    private cdRef: ChangeDetectorRef,\n    private importExportState: ImportExportState\n  ) {}\n\n  ngOnInit(): void {\n    // prevent message to be shown too quickly. Waiting for layers\n    setTimeout(() => {\n      this.delayedShowEmptyMapContent = true;\n      this.cdRef.detectChanges();\n    }, 250);\n  }\n\n  searchEmit() {\n    this.toolState.toolbox.activateTool('searchResults');\n  }\n\n  catalogEmit() {\n    this.toolState.toolbox.activateTool('catalog');\n  }\n\n  contextEmit() {\n    this.toolState.toolbox.activateTool('contextManager');\n  }\n\n  activateExport(layer: Layer) {\n    let id = layer.id;\n    if (layer.options.workspace?.workspaceId) {\n      id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n    }\n    this.importExportState.setsExportOptions({ layers: [id] } as ExportOptions);\n    this.importExportState.setMode(ImportExportMode.export);\n    this.toolState.toolbox.activateTool('importExport');\n  }\n}\n","<mat-tab-group>\n\n  <mat-tab [label]=\"'igo.integration.tools.map' | translate\">\n    <igo-layer-list\n      [map]=\"map\"\n      igoLayerListBinding\n      [excludeBaseLayers]=\"excludeBaseLayers\"\n      [layerFilterAndSortOptions]=\"layerFilterAndSortOptions\"\n      [expandLegendOfVisibleLayers]=\"expandLegendOfVisibleLayers\"\n      [toggleLegendOnVisibilityChange]=\"toggleLegendOnVisibilityChange\"\n      [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\"\n      [floatLabel]=\"false\"\n      [queryBadge]=\"queryBadge\">\n\n      <ng-template #igoLayerItemToolbar let-layer=\"layer\">\n        <!-- <igo-download-button [layer]=\"layer\"></igo-download-button> -->\n        <igo-workspace-button [layer]=\"layer\"></igo-workspace-button>\n        <igo-export-button [layer]=\"layer\" (click)=\"activateExport(layer)\"></igo-export-button>\n        <igo-ogc-filter-button [header]=\"ogcButton\" [layer]=\"layer\"></igo-ogc-filter-button>\n        <igo-time-filter-button [header]=\"timeButton\" [layer]=\"layer\"></igo-time-filter-button>\n        <igo-track-feature-button [trackFeature]=\"true\" [layer]=\"layer\"></igo-track-feature-button>\n        <igo-metadata-button [layer]=\"layer\"></igo-metadata-button>\n      </ng-template>\n\n    </igo-layer-list>\n  </mat-tab>\n\n  <mat-tab [label]=\"'igo.integration.tools.contexts' | translate\">\n    <igo-context-list igoContextListBinding></igo-context-list>\n  </mat-tab>\n\n</mat-tab-group>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport {\n  LayerListControlsEnum,\n  LayerListControlsOptions,\n  IgoMap,\n  ExportOptions,\n  Layer\n} from '@igo2/geo';\nimport { MapState } from './../map.state';\nimport { ImportExportMode, ImportExportState } from '../../import-export/import-export.state';\nimport { ToolState } from '../../tool/tool.state';\n\n/**\n * Tool to browse a map's layers or to choose a different map\n */\n@ToolComponent({\n  name: 'map',\n  title: 'igo.integration.tools.map',\n  icon: 'map'\n})\n@Component({\n  selector: 'igo-map-tool',\n  templateUrl: './map-tool.component.html',\n  styleUrls: ['./map-tool.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapToolComponent {\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\n\n  @Input() expandLegendOfVisibleLayers: boolean = false;\n\n  @Input() updateLegendOnResolutionChange: boolean = false;\n\n  @Input() ogcButton: boolean = true;\n\n  @Input() timeButton: boolean = true;\n\n  @Input() layerListControls: LayerListControlsOptions = {};\n\n  @Input() queryBadge: boolean = false;\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get excludeBaseLayers(): boolean {\n    return this.layerListControls.excludeBaseLayers || false;\n  }\n\n  get layerFilterAndSortOptions(): any {\n    const filterSortOptions = Object.assign(\n      {\n        showToolbar: LayerListControlsEnum.default\n      },\n      this.layerListControls\n    );\n\n    switch (this.layerListControls.showToolbar) {\n      case LayerListControlsEnum.always:\n        filterSortOptions.showToolbar = LayerListControlsEnum.always;\n        break;\n      case LayerListControlsEnum.never:\n        filterSortOptions.showToolbar = LayerListControlsEnum.never;\n        break;\n      default:\n        break;\n    }\n    return filterSortOptions;\n  }\n\n  constructor(\n    private mapState: MapState,\n    private toolState: ToolState,\n    private importExportState: ImportExportState\n  ) {}\n\n  activateExport(layer: Layer) {\n    let id = layer.id;\n    if (layer.options.workspace?.workspaceId) {\n      id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n    }\n    this.importExportState.setsExportOptions({ layers: [id] } as ExportOptions);\n    this.importExportState.setMode(ImportExportMode.export);\n    this.toolState.toolbox.activateTool('importExport');\n  }\n}\n","<mat-tab-group\n  #tabGroup\n  [selectedIndex]=\"layerListToolState.selectedTab$ | async\"\n  (selectedTabChange)=\"tabChanged($event)\">\n\n  <mat-tab [label]=\"'igo.integration.tools.layers' | translate\">\n    <igo-layer-list *ngIf=\"(layers$ | async).length !== 0; else emptyLayers\"\n      igoLayerListBinding\n      [excludeBaseLayers]=\"excludeBaseLayers\"\n      [layerFilterAndSortOptions]=\"layerFilterAndSortOptions\"\n      [expandLegendOfVisibleLayers]=\"expandLegendOfVisibleLayers\"\n      [toggleLegendOnVisibilityChange]=\"toggleLegendOnVisibilityChange\"\n      [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\"\n      [floatLabel]=\"false\"\n      [queryBadge]=\"queryBadge\"\n      [map]=\"map\"\n      (appliedFilterAndSort)= onLayerListChange($event)>\n\n      <ng-template #igoLayerItemToolbar let-layer=\"layer\">\n        <igo-metadata-button [layer]=\"layer\"></igo-metadata-button>\n        <igo-track-feature-button [trackFeature]=\"true\" [layer]=\"layer\"></igo-track-feature-button>\n        <igo-time-filter-button *ngIf=\"isTimeFilterButton(layer)\" [header]=\"timeButton\" [layer]=\"layer\"\n                                (click)=\"activateTimeFilter()\"></igo-time-filter-button>\n        <igo-ogc-filter-button *ngIf=\"isOGCFilterButton(layer)\" [header]=\"ogcButton\" [layer]=\"layer\"\n                                (click)=\"activateOgcFilter()\"></igo-ogc-filter-button>\n        <igo-export-button *ngIf=\"isExportButton(layer)\" [layer]=\"layer\" (click)=\"activateExport(layer)\"></igo-export-button>\n        <igo-workspace-button [layer]=\"layer\"></igo-workspace-button>\n      </ng-template>\n    </igo-layer-list>\n  </mat-tab>\n\n  <mat-tab [label]=\"'igo.integration.tools.legend' | translate\">\n    <igo-layer-legend-list *ngIf=\"showAllLegend()\"\n      igoLayerLegendListBinding\n      [allowShowAllLegends]=\"allowShowAllLegends\"\n      [showAllLegendsValue]=\"(showAllLegendsValue$ | async)\"\n      (allLegendsShown)=\"onShowAllLegends($event)\"\n      [excludeBaseLayers]=\"excludeBaseLayers\"\n      [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\">\n    </igo-layer-legend-list>\n    <ng-template *ngIf=\"(layers$ | async).length !== 0; else emptyLayers\"></ng-template>\n\n    <p class=\"map-empty mat-typography\"\n      *ngIf=\"!allowShowAllLegends && (layers$ | async).length !== 0 && (visibleOrInRangeLayers$ | async).length === 0\">\n      {{ ((visibleLayers$ | async).length) ? ('igo.integration.mapTool.noLayersInRange' | translate) :  ('igo.integration.mapTool.noLayersVisible' | translate) }}\n    </p>\n  </mat-tab>\n\n    <ng-template #emptyLayers>\n      <mat-list *ngIf=\"delayedShowEmptyMapContent\">\n        <p class=\"map-empty mat-typography\">\n          {{'igo.integration.mapTool.empty' | translate}}</p>\n        <p *ngIf=\"layerAdditionAllowed && (searchToolInToolbar || catalogToolInToolbar || contextToolInToolbar)\"\n          class=\"map-empty mat-typography\">\n          {{'igo.integration.mapTool.customize' | translate}}</p>\n\n        <mat-list-item *ngIf=\"layerAdditionAllowed && searchToolInToolbar\">\n          <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%'\n              preserveAspectRatio='xMidYMid meet' focusable='false'>\n              <path\n                d='M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z'>\n              </path>\n            </svg></mat-icon>\n          <h4 matLine class=\"search-tool mat-typography\" (click)=\"searchEmit()\">\n            {{'igo.integration.mapTool.search-tool' | translate}}\n          </h4>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"layerAdditionAllowed && catalogToolInToolbar\">\n          <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%'\n              preserveAspectRatio='xMidYMid meet' focusable='false'>\n              <path\n                d='M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z'>\n              </path>\n            </svg></mat-icon>\n          <h4 matLine class=\"catalog-tool mat-typography\" (click)=\"catalogEmit()\">\n            {{'igo.integration.mapTool.catalog-tool' | translate}}\n          </h4>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"layerAdditionAllowed && contextToolInToolbar\">\n          <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%'\n              preserveAspectRatio='xMidYMid meet' focusable='false'>\n              <path\n                d='M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z'>\n              </path>\n            </svg></mat-icon>\n          <h4 matLine class=\"context-tool mat-typography\" (click)=\"contextEmit()\">\n            {{'igo.integration.mapTool.context-tool' | translate}}\n          </h4>\n        </mat-list-item>\n      </mat-list>\n    </ng-template>\n</mat-tab-group>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit,\n  ViewChild,\n  OnDestroy\n} from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport {\n  LayerListControlsEnum,\n  LayerListControlsOptions,\n  IgoMap,\n  SearchSourceService,\n  sourceCanSearch,\n  Layer,\n  ExportOptions,\n  VectorLayer\n} from '@igo2/geo';\n\nimport { LayerListToolState } from '../layer-list-tool.state';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { ToolState } from '../../tool/tool.state';\nimport { MapState } from '../map.state';\nimport { BehaviorSubject, Observable, Subscription, combineLatest } from 'rxjs';\nimport { map, debounceTime } from 'rxjs/operators';\nimport { ImportExportMode, ImportExportState } from '../../import-export/import-export.state';\n/**\n * Tool to browse a map's layers or to choose a different map\n */\n@ToolComponent({\n  name: 'mapTools',\n  title: 'igo.integration.tools.map',\n  icon: 'map'\n})\n@Component({\n  selector: 'igo-map-tools',\n  templateUrl: './map-tools.component.html',\n  styleUrls: ['./map-tools.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapToolsComponent implements OnInit, OnDestroy {\n  layers$: BehaviorSubject<Layer[]> = new BehaviorSubject([]);\n  showAllLegendsValue$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  private resolution$$: Subscription;\n  private visibleOrInRangeLayers$$: Subscription;\n  public delayedShowEmptyMapContent: boolean = false;\n\n  @Input() allowShowAllLegends: boolean = false;\n\n  @Input() showAllLegendsValue: boolean = false;\n\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\n\n  @Input() expandLegendOfVisibleLayers: boolean = false;\n\n  @Input() updateLegendOnResolutionChange: boolean = false;\n\n  @Input() selectedTabAtOpening: string;\n\n  @Input() ogcButton: boolean = true;\n\n  @Input() timeButton: boolean = true;\n\n  @Input() layerAdditionAllowed: boolean = true;\n\n  @Input()\n  get layerListControls(): LayerListControlsOptions {\n    return this._layerListControls;\n  }\n  set layerListControls(value: LayerListControlsOptions) {\n    const stateOptions = this.layerListToolState.getLayerListControls();\n    const stateKeyword = stateOptions.keyword;\n    const stateOnlyVisible = stateOptions.onlyVisible;\n    const stateSortAlpha = stateOptions.sortAlpha;\n\n    value.keyword = stateKeyword !== '' ? stateKeyword : value.keyword;\n    value.onlyVisible =\n      stateOnlyVisible !== undefined ? stateOnlyVisible : value.onlyVisible;\n    value.sortAlpha =\n      stateSortAlpha !== undefined ? stateSortAlpha : value.sortAlpha;\n\n    value.onlyVisible =\n      value.onlyVisible === undefined ? false : value.onlyVisible;\n    value.sortAlpha = value.sortAlpha === undefined ? false : value.sortAlpha;\n\n    this._layerListControls = value;\n  }\n  private _layerListControls = {};\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  @Input() queryBadge: boolean = false;\n\n  get visibleOrInRangeLayers$(): Observable<Layer[]> {\n    return this.layers$.pipe(\n      map((layers) =>\n        layers.filter(\n          (layer) => layer.visible$.value && layer.isInResolutionsRange$.value\n        )\n      )\n    );\n  }\n\n  get visibleLayers$(): Observable<Layer[]> {\n    return this.layers$.pipe(\n      map((layers) => layers.filter((layer) => layer.visible$.value))\n    );\n  }\n\n  get excludeBaseLayers(): boolean {\n    return this.layerListControls.excludeBaseLayers || false;\n  }\n\n  get layerFilterAndSortOptions(): LayerListControlsOptions {\n    const filterSortOptions = Object.assign(\n      {\n        showToolbar: LayerListControlsEnum.default\n      },\n      this.layerListControls\n    );\n\n    switch (this.layerListControls.showToolbar) {\n      case LayerListControlsEnum.always:\n        filterSortOptions.showToolbar = LayerListControlsEnum.always;\n        break;\n      case LayerListControlsEnum.never:\n        filterSortOptions.showToolbar = LayerListControlsEnum.never;\n        break;\n      default:\n        break;\n    }\n    return filterSortOptions;\n  }\n\n  @ViewChild('tabGroup', { static: true }) tabGroup;\n\n  get searchToolInToolbar(): boolean {\n    return (\n      this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 &&\n      this.searchSourceService\n        .getSources()\n        .filter(sourceCanSearch)\n        .filter((s) => s.available && s.getType() === 'Layer').length > 0\n    );\n  }\n\n  get catalogToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n  }\n\n  get contextToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n  }\n\n  constructor(\n    public layerListToolState: LayerListToolState,\n    private toolState: ToolState,\n    public mapState: MapState,\n    private searchSourceService: SearchSourceService,\n    private importExportState: ImportExportState\n  ) {}\n\n  ngOnInit(): void {\n    this.selectedTab();\n    this.resolution$$ = combineLatest([\n      this.map.layers$,\n      this.map.viewController.resolution$\n    ])\n      .pipe(debounceTime(10))\n      .subscribe((bunch: [Layer[], number]) => {\n        this.layers$.next(\n          bunch[0].filter(\n            (layer) =>\n              layer.showInLayerList !== false &&\n              (!this.excludeBaseLayers || !layer.baseLayer)\n          )\n        );\n      });\n\n    if (this.allowShowAllLegends) {\n      this.mapState.showAllLegendsValue =\n        this.mapState.showAllLegendsValue !== undefined\n          ? this.mapState.showAllLegendsValue\n          : this.showAllLegendsValue || false;\n      this.showAllLegendsValue$.next(this.mapState.showAllLegendsValue);\n    } else {\n      this.showAllLegendsValue$.next(false);\n    }\n\n    // prevent message to be shown too quickly. Waiting for layers\n    setTimeout(() => (this.delayedShowEmptyMapContent = true), 250);\n  }\n\n  ngOnDestroy(): void {\n    this.resolution$$.unsubscribe();\n    if (this.visibleOrInRangeLayers$$) {\n      this.visibleOrInRangeLayers$$.unsubscribe();\n    }\n  }\n\n  onShowAllLegends(event) {\n    this.mapState.showAllLegendsValue = event;\n    this.showAllLegendsValue$.next(event);\n  }\n\n  private selectedTab() {\n    const userSelectedTab = this.layerListToolState.selectedTab$.value;\n    if (userSelectedTab !== undefined) {\n      this.layerListToolState.setSelectedTab(userSelectedTab);\n    } else {\n      if (this.selectedTabAtOpening === 'legend') {\n        this.layerListToolState.setSelectedTab(1);\n      } else {\n        this.layerListToolState.setSelectedTab(0);\n      }\n    }\n  }\n\n  public tabChanged(tab: MatTabChangeEvent) {\n    this.layerListToolState.setSelectedTab(tab.index);\n    this.layers$.next(\n      this.map.layers.filter(\n        (layer) =>\n          layer.showInLayerList !== false &&\n          (!this.excludeBaseLayers || !layer.baseLayer)\n      )\n    );\n  }\n\n  onLayerListChange(appliedFilters: LayerListControlsOptions) {\n    this.layerListToolState.setKeyword(appliedFilters.keyword);\n    this.layerListToolState.setSortAlpha(appliedFilters.sortAlpha);\n    this.layerListToolState.setOnlyVisible(appliedFilters.onlyVisible);\n  }\n\n  showAllLegend() {\n    if (this.layers$.getValue().length === 0) {\n      return false;\n    } else if (\n      this.layers$.getValue().length !== 0 &&\n      this.allowShowAllLegends === false\n    ) {\n      let visibleOrInRangeLayers;\n      this.visibleOrInRangeLayers$$ = this.visibleOrInRangeLayers$.subscribe((value) => {\n        value.length === 0\n          ? (visibleOrInRangeLayers = false)\n          : (visibleOrInRangeLayers = true);\n      });\n\n      if (visibleOrInRangeLayers === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  activateExport(layer: Layer) {\n    let id = layer.id;\n    if (layer.options.workspace?.workspaceId) {\n      id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n    }\n    this.importExportState.setsExportOptions({ layers: [id] } as ExportOptions);\n    this.importExportState.setMode(ImportExportMode.export);\n    this.toolState.toolbox.activateTool('importExport');\n  }\n\n  activateTimeFilter() {\n    this.toolState.toolbox.activateTool('activeTimeFilter');\n  }\n\n  activateOgcFilter() {\n    this.toolState.toolbox.activateTool('activeOgcFilter');\n  }\n\n  searchEmit() {\n    this.toolState.toolbox.activateTool('searchResults');\n  }\n\n  catalogEmit() {\n    this.toolState.toolbox.activateTool('catalog');\n  }\n\n  contextEmit() {\n    this.toolState.toolbox.activateTool('contextManager');\n  }\n\n  isTimeFilterButton(layer): boolean {\n    const options = layer.dataSource.options;\n    return this.timeButton && options.timeFilterable && options.timeFilter;\n  }\n\n  isOGCFilterButton(layer): boolean {\n    const options = layer.dataSource.options;\n    return this.ogcButton && options.ogcFilters && options.ogcFilters.enabled &&\n    (options.ogcFilters.pushButtons || options.ogcFilters.checkboxes || options.ogcFilters.radioButtons\n      || options.ogcFilters.select || options.ogcFilters.editable);\n  }\n\n  isExportButton(layer: Layer): boolean {\n    if (\n      (layer instanceof VectorLayer && layer.exportable === true) ||\n      (layer.dataSource.options.download && layer.dataSource.options.download.url) ||\n      (layer.options.workspace?.enabled && layer.options.workspace?.workspaceId !== layer.id))\n      {\n          return true;\n      }\n    return false;\n  }\n}\n","<igo-layer-legend-list *ngIf=\"showAllLegend()\"\n  igoLayerLegendListBinding\n  [excludeBaseLayers]=\"excludeBaseLayers\"\n  [allowShowAllLegends]=\"allowShowAllLegends\"\n  [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\"\n  [showAllLegendsValue]=\"(showAllLegendsValue$ | async)\"\n  (allLegendsShown)=\"onShowAllLegends($event)\">\n</igo-layer-legend-list>\n<ng-template *ngIf=\"(layers$ | async).length !== 0; else emptyLayers\"></ng-template>\n\n<p class=\"map-empty mat-typography\"\n  *ngIf=\"!allowShowAllLegends && (layers$ | async).length !== 0 && (visibleOrInRangeLayers$ | async).length === 0\">\n  {{ ((visibleLayers$ | async).length) ? ('igo.integration.mapTool.noLayersInRange' | translate) :  ('igo.integration.mapTool.noLayersVisible' | translate) }}\n</p>\n\n\n<ng-template #emptyLayers>\n  <mat-list *ngIf=\"delayedShowEmptyMapContent\">\n    <p class=\"map-empty mat-typography\">\n      {{'igo.integration.mapTool.empty' | translate}}</p>\n    <p *ngIf=\"layerAdditionAllowed && (searchToolInToolbar || catalogToolInToolbar || contextToolInToolbar)\" class=\"map-empty mat-typography\">\n      {{'igo.integration.mapTool.customize' | translate}}</p>\n\n    <mat-list-item *ngIf=\"layerAdditionAllowed && searchToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z'> </path> </svg></mat-icon>\n      <h4 matLine class=\"search-tool mat-typography\" (click)=\"searchEmit()\">\n        {{'igo.integration.mapTool.search-tool' | translate}}\n      </h4>\n    </mat-list-item>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && catalogToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z'></path> </svg></mat-icon>\n      <h4 matLine class=\"catalog-tool mat-typography\" (click)=\"catalogEmit()\">\n        {{'igo.integration.mapTool.catalog-tool' | translate}}\n      </h4>\n    </mat-list-item>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && contextToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z'></path> </svg></mat-icon>\n      <h4 matLine class=\"context-tool mat-typography\" (click)=\"contextEmit()\">\n        {{'igo.integration.mapTool.context-tool' | translate}}\n      </h4>\n    </mat-list-item>\n  </mat-list>\n</ng-template>\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable, Subscription, BehaviorSubject, ReplaySubject, combineLatest } from 'rxjs';\nimport { map, debounceTime } from 'rxjs/operators';\n\nimport { ToolComponent } from '@igo2/common';\nimport {\n  Layer,\n  IgoMap,\n  LayerListControlsOptions,\n  SearchSourceService,\n  sourceCanSearch\n} from '@igo2/geo';\n\nimport { ToolState } from './../../tool/tool.state';\nimport { MapState } from './../map.state';\n\n@ToolComponent({\n  name: 'mapLegend',\n  title: 'igo.integration.tools.legend',\n  icon: 'format-list-bulleted-type'\n})\n@Component({\n  selector: 'igo-map-legend-tool',\n  templateUrl: './map-legend-tool.component.html',\n  styleUrls: ['./map-legend-tool.component.scss']\n})\nexport class MapLegendToolComponent implements OnInit, OnDestroy {\n  public delayedShowEmptyMapContent: boolean = false;\n\n  layers$: BehaviorSubject<Layer[]> = new BehaviorSubject([]);\n  showAllLegendsValue$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  change$ = new ReplaySubject<void>(1);\n\n  private resolution$$: Subscription;\n  private visibleOrInRangeLayers$$: Subscription;\n\n  @Input() updateLegendOnResolutionChange: boolean = false;\n\n  @Input() layerAdditionAllowed: boolean = true;\n\n  @Input() allowShowAllLegends: boolean = false;\n\n  @Input() showAllLegendsValue: boolean = false;\n\n  @Input() layerListControls: LayerListControlsOptions = {};\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get visibleOrInRangeLayers$(): Observable<Layer[]> {\n    return this.layers$.pipe(\n      map(layers =>\n        layers.filter(\n          layer => layer.visible$.value && layer.isInResolutionsRange$.value\n        )\n      )\n    );\n  }\n\n  get visibleLayers$(): Observable<Layer[]> {\n    return this.layers$.pipe(\n      map(layers => layers.filter(layer => layer.visible$.value))\n    );\n  }\n\n  get excludeBaseLayers(): boolean {\n    return this.layerListControls.excludeBaseLayers || false;\n  }\n\n  get searchToolInToolbar(): boolean {\n    return (\n      this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 &&\n      this.searchSourceService\n        .getSources()\n        .filter(sourceCanSearch)\n        .filter(s => s.available && s.getType() === 'Layer').length > 0\n    );\n  }\n\n  get catalogToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n  }\n\n  get contextToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n  }\n  constructor(\n    private mapState: MapState,\n    private toolState: ToolState,\n    private searchSourceService: SearchSourceService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.resolution$$ = combineLatest([\n      this.map.layers$,\n      this.map.viewController.resolution$\n    ])\n      .pipe(debounceTime(10))\n      .subscribe((bunch: [Layer[], number]) => {\n        this.layers$.next(\n          bunch[0].filter(\n            layer =>\n              layer.showInLayerList !== false &&\n              (!this.excludeBaseLayers || !layer.baseLayer)\n          )\n        );\n      });\n\n    if (this.allowShowAllLegends) {\n      this.mapState.showAllLegendsValue =\n        this.mapState.showAllLegendsValue !== undefined\n          ? this.mapState.showAllLegendsValue\n          : this.showAllLegendsValue || false;\n      this.showAllLegendsValue$.next(this.mapState.showAllLegendsValue);\n    } else {\n      this.showAllLegendsValue$.next(false);\n    }\n\n    // prevent message to be shown too quickly. Waiting for layers\n    setTimeout(() => {\n      this.delayedShowEmptyMapContent = true;\n      this.cdRef.detectChanges();\n    }, 250);\n  }\n\n  onShowAllLegends(event) {\n    this.mapState.showAllLegendsValue = event;\n    this.showAllLegendsValue$.next(event);\n  }\n\n  showAllLegend() {\n    if (this.layers$.getValue().length === 0) {\n      return false;\n    } else if (\n      this.layers$.getValue().length !== 0 &&\n      this.allowShowAllLegends === false\n    ) {\n      let visibleOrInRangeLayers;\n      this.visibleOrInRangeLayers$$ = this.visibleOrInRangeLayers$.subscribe(value => {\n        value.length === 0\n          ? (visibleOrInRangeLayers = false)\n          : (visibleOrInRangeLayers = true);\n      });\n\n      if (visibleOrInRangeLayers === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  ngOnDestroy(): void {\n    this.resolution$$.unsubscribe();\n    if (this.visibleOrInRangeLayers$$) {\n      this.visibleOrInRangeLayers$$.unsubscribe();\n    }\n  }\n\n  searchEmit() {\n    this.toolState.toolbox.activateTool('searchResults');\n  }\n\n  catalogEmit() {\n    this.toolState.toolbox.activateTool('catalog');\n  }\n\n  contextEmit() {\n    this.toolState.toolbox.activateTool('contextManager');\n  }\n}\n","<div *ngIf=\"userControlledLayerList.length; else noLayersBlock\" class=\"igo-swipe-select-container\">\n    <form class=\"igo-form\" [formGroup]=\"form\">\n        <mat-form-field>\n            <mat-label>{{'igo.integration.advanced-map-tool.advanced-swipe.swipe-select' | translate}}</mat-label>\n            <mat-select formControlName=\"layers\" multiple>\n                <mat-option [value]=\"1\" (click)=\"selectAll(e)\" #e>\n                    {{'igo.integration.advanced-map-tool.advanced-swipe.selectAll' | translate}}\n                </mat-option>\n                <mat-divider></mat-divider>\n                <mat-option *ngFor=\"let layer of userControlledLayerList\" [value]=\"layer\" (click)=\"applyNewLayers(e)\">{{layer.title}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n\n    <mat-slide-toggle class=\"swipe-toggle mat-typography\"\n        [checked]=\"swipe\"\n        [labelPosition]=\"'before'\"\n        (change)=\"startSwipe($event.checked)\">\n        {{'igo.integration.advanced-map-tool.advanced-swipe.swipe' | translate}}\n    </mat-slide-toggle> \n</div>\n\n<ng-template #noLayersBlock>\n    <mat-list>\n        <p class=\"map-empty mat-typography\">\n            {{'igo.integration.advanced-map-tool.advanced-swipe.empty' | translate}}</p>\n        <p class=\"map-empty mat-typography\">\n            {{'igo.integration.advanced-map-tool.advanced-swipe.customize' | translate}}</p>\n        <mat-list-item>\n            <mat-icon mat-list-icon svgIcon=\"magnify\"></mat-icon>\n            <h4 matLine class=\"search-tool mat-typography\" (click)=\"searchEmit()\">\n                {{'igo.integration.advanced-map-tool.advanced-swipe.search-tool' | translate}}\n            </h4>\n        </mat-list-item>\n        <mat-list-item>\n            <mat-icon mat-list-icon svgIcon=\"layers-plus\"></mat-icon>\n            <h4 matLine class=\"catalog-tool mat-typography\" (click)=\"catalogEmit()\">\n                {{'igo.integration.advanced-map-tool.advanced-swipe.catalog-tool' | translate}}\n            </h4>\n        </mat-list-item>\n        <mat-list-item>\n            <mat-icon mat-list-icon svgIcon=\"star\"></mat-icon>\n            <h4 matLine class=\"context-tool mat-typography\" (click)=\"contextEmit()\">\n                {{'igo.integration.advanced-map-tool.advanced-swipe.context-tool' | translate}}\n            </h4>\n        </mat-list-item>\n    </mat-list>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ContextService, DetailedContext } from '@igo2/context';\nimport { IgoMap, Layer, VectorLayer } from '@igo2/geo';\nimport { MapState } from '../../map.state';\nimport { ToolState } from '../../../tool/tool.state';\n\n@Component({\n  selector: 'igo-advanced-swipe',\n  templateUrl: './advanced-swipe.component.html',\n  styleUrls: ['./advanced-swipe.component.scss']\n})\n\nexport class AdvancedSwipeComponent implements OnInit, OnDestroy {\n  public swipe: boolean = false;\n  public layerList: Layer[];\n  public userControlledLayerList: Layer[];\n  public form: FormGroup;\n  public layers: VectorLayer[];\n  public res: DetailedContext;\n  public listForSwipe: Layer[];\n\n  /**\n   * Get an active map state\n   */\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  constructor(\n    public mapState: MapState,\n    private contextService: ContextService,\n    private formBuilder: FormBuilder,\n    private toolState: ToolState) {\n      this.buildForm();\n  }\n\n  /**\n   * Get the list of layers for swipe\n   * @internal\n   */\n   ngOnInit() {\n    this.map.layers$.subscribe(ll => this.userControlledLayerList = ll.filter(layer =>\n      (!layer.baseLayer && layer.showInLayerList && layer.displayed)));\n  }\n\n  /**\n   * Desactivate the swipe\n   * @internal\n   */\n  ngOnDestroy(){\n    this.swipe = false;\n    this.map.swipeEnabled$.next(this.swipe);\n  }\n\n  /**\n   * Build a form for choise of the layers\n   */\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      layers: ['', [Validators.required]]\n    });\n  }\n\n  /**\n   * Activate the swipe, send a list of layers for a swipe-tool\n   */\n  startSwipe(toggle: boolean){\n    this.swipe = toggle;\n    this.map.swipeEnabled$.next(toggle);\n    this.listForSwipe = [];\n    for (const layer of this.form.value.layers) {\n      this.listForSwipe.push(layer);\n    }\n    this.map.selectedFeatures$.next(this.listForSwipe);\n  }\n\n  /**\n   * Restart a swipe for a new layers-list\n   */\n  applyNewLayers(e) {\n    this.startSwipe(false); // l'approche KISS\n    this.startSwipe(true);\n    if (e._selected) {e._selected = false; }\n    const allLayers = this.userControlledLayerList.length;\n    const selectedLayers = this.form.controls.layers.value.length;\n    if (selectedLayers === allLayers){\n      e._selected = true;\n    }\n  }\n\n  /**\n   * Select all list of layers and restart a tool\n   */\n  selectAll(e) {\n    if (e._selected) {\n      this.form.controls.layers.setValue(this.userControlledLayerList);\n      e._selected = true;\n    }\n    else {\n      this.form.controls.layers.setValue([]);\n    }\n    this.startSwipe(false);\n    this.startSwipe(true);\n  }\n\n  /**\n   * Open search tool\n   */\n  searchEmit() {\n    this.toolState.toolbox.activateTool('searchResults');\n  }\n\n  /**\n   * Open catalog\n   */\n  catalogEmit() {\n    this.toolState.toolbox.activateTool('catalog');\n  }\n\n  /**\n   * Open context manager\n   */\n  contextEmit() {\n    this.toolState.toolbox.activateTool('contextManager');\n  }\n}\n","<mat-form-field *ngIf=\"units; else elseBlock\" class=\"coordinates\">\n    <textarea  #textArea matInput readonly rows=\"1\"\n      [placeholder]=\"'igo.integration.advanced-map-tool.advanced-coordinates.lon' | translate\"\n      [value]=\"coordinates[0]\"></textarea>\n</mat-form-field>\n<ng-template #elseBlock >\n  <mat-form-field class=\"coordinates\">\n    <textarea #textArea matInput readonly rows=\"1\"\n  [placeholder]=\"'igo.integration.advanced-map-tool.advanced-coordinates.est' | translate\"\n  [value]=\"coordinates[0]\"></textarea></mat-form-field>\n</ng-template>\n\n<mat-form-field *ngIf=\"units; else elseBlock2\" class=\"coordinates2\">\n    <textarea #textArea matInput readonly rows=\"1\"\n      [placeholder]=\"'igo.integration.advanced-map-tool.advanced-coordinates.lat' | translate\"\n      [value]=\"coordinates[1]\"></textarea>\n</mat-form-field>\n<ng-template #elseBlock2 >\n  <mat-form-field class=\"coordinates2\">  <textarea #textArea matInput readonly rows=\"1\"\n  [placeholder]=\"'igo.integration.advanced-map-tool.advanced-coordinates.nord' | translate\"\n  [value]=\"coordinates[1]\"></textarea></mat-form-field>\n</ng-template>\n\n<button class=\"igo-form-button-group\"\n    mat-raised-button\n    (click)=\"copyTextToClipboard()\">\n    <mat-icon svgIcon=\"content-copy\"></mat-icon>\n    {{ 'igo.integration.advanced-map-tool.advanced-coordinates.copy' | translate }}\n</button>\n\n<form class=\"igo-form\" [formGroup]=\"form\">\n  <mat-form-field class=\"igo-input-container\">\n    <mat-label>{{'igo.integration.advanced-map-tool.advanced-coordinates.coordSystem' | translate}}</mat-label>\n    <mat-select [(value)]=\"inputProj\">\n      <mat-option matTooltipShowDelay=\"500\"\n        *ngFor=\"let projection of (projections$ | async)\"\n        [value]=\"projection\"\n        (click)=\"$event.stopPropagation()\">\n        {{projection.translatedValue || projection.alias }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-slide-toggle class=\"center-toggle mat-typography\"\n    [checked]=\"center\"\n    [labelPosition]=\"'before'\"\n    (change)=\"displayCenter($event.checked)\">\n    {{'igo.integration.advanced-map-tool.advanced-coordinates.center' | translate}}\n  </mat-slide-toggle> \n</form>\n\n<p class=\"igo-zoom mat-typography\">{{'igo.integration.advanced-map-tool.advanced-coordinates.zoom' | translate}} {{map.viewController.getZoom() }}</p>\n<p class=\"igo-zoom mat-typography\">{{'igo.integration.advanced-map-tool.advanced-coordinates.scale' | translate}} {{ formattedScale$ | async }}</p>\n<p class=\"igo-zoom mat-typography\">{{'igo.integration.advanced-map-tool.advanced-coordinates.resolution' | translate}} {{map.viewController.getResolution() | number: '1.0-0' }}</p>","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { formatScale, IgoMap, InputProjections, ProjectionsLimitationsOptions } from '@igo2/geo';\nimport { MapState } from '../../map.state';\nimport { Clipboard } from '@igo2/utils';\nimport { MessageService, LanguageService, StorageService, StorageScope, ConfigService } from '@igo2/core';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { zoneMtm, zoneUtm, computeProjectionsConstraints } from '@igo2/geo';\nimport * as olproj from 'ol/proj';\n/**\n * Tool to display the coordinates and a cursor of the center of the map\n */\n@Component({\n  selector: 'igo-advanced-coordinates',\n  templateUrl: './advanced-coordinates.component.html',\n  styleUrls: ['./advanced-coordinates.component.scss']\n})\nexport class AdvancedCoordinatesComponent implements OnInit, OnDestroy {\n  public formattedScale$: BehaviorSubject<string> = new BehaviorSubject('');\n  public projections$: BehaviorSubject<InputProjections[]> = new BehaviorSubject([]);\n  public form: FormGroup;\n  public coordinates: string[];\n  private currentCenterDefaultProj: [number, number];\n  public center: boolean = this.storageService.get('centerToggle') as boolean;\n  private inMtmZone: boolean = true;\n  private inLambert2 = {32198: true, 3798: true};\n  private mapState$$: Subscription;\n  private _projectionsLimitations: ProjectionsLimitationsOptions = {};\n  private projectionsConstraints: ProjectionsLimitationsOptions;\n  private defaultProj: InputProjections = {\n    translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.wgs84', { code: 'EPSG:4326' }),\n    translateKey: 'wgs84', alias: 'WGS84', code: 'EPSG:4326', zone: ''\n  };\n  private currentZones = { utm: undefined, mtm: undefined };\n  public units: boolean = true;\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get inputProj(): InputProjections {\n    return this.form.get('inputProj').value;\n  }\n  set inputProj(value: InputProjections) {\n    this.form.patchValue({ inputProj: value });\n  }\n  get projectionsLimitations(): ProjectionsLimitationsOptions {\n    return this._projectionsLimitations || {};\n  }\n\n  @Input()\n  set projectionsLimitations(value: ProjectionsLimitationsOptions) {\n    this._projectionsLimitations = value;\n  }\n\n  constructor(\n    public mapState: MapState,\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private cdRef: ChangeDetectorRef,\n    private storageService: StorageService,\n    private config: ConfigService,\n    private formBuilder: FormBuilder) {\n      this.computeProjections();\n      this.buildForm();\n    }\n\n  /**\n   * Listen a state of the map, a state of a form, update the coordinates\n   */\n  ngOnInit(): void {\n    this.mapState$$ = combineLatest([this.map.viewController.state$.pipe(debounceTime(50)), this.form.valueChanges])\n        .subscribe(() => {\n      this.setScaleValue(this.map);\n      this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n      const currentMtmZone = zoneMtm(this.currentCenterDefaultProj[0]);\n      const currentUtmZone = zoneUtm(this.currentCenterDefaultProj[0]);\n      if (!this.inMtmZone && currentMtmZone !== this.currentZones.mtm) {\n        this.back2quebec();\n      }\n      let zoneChange = false;\n      if (currentMtmZone !== this.currentZones.mtm) {\n        this.currentZones.mtm = currentMtmZone;\n        zoneChange = true;\n      }\n      if (currentUtmZone !== this.currentZones.utm) {\n        this.currentZones.utm = currentUtmZone;\n        zoneChange = true;\n      }\n      if (zoneChange) {\n        this.updateProjectionsZoneChange();\n      }\n      this.checkLambert(this.currentCenterDefaultProj);\n      this.coordinates = this.getCoordinates();\n      this.cdRef.detectChanges();\n      this.storageService.set('currentProjection', this.inputProj, StorageScope.SESSION);\n    });\n\n    const tempInputProj = this.storageService.get('currentProjection') as InputProjections;\n    this.inputProj = this.projections$.value[0];\n    if (tempInputProj !== null)\n    {\n      const pos = this.positionInList(tempInputProj);\n      this.inputProj = this.projections$.value[pos];\n      this.updateZoneMtmUtm();\n    }\n    this.map.mapCenter$.next(this.center);\n    this.coordinates = this.getCoordinates();\n    this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n  }\n\n  ngOnDestroy(): void {\n    this.map.mapCenter$.next(false);\n    this.mapState$$.unsubscribe();\n  }\n\n  setScaleValue(map: IgoMap) {\n    this.formattedScale$.next(': ~ 1 / ' + formatScale(map.viewController.getScale()));\n  }\n  /**\n   * Coordinates of the center of the map on the appropriate systeme of coordinates\n   * @returns Array of two numbers\n   */\n  getCoordinates(): string[] {\n    this.currentZones.mtm = zoneMtm(this.currentCenterDefaultProj[0]);\n    this.currentZones.utm = zoneUtm(this.currentCenterDefaultProj[0]);\n    let coord;\n    const code = this.inputProj.code;\n    let decimal = 2;\n    if (code.includes('EPSG:4326') || code.includes('EPSG:4269')) {\n      decimal = 5;\n    }\n    this.units = (code === 'EPSG:4326' || code === 'EPSG:4269');\n    coord = this.map.viewController.getCenter(code).map(c => c.toFixed(decimal));\n    return coord;\n  }\n\n  /**\n   * Copy the coordinates to a clipboard\n   */\n  copyTextToClipboard(): void {\n    const successful = Clipboard.copy(this.coordinates.toString());\n    if (successful) {\n      const translate = this.languageService.translate;\n      const title = translate.instant(\n        'igo.integration.advanced-map-tool.advanced-coordinates.copyTitle'\n      );\n      const msg = translate.instant('igo.integration.advanced-map-tool.advanced-coordinates.copyMsg');\n      this.messageService.success(msg, title);\n    }\n  }\n\n  /**\n   * Display a cursor on the center of the map\n   */\n  displayCenter(toggle: boolean): void {\n    this.center = toggle;\n    this.map.mapCenter$.next(toggle);\n    this.storageService.set('centerToggle', toggle, StorageScope.SESSION);\n  }\n\n  /**\n   * Builder of the form\n   */\n  private buildForm(): void {\n    this.form = this.formBuilder.group({\n      inputProj: ['', [Validators.required]]\n    });\n  }\n\n  /**\n   * Update list of projections after changing of the state of the map\n   */\n  private updateProjectionsZoneChange(): void {\n    let modifiedProj = this.projections$.value;\n    const translate = this.languageService.translate;\n    modifiedProj.map(p => {\n      if (p.translateKey === 'mtm') {\n        const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n        if (zone) {\n          const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n          p.alias = `MTM ${zone}`;\n          p.code = code;\n          p.zone = `${zone}`;\n          p.translatedValue = translate.instant('igo.geo.importExportForm.projections.mtm', p);\n        }\n        else {\n          p.alias = '';\n          this.inMtmZone = false;\n          if (this.inputProj.translateKey === 'mtm') {\n            this.inputProj = this.projections$.value[0];\n          }\n        }\n      }\n      if (p.translateKey === 'utm') {\n        const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n        const code = `EPSG:326${zone}`;\n        p.alias = `UTM ${zone}`;\n        p.code = code;\n        p.zone = `${zone}`;\n        p.translatedValue = translate.instant('igo.geo.importExportForm.projections.utm', p);\n      }\n    });\n    modifiedProj = modifiedProj.filter(p => p.alias !== '');\n    this.projections$.next(modifiedProj);\n  }\n\n  /**\n   * Create a list of currents projections\n   */\n  private computeProjections(): void {\n    this.projectionsConstraints = computeProjectionsConstraints(this.projectionsLimitations);\n    const projections: InputProjections[] = [];\n\n    if (!this.currentCenterDefaultProj) {\n      this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n    }\n\n    const translate = this.languageService.translate;\n    if (this.projectionsConstraints.wgs84) {\n      projections.push({\n        translatedValue: translate.instant('igo.geo.importExportForm.projections.wgs84', { code: 'EPSG:4326' }),\n        translateKey: 'wgs84', alias: 'WGS84', code: 'EPSG:4326', zone: ''\n      });\n    }\n\n    if (this.projectionsConstraints.nad83) {\n      projections.push({\n        translatedValue: translate.instant('igo.geo.importExportForm.projections.nad83', { code: 'EPSG:4269' }),\n        translateKey: 'nad83', alias: 'NAD83', code: 'EPSG:4269', zone: ''\n      });\n    }\n\n    if (this.projectionsConstraints.webMercator) {\n      projections.push({\n        translatedValue: translate.instant('igo.geo.importExportForm.projections.webMercator', { code: 'EPSG:3857' }),\n        translateKey: 'webMercator', alias: 'Web Mercator', code: 'EPSG:3857', zone: ''\n      });\n    }\n    if (this.projectionsConstraints.mtm) {\n      // Quebec\n      const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n      if (zone) {\n        this.inMtmZone = true;\n        const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n        projections.splice(3, 0, {\n          translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', { code, zone }),\n          translateKey: 'mtm', alias: `MTM ${zone}`, code, zone: `${zone}`\n        });\n      }\n      else {\n        this.inMtmZone = false;\n      }\n    }\n    if (this.projectionsConstraints.utm) {\n      const order = this.inMtmZone ? 4 : 3;\n      const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n      const code = zone < 10 ? `EPSG:3260${zone}` : `EPSG:326${zone}`;\n      projections.splice(order, 0, {\n        translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.utm', { code, zone }),\n        translateKey: 'utm', alias: `UTM ${zone}`, code, zone: `${zone}`\n      });\n    }\n    let configProjection = [];\n    if (this.projectionsConstraints.projFromConfig) {\n      configProjection = this.config.getConfig('projections') || [];\n    }\n    this.projections$.next(projections.concat(configProjection));\n  }\n\n  /**\n   * Push the MTM in the array of systeme of coordinates\n   * @param projections Array of the InputProjections\n   */\n  private pushMtm(projections: Array<InputProjections>): void {\n    if (this.projectionsConstraints.mtm) {\n      const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n      const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n      projections.splice(3, 0, {\n          translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', { code, zone }),\n          translateKey: 'mtm', alias: `MTM ${zone}`, code, zone: `${zone}`});\n    }\n  }\n\n  /**\n   * Updates the list of systems of coordinates for territory of Quebec\n   * push MTM and UTM in the Array\n   */\n  private back2quebec(): void {\n    const projections = this.projections$.value;\n    this.pushMtm(projections);\n    this.inMtmZone = true;\n  }\n\n  /**\n   * Update the numbers of the zones when application is restarted\n   */\n  private updateZoneMtmUtm() {\n    if (this.inputProj.translateKey === 'mtm') {\n      const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n      this.inputProj.alias = `MTM ${zone}`;\n      const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n      this.inputProj.code = code;\n      this.inputProj.zone = `${zone}`;\n      this.inputProj.translatedValue = this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', { code, zone });\n    }\n    if (this.inputProj.translateKey === 'utm') {\n      const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n      this.inputProj.alias = `UTM ${zone}`;\n      const code = zone < 10 ? `EPSG:3260${zone}` : `EPSG:326${zone}`;\n      this.inputProj.code = code;\n      this.inputProj.zone = `${zone}`;\n      this.inputProj.translatedValue = this.languageService.translate.instant('igo.geo.importExportForm.projections.utm', { code, zone });\n    }\n  }\n\n  /**\n   * Compute the position of a current projection in a list. 0 if the projection is not in the list\n   * @param translateKey string, translate key of a projection\n   * @returns numeric, position of an element in the array\n   */\n  positionInList(tempInputProj: InputProjections): number {\n    const tk = tempInputProj.translateKey;\n    const alias = tempInputProj.alias;\n    let position; // = undefined;\n    let iter = 0;\n    this.projections$.value.map((projection) => {\n      if (tk) {\n        if (tk === projection.translateKey) {\n          position = iter;\n        }\n      }\n      else if (alias === projection.alias) {\n        position = iter;\n      }\n      iter++;\n    });\n    position = position ? position : 0;\n    return position;\n  }\n\n  /**\n   * Change the list of projections depending on the projections of Lambert\n   * @param coordinates An array of numbers, longitude and latitude\n   */\n  checkLambert(coordinates: [number, number]) {\n    const lambertProjections = this.config.getConfig('projections');\n    lambertProjections.forEach(projection => {\n        let modifiedProj = this.projections$.value;\n        const extent = projection.extent;\n        const code = projection.code.match(/\\d+/);\n        const currentExtentWGS = olproj.transformExtent(extent, projection.code, this.defaultProj.code);\n        if (coordinates[0] < currentExtentWGS[0] || coordinates[0] > currentExtentWGS[2] ||\n            coordinates[1] < currentExtentWGS[1] || coordinates[1] > currentExtentWGS[3]) {\n            this.inLambert2[code] = false;\n            if (this.inputProj.alias === projection.alias) {\n              this.inputProj = this.projections$.value[0];\n            }\n            modifiedProj = modifiedProj.filter(p => p.alias !== projection.alias);\n            this.projections$.next(modifiedProj);\n        }\n        else {\n            if (!this.inLambert2[code]) {\n                this.projections$.next(modifiedProj.concat(projection));\n                this.inLambert2[code] = true;\n            }\n        }\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { ToolComponent } from '@igo2/common';\n\n@ToolComponent({\n  name: 'advancedMap',\n  title: 'igo.integration.tools.advancedMap',\n  icon: 'toolbox'\n})\n\n/**\n * Tool to handle the advanced map tools\n */\n@Component({\n  selector: 'igo-advanced-map-tool',\n  templateUrl: './advanced-map-tool.component.html',\n  styleUrls: ['./advanced-map-tool.component.scss']\n})\n\nexport class AdvancedMapToolComponent {\n\n}\n","<h4 class=\"nameOfTool\">{{'igo.integration.advanced-map-tool.advanced-swipe.swipe-tool' | translate}}</h4>\n<igo-advanced-swipe></igo-advanced-swipe>\n<mat-divider class=\"advanced-tool-line\"></mat-divider>\n\n<h4 class=\"nameOfTool\">{{'igo.integration.advanced-map-tool.advanced-coordinates.coordinates' | translate}}</h4>\n<igo-advanced-coordinates></igo-advanced-coordinates>\n<mat-divider class=\"advanced-tool-line\"></mat-divider>\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { IgoLanguageModule } from '@igo2/core';\nimport {\n  IgoLayerModule,\n  IgoMetadataModule,\n  IgoDownloadModule,\n  IgoFilterModule,\n  IgoImportExportModule\n} from '@igo2/geo';\nimport { IgoContextModule } from '@igo2/context';\nimport { MapDetailsToolComponent } from './map-details-tool/map-details-tool.component';\nimport { MapToolComponent } from './map-tool/map-tool.component';\nimport { MapToolsComponent } from './map-tools/map-tools.component';\nimport { MapLegendToolComponent } from './map-legend/map-legend-tool.component';\nimport { IgoAppWorkspaceModule } from '../workspace/workspace.module';\nimport { AdvancedMapToolComponent } from './advanced-map-tool/advanced-map-tool.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { IgoSpinnerModule } from '@igo2/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdvancedSwipeComponent } from './advanced-map-tool/advanced-swipe/advanced-swipe.component';\nimport { AdvancedCoordinatesComponent } from './advanced-map-tool/advanced-coordinates/advanced-coordinates.component';\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonToggleModule,\n    MatDividerModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    IgoSpinnerModule,\n    CommonModule,\n    MatTabsModule,\n    MatListModule,\n    MatIconModule,\n    IgoLanguageModule,\n    IgoLayerModule,\n    IgoMetadataModule,\n    IgoDownloadModule,\n    IgoImportExportModule,\n    IgoFilterModule,\n    IgoContextModule,\n    IgoAppWorkspaceModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  declarations: [ AdvancedMapToolComponent, MapToolComponent,\n    MapToolsComponent, MapDetailsToolComponent, MapLegendToolComponent, AdvancedSwipeComponent, AdvancedCoordinatesComponent],\n  exports: [AdvancedMapToolComponent, MapToolComponent, MapToolsComponent, MapDetailsToolComponent, MapLegendToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppMapModule {\n  static forRoot(): ModuleWithProviders<IgoAppMapModule> {\n    return {\n      ngModule: IgoAppMapModule,\n      providers: []\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { FeatureStore, FeatureWithMeasure } from '@igo2/geo';\nimport { MapState } from '../map/map.state';\n\n/**\n * Service that holds the state of the measure module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeasureState {\n\n  /**\n   * Store that holds the measures\n   */\n  public store: FeatureStore<FeatureWithMeasure> = new FeatureStore<FeatureWithMeasure>([], {\n    map: this.mapState.map\n  });\n\n  constructor(private mapState: MapState) {\n\n    this.mapState.map.layers$.subscribe((layers) => {\n      if ((layers.filter(l => l.id.startsWith('igo-measures-')).length === 0)) {\n        this.store.deleteMany(this.store.all());\n        this.mapState.map.ol.getOverlays().getArray()\n          .filter(overlay => (overlay as any).options.className.includes('igo-map-tooltip'))\n          .map(overlay => this.mapState.map.ol.removeOverlay(overlay));\n      }\n    });\n  }\n\n}\n","import {\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { FeatureStore, FeatureWithMeasure, IgoMap } from '@igo2/geo';\nimport { MapState } from '../../map/map.state';\nimport { MeasureState } from '../measure.state';\n\n/**\n * Tool to measure lengths and areas\n */\n@ToolComponent({\n  name: 'measurer',\n  title: 'igo.integration.tools.measurer',\n  icon: 'ruler'\n})\n@Component({\n  selector: 'igo-measurer-tool',\n  templateUrl: './measurer-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MeasurerToolComponent {\n\n  /**\n   * Map to measure on\n   * @internal\n   */\n  get store(): FeatureStore<FeatureWithMeasure> { return this.measureState.store; }\n\n  /**\n   * Map to measure on\n   * @internal\n   */\n  get map(): IgoMap { return this.mapState.map; }\n\n  constructor(\n    private measureState: MeasureState,\n    private mapState: MapState\n  ) {}\n\n}\n","<igo-measurer [store]=\"store\" [map]=\"map\"></igo-measurer>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { IgoMeasurerModule } from '@igo2/geo';\n\nimport { MeasurerToolComponent } from './measurer-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    IgoMeasurerModule\n  ],\n  declarations: [MeasurerToolComponent],\n  exports: [MeasurerToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppMeasurerToolModule {}\n","import { NgModule } from '@angular/core';\n\nimport { IgoAppMeasurerToolModule } from './measurer-tool/measurer-tool.module';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [\n    IgoAppMeasurerToolModule\n  ]\n})\nexport class IgoAppMeasureModule {}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { IgoMap } from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\n\n@ToolComponent({\n  name: 'print',\n  title: 'igo.integration.tools.print',\n  icon: 'printer'\n})\n@Component({\n  selector: 'igo-print-tool',\n  templateUrl: './print-tool.component.html'\n})\nexport class PrintToolComponent {\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  constructor(private mapState: MapState) {}\n}\n","<igo-print [map]=\"map\"></igo-print>\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\n\nimport { IgoPrintModule } from '@igo2/geo';\nimport { PrintToolComponent } from './print-tool/print-tool.component';\n\n@NgModule({\n  imports: [IgoPrintModule],\n  declarations: [PrintToolComponent],\n  exports: [PrintToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppPrintModule {\n  static forRoot(): ModuleWithProviders<IgoAppPrintModule> {\n    return {\n      ngModule: IgoAppPrintModule,\n      providers: []\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { EntityRecord, EntityStore, EntityStoreFilterCustomFuncStrategy, EntityStoreStrategyFuncOptions } from '@igo2/common';\nimport { ConfigService, StorageService } from '@igo2/core';\nimport { SearchResult, SearchSourceService, SearchSource, CommonVectorStyleOptions } from '@igo2/geo';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n/**\n * Service that holds the state of the search module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchState {\n  public searchOverlayStyle: CommonVectorStyleOptions = {};\n  public searchOverlayStyleSelection: CommonVectorStyleOptions = {};\n  public searchOverlayStyleFocus: CommonVectorStyleOptions = {};\n\n  public focusedOrResolution$$: Subscription;\n  public selectedOrResolution$$: Subscription;\n\n  readonly searchTermSplitter$: BehaviorSubject<string> = new BehaviorSubject('|');\n\n  readonly searchTerm$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly searchType$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly searchDisabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly searchResultsGeometryEnabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly searchSettingsChange$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n\n  readonly selectedResult$: BehaviorSubject<SearchResult> = new BehaviorSubject(undefined);\n\n  /**\n   * Store that holds the search results\n   */\n  readonly store: EntityStore<SearchResult> = new EntityStore<SearchResult>([]);\n\n  /**\n   * Search types currently enabled in the search source service\n   */\n  get searchTypes(): string[] {\n    return this.searchSourceService\n      .getEnabledSources()\n      .map((source: SearchSource) => (source.constructor as any).type);\n  }\n\n  constructor(\n    private searchSourceService: SearchSourceService,\n    private storageService: StorageService,\n    private configService: ConfigService) {\n    const searchOverlayStyle = this.configService.getConfig('searchOverlayStyle') as {\n      base?: CommonVectorStyleOptions,\n      selection?: CommonVectorStyleOptions,\n      focus?: CommonVectorStyleOptions\n    };\n    if (searchOverlayStyle) {\n      this.searchOverlayStyle = searchOverlayStyle.base;\n      this.searchOverlayStyleSelection = searchOverlayStyle.selection;\n      this.searchOverlayStyleFocus = searchOverlayStyle.focus;\n    }\n\n    const searchResultsGeometryEnabled = this.storageService.get('searchResultsGeometryEnabled') as boolean;\n    if (searchResultsGeometryEnabled) {\n      this.searchResultsGeometryEnabled$.next(searchResultsGeometryEnabled);\n    }\n    this.store.addStrategy(this.createCustomFilterTermStrategy(), false);\n  }\n\n  private createCustomFilterTermStrategy(): EntityStoreFilterCustomFuncStrategy {\n    const filterClauseFunc = (record: EntityRecord<SearchResult>) => {\n      return record.entity.meta.score === 100;\n    };\n    return new EntityStoreFilterCustomFuncStrategy({filterClauseFunc} as EntityStoreStrategyFuncOptions);\n  }\n\n  /**\n   * Activate custom strategy\n   *\n   */\n  activateCustomFilterTermStrategy() {\n    const strategy = this.store.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n    if (strategy !== undefined) {\n      strategy.activate();\n    }\n  }\n\n  /**\n   * Deactivate custom strategy\n   *\n   */\n  deactivateCustomFilterTermStrategy() {\n    const strategy = this.store.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n    if (strategy !== undefined) {\n      strategy.deactivate();\n    }\n  }\n\n  enableSearch() {\n    this.searchDisabled$.next(false);\n  }\n\n  disableSearch() {\n    this.searchDisabled$.next(true);\n  }\n\n  setSearchTerm(searchTerm: string) {\n    this.searchTerm$.next(searchTerm);\n  }\n\n  setSearchType(searchType: string) {\n    this.searchSourceService.enableSourcesByType(searchType);\n    this.searchType$.next(searchType);\n  }\n\n  setSearchSettingsChange() {\n    this.searchSettingsChange$.next(true);\n  }\n\n  setSelectedResult(result: SearchResult) {\n    this.selectedResult$.next(result);\n  }\n\n  setSearchResultsGeometryStatus(value) {\n    this.storageService.set('searchResultsGeometryEnabled', value);\n    this.searchResultsGeometryEnabled$.next(value);\n  }\n}\n","import { Directive, Self, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { SearchBarComponent } from '@igo2/geo';\nimport { SearchState } from '../search.state';\n\n@Directive({\n  selector: '[igoSearchBarBinding]'\n})\nexport class SearchBarBindingDirective implements OnInit, OnDestroy {\n\n  get searchTerm(): string { return this.searchState.searchTerm$.value; }\n  get searchType(): string { return this.searchState.searchType$.value; }\n\n  private searchTerm$$: Subscription;\n  private searchType$$: Subscription;\n  private searchDisabled$$: Subscription;\n\n  constructor(\n    @Self() private component: SearchBarComponent,\n    private searchState: SearchState\n  ) {}\n\n  ngOnInit() {\n    this.searchTerm$$ = this.searchState.searchTerm$.subscribe((searchTerm: string) => {\n      if (searchTerm !== undefined && searchTerm !== null) {\n        this.component.setTerm(searchTerm);\n      }\n    });\n\n    this.searchType$$ = this.searchState.searchType$.subscribe((searchType: string) => {\n      if (searchType !== undefined && searchType !== null) {\n        this.component.setSearchType(searchType);\n      }\n    });\n\n    this.searchDisabled$$ = this.searchState.searchDisabled$.subscribe((searchDisabled: boolean) => {\n      this.component.disabled = searchDisabled;\n    });\n  }\n\n  ngOnDestroy() {\n    this.searchTerm$$.unsubscribe();\n    this.searchType$$.unsubscribe();\n    this.searchDisabled$$.unsubscribe();\n  }\n\n  @HostListener('searchTermChange', ['$event'])\n  onSearchTermChange(searchTerm?: string) {\n    if (searchTerm !== this.searchTerm) {\n      this.searchState.setSearchTerm(searchTerm);\n    }\n  }\n\n  @HostListener('searchTypeChange', ['$event'])\n  onSearchTypeChange(searchType?: string) {\n    if (searchType !== this.searchType) {\n      this.searchState.setSearchType(searchType);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { IgoSearchModule } from '@igo2/geo';\n\nimport { SearchBarBindingDirective } from './search-bar-binding.directive';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [IgoSearchModule],\n  declarations: [SearchBarBindingDirective],\n  exports: [SearchBarBindingDirective],\n})\nexport class IgoAppSearchBarModule {}\n","<div *ngIf=\"!store || store.stateView.empty\" style=\"margin: 10px;\">\n  <section class=\"mat-typography\">\n    <h4><strong>{{ 'igo.integration.searchResultsTool.noResults' | translate }}</strong></h4>\n    <p><strong>{{ 'igo.integration.searchResultsTool.doSearch' | translate }}</strong></p>\n    <div [innerHTML]=\"'igo.integration.searchResultsTool.examples' | translate | sanitizeHtml\"></div>\n</section>\n</div>\n\n<igo-flexible\n  *ngIf=\"store && (store.stateView.empty$ | async)===false\"\n  #topPanel\n  initial=\"100%\"\n  initialMobile=\"100%\"\n  collapsed=\"calc(100% - 58px)\"\n  collapsedMobile=\"calc(100% - 58px)\"\n  expanded=\"60%\"\n  expandedMobile=\"60%\"\n  [state]=\"(feature$ | async) ? topPanelState : 'initial'\">\n\n  <div class=\"igo-content\">\n    <igo-search-results\n      [store]=\"store\"\n      [showIcons]=\"showIcons\"\n      [term]=\"term\"\n      [termSplitter]=\"termSplitter\"\n      [settingsChange$]=\"settingsChange$\"\n      placeholder=\"false\"\n      (resultFocus)=\"onResultFocus($event)\"\n      (resultSelect)=\"onResultSelect($event)\"\n      (resultUnfocus)=\"onResultUnfocus($event)\"\n      (resultMouseenter)=\"onResultFocus($event)\"\n      (resultMouseleave)=\"onResultUnfocus($event)\"\n      (moreResults)=\"onSearch($event)\">\n      <ng-template #igoSearchItemToolbar let-result=\"result\">\n        <igo-search-add-button\n          [map]=\"map\"\n          [layer]=\"result\">\n        </igo-search-add-button>\n      </ng-template>\n    </igo-search-results>\n  </div>\n\n  <div igoFlexibleFill class=\"igo-content\">\n    <igo-panel [title]=\"featureTitle\" *ngIf=\"feature$ | async\">\n\n      <button\n        mat-icon-button\n        panelLeftButton\n        class=\"igo-icon-button\"\n        (click)=\"toggleTopPanel()\">\n        <mat-icon [svgIcon]=\"(topPanelState$ | async) === 'collapsed' ? 'arrow-up' : 'arrow-down'\"></mat-icon>\n      </button>\n\n      <button\n        *ngIf=\"feature.geometry\"\n        mat-icon-button\n        panelRightButton\n        class=\"igo-icon-button\"\n        [matTooltip]=\"((isSelectedResultOutOfView$ | async) ? 'igo.integration.searchResultsTool.zoomOnFeatureTooltipOutOfView' : 'igo.integration.searchResultsTool.zoomOnFeatureTooltip') | translate\"\n        matTooltipShowDelay=\"500\"\n        (click)=\"zoomToFeatureExtent()\">\n        <mat-icon\n        [matBadge]=\"(isSelectedResultOutOfView$ | async) ? '!' : ''\"\n        matBadgeColor=\"accent\"\n        matBadgeSize=\"small\"\n        [matBadgeHidden]=\"(isSelectedResultOutOfView$ | async)===false\"     \n        svgIcon=\"magnify-plus-outline\"></mat-icon>\n      </button>\n\n      <igo-feature-details\n        igoFeatureDetailsDirective\n        [feature]=\"feature$ | async\"\n        [map]=\"map\"\n        [toolbox]=\"toolState.toolbox\"\n        (routingEvent)=\"getRoute()\">\n      </igo-feature-details>\n    </igo-panel>\n  </div>\n\n</igo-flexible>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit,\n  ElementRef,\n  OnDestroy\n} from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olFeature from 'ol/Feature';\nimport olPoint from 'ol/geom/Point';\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\n\nimport pointOnFeature from '@turf/point-on-feature';\n\nimport { ConfigService } from '@igo2/core';\n\nimport {\n  EntityStore,\n  ToolComponent,\n  FlexibleState,\n  getEntityTitle,\n  FlexibleComponent,\n  EntityState\n} from '@igo2/common';\n\nimport {\n  FEATURE,\n  Feature,\n  FeatureMotion,\n  SearchResult,\n  IgoMap,\n  moveToOlFeatures,\n  Research,\n  featuresAreTooDeepInView,\n  featureToOl,\n  featureFromOl,\n  getCommonVectorStyle,\n  getCommonVectorSelectedStyle,\n  computeOlFeaturesExtent,\n  featuresAreOutOfView\n} from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\n\nimport { SearchState } from '../search.state';\nimport { ToolState } from '../../tool/tool.state';\nimport { DirectionState } from '../../directions/directions.state';\n\n/**\n * Tool to browse the search results\n */\n@ToolComponent({\n  name: 'searchResults',\n  title: 'igo.integration.tools.searchResults',\n  icon: 'magnify'\n})\n@Component({\n  selector: 'igo-search-results-tool',\n  templateUrl: './search-results-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchResultsToolComponent implements OnInit, OnDestroy {\n  /**\n   * to show hide results icons\n   */\n  @Input() showIcons: boolean = true;\n\n  private hasFeatureEmphasisOnSelection: boolean = false;\n\n  private showResultsGeometries$$: Subscription;\n  private getRoute$$: Subscription;\n  private shownResultsGeometries: Feature[] = [];\n  private shownResultsEmphasisGeometries: Feature[] = [];\n  private focusedResult$: BehaviorSubject<SearchResult> = new BehaviorSubject(\n    undefined\n  );\n  public isSelectedResultOutOfView$ = new BehaviorSubject(false);\n  private isSelectedResultOutOfView$$: Subscription;\n  private abstractFocusedResult: Feature;\n  private abstractSelectedResult: Feature;\n\n  /**\n   * Store holding the search results\n   * @internal\n   */\n  get store(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  /**\n   * Map to display the results on\n   * @internal\n   */\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get featureTitle(): string {\n    return this.feature ? getEntityTitle(this.feature) : undefined;\n  }\n\n  get feature$(): Observable<Feature> {\n    return this.store.stateView\n      .firstBy$((e) => e.state.focused)\n      .pipe(\n        map(\n          (element) =>\n          (this.feature = element\n            ? (element.entity.data as Feature)\n            : undefined)\n        )\n      );\n  }\n\n  public feature: Feature;\n\n  public term = '';\n  private searchTerm$$: Subscription;\n\n  public settingsChange$ = new BehaviorSubject<boolean>(undefined);\n\n  public topPanelState$ = new BehaviorSubject<FlexibleState>('initial');\n  private topPanelState$$: Subscription;\n\n  @Input()\n  set topPanelState(value: FlexibleState) {\n    this.topPanelState$.next(value);\n  }\n  get topPanelState(): FlexibleState {\n    return this.topPanelState$.value;\n  }\n\n  get termSplitter(): string {\n    return this.searchState.searchTermSplitter$.value;\n  }\n\n  private format = new olFormatGeoJSON();\n\n  constructor(\n    private mapState: MapState,\n    private searchState: SearchState,\n    private elRef: ElementRef,\n    public toolState: ToolState,\n    private directionState: DirectionState,\n    configService: ConfigService\n  ) {\n    this.hasFeatureEmphasisOnSelection = configService.getConfig(\n      'hasFeatureEmphasisOnSelection'\n    );\n  }\n\n  ngOnInit() {\n    this.searchTerm$$ = this.searchState.searchTerm$.subscribe(\n      (searchTerm: string) => {\n        if (searchTerm !== undefined && searchTerm !== null) {\n          this.term = searchTerm;\n        }\n      }\n    );\n\n    for (const res of this.store.stateView.all$().value) {\n      if (this.store.state.get(res.entity).selected === true) {\n        this.topPanelState = 'expanded';\n      }\n    }\n\n    this.searchState.searchSettingsChange$.subscribe(() => {\n      this.settingsChange$.next(true);\n    });\n\n    this.topPanelState$$ = this.topPanelState$.subscribe(() => {\n      const igoList = this.computeElementRef()[0];\n      const selected = this.computeElementRef()[1];\n      if (selected) {\n        setTimeout(() => {\n          // To be sure the flexible component has been displayed yet\n          if (!this.isScrolledIntoView(igoList, selected)) {\n            this.adjustTopPanel(igoList, selected);\n          }\n        }, FlexibleComponent.transitionTime + 50);\n      }\n    });\n\n    if (this.hasFeatureEmphasisOnSelection) {\n      if (!this.searchState.focusedOrResolution$$) {\n        this.searchState.focusedOrResolution$$ = combineLatest([\n          this.focusedResult$,\n          this.map.viewController.resolution$\n        ]).subscribe((bunch: [SearchResult<Feature>, number]) =>\n          this.buildResultEmphasis(bunch[0], 'focused')\n        );\n      }\n\n      if (!this.searchState.selectedOrResolution$$) {\n        this.searchState.selectedOrResolution$$ = combineLatest([\n          this.searchState.selectedResult$,\n          this.map.viewController.resolution$\n        ]).subscribe((bunch: [SearchResult<Feature>, number]) =>\n          this.buildResultEmphasis(bunch[0], 'selected')\n        );\n      }\n    }\n    this.monitorResultOutOfView();\n\n    this.showResultsGeometries$$ = combineLatest([\n      this.searchState.searchResultsGeometryEnabled$,\n      this.store.stateView.all$(),\n      this.focusedResult$,\n      this.searchState.selectedResult$,\n      this.searchState.searchTerm$,\n      this.map.viewController.resolution$\n    ]).subscribe((bunch: [boolean, { entity: SearchResult, state: EntityState }[], SearchResult, SearchResult, string, number]) => {\n\n      const searchResultsGeometryEnabled = bunch[0];\n      const searchResults = bunch[1];\n\n      if (this.hasFeatureEmphasisOnSelection) {\n        this.clearFeatureEmphasis('shown');\n      }\n      this.shownResultsGeometries.map(result => this.map.queryResultsOverlay.removeFeature(result));\n      const featureToHandleGeom = searchResults\n        .filter(result =>\n          result.entity.meta.dataType === FEATURE &&\n          result.entity.data.geometry &&\n          !result.state.selected &&\n          !result.state.focused);\n\n      featureToHandleGeom.map(result => {\n        if (searchResultsGeometryEnabled) {\n          result.entity.data.meta.style =\n            getCommonVectorStyle(\n              Object.assign(\n                {},\n                { feature: result.entity.data as Feature | olFeature<OlGeometry> },\n                this.searchState.searchOverlayStyle,\n                result.entity.style?.base ? result.entity.style.base : {}\n              ));\n          this.shownResultsGeometries.push(result.entity.data as Feature);\n          this.map.queryResultsOverlay.addFeature(result.entity.data as Feature, FeatureMotion.None);\n          if (this.hasFeatureEmphasisOnSelection) {\n            this.buildResultEmphasis(result.entity as SearchResult<Feature>, 'shown');\n          }\n        }\n      });\n    });\n  }\n\n  private monitorResultOutOfView() {\n    this.isSelectedResultOutOfView$$ = combineLatest([\n      this.map.viewController.state$,\n      this.searchState.selectedResult$\n    ])\n      .pipe(debounceTime(100))\n      .subscribe((bunch) => {\n        const selectedResult = bunch[1] as SearchResult<Feature>;\n        if (!selectedResult) {\n          this.isSelectedResultOutOfView$.next(false);\n          return;\n        }\n        if (selectedResult.data.geometry) {\n          const selectedOlFeature = featureToOl(\n            selectedResult.data,\n            this.map.projection\n          );\n          const selectedOlFeatureExtent = computeOlFeaturesExtent(this.map, [\n            selectedOlFeature\n          ]);\n          this.isSelectedResultOutOfView$.next(\n            featuresAreOutOfView(this.map, selectedOlFeatureExtent)\n          );\n        }\n      });\n  }\n\n  private buildResultEmphasis(\n    result: SearchResult<Feature>,\n    trigger: 'selected' | 'focused' | 'shown' | undefined\n  ) {\n    if (trigger !== 'shown') {\n      this.clearFeatureEmphasis(trigger);\n    }\n    if (!result || !result.data.geometry) {\n      return;\n    }\n    const myOlFeature = featureToOl(result.data, this.map.projection);\n    const olGeometry = myOlFeature.getGeometry();\n    if (featuresAreTooDeepInView(this.map, olGeometry.getExtent() as [number, number, number, number], 0.0025)) {\n      const extent = olGeometry.getExtent();\n      const x = extent[0] + (extent[2] - extent[0]) / 2;\n      const y = extent[1] + (extent[3] - extent[1]) / 2;\n      const feature1 = new olFeature({\n        name: `${trigger}AbstractResult'`,\n        geometry: new olPoint([x, y])\n      });\n      const abstractResult = featureFromOl(feature1, this.map.projection);\n\n      let computedStyle;\n      let zIndexOffset = 0;\n\n      switch (trigger) {\n        case 'focused':\n          computedStyle = getCommonVectorSelectedStyle(\n            Object.assign({},\n              { feature: abstractResult },\n              this.searchState.searchOverlayStyleFocus,\n              result.style?.focus ? result.style.focus : {}));\n          zIndexOffset = 2;\n          break;\n        case 'shown':\n          computedStyle = getCommonVectorStyle(Object.assign({},\n            { feature: abstractResult },\n            this.searchState.searchOverlayStyle,\n            result.style?.base ? result.style.base : {}));\n          break;\n        case 'selected':\n          computedStyle = getCommonVectorSelectedStyle(\n            Object.assign({},\n              { feature: abstractResult },\n              this.searchState.searchOverlayStyleSelection,\n              result.style?.selection ? result.style.selection : {}));\n          zIndexOffset = 1;\n          break;\n      }\n      abstractResult.meta.style = computedStyle;\n      abstractResult.meta.style.setZIndex(2000 + zIndexOffset);\n      this.map.searchResultsOverlay.addFeature(abstractResult, FeatureMotion.None);\n      if (trigger === 'focused') {\n        this.abstractFocusedResult = abstractResult;\n      }\n      if (trigger === 'selected') {\n        this.abstractSelectedResult = abstractResult;\n      }\n      if (trigger === 'shown') {\n        this.shownResultsEmphasisGeometries.push(abstractResult);\n      }\n    } else {\n      this.clearFeatureEmphasis(trigger);\n    }\n  }\n\n  private clearFeatureEmphasis(trigger: 'selected' | 'focused' | 'shown') {\n    if (trigger === 'focused' && this.abstractFocusedResult) {\n      this.map.searchResultsOverlay.removeFeature(this.abstractFocusedResult);\n      this.abstractFocusedResult = undefined;\n    }\n    if (trigger === 'selected' && this.abstractSelectedResult) {\n      this.map.searchResultsOverlay.removeFeature(this.abstractSelectedResult);\n      this.abstractSelectedResult = undefined;\n    }\n    if (trigger === 'shown') {\n      this.shownResultsEmphasisGeometries.map(shownResult => this.map.searchResultsOverlay.removeFeature(shownResult));\n      this.shownResultsEmphasisGeometries = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.topPanelState$$.unsubscribe();\n    this.searchTerm$$.unsubscribe();\n    if (this.isSelectedResultOutOfView$$) {\n      this.isSelectedResultOutOfView$$.unsubscribe();\n    }\n    if (this.showResultsGeometries$$) {\n      this.showResultsGeometries$$.unsubscribe();\n    }\n    if (this.getRoute$$) {\n      this.getRoute$$.unsubscribe();\n    }\n  }\n\n  /**\n   * Try to add a feature to the map when it's being focused\n   * @internal\n   * @param result A search result that could be a feature\n   */\n  onResultFocus(result: SearchResult) {\n    this.focusedResult$.next(result);\n    if (result.meta.dataType === FEATURE && result.data.geometry) {\n      result.data.meta.style = getCommonVectorSelectedStyle(\n        Object.assign({},\n          { feature: result.data as Feature | olFeature<OlGeometry> },\n          this.searchState.searchOverlayStyleFocus,\n          result.style?.focus ? result.style.focus : {}));\n\n      const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n      if (feature) {\n        feature.setStyle(result.data.meta.style);\n        return;\n      }\n      this.map.searchResultsOverlay.addFeature(result.data as Feature, FeatureMotion.None);\n    }\n  }\n\n  onResultUnfocus(result: SearchResult) {\n    this.focusedResult$.next(undefined);\n    if (result.meta.dataType !== FEATURE) {\n      return;\n    }\n\n    if (this.store.state.get(result).selected === true) {\n      const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n      if (feature) {\n        const style = getCommonVectorSelectedStyle(\n          Object.assign({},\n            { feature: result.data as Feature | olFeature<OlGeometry> },\n            this.searchState.searchOverlayStyleFocus,\n            result.style?.focus ? result.style.focus : {}));\n        feature.setStyle(style);\n      }\n      return;\n    }\n    this.map.searchResultsOverlay.removeFeature(result.data as Feature);\n  }\n\n  /**\n   * Try to add a feature to the map when it's being selected\n   * @internal\n   * @param result A search result that could be a feature or some layer options\n   */\n  onResultSelect(result: SearchResult) {\n    this.map.searchResultsOverlay.dataSource.ol.clear();\n    this.tryAddFeatureToMap(result);\n    this.searchState.setSelectedResult(result);\n\n    if (this.topPanelState === 'expanded') {\n      const igoList = this.computeElementRef()[0];\n      const selected = this.computeElementRef()[1];\n      setTimeout(() => {\n        // To be sure the flexible component has been displayed yet\n        if (!this.isScrolledIntoView(igoList, selected)) {\n          this.adjustTopPanel(igoList, selected);\n        }\n      }, FlexibleComponent.transitionTime + 50);\n    }\n\n    if (this.topPanelState === 'initial') {\n      this.topPanelState = 'expanded';\n    }\n  }\n\n  onSearch(event: { research: Research; results: SearchResult[] }) {\n    const results = event.results;\n    const newResults = this.store.entities$.value\n      .filter((result: SearchResult) => result.source !== event.research.source)\n      .concat(results);\n\n    this.store.load(newResults);\n\n    for (const res of this.store.all()) {\n      if (\n        this.store.state.get(res).focused === true &&\n        this.store.state.get(res).selected !== true\n      ) {\n        this.store.state.update(res, { focused: false }, true);\n      }\n    }\n\n    setTimeout(() => {\n      const igoList = this.elRef.nativeElement.querySelector('igo-list');\n      let moreResults;\n      event.research.request.subscribe((source) => {\n        if (!source[0] || !source[0].source) {\n          moreResults = null;\n        } else if (source[0].source.getId() === 'icherche') {\n          moreResults = igoList.querySelector('.icherche .moreResults');\n        } else if (source[0].source.getId() === 'ilayer') {\n          moreResults = igoList.querySelector('.ilayer .moreResults');\n        } else if (source[0].source.getId() === 'nominatim') {\n          moreResults = igoList.querySelector('.nominatim .moreResults');\n        } else {\n          moreResults = igoList.querySelector('.' + source[0].source.getId() + ' .moreResults');\n        }\n\n        if (\n          moreResults !== null &&\n          !this.isScrolledIntoView(igoList, moreResults)\n        ) {\n          igoList.scrollTop =\n            moreResults.offsetTop +\n            moreResults.offsetHeight -\n            igoList.clientHeight;\n        }\n      });\n    }, 250);\n  }\n\n  computeElementRef() {\n    const items = document.getElementsByTagName('igo-search-results-item');\n    const igoList = this.elRef.nativeElement.getElementsByTagName(\n      'igo-list'\n    )[0];\n    let selectedItem;\n    // eslint-disable-next-line\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].className.includes('igo-list-item-selected')) {\n        selectedItem = items[i];\n      }\n    }\n    return [igoList, selectedItem];\n  }\n\n  adjustTopPanel(elemSource, elem) {\n    if (!this.isScrolledIntoView(elemSource, elem)) {\n      elemSource.scrollTop =\n        elem.offsetTop +\n        elem.children[0].offsetHeight -\n        elemSource.clientHeight;\n    }\n  }\n\n  toggleTopPanel() {\n    if (this.topPanelState === 'expanded') {\n      this.topPanelState = 'collapsed';\n    } else {\n      this.topPanelState = 'expanded';\n    }\n  }\n\n  zoomToFeatureExtent() {\n    if (this.feature.geometry) {\n      const localOlFeature = this.format.readFeature(this.feature, {\n        dataProjection: this.feature.projection,\n        featureProjection: this.map.projection\n      });\n      moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Zoom);\n    }\n  }\n\n  /**\n   * Try to add a feature to the map overlay\n   * @param result A search result that could be a feature\n   */\n  private tryAddFeatureToMap(result: SearchResult) {\n    if (result.meta.dataType !== FEATURE) {\n      return undefined;\n    }\n    const feature = (result as SearchResult<Feature>).data;\n\n    // Somethimes features have no geometry. It happens with some GetFeatureInfo\n    if (!feature.geometry) {\n      return;\n    }\n\n    feature.meta.style = getCommonVectorSelectedStyle(\n      Object.assign({},\n        { feature },\n        this.searchState.searchOverlayStyleSelection,\n        result.style?.selection ? result.style.selection : {}));\n\n    this.map.searchResultsOverlay.addFeature(feature);\n  }\n\n  isScrolledIntoView(elemSource, elem) {\n    const padding = 6;\n    const docViewTop = elemSource.scrollTop;\n    const docViewBottom = docViewTop + elemSource.clientHeight;\n\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.clientHeight + padding;\n    return elemBottom <= docViewBottom && elemTop >= docViewTop;\n  }\n\n  getRoute() {\n    this.toolState.toolbox.activateTool('directions');\n    this.directionState.stopsStore.clearStops();\n    setTimeout(() => {\n      let routingCoordLoaded = false;\n      if (this.getRoute$$) { this.getRoute$$.unsubscribe(); }\n      this.getRoute$$ = this.directionState.stopsStore.storeInitialized$.subscribe((init: boolean) => {\n        if (this.directionState.stopsStore.storeInitialized$.value && !routingCoordLoaded) {\n          routingCoordLoaded = true;\n          const stop = this.directionState.stopsStore.all().find((e) => e.position === 1);\n          let coord;\n          if (this.feature.geometry) {\n            if (this.feature.geometry.type === 'Point') {\n              coord = [this.feature.geometry.coordinates[0], this.feature.geometry.coordinates[1]];\n            } else {\n              const point = pointOnFeature(this.feature.geometry);\n              coord = [point.geometry.coordinates[0], point.geometry.coordinates[1]];\n            }\n          }\n          stop.text = this.featureTitle;\n          stop.coordinates = coord;\n          this.directionState.stopsStore.update(stop);\n        }\n      });\n    }, 250);\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoFlexibleModule, IgoCustomHtmlModule, IgoPanelModule } from '@igo2/common';\nimport {\n  IgoFeatureModule,\n  IgoSearchModule,\n  IgoFeatureDetailsModule\n} from '@igo2/geo';\n\nimport { SearchResultsToolComponent } from './search-results-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatButtonModule,\n    IgoLanguageModule,\n    IgoFeatureModule,\n    IgoSearchModule,\n    IgoFlexibleModule,\n    IgoPanelModule,\n    IgoFeatureDetailsModule,\n    IgoCustomHtmlModule\n  ],\n  declarations: [SearchResultsToolComponent],\n  exports: [SearchResultsToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppSearchResultsToolModule {}\n","import { NgModule } from '@angular/core';\n\nimport { IgoAppSearchBarModule } from './search-bar/search-bar.module';\nimport { IgoAppSearchResultsToolModule } from './search-results-tool/search-results-tool.module';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [\n   IgoAppSearchBarModule,\n   IgoAppSearchResultsToolModule\n  ],\n})\nexport class IgoAppSearchModule {}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\n\n@ToolComponent({\n  name: 'ogcFilter',\n  title: 'igo.integration.tools.ogcFilter',\n  icon: 'filter'\n})\n@Component({\n  selector: 'igo-ogc-filter-tool',\n  templateUrl: './ogc-filter-tool.component.html'\n})\nexport class OgcFilterToolComponent {\n  constructor() {}\n}\n","<igo-ogc-filterable-list igoOgcFilterableListBinding></igo-ogc-filterable-list>\n\n\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\n\n@ToolComponent({\n  name: 'timeFilter',\n  title: 'igo.integration.tools.timeFilter',\n  icon: 'history'\n})\n@Component({\n  selector: 'igo-time-filter-tool',\n  templateUrl: './time-filter-tool.component.html'\n})\nexport class TimeFilterToolComponent {\n  constructor() {}\n}\n","<igo-time-filter-list igoTimeFilterListBinding></igo-time-filter-list>\n","<igo-panel>\n  <igo-spatial-filter-type\n    [store]=\"spatialListStore\"\n    [selectedQueryType]=\"queryType\"\n    [zone]=\"zone\"\n    [layers]=\"activeLayers\"\n    (eventType)=\"getOutputType($event)\"\n    (eventQueryType)=\"getOutputQueryType($event)\"\n    (zoneChange)=\"onZoneChange($event)\"\n    (zoneWithBufferChange)=\"onZoneChange($event, true)\"\n    (bufferChange)=\"buffer = $event\"\n    (measureUnitChange)=\"measureUnit = $event\">\n  </igo-spatial-filter-type>\n\n  <igo-spatial-filter-item\n    [type]=\"type\"\n    [queryType]=\"queryType\"\n    [map]=\"map\"\n    [zone]=\"zone\"\n    [loading]=\"loading\"\n    [store]=\"store\"\n    [layers]=\"activeLayers\"\n    [allLayers]=\"layers\"\n    [thematicLength]=\"thematicLength\"\n    (radiusEvent)=\"buffer = $event\"\n    (bufferEvent)=\"buffer = $event\"\n    (measureUnitChange)=\"measureUnit = $event\"\n    (freehandControl)=\"freehandDrawIsActive = $event\"\n    (drawZoneEvent)=\"zone = $event\"\n    (zoneWithBufferChange)=\"onZoneChange($event, true)\"\n    (itemTypeChange)=\"itemType = $event\"\n    (thematicChange)=\"thematics = $event\"\n    (toggleSearch)=\"getOutputToggleSearch()\"\n    (clearButtonEvent)=\"clearMap()\"\n    (clearSearchEvent)=\"getOutputClearSearch()\"\n    (export)=\"activateExportTool()\"\n    (openWorkspace)=\"activateWorkspace()\"\n    (entityChange)=\"activateWorkspace($event)\">\n  </igo-spatial-filter-item>\n</igo-panel>\n\n<igo-panel>\n  <ng-container *ngIf=\"selectedFeature$ | async as feature\">\n    <igo-feature-details [feature]=\"feature\"></igo-feature-details>\n  </ng-container>\n</igo-panel>","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { Observable, forkJoin, Subject } from 'rxjs';\nimport { tap, take, takeUntil } from 'rxjs/operators';\n\nimport {\n  IgoMap,\n  DataSourceService,\n  LayerService,\n  Feature,\n  moveToOlFeatures,\n  FeatureMotion,\n  ClusterDataSource,\n  featureToOl,\n  DataSource,\n  QueryableDataSourceOptions,\n  SpatialFilterService,\n  SpatialFilterType,\n  SpatialFilterItemType,\n  SpatialFilterQueryType,\n  SpatialFilterThematic,\n  Layer,\n  createOverlayMarkerStyle,\n  ExportOptions,\n  MeasureLengthUnit\n} from '@igo2/geo';\nimport { EntityStore, ToolComponent } from '@igo2/common';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olSourceVector from 'ol/source/Vector';\nimport olSourceCluster from 'ol/source/Cluster';\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\nimport { BehaviorSubject } from 'rxjs';\nimport { MapState } from '../../map/map.state';\nimport { ImportExportMode, ImportExportState } from './../../import-export/import-export.state';\nimport * as olstyle from 'ol/style';\nimport { MessageService, LanguageService } from '@igo2/core';\nimport { ToolState } from '../../tool/tool.state';\nimport { WorkspaceState } from '../../workspace/workspace.state';\nimport { EventsKey } from 'ol/events';\n\n/**\n * Tool to apply spatial filter\n */\n@ToolComponent({\n  name: 'spatialFilter',\n  title: 'igo.integration.tools.spatialFilter',\n  icon: 'selection-marker'\n})\n/**\n * Spatial Filter Type\n */\n@Component({\n  selector: 'igo-spatial-filter-tool',\n  templateUrl: './spatial-filter-tool.component.html',\n  styleUrls: ['./spatial-filter-tool.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialFilterToolComponent implements OnInit, OnDestroy {\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  @Input() type: SpatialFilterType;\n  @Input() itemType: SpatialFilterItemType = SpatialFilterItemType.Address;\n  @Input() freehandDrawIsActive: boolean;\n\n  public layers: Layer[] = [];\n  public activeLayers: Layer[] = [];\n\n  public queryType: SpatialFilterQueryType;\n  public thematics: SpatialFilterThematic[];\n  public zone: Feature;\n  public zoneWithBuffer: Feature;\n  public buffer = 0;\n\n  public iterator = 1;\n\n  public selectedFeature$: BehaviorSubject<Feature> = new BehaviorSubject(\n    undefined\n  );\n\n  private format = new olFormatGeoJSON();\n\n  public store: EntityStore<Feature> = new EntityStore<Feature>([]); // Store to print results at the end\n\n  public spatialListStore: EntityStore<Feature> = new EntityStore<Feature>([]);\n\n  public loading = false;\n\n  public thematicLength = 0;\n\n  public measureUnit: MeasureLengthUnit = MeasureLengthUnit.Meters;\n  private unsubscribe$ = new Subject<void>();\n\n  private moveendKey: EventsKey;\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private spatialFilterService: SpatialFilterService,\n    private dataSourceService: DataSourceService,\n    private layerService: LayerService,\n    private mapState: MapState,\n    private messageService: MessageService,\n    private languageService: LanguageService,\n    private importExportState: ImportExportState,\n    private toolState: ToolState,\n    private workspaceState: WorkspaceState,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    for (const layer of this.map.layers) {\n      if (layer.title && layer.title.includes(this.languageService.translate.instant('igo.geo.spatialFilter.spatialFilter'))) {\n        this.layers.push(layer);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  getOutputType(event: SpatialFilterType) {\n    this.type = event;\n    this.queryType = undefined;\n  }\n\n  getOutputQueryType(event: SpatialFilterQueryType) {\n    this.queryType = event;\n    if (this.queryType) {\n      this.loadFilterList();\n    }\n  }\n\n  activateExportTool() {\n    const ids = [];\n    const re = new RegExp('^Zone \\\\d+');\n    for (const layer of this.layers) {\n      if (!layer.title.match(re)) {\n        ids.push(layer.id);\n      }\n    }\n    this.importExportState.setMode(ImportExportMode.export);\n    this.importExportState.setsExportOptions({ layers: ids } as ExportOptions);\n    this.toolState.toolbox.activateTool('importExport');\n  }\n\n  activateWorkspace(record?) {\n    let layerToOpenWks;\n    this.workspaceState.store.entities$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      if (!record && this.activeLayers.length && this.workspaceState.store.all().length > 1) {\n        if (this.itemType === SpatialFilterItemType.Thematics) {\n            for (const thematic of this.thematics) {\n              if (!thematic.zeroResults) {\n                layerToOpenWks = this.activeLayers.find(layer => layer.title.includes(thematic.name + ' ' + this.iterator.toString()));\n                break;\n              }\n          }\n        } else {\n            const title = 'Adresses ' + this.iterator.toString();\n            this.activeLayers.forEach((layer) => {\n              if (layer.title.includes(title)) {\n                layerToOpenWks = layer;\n              }\n            });\n        }\n\n        if (layerToOpenWks) {\n          this.workspaceState.workspacePanelExpanded = true;\n          this.workspaceState.setActiveWorkspaceById(layerToOpenWks.id);\n        }\n      } else if (record && this.activeLayers.length && this.workspaceState.store.all().length > 1) {\n        this.selectWorkspaceEntity(record);\n        this.moveendKey = this.map.ol.on('moveend', () => {\n          this.selectWorkspaceEntity(record);\n        });\n      }\n    });\n  }\n\n  private selectWorkspaceEntity(record) {\n    this.workspaceState.store.all().forEach(workspace => {\n      workspace.entityStore.state.updateAll({selected: false});\n      if (workspace.title.includes(record.added[0].meta.title)) {\n        this.workspaceState.setActiveWorkspaceById(workspace.id);\n        workspace.entityStore.state.updateMany(record.added, {selected: true});\n      }\n    });\n  }\n\n  private loadFilterList() {\n    this.spatialFilterService\n      .loadFilterList(this.queryType)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((features: Feature[]) => {\n        features.sort((a, b) => {\n          if (a.properties.nom < b.properties.nom) {\n            return -1;\n          }\n          if (a.properties.nom > b.properties.nom) {\n            return 1;\n          }\n          return 0;\n        });\n        this.spatialListStore.clear();\n        this.spatialListStore.load(features);\n      });\n  }\n\n  getOutputToggleSearch() {\n    this.loadThematics();\n  }\n\n  getOutputClearSearch() {\n    this.zone = undefined;\n    this.queryType = undefined;\n  }\n\n  clearMap() {\n    this.map.removeLayers(this.layers);\n    this.layers = [];\n    this.activeLayers = [];\n    this.thematicLength = 0;\n    this.iterator = 1;\n    if (this.type === SpatialFilterType.Predefined) {\n      this.zone = undefined;\n      this.queryType = undefined;\n    }\n  }\n\n  private loadThematics() {\n    this.loading = true;\n    let zeroResults = true;\n    let thematics;\n    if (this.buffer === 0 || this.type === SpatialFilterType.Point) {\n      this.tryAddFeaturesToMap([this.zone]);\n    }\n    if (this.itemType !== SpatialFilterItemType.Thematics) {\n      const theme: SpatialFilterThematic = {\n        name: ''\n      };\n      thematics = [theme];\n    } else {\n      thematics = this.thematics;\n    }\n    if (this.measureUnit === MeasureLengthUnit.Kilometers && this.type !== SpatialFilterType.Point) {\n      this.buffer = this.buffer * 1000;\n    }\n    if (this.type === SpatialFilterType.Polygon) {\n      this.buffer = 0; // to avoid buffer enter a second time in terrAPI\n    }\n\n    const observables$: Observable<Feature[]>[] = [];\n    thematics.forEach(thematic => {\n      observables$.push(\n        this.spatialFilterService\n          .loadFilterItem(\n            this.zone,\n            this.itemType,\n            this.queryType,\n            thematic,\n            this.buffer\n          )\n          .pipe(\n            tap((features: Feature[]) => {\n              this.store.insertMany(features);\n              const featuresPoint: Feature[] = [];\n              const featuresLinePoly: Feature[] = [];\n              let idPoint;\n              let idLinePoly;\n              features.forEach(feature => {\n                if (feature.geometry.type === 'Point') {\n                  feature.properties.longitude = feature.geometry.coordinates[0];\n                  feature.properties.latitude = feature.geometry.coordinates[1];\n                  featuresPoint.push(feature);\n                  idPoint = feature.meta.id;\n                } else {\n                  featuresLinePoly.push(feature);\n                  idLinePoly = feature.meta.id;\n                }\n              });\n\n              this.tryAddPointToMap(featuresPoint, idPoint);\n              this.tryAddLayerToMap(featuresLinePoly, idLinePoly);\n              if (features.length) {\n                zeroResults = false;\n                this.thematicLength += 1;\n                thematic.zeroResults = false;\n                this.cdRef.detectChanges();\n              } else {\n                thematic.zeroResults = true;\n              }\n\n              if (features.length >= 10000) {\n                this.messageService.alert(\n                  this.languageService.translate.instant(\n                    'igo.geo.spatialFilter.maxSizeAlert'\n                  ),\n                  this.languageService.translate.instant(\n                    'igo.geo.spatialFilter.warning'\n                  ),\n                  { timeOut: 10000 }\n                );\n              }\n            })\n          )\n      );\n    });\n\n    forkJoin(observables$).pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.loading = false;\n      if (zeroResults) {\n        this.messageService.alert(\n          this.languageService.translate.instant(\n            'igo.geo.spatialFilter.zeroResults'\n          ),\n          this.languageService.translate.instant(\n            'igo.geo.spatialFilter.warning'\n          ),\n          { timeOut: 10000 }\n        );\n      }\n    });\n  }\n\n  onZoneChange(feature: Feature, buffer?: boolean) {\n    this.zone = feature;\n    if (feature) {\n      buffer ? this.tryAddFeaturesToMap([feature], true) : this.tryAddFeaturesToMap([feature]);\n      this.zoomToFeatureExtent(feature);\n    }\n  }\n\n  /**\n   * Try to add zone feature to the map overlay\n   */\n  public tryAddFeaturesToMap(features: Feature[], buffer?: boolean) {\n    let i = 1;\n    for (const feature of features) {\n      if (this.type === SpatialFilterType.Predefined) {\n        for (const layer of this.layers) {\n          if (\n            layer.options._internal &&\n            layer.options._internal.code === feature.properties.code &&\n            !buffer\n          ) {\n            if (!layer.title?.startsWith('Zone')) {\n              const index = this.layers.indexOf(layer);\n              this.layers.splice(index, 1);\n            }\n            return;\n          }\n          if (layer.title?.startsWith('Zone')) {\n            this.activeLayers = [];\n            const index = this.layers.indexOf(layer);\n            this.layers.splice(index, 1);\n            this.map.removeLayer(layer);\n          }\n        }\n      } else {\n        if (buffer) {\n          for (const layer of this.activeLayers) {\n            if (this.activeLayers.length === 1 && layer.title?.startsWith('Zone')) {\n              const index = this.layers.indexOf(layer);\n              this.layers.splice(index, 1);\n              this.map.removeLayer(layer);\n            }\n          }\n        }\n        this.activeLayers = [];\n      }\n      for (const layer of this.layers) {\n        if (layer.title?.startsWith('Zone')) {\n          i++;\n        }\n      }\n      this.dataSourceService\n        .createAsyncDataSource({\n          type: 'vector',\n          queryable: true\n        } as QueryableDataSourceOptions)\n        .pipe(take(1))\n        .subscribe((dataSource: DataSource) => {\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: ('Zone ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string,\n            workspace: { enabled: true },\n            _internal: {\n              code:\n                this.type === SpatialFilterType.Predefined\n                  ? feature.properties.code\n                  : undefined\n            },\n            source: dataSource,\n            visible: true,\n            style: (_feature, resolution) => {\n              const coordinates = (features[0] as any).coordinates;\n              return new olstyle.Style({\n                image: new olstyle.Circle({\n                  radius: coordinates\n                    ? this.buffer /\n                      Math.cos((Math.PI / 180) * coordinates[1]) /\n                      resolution\n                    : undefined,\n                  fill: new olstyle.Fill({\n                    color: 'rgba(200, 200, 20, 0.2)'\n                  }),\n                  stroke: new olstyle.Stroke({\n                    width: 1,\n                    color: 'orange'\n                  })\n                }),\n                stroke: new olstyle.Stroke({\n                  width: 1,\n                  color: 'orange'\n                }),\n                fill: new olstyle.Fill({\n                  color: 'rgba(200, 200, 20, 0.2)'\n                })\n              });\n            }\n          });\n          const featuresOl = features.map(f => {\n            return featureToOl(f, this.map.projection);\n          });\n          if (this.type !== SpatialFilterType.Predefined) {\n            const type = this.type === SpatialFilterType.Point ? 'Cercle' : 'Polygone';\n            featuresOl[0].set('nom', 'Zone', true);\n            featuresOl[0].set('type', type, true);\n          }\n          const ol = dataSource.ol as olSourceVector<OlGeometry> | olSourceCluster;\n          ol.addFeatures(featuresOl);\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.activeLayers.push(olLayer);\n          this.cdRef.detectChanges();\n        });\n    }\n  }\n\n  /**\n   * Try to add point features to the map\n   * Necessary to create clusters\n   */\n  private tryAddPointToMap(features: Feature[], id) {\n    let i = 1;\n    if (features.length) {\n      if (this.map === undefined) {\n        return;\n      }\n      for (const layer of this.layers) {\n        if (layer.title?.startsWith(features[0].meta.title)) {\n          i++;\n        }\n      }\n      this.dataSourceService\n        .createAsyncDataSource({\n          type: 'cluster',\n          id,\n          queryable: true,\n          distance: 120,\n          meta: {\n            title: 'Cluster'\n          }\n        } as QueryableDataSourceOptions)\n        .pipe(take(1))\n        .subscribe((dataSource: ClusterDataSource) => {\n          const icon = features[0].meta.icon;\n          let style: olstyle.Style;\n          if (!icon) {\n            style = createOverlayMarkerStyle();\n          } else {\n            style = this.createSvgIcon(icon) || createOverlayMarkerStyle();\n          }\n\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: (features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string,\n            source: dataSource,\n            visible: true,\n            style\n          });\n\n          const featuresOl = features.map(feature => {\n            return featureToOl(feature, this.map.projection);\n          });\n          const ol = dataSource.ol as olSourceCluster;\n          ol.getSource().addFeatures(featuresOl);\n          if (this.layers.find(layer => layer.id === olLayer.id)) {\n            this.map.removeLayer(\n              this.layers.find(layer => layer.id === olLayer.id)\n            );\n            i = i - 1;\n            olLayer.title = (features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string;\n            olLayer.options.title = olLayer.title;\n          }\n          this.iterator = i;\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.pushLayer(olLayer);\n          this.cdRef.detectChanges();\n        });\n    }\n  }\n\n  private createSvgIcon(icon): olstyle.Style {\n    let style: olstyle.Style;\n    this.matIconRegistry.getNamedSvgIcon(icon).subscribe(svgObj => {\n      const xmlSerializer = new XMLSerializer();\n      svgObj.setAttribute('width', '30');\n      svgObj.setAttribute('height', '30');\n      svgObj.setAttribute('fill', 'rgba(0, 128, 255)');\n      svgObj.setAttribute('stroke', 'white');\n      const svg = xmlSerializer.serializeToString(svgObj);\n      style = new olstyle.Style({\n        image: new olstyle.Icon({\n          src: 'data:image/svg+xml;utf8,' + svg\n        })\n      });\n    });\n    return style;\n  }\n  /**\n   * Try to add line or polygon features to the map\n   */\n  private tryAddLayerToMap(features: Feature[], id) {\n    let i = 1;\n    if (features.length) {\n      if (this.map === undefined) {\n        return;\n      }\n      for (const layer of this.layers) {\n        if (layer.title?.startsWith(features[0].meta.title)) {\n          i++;\n        }\n      }\n      this.dataSourceService\n        .createAsyncDataSource({\n          type: 'vector',\n          id,\n          queryable: true\n        } as QueryableDataSourceOptions)\n        .pipe(take(1))\n        .subscribe((dataSource: DataSource) => {\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: (features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string,\n            source: dataSource,\n            visible: true\n          });\n          const featuresOl = features.map(feature => {\n            return featureToOl(feature, this.map.projection);\n          });\n          const ol = dataSource.ol as olSourceVector<OlGeometry>;\n          ol.addFeatures(featuresOl);\n          if (this.layers.find(layer => layer.id === olLayer.id)) {\n            this.map.removeLayer(\n              this.layers.find(layer => layer.id === olLayer.id)\n            );\n            i = i - 1;\n            olLayer.title = (features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string;\n            olLayer.options.title = olLayer.title;\n          }\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.pushLayer(olLayer);\n          this.cdRef.detectChanges();\n        });\n    }\n  }\n\n  zoomToFeatureExtent(feature) {\n    if (feature) {\n      const olFeature = this.format.readFeature(feature, {\n        dataProjection: feature.projection,\n        featureProjection: this.map.projection\n      });\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\n    }\n  }\n\n  pushLayer(layer) {\n    for (const lay of this.activeLayers) {\n      if (lay.id === layer.id) {\n        return;\n      }\n    }\n\n    this.activeLayers.push(layer);\n  }\n}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function toolSlideInOut(\n  speed = '300ms',\n  type = 'ease-in-out'\n): AnimationTriggerMetadata {\n  return trigger('toolSlideInOut', [\n    state(\n      'enter',\n      style({\n        transform: 'translateX(100%)'\n      })\n    ),\n    transition('void => enter', animate(speed + ' ' + type))\n  ]);\n}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { MapState } from '../../map/map.state';\nimport { IgoMap, Layer } from '@igo2/geo';\nimport { toolSlideInOut } from './active-time-filter-tool.animation';\n\n@ToolComponent({\n  name: 'activeTimeFilter',\n  title: 'igo.integration.tools.timeFilter',\n  icon: 'history',\n  parent: 'mapTools'\n})\n@Component({\n  selector: 'igo-active-time-filter-tool',\n  templateUrl: './active-time-filter-tool.component.html',\n  animations: [toolSlideInOut()]\n})\nexport class ActiveTimeFilterToolComponent {\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get layer(): Layer {\n    for (const lay of this.map.layers) {\n      if (lay.options.active === true) {\n        return lay;\n      }\n    }\n    return;\n  }\n\n  public animate = 'enter';\n\n  constructor(public mapState: MapState) {}\n}\n","<igo-time-filter-item\n    [map]=\"map\"\n    [layer]=\"layer\"\n    [header]=\"false\"\n    [@toolSlideInOut]=\"animate\">\n</igo-time-filter-item>\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function toolSlideInOut(\n  speed = '300ms',\n  type = 'ease-in-out'\n): AnimationTriggerMetadata {\n  return trigger('toolSlideInOut', [\n    state(\n      'enter',\n      style({\n        transform: 'translateX(100%)'\n      })\n    ),\n    transition('void => enter', animate(speed + ' ' + type))\n  ]);\n}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { MapState } from '../../map/map.state';\nimport { Layer, IgoMap } from '@igo2/geo';\n\nimport { toolSlideInOut } from './active-ogc-filter-tool.animation';\n\n@ToolComponent({\n  name: 'activeOgcFilter',\n  title: 'igo.integration.tools.ogcFilter',\n  icon: 'filter',\n  parent: 'mapTools'\n})\n@Component({\n  selector: 'igo-active-ogc-filter-tool',\n  templateUrl: './active-ogc-filter-tool.component.html',\n  animations: [toolSlideInOut()]\n})\nexport class ActiveOgcFilterToolComponent {\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get layer(): Layer {\n    for (const lay of this.map.layers) {\n      if (lay.options.active === true) {\n        return lay;\n      }\n    }\n    return;\n  }\n\n  public animate = 'enter';\n\n  constructor(public mapState: MapState) {}\n}\n","<igo-ogc-filterable-item\n    [map]=\"map\"\n    [layer]=\"layer\"\n    [header]=\"false\"\n    [@toolSlideInOut]=\"animate\">\n</igo-ogc-filterable-item>\n\n\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoFilterModule, IgoQueryModule } from '@igo2/geo';\nimport { OgcFilterToolComponent } from './ogc-filter-tool/ogc-filter-tool.component';\nimport { TimeFilterToolComponent } from './time-filter-tool/time-filter-tool.component';\nimport { SpatialFilterToolComponent } from './spatial-filter-tool/spatial-filter-tool.component';\nimport { ActiveTimeFilterToolComponent } from './active-time-filter-tool/active-time-filter-tool.component';\nimport { ActiveOgcFilterToolComponent } from './active-ogc-filter-tool/active-ogc-filter-tool.component';\n\n@NgModule({\n  imports: [IgoFilterModule, IgoQueryModule, CommonModule],\n  declarations: [\n    OgcFilterToolComponent,\n    ActiveOgcFilterToolComponent,\n    TimeFilterToolComponent,\n    ActiveTimeFilterToolComponent,\n    SpatialFilterToolComponent\n  ],\n  exports: [\n    OgcFilterToolComponent,\n    ActiveOgcFilterToolComponent,\n    TimeFilterToolComponent,\n    ActiveTimeFilterToolComponent,\n    SpatialFilterToolComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppFilterModule {\n  static forRoot(): ModuleWithProviders<IgoAppFilterModule> {\n    return {\n      ngModule: IgoAppFilterModule,\n      providers: []\n    };\n  }\n}\n","<p></p>\n<igo-interactive-tour\n  mat-raised-button\n  tourToStart=\"global\"\n  menuIsOpen=true\n  styleButton=\"raised\"\n  [discoverTitleInLocale$]=\"discoverTitleInLocale$\">\n</igo-interactive-tour>\n\n<button *ngIf=\"auth.authenticated && trainingGuideURLs && trainingGuideURLs.length === 1\"\n  class=\"training-guide-button\"\n  mat-raised-button\n  tooltip-position=\"below\"\n  matTooltipShowDelay=\"500\"\n  [disabled]=\"loading\"\n  [matTooltip]=\"'igo.integration.aboutTool.trainingGuideTooltip' | translate\"\n  (click)=\"openGuide()\">\n  <span>{{'igo.integration.aboutTool.trainingGuide' | translate}}</span>\n  <mat-icon svgIcon=\"file-document\"></mat-icon>\n</button>\n\n<button *ngIf=\"auth.authenticated && trainingGuideURLs && trainingGuideURLs.length > 1\"\n  class=\"training-guide-button\"\n  mat-raised-button\n  tooltip-position=\"below\"\n  matTooltipShowDelay=\"500\"\n  [disabled]=\"loading\"\n  [matTooltip]=\"'igo.integration.aboutTool.trainingGuideTooltip' | translate\"\n  [matMenuTriggerFor]=\"menu\">\n  <span>{{'igo.integration.aboutTool.trainingGuide' | translate}}</span>\n  <mat-icon svgIcon=\"file-document\"></mat-icon>\n</button>\n\n<mat-menu #menu=\"matMenu\">\n  <button *ngFor=\"let guide of trainingGuideURLs\" mat-menu-item (click)=\"openGuide(guide)\">{{formatFileName(guide)}}</button>\n</mat-menu>\n\n<igo-custom-html *ngIf=\"headerHtml !== ''\" class=\"mat-typography\"\n  [html]=\"headerHtml | translate\">\n</igo-custom-html>\n\n<igo-custom-html class=\"mat-typography\"\n  [html]=\"html | translate: {version: version}\">\n</igo-custom-html>\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { ConfigService, LanguageService, Version } from '@igo2/core';\nimport { of } from 'rxjs';\nimport type { Observable } from 'rxjs';\nimport { AuthService } from '@igo2/auth';\nimport { HttpClient } from '@angular/common/http';\n\n@ToolComponent({\n  name: 'about',\n  title: 'igo.integration.tools.about',\n  icon: 'help-circle'\n})\n@Component({\n  selector: 'igo-about-tool',\n  templateUrl: './about-tool.component.html',\n  styleUrls: ['./about-tool.component.scss']\n})\nexport class AboutToolComponent implements OnInit {\n  @Input()\n  get headerHtml() {\n    return this._headerHtml;\n  }\n  set headerHtml(value: string) {\n    this._headerHtml = Array.isArray(value) ? value.join('\\n') : value;\n  }\n\n  @Input()\n  get html() {\n    return this._html;\n  }\n  set html(value: string) {\n    this._html = Array.isArray(value) ? value.join('\\n') : value;\n  }\n  private _discoverTitleInLocale: string = 'IGO';\n  public discoverTitleInLocale$: Observable<string> = of(this._discoverTitleInLocale);\n\n  @Input()\n  get discoverTitleInLocale() {\n    return this._discoverTitleInLocale;\n  }\n  set discoverTitleInLocale(value: string) {\n    this._discoverTitleInLocale = value;\n    this.discoverTitleInLocale$ = of(value);\n  }\n\n  @Input() trainingGuideURLs;\n\n  public version: Version;\n  private _html: string = 'igo.integration.aboutTool.html';\n  private _headerHtml: string = this.languageService.translate.instant('igo.integration.aboutTool.headerHtml');\n\n  private baseUrlProfil;\n  private baseUrlGuide;\n\n  public loading = false;\n\n  constructor(\n    public configService: ConfigService,\n    public auth: AuthService,\n    private http: HttpClient,\n    private cdRef: ChangeDetectorRef,\n    private languageService: LanguageService) {\n    this.version = configService.getConfig('version');\n    this.baseUrlProfil = configService.getConfig('storage.url');\n    this.baseUrlGuide = configService.getConfig('depot.url') + configService.getConfig('depot.guideUrl');\n  }\n\n  ngOnInit() {\n    if (this.auth.authenticated && this.configService.getConfig('context.url')) {\n      this.http.get(this.baseUrlProfil).subscribe((profil) => {\n        const recast = profil as any;\n        this.trainingGuideURLs = recast.guides;\n        this.cdRef.detectChanges();\n      });\n    } else if (\n        this.auth.authenticated &&\n        !this.configService.getConfig('context.url') &&\n        this.configService.getConfig('depot.trainingGuides')) {\n          this.trainingGuideURLs = this.configService.getConfig('depot.trainingGuides');\n    }\n  }\n\n  openGuide(guide?) {\n    this.loading = true;\n    const url = guide ?\n      this.baseUrlGuide + guide + '?' :\n      this.baseUrlGuide + this.trainingGuideURLs[0] + '?';\n    this.http\n    .get(url, {\n      responseType: 'blob'\n    })\n    .subscribe(() => {\n      this.loading = false;\n      window.open(url, '_blank');\n      this.cdRef.detectChanges();\n    });\n  }\n\n  formatFileName(name: string) {\n    name = name.split('_').join(' ');\n    const index = name.indexOf('.');\n    name = name.slice(0, index);\n    return name;\n  }\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoCustomHtmlModule, IgoInteractiveTourModule } from '@igo2/common';\n\nimport { AboutToolComponent } from './about-tool/about-tool.component';\n\n@NgModule({\n  imports: [\n    IgoLanguageModule,\n    IgoCustomHtmlModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatMenuModule,\n    IgoInteractiveTourModule,\n    CommonModule\n  ],\n  declarations: [AboutToolComponent],\n  exports: [AboutToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppAboutModule {\n  static forRoot(): ModuleWithProviders<IgoAppAboutModule> {\n    return {\n      ngModule: IgoAppAboutModule,\n      providers: []\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoAppStorageModule {}\n","import { NgModule } from '@angular/core';\n\nimport { IgoAppAnalyticsModule } from './analytics/analytics.module';\nimport { IgoAppContextModule } from './context/context.module';\nimport { IgoAppCatalogModule } from './catalog/catalog.module';\nimport { IgoAppDirectionsModule } from './directions/directions.module';\nimport { IgoAppDrawModule } from './draw/draw.module';\nimport { IgoAppWorkspaceModule } from './workspace/workspace.module';\nimport { IgoAppImportExportModule } from './import-export/import-export.module';\nimport { IgoAppMapModule } from './map/map.module';\nimport { IgoAppMeasureModule } from './measure/measure.module';\nimport { IgoAppPrintModule } from './print/print.module';\nimport { IgoAppSearchModule } from './search/search.module';\nimport { IgoAppFilterModule } from './filter/filter.module';\nimport { IgoAppAboutModule } from './about/about.module';\nimport { IgoAppStorageModule } from './storage/storage.module';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [\n    IgoAppStorageModule,\n    IgoAppAnalyticsModule,\n    IgoAppContextModule,\n    IgoAppCatalogModule,\n    IgoAppDirectionsModule,\n    IgoAppDrawModule,\n    IgoAppWorkspaceModule,\n    IgoAppImportExportModule,\n    IgoAppMapModule,\n    IgoAppMeasureModule,\n    IgoAppPrintModule,\n    IgoAppSearchModule,\n    IgoAppFilterModule,\n    IgoAppAboutModule\n  ]\n})\nexport class IgoIntegrationModule {}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoAppToolModule {}\n","import { Injectable } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { AnalyticsService } from '@igo2/core';\nimport { AuthService } from '@igo2/auth';\n\nimport { ContextState } from '../context/context.state';\nimport { SearchState } from '../search/search.state';\nimport { ToolState } from '../tool/tool.state';\n\n/**\n * Service that holds the state of the search module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalyticsListenerService {\n  /**\n   * Toolbox that holds main tools\n   */\n\n  constructor(\n    private analyticsService: AnalyticsService,\n    private authService: AuthService,\n    private contextState: ContextState,\n    private searchState: SearchState,\n    private toolState: ToolState\n  ) {}\n\n  listen() {\n    this.listenUser();\n    this.listenContext();\n    this.listenTool();\n    this.listenSearch();\n  }\n\n  listenUser() {\n    this.authService.authenticate$.subscribe(() => {\n      const tokenDecoded = this.authService.decodeToken() || {};\n      if (tokenDecoded.user) {\n        this.authService\n          .getProfils()\n          .subscribe(profils =>\n            this.analyticsService.setUser(tokenDecoded.user, profils.profils)\n          );\n      } else {\n        this.analyticsService.setUser();\n      }\n    });\n  }\n\n  listenContext() {\n    this.contextState.context$.subscribe(context => {\n      if (context) {\n        this.analyticsService.trackEvent('context', 'activateContext', context.id || context.uri);\n      }\n    });\n  }\n\n  listenTool() {\n    this.toolState.toolbox.activeTool$.pipe(skip(1)).subscribe(tool => {\n      if (tool) {\n        this.analyticsService.trackEvent('tool', 'activateTool', tool.name);\n      }\n    });\n  }\n\n  listenSearch() {\n    this.searchState.searchTerm$.pipe(skip(1)).subscribe((searchTerm: string) => {\n      if (searchTerm !== undefined && searchTerm !== null) {\n        this.analyticsService.trackSearch(searchTerm, this.searchState.store.count);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { EntityStore } from '@igo2/common';\nimport { ConfigService } from '@igo2/core';\nimport { CommonVectorStyleOptions, SearchResult } from '@igo2/geo';\n\n/**\n * Service that holds the state of the query module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryState {\n  /**\n   * Store that holds the query results\n   */\n  public store: EntityStore<SearchResult> = new EntityStore<SearchResult>([]);\n  public queryOverlayStyle: CommonVectorStyleOptions = {};\n  public queryOverlayStyleSelection: CommonVectorStyleOptions = {};\n  public queryOverlayStyleFocus: CommonVectorStyleOptions = {};\n\n  constructor(private configService: ConfigService) {\n    const queryOverlayStyle = this.configService.getConfig('queryOverlayStyle') as {\n      base?: CommonVectorStyleOptions,\n      selection?: CommonVectorStyleOptions,\n      focus?: CommonVectorStyleOptions\n    };\n    if (queryOverlayStyle) {\n      this.queryOverlayStyle = queryOverlayStyle.base;\n      this.queryOverlayStyleSelection = queryOverlayStyle.selection;\n      this.queryOverlayStyleFocus = queryOverlayStyle.focus;\n    }\n  }\n}\n","/*\n * Public API Surface of tools\n */\n\nexport * from './lib/integration.module';\nexport * from './lib/about/about.module';\nexport * from './lib/analytics/analytics.module';\nexport * from './lib/storage/storage.module';\nexport * from './lib/context/context.module';\nexport * from './lib/catalog/catalog.module';\n\nexport * from './lib/directions/directions.module';\nexport * from './lib/draw/draw.module';\nexport * from './lib/workspace/workspace.module';\nexport * from './lib/filter/filter.module';\nexport * from './lib/import-export/import-export.module';\nexport * from './lib/map/map.module';\nexport * from './lib/measure/measure.module';\nexport * from './lib/print/print.module';\nexport * from './lib/search/search.module';\nexport * from './lib/tool/tool.module';\n\nexport * from './lib/about';\nexport * from './lib/analytics';\nexport * from './lib/context';\nexport * from './lib/catalog';\nexport * from './lib/directions';\nexport * from './lib/draw';\nexport * from './lib/workspace';\nexport * from './lib/filter';\nexport * from './lib/import-export';\nexport * from './lib/map';\nexport * from './lib/measure';\nexport * from './lib/print';\nexport * from './lib/search';\nexport * from './lib/tool';\nexport * from './lib/storage';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["toolSlideInOut"],"mappings":"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"}