{"version":3,"file":"igo2-common.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/common/src/lib/entity/shared/entity.enums.ts","../../../packages/common/src/lib/entity/shared/entity.utils.ts","../../../packages/common/src/lib/entity/shared/state.ts","../../../packages/common/src/lib/entity/shared/view.ts","../../../packages/common/src/lib/entity/shared/store.ts","../../../packages/common/src/lib/entity/shared/watcher.ts","../../../packages/common/src/lib/entity/shared/transaction.ts","../../../packages/common/src/lib/entity/shared/strategies/strategy.ts","../../../packages/common/src/lib/entity/shared/strategies/filter-custom-function.ts","../../../packages/common/src/lib/entity/shared/strategies/filter-selection.ts","../../../packages/common/src/lib/entity/entity-selector/entity-selector.component.html","../../../packages/common/src/lib/entity/entity-selector/entity-selector.component.ts","../../../packages/common/src/lib/stop-propagation/stop-propagation.directive.ts","../../../packages/common/src/lib/entity/entity-table/entity-table-row.directive.ts","../../../packages/common/src/lib/entity/entity-table-paginator/entity-table-paginator.component.ts","../../../packages/common/src/lib/entity/entity-table-paginator/entity-table-paginator.component.html","../../../packages/common/src/lib/image/secure-image.pipe.ts","../../../packages/common/src/lib/custom-html/custom-html.pipe.ts","../../../packages/common/src/lib/entity/entity-table/entity-table.component.html","../../../packages/common/src/lib/entity/entity-table/entity-table.component.ts","../../../packages/common/src/lib/action/shared/action.enums.ts","../../../packages/common/src/lib/action/actionbar/actionbar-item.component.html","../../../packages/common/src/lib/action/actionbar/actionbar-item.component.ts","../../../packages/common/src/lib/action/actionbar/actionbar.component.html","../../../packages/common/src/lib/action/actionbar/actionbar.component.ts","../../../packages/common/src/lib/action/actionbar/actionbar.module.ts","../../../packages/common/src/lib/action/action.module.ts","../../../packages/common/src/lib/backdrop/backdrop.component.ts","../../../packages/common/src/lib/backdrop/backdrop.component.html","../../../packages/common/src/lib/backdrop/backdrop.module.ts","../../../packages/common/src/lib/badge-icon/badge-icon.directive.ts","../../../packages/common/src/lib/badge-icon/badge-icon.module.ts","../../../packages/common/src/lib/clickout/clickout.directive.ts","../../../packages/common/src/lib/clickout/clickout.module.ts","../../../packages/common/src/lib/clone/clone.pipe.ts","../../../packages/common/src/lib/clone/clone.module.ts","../../../packages/common/src/lib/collapsible/collapse.directive.ts","../../../packages/common/src/lib/collapsible/collapsible.component.ts","../../../packages/common/src/lib/collapsible/collapsible.component.html","../../../packages/common/src/lib/collapsible/collapsible.module.ts","../../../packages/common/src/lib/confirm-dialog/confirm-dialog.component.ts","../../../packages/common/src/lib/confirm-dialog/confirm-dialog.component.html","../../../packages/common/src/lib/confirm-dialog/confirm-dialog.service.ts","../../../packages/common/src/lib/confirm-dialog/confirm-dialog.module.ts","../../../packages/common/src/lib/context-menu/context-menu.directive.ts","../../../packages/common/src/lib/context-menu/context-menu.module.ts","../../../packages/common/src/lib/custom-html/custom-html.component.ts","../../../packages/common/src/lib/custom-html/custom-html.component.html","../../../packages/common/src/lib/custom-html/custom-html.module.ts","../../../packages/common/src/lib/drag-drop/drag-drop.directive.ts","../../../packages/common/src/lib/drag-drop/drag-drop.module.ts","../../../packages/common/src/lib/dynamic-component/shared/dynamic-component.ts","../../../packages/common/src/lib/dynamic-component/shared/dynamic-component.service.ts","../../../packages/common/src/lib/dynamic-component/dynamic-outlet/dynamic-outlet.component.ts","../../../packages/common/src/lib/dynamic-component/dynamic-outlet/dynamic-outlet.component.html","../../../packages/common/src/lib/dynamic-component/dynamic-outlet/dynamic-outlet.module.ts","../../../packages/common/src/lib/dynamic-component/dynamic-component.module.ts","../../../packages/common/src/lib/flexible/flexible.component.ts","../../../packages/common/src/lib/flexible/flexible.component.html","../../../packages/common/src/lib/flexible/flexible.module.ts","../../../packages/common/src/lib/form/shared/form.utils.ts","../../../packages/common/src/lib/form/form/form.component.ts","../../../packages/common/src/lib/form/form/form.component.html","../../../packages/common/src/lib/form/form/form.module.ts","../../../packages/common/src/lib/form/shared/form.service.ts","../../../packages/common/src/lib/form/shared/form-field.service.ts","../../../packages/common/src/lib/form/shared/form-field-component.ts","../../../packages/common/src/lib/form/form-field/form-field.component.html","../../../packages/common/src/lib/form/form-field/form-field.component.ts","../../../packages/common/src/lib/form/form-field/form-field-select.component.html","../../../packages/common/src/lib/form/form-field/form-field-select.component.ts","../../../packages/common/src/lib/form/form-field/form-field-text.component.html","../../../packages/common/src/lib/form/form-field/form-field-text.component.ts","../../../packages/common/src/lib/form/form-field/form-field-textarea.component.html","../../../packages/common/src/lib/form/form-field/form-field-textarea.component.ts","../../../packages/common/src/lib/form/form-field/form-field.module.ts","../../../packages/common/src/lib/form/form-group/form-group.component.html","../../../packages/common/src/lib/form/form-group/form-group.component.ts","../../../packages/common/src/lib/form/form-group/form-group.module.ts","../../../packages/common/src/lib/form/form.module.ts","../../../packages/common/src/lib/home-button/home-button.component.ts","../../../packages/common/src/lib/home-button/home-button.component.html","../../../packages/common/src/lib/home-button/home-button.module.ts","../../../packages/common/src/lib/entity/entity-selector/entity-selector.module.ts","../../../packages/common/src/lib/stop-propagation/stop-drop-propagation.directive.ts","../../../packages/common/src/lib/stop-propagation/stop-propagation.module.ts","../../../packages/common/src/lib/entity/entity-table-paginator/entity-table-paginator.module.ts","../../../packages/common/src/lib/image/image.module.ts","../../../packages/common/src/lib/entity/entity-table/entity-table.module.ts","../../../packages/common/src/lib/entity/entity.module.ts","../../../packages/common/src/lib/interactive-tour/interactive-tour.loader.ts","../../../packages/common/src/lib/interactive-tour/interactive-tour.service.ts","../../../packages/common/src/lib/tool/shared/toolbox.ts","../../../packages/common/src/lib/tool/shared/tool.service.ts","../../../packages/common/src/lib/interactive-tour/interactive-tour.component.html","../../../packages/common/src/lib/interactive-tour/interactive-tour.component.ts","../../../packages/common/src/lib/interactive-tour/interactive-tour.module.ts","../../../packages/common/src/lib/keyvalue/keyvalue.pipe.ts","../../../packages/common/src/lib/keyvalue/keyvalue.module.ts","../../../packages/common/src/lib/json-dialog/json-dialog.component.html","../../../packages/common/src/lib/json-dialog/json-dialog.component.ts","../../../packages/common/src/lib/json-dialog/json-dialog.service.ts","../../../packages/common/src/lib/json-dialog/json-dialog.module.ts","../../../packages/common/src/lib/list/list-item.directive.ts","../../../packages/common/src/lib/list/list.component.ts","../../../packages/common/src/lib/list/list.component.html","../../../packages/common/src/lib/list/list.module.ts","../../../packages/common/src/lib/panel/panel.component.html","../../../packages/common/src/lib/panel/panel.component.ts","../../../packages/common/src/lib/panel/panel.module.ts","../../../packages/common/src/lib/sidenav/sidenav-shim.directive.ts","../../../packages/common/src/lib/sidenav/sidenav.module.ts","../../../packages/common/src/lib/spinner/spinner.component.ts","../../../packages/common/src/lib/spinner/spinner.component.html","../../../packages/common/src/lib/spinner/spinner-activity.directive.ts","../../../packages/common/src/lib/spinner/spinner.module.ts","../../../packages/common/src/lib/table/table-datasource.ts","../../../packages/common/src/lib/table/table-action-color.enum.ts","../../../packages/common/src/lib/table/table.component.html","../../../packages/common/src/lib/table/table.component.ts","../../../packages/common/src/lib/table/table.module.ts","../../../packages/common/src/lib/action/shared/store.ts","../../../packages/common/src/lib/tool/shared/toolbox.enums.ts","../../../packages/common/src/lib/tool/toolbox/toolbox.animation.ts","../../../packages/common/src/lib/tool/toolbox/toolbox.component.html","../../../packages/common/src/lib/tool/toolbox/toolbox.component.ts","../../../packages/common/src/lib/tool/toolbox/toolbox.module.ts","../../../packages/common/src/lib/tool/tool.module.ts","../../../packages/common/src/lib/widget/widget-outlet/widget-outlet.component.html","../../../packages/common/src/lib/widget/widget-outlet/widget-outlet.component.ts","../../../packages/common/src/lib/widget/widget-outlet/widget-outlet.module.ts","../../../packages/common/src/lib/widget/shared/widget.service.ts","../../../packages/common/src/lib/widget/widget.module.ts","../../../packages/common/src/lib/workspace/workspace-selector/workspace-selector.component.ts","../../../packages/common/src/lib/workspace/workspace-selector/workspace-selector.component.html","../../../packages/common/src/lib/workspace/workspace-selector/workspace-selector.module.ts","../../../packages/common/src/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.component.html","../../../packages/common/src/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.component.ts","../../../packages/common/src/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.module.ts","../../../packages/common/src/lib/workspace/workspace.module.ts","../../../packages/common/src/lib/table/table-database.ts","../../../packages/common/src/lib/tool/shared/tool-component.ts","../../../packages/common/src/lib/widget/shared/widget.ts","../../../packages/common/src/lib/workspace/shared/store.ts","../../../packages/common/src/lib/workspace/shared/workspace.ts","../../../packages/common/src/public_api.ts","../../../packages/common/src/igo2-common.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export enum EntityOperationType {\n  Insert = 'Insert',\n  Update = 'Update',\n  Delete = 'Delete'\n}\n\nexport enum EntityTableColumnRenderer {\n  Default = 'Default',\n  HTML = 'HTML',\n  UnsanitizedHTML = 'UnsanitizedHTML',\n  Editable = 'Editable',\n  Icon = 'Icon',\n  ButtonGroup = 'ButtonGroup'\n}\n\nexport enum EntityTableScrollBehavior {\n  Auto = 'auto',\n  Instant = 'instant',\n  Smooth = 'smooth'\n}\n\nexport enum EntityTableSelectionState {\n  None = 'None',\n  All = 'All',\n  Some = 'Some'\n}\n","import t from 'typy';\n\nimport { EntityKey } from './entity.interfaces';\n\n/**\n * Get an entity's named property. Nested properties are supported\n * with the dotted notation. (i.e 'author.name')\n *\n * Note: this method is a 'best attempt' at getting an entity's property.\n * It fits the most common cases but you might need to explicitely define\n * a property getter when using an EntityStore, for example.\n * @param entity Entity\n * @param property Property name\n * @returns Property value\n */\nexport function getEntityProperty(entity: object, property: string): any {\n  return t(entity, property).safeObject;\n}\n\n/**\n * Get an entity's id. An entity's id can be one of:\n * 'entity.meta.id', 'entity.meta.idProperty' or 'entity.id'.\n *\n * Note: See the note in the 'getEntityProperty' documentation.\n * @param entity Entity\n * @returns Entity id\n */\nexport function getEntityId(entity: object): EntityKey {\n  const meta = (entity as any).meta || {};\n  return meta.id ? meta.id : getEntityProperty(entity, meta.idProperty || 'id');\n}\n\n/**\n * Get an entity's title. An entity's title can be one of:\n * 'entity.meta.title', 'entity.meta.titleProperty' or 'entity.title'.\n * @param entity Entity\n * @returns Entity title\n */\nexport function getEntityTitle(entity: object): string {\n  const meta = (entity as any).meta || {};\n  return meta.title ? meta.title : getEntityProperty(entity, meta.titleProperty || 'title');\n}\n\n/**\n * Get an entity's HTML title. An entity's HTML title can be one of:\n * 'entity.meta.titleHtml', 'entity.meta.titleHtmlProperty' or 'entity.titleHtml'.\n * @param entity Entity\n * @returns Entity HTML title\n */\nexport function getEntityTitleHtml(entity: object): string {\n  const meta = (entity as any).meta || {};\n  return meta.titleHtml ? meta.titleHtml : getEntityProperty(entity, meta.titleHtmlProperty || 'titleHtml');\n}\n\n/**\n * Get an entity's icon. An entity's icon can be one of:\n * 'entity.meta.icon', 'entity.meta.iconProperty' or 'entity.icon'.\n * @param entity Entity\n * @returns Entity icon\n */\nexport function getEntityIcon(entity: object): string {\n  const meta = (entity as any).meta || {};\n  return meta.icon ? meta.icon : getEntityProperty(entity, meta.iconProperty || 'icon');\n}\n\n/**\n * Get an entity's revision.\n * @param entity Entity\n * @returns Entity revision\n */\nexport function getEntityRevision(entity: object): number {\n  const meta = (entity as any).meta || {};\n  return meta.revision || 0;\n}\n","import { ReplaySubject } from 'rxjs';\n\nimport { EntityKey, EntityState, EntityStateManagerOptions } from './entity.interfaces';\nimport { getEntityId } from './entity.utils';\nimport { EntityStore } from './store';\n\n/**\n * This class is used to track a store's entities state\n */\nexport class EntityStateManager<E extends object, S extends EntityState = EntityState> {\n\n  /**\n   * State index\n   */\n  readonly index = new Map<EntityKey, S>();\n\n  /**\n   * Change emitter\n   */\n  readonly change$ = new ReplaySubject<void>(1);\n\n  /**\n   * Method to get an entity's id\n   */\n  readonly getKey: (E) => EntityKey;\n\n  private store: EntityStore<object> | undefined;\n\n  constructor(options: EntityStateManagerOptions = {}) {\n    this.store = options.store ? options.store : undefined;\n    this.getKey = options.getKey\n      ? options.getKey\n      : (this.store ? this.store.getKey : getEntityId);\n    this.next();\n  }\n\n  /**\n   * Clear state\n   */\n  clear() {\n    if (this.index.size > 0) {\n      this.index.clear();\n      this.next();\n    }\n  }\n\n  /**\n   * Get an entity's state\n   * @param entity Entity\n   * @returns State\n   */\n  get(entity: E): S {\n    return (this.index.get(this.getKey(entity)) || {}) as S;\n  }\n\n  /**\n   * Set an entity's state\n   * @param entity Entity\n   * @param state State\n   */\n  set(entity: E, state: S) {\n    this.setMany([entity], state);\n  }\n\n  /**\n   * Set many entitie's state\n   * @param entitie Entities\n   * @param state State\n   */\n  setMany(entities: E[], state: S) {\n    entities.forEach((entity: E) => {\n      this.index.set(this.getKey(entity), Object.assign({}, state));\n    });\n    this.next();\n  }\n\n  /**\n   * Set state of all entities that already have a state. This is not\n   * the same as setting the state of all the store's entities.\n   * @param state State\n   */\n  setAll(state: S) {\n    Array.from(this.index.keys()).forEach((key: EntityKey) => {\n      this.index.set(key, Object.assign({}, state));\n    });\n    this.next();\n  }\n\n  /**\n   * Update an entity's state\n   * @param entity Entity\n   * @param changes State changes\n   */\n  update(entity: E, changes: Partial<S>, exclusive = false) {\n    this.updateMany([entity], changes, exclusive);\n  }\n\n  /**\n   * Update many entitie's state\n   * @param entitie Entities\n   * @param changes State changes\n   */\n  updateMany(entities: E[], changes: Partial<S>, exclusive = false) {\n    if (exclusive === true) {\n      return this.updateManyExclusive(entities, changes);\n    }\n\n    entities.forEach((entity: E) => {\n      const state = Object.assign({}, this.get(entity), changes);\n      this.index.set(this.getKey(entity), state);\n    });\n    this.next();\n  }\n\n  /**\n   * Reversee an entity's state\n   * @param entity Entity\n   * @param keys State keys to reverse\n   */\n  reverse(entity: E, keys: string[]) {\n    this.reverseMany([entity], keys);\n  }\n\n  /**\n   * Reverse many entitie's state\n   * @param entitie Entities\n   * @param keys State keys to reverse\n   */\n  reverseMany(entities: E[], keys: string[]) {\n    entities.forEach((entity: E) => {\n      const currentState = this.get(entity);\n      const changes = keys.reduce((acc: {[key: string]: boolean}, key: string) => {\n        acc[key] = currentState[key] || false;\n        return acc;\n      }, {}) as Partial<S>;\n      const reversedChanges = this.reverseChanges(changes);\n      const state = Object.assign({}, currentState, reversedChanges);\n      this.index.set(this.getKey(entity), state);\n    });\n    this.next();\n  }\n\n  /**\n   * Update state of all entities that already have a state. This is not\n   * the same as updating the state of all the store's entities.\n   * @param changes State\n   */\n  updateAll(changes: Partial<S>) {\n    const allKeys = this.getAllKeys();\n    Array.from(allKeys).forEach((key: EntityKey) => {\n      const state = Object.assign({}, this.index.get(key), changes);\n      this.index.set(key, state);\n    });\n    this.next();\n  }\n\n  /**\n   * When some state changes are flagged as 'exclusive', reverse\n   * the state of all other entities. Changes are reversable when\n   * they are boolean.\n   * @param entitie Entities\n   * @param changes State changes\n   */\n  private updateManyExclusive(entities: E[], changes: Partial<S>) {\n    const reverseChanges = this.reverseChanges(changes);\n\n    const keys = entities.map((entity: E) => this.getKey(entity));\n    const allKeys = new Set(keys.concat(Array.from(this.getAllKeys())));\n    allKeys.forEach((key: EntityKey) => {\n      const state = this.index.get(key) || {} as S;\n\n      if (keys.indexOf(key) >= 0) {\n        this.index.set(key, Object.assign({}, state, changes));\n      } else {\n        // Update only if the reverse changes would modify\n        // a key already present in the current state\n        const shouldUpdate = Object.keys(reverseChanges).some((changeKey: string) => {\n          return state[changeKey] !== undefined &&\n            state[changeKey] !== reverseChanges[changeKey];\n        });\n        if (shouldUpdate === true) {\n          this.index.set(key, Object.assign({}, state, reverseChanges));\n        }\n      }\n    });\n\n    this.next();\n  }\n\n  /**\n   * Compute a 'reversed' version of some state changes.\n   * Changes are reversable when they are boolean.\n   * @param changes State changes\n   * @returns Reversed state changes\n   */\n  private reverseChanges(changes: Partial<S>): Partial<S> {\n    return Object.entries(changes).reduce((reverseChanges: Partial<S>, bunch: [string, any]) => {\n      const [changeKey, value] = bunch;\n      if (typeof value === typeof true) {\n        (reverseChanges as object)[changeKey] = !value;\n      }\n      return reverseChanges;\n    }, {});\n  }\n\n  /**\n   * Return all the keys in that state and in the store it's bound to, if any.\n   * @returns Set of keys\n   */\n  private getAllKeys(): Set<EntityKey> {\n    const storeKeys = this.store ? Array.from(this.store.index.keys()) : [];\n    return new Set(Array.from(this.index.keys()).concat(storeKeys));\n  }\n\n  /**\n   * Emit 'change' event\n   */\n  private next() {\n    this.change$.next();\n  }\n\n}\n","import { BehaviorSubject, Observable, Subscription, combineLatest } from 'rxjs';\nimport { debounceTime, map, skip } from 'rxjs/operators';\n\nimport { ObjectUtils, uuid } from '@igo2/utils';\nimport {\n  EntityKey,\n  EntityFilterClause,\n  EntitySortClause,\n  EntityJoinClause\n} from './entity.interfaces';\n\n/**\n * An entity view streams entities from an observable source. These entities\n * can be filtered or sorted without affecting the source. A view can also\n * combine data from multiple sources, joined together.\n */\nexport class EntityView<E extends object, V extends object = E> {\n\n  /**\n   * Observable stream of values\n   */\n  readonly values$ = new BehaviorSubject<V[]>([]);\n\n  /**\n   * Subscription to the source (and joined sources) values\n   */\n  private values$$: Subscription;\n\n  /**\n   * Whether this view has been lifted\n   */\n  private lifted = false;\n\n  /**\n   * Join clauses\n   */\n  private joins: EntityJoinClause[] = [];\n\n  /**\n   * Observable of a filter clause\n   */\n  private filter$ = new BehaviorSubject(undefined);\n\n  /**\n   * Observable of filter clauses\n   */\n  private filters$: BehaviorSubject<EntityFilterClause[]> = new BehaviorSubject([]);\n\n  /**\n   * Filters index\n   */\n  private filterIndex: Map<string, EntityFilterClause> = new Map();\n\n  /**\n   * Observable of a sort clause\n   */\n  private sort$ = new BehaviorSubject(undefined);\n\n  /**\n   * Method for indexing\n   */\n  get getKey(): (V) => EntityKey { return this.getKey$.value; }\n  private getKey$: BehaviorSubject<(V) => EntityKey> = new BehaviorSubject(undefined);\n\n  /**\n   * Number of entities\n   */\n  readonly count$ = new BehaviorSubject<number>(0);\n  get count(): number { return this.count$.value; }\n\n  /**\n   * Whether the store is empty\n   */\n  readonly empty$ = new BehaviorSubject<boolean>(true);\n  get empty(): boolean { return this.empty$.value; }\n\n  /**\n   * Store index\n   */\n  get index(): Map<EntityKey, V> { return this._index; }\n  private _index: Map<EntityKey, V>;\n\n  constructor(private source$: BehaviorSubject<E[]>) {}\n\n  /**\n   * Get a value from the view by key\n   * @param key Key\n   * @returns Value\n   */\n  get(key: EntityKey): V {\n    if (this._index === undefined) {\n      throw new Error('This view has no index, therefore, this method is unavailable.');\n    }\n    return this.index.get(key);\n  }\n\n  /**\n   * Get all the values\n   * @returns Array of values\n   */\n  all(): V[] {\n    return this.values$.value;\n  }\n\n  /**\n   * Observe all the values\n   * @returns Observable of values\n   */\n  all$(): BehaviorSubject<V[]> {\n    return this.values$;\n  }\n\n  /**\n   * Get the first value that respects a criteria\n   * @returns A value\n   */\n  firstBy(clause: EntityFilterClause<V>): V {\n    return this.values$.value.find(clause);\n  }\n\n  /**\n   * Observe the first value that respects a criteria\n   * @returns Observable of a value\n   */\n  firstBy$(clause: EntityFilterClause<V>): Observable<V> {\n    return this.values$.pipe(map((values: V[]) => values.find(clause)));\n  }\n\n  /**\n   * Get all the values that respect a criteria\n   * @returns Array of values\n   */\n  manyBy(clause: EntityFilterClause<V>): V[] {\n    return this.values$.value.filter(clause);\n  }\n\n  /**\n   * Observe all the values that respect a criteria\n   * @returns Observable of values\n   */\n  manyBy$(clause: EntityFilterClause<V>): Observable<V[]> {\n    return this.values$.pipe(map((values: V[]) => values.filter(clause)));\n  }\n\n  /**\n   * Clear the filter and sort and unsubscribe from the source\n   */\n  clear() {\n    this.filter(undefined);\n    this.sort(undefined);\n  }\n\n  destroy() {\n    if (this.values$$ !== undefined) {\n      this.values$$.unsubscribe();\n    }\n    this.clear();\n  }\n\n  /**\n   * Create an index\n   * @param getKey Method to get a value's id\n   * @returns The view\n   */\n  createIndex(getKey: (E) => EntityKey): EntityView<E, V> {\n    this._index = new Map();\n    this.getKey$.next(getKey);\n    return this;\n  }\n\n  /**\n   * Join another source to the stream (chainable)\n   * @param clause Join clause\n   * @returns The view\n   */\n  join(clause: EntityJoinClause): EntityView<E, V> {\n    if (this.lifted === true) {\n      throw new Error('This view has already been lifted, therefore, no join is allowed.');\n    }\n    this.joins.push(clause);\n    return this;\n  }\n\n  /**\n   * Filter values (chainable)\n   * @param clause Filter clause\n   * @returns The view\n   */\n  filter(clause: EntityFilterClause<V>): EntityView<E, V> {\n    this.filter$.next(clause);\n    return this;\n  }\n\n  /**\n   * @param clause Filter clause\n   * @returns The filter id\n   */\n  addFilter(clause: EntityFilterClause<V>): string {\n    const id = uuid();\n    this.filterIndex.set(id, clause);\n    this.filters$.next(Array.from(this.filterIndex.values()));\n    return id;\n  }\n\n  /**\n   * Remove a filter by id\n   * @param clause Filter clause\n   */\n  removeFilter(id: string) {\n    this.filterIndex.delete(id);\n    this.filters$.next(Array.from(this.filterIndex.values()));\n  }\n\n  /**\n   * Sort values (chainable)\n   * @param clauseSort clause\n   * @returns The view\n   */\n  sort(clause: EntitySortClause<V>): EntityView<E, V> {\n    this.sort$.next(clause);\n    return this;\n  }\n\n  /**\n   * Create the final observable\n   * @returns Observable\n   */\n  lift() {\n    this.lifted = true;\n    const source$ = this.joins.length > 0 ? this.liftJoinedSource() : this.liftSource();\n    const observables$ = [\n      source$,\n      this.filters$,\n      this.filter$,\n      this.sort$,\n      this.getKey$\n    ];\n\n    this.values$$ = combineLatest(observables$)\n      .pipe(skip(1), debounceTime(5))\n      .subscribe((bunch: [V[], EntityFilterClause[], EntityFilterClause, EntitySortClause, (V) => EntityKey]) => {\n        const [_values, filters, filter, sort, getKey] = bunch;\n        const values = this.processValues(_values, filters, filter, sort);\n        const generateIndex = getKey !== undefined;\n        this.setValues(values, generateIndex);\n      });\n  }\n\n  /**\n   * Create the source observable when no joins are defined\n   * @returns Observable\n   */\n  private liftSource(): Observable<V[]> {\n    return this.source$ as any as Observable<V[]>;\n  }\n\n  /**\n   * Create the source observable when joins are defined\n   * @returns Observable\n   */\n  private liftJoinedSource(): Observable<V[]> {\n    const sources$ = [this.source$, combineLatest(\n      this.joins.map((join: EntityJoinClause) => join.source)\n    )];\n\n    return combineLatest(sources$)\n      .pipe(\n        map((bunch: [E[], any[]]) => {\n          const [entities, joinData] = bunch;\n          return entities.reduce((values: V[], entity: E) => {\n            const value = this.computeJoinedValue(entity, joinData);\n            if (value !== undefined) {\n              values.push(value);\n            }\n            return values;\n          }, []);\n        })\n      );\n  }\n\n  /**\n   * Apply joins to a source's entity and return the final value\n   * @returns Final value\n   */\n  private computeJoinedValue(entity: E, joinData: any[]): V | undefined {\n    let value = entity as Partial<V>;\n    let joinIndex = 0;\n    while (value !== undefined && joinIndex < this.joins.length) {\n      value = this.joins[joinIndex].reduce(value, joinData[joinIndex]);\n      joinIndex += 1;\n    }\n    return value as V;\n  }\n\n  /**\n   * Filter and sort values before streaming them\n   * @param values Values\n   * @param filters Filter clauses\n   * @param filter Filter clause\n   * @param sort Sort clause\n   * @returns Filtered and sorted values\n   */\n  private processValues(\n    values: V[], filters: EntityFilterClause[], filter: EntityFilterClause, sort: EntitySortClause\n  ): V[] {\n    values = values.slice(0);\n    values = this.filterValues(values, filters.concat([filter]));\n    values = this.sortValues(values, sort);\n    return values;\n  }\n\n  /**\n   * Filter values\n   * @param values Values\n   * @param filters Filter clauses\n   * @returns Filtered values\n   */\n  private filterValues(values: V[], clauses: EntityFilterClause[]): V[] {\n    if (clauses.length === 0) { return values; }\n\n    return values\n      .filter((value: V) => {\n        return clauses\n          .filter((clause: EntityFilterClause) => clause !== undefined)\n          .every((clause: EntityFilterClause) => clause(value));\n      });\n  }\n\n  /**\n   * Sort values\n   * @param values Values\n   * @param sort Sort clause\n   * @returns Sorted values\n   */\n  private sortValues(values: V[], clause: EntitySortClause): V[] {\n    if (clause === undefined) { return values; }\n    return values.sort((v1: V, v2: V) => {\n      return ObjectUtils.naturalCompare(\n        clause.valueAccessor(v1),\n        clause.valueAccessor(v2),\n        clause.direction,\n        clause.nullsFirst\n      );\n    });\n  }\n\n  /**\n   * Set value and optionally generate an index\n   * @param values Values\n   * @param generateIndex boolean\n   */\n  private setValues(values: V[], generateIndex: boolean) {\n    if (generateIndex === true) {\n      this._index = this.generateIndex(values);\n    }\n\n    this.values$.next(values);\n\n    const count = values.length;\n    const empty = count === 0;\n    this.count$.next(count);\n    this.empty$.next(empty);\n  }\n\n  /**\n   * Generate a complete index of all the values\n   * @param entities Entities\n   * @returns Index\n   */\n  private generateIndex(values: V[]): Map<EntityKey, V> {\n    const entries = values.map((value: V) => [this.getKey(value), value]);\n    return new Map(entries as [EntityKey, V][]);\n  }\n}\n","import { BehaviorSubject } from 'rxjs';\n\nimport { EntityStateManager } from './state';\nimport { EntityView } from './view';\nimport { EntityKey, EntityState, EntityRecord, EntityStoreOptions } from './entity.interfaces';\nimport { getEntityId, getEntityProperty } from './entity.utils';\nimport { EntityStoreStrategy } from './strategies/strategy';\n\n/**\n * An entity store class holds any number of entities\n * as well as their state. It can be observed, filtered and sorted and\n * provides methods to insert, update or delete entities.\n */\nexport class EntityStore<E extends object = object, S extends EntityState = EntityState> {\n\n  /**\n   * Observable of the raw entities\n   */\n  readonly entities$ = new BehaviorSubject<E[]>([]);\n\n  /**\n   * Number of entities\n   */\n  readonly count$ = new BehaviorSubject<number>(0);\n  get count(): number { return this.count$.value; }\n\n  /**\n   * Whether the store is empty\n   */\n  readonly empty$ = new BehaviorSubject<boolean>(true);\n  get empty(): boolean { return this.empty$.value; }\n\n  /**\n   * Entity store state\n   */\n  readonly state: EntityStateManager<E, S>;\n\n  /**\n   * View of all the entities\n   */\n  readonly view: EntityView<E>;\n\n  /**\n   * View of all the entities and their state\n   */\n  readonly stateView: EntityView<E, EntityRecord<E, S>>;\n\n  /**\n   * Method to get an entity's id\n   */\n  readonly getKey: (E) => EntityKey;\n\n  /**\n   * Method to get an entity's named property\n   */\n  readonly getProperty: (E, prop: string) => any;\n\n  /**\n   * Store index\n   */\n  get index(): Map<EntityKey, E> { return this._index; }\n  private _index: Map<EntityKey, E>;\n\n  /**\n   * Store index\n   */\n  get pristine(): boolean { return this._pristine; }\n  private _pristine: boolean = true;\n\n  /**\n   * Strategies\n   */\n  private strategies: EntityStoreStrategy[] = [];\n\n  constructor(entities: E[], options: EntityStoreOptions = {}) {\n    this.getKey = options.getKey ? options.getKey : getEntityId;\n    this.getProperty = options.getProperty ? options.getProperty : getEntityProperty;\n\n    this.state = this.createStateManager();\n    this.view = this.createDataView();\n    this.stateView = this.createStateView();\n\n    this.view.lift();\n    this.stateView.lift();\n\n    if (entities.length > 0) {\n      this.load(entities);\n    } else {\n      this._index = this.generateIndex(entities);\n    }\n  }\n\n  /**\n   * Get an entity from the store by key\n   * @param key Key\n   * @returns Entity\n   */\n  get(key: EntityKey): E {\n    return this.index.get(key);\n  }\n\n  /**\n   * Get all entities in the store\n   * @returns Array of entities\n   */\n  all(): E[] {\n    return this.entities$.value;\n  }\n\n  /**\n   * Set this store's entities\n   * @param entities Entities\n   */\n  load(entities: E[], pristine: boolean = true) {\n    this._index = this.generateIndex(entities);\n    this._pristine = pristine;\n    this.next();\n  }\n\n  /**\n   * Clear the store's entities but keep the state and views intact.\n   * Views won't return any data but future data will be subject to the\n   * current views filter and sort\n   */\n  softClear() {\n    if (this.index && this.index.size > 0) {\n      this.index.clear();\n      this._pristine = true;\n      this.next();\n    } else if (this.index) {\n      this.updateCount();\n    }\n  }\n\n  /**\n   * Clear the store's entities, state and views\n   */\n  clear() {\n    this.stateView.clear();\n    this.view.clear();\n    this.state.clear();\n    this.softClear();\n  }\n\n  destroy() {\n    this.stateView.destroy();\n    this.view.destroy();\n    this.clear();\n  }\n\n  /**\n   * Insert an entity into the store\n   * @param entity Entity\n   */\n  insert(entity: E) {\n    this.insertMany([entity]);\n  }\n\n  /**\n   * Insert many entities into the store\n   * @param entities Entities\n   */\n  insertMany(entities: E[]) {\n    entities.forEach((entity: E) => this.index.set(this.getKey(entity), entity));\n    this._pristine = false;\n    this.next();\n  }\n\n  /**\n   * Update or insert an entity into the store\n   * @param entity Entity\n   */\n  update(entity: E) {\n    this.updateMany([entity]);\n  }\n\n  /**\n   * Update or insert many entities into the store\n   * @param entities Entities\n   */\n  updateMany(entities: E[]) {\n    entities.forEach((entity: E) => this.index.set(this.getKey(entity), entity));\n    this._pristine = false;\n    this.next();\n  }\n\n  /**\n   * Delete an entity from the store\n   * @param entity Entity\n   */\n  delete(entity: E) {\n    this.deleteMany([entity]);\n  }\n\n  /**\n   * Delete many entities from the store\n   * @param entities Entities\n   */\n  deleteMany(entities: E[]) {\n    entities.forEach((entity: E) => this.index.delete(this.getKey(entity)));\n    this._pristine = false;\n    this.next();\n  }\n\n  /**\n   * Add a strategy to this store\n   * @param strategy Entity store strategy\n   * @returns Entity store\n   */\n  addStrategy(strategy: EntityStoreStrategy, activate: boolean = false): EntityStore {\n    const existingStrategy = this.strategies.find((_strategy: EntityStoreStrategy) => {\n      return strategy.constructor === _strategy.constructor;\n    });\n    if (existingStrategy !== undefined) {\n      throw new Error('A strategy of this type already exists on that EntityStore.');\n    }\n\n    this.strategies.push(strategy);\n    strategy.bindStore(this);\n\n    if (activate === true) {\n      strategy.activate();\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove a strategy from this store\n   * @param strategy Entity store strategy\n   * @returns Entity store\n   */\n  removeStrategy(strategy: EntityStoreStrategy): EntityStore {\n    const index = this.strategies.indexOf(strategy);\n    if (index >= 0) {\n      this.strategies.splice(index, 1);\n      strategy.unbindStore(this);\n    }\n    return this;\n  }\n\n  /**\n   * Return strategies of a given type\n   * @param type Entity store strategy class\n   * @returns Strategies\n   */\n  getStrategyOfType(type: typeof EntityStoreStrategy): EntityStoreStrategy {\n    return this.strategies.find((strategy: EntityStoreStrategy) => {\n      return strategy instanceof type;\n    });\n  }\n\n  /**\n   * Activate strategies of a given type\n   * @param type Entity store strategy class\n   */\n  activateStrategyOfType(type: typeof EntityStoreStrategy) {\n    const strategy = this.getStrategyOfType(type);\n    if (strategy !== undefined) {\n      strategy.activate();\n    }\n  }\n\n  /**\n   * Deactivate strategies of a given type\n   * @param type Entity store strategy class\n   */\n  deactivateStrategyOfType(type: typeof EntityStoreStrategy) {\n    const strategy = this.getStrategyOfType(type);\n    if (strategy !== undefined) {\n      strategy.deactivate();\n    }\n  }\n\n  /**\n   * Generate a complete index of all the entities\n   * @param entities Entities\n   * @returns Index\n   */\n  private generateIndex(entities: E[]): Map<EntityKey, E> {\n    const entries = entities.map((entity: E) => [this.getKey(entity), entity]);\n    return new Map(entries as [EntityKey, E][]);\n  }\n\n  /**\n   * Push the index's entities into the entities$ observable\n   */\n  private next() {\n    this.entities$.next(Array.from(this.index.values()));\n    this.updateCount();\n  }\n\n  /**\n   * Update the store's count and empty\n   */\n  private updateCount() {\n    const count = this.index.size;\n    const empty = count === 0;\n    this.count$.next(count);\n    this.empty$.next(empty);\n  }\n\n  /**\n   * Create the entity state manager\n   * @returns EntityStateManager\n   */\n  private createStateManager() {\n    return new EntityStateManager<E, S>({store: this});\n  }\n\n  /**\n   * Create the data view\n   * @returns EntityView<E>\n   */\n  private createDataView() {\n    return new EntityView<E>(this.entities$);\n  }\n\n  /**\n   * Create the state view\n   * @returns EntityView<EntityRecord<E>>\n   */\n  private createStateView() {\n    return new EntityView<E, EntityRecord<E, S>>(this.view.all$())\n      .join({\n        source: this.state.change$,\n        reduce: (entity: E): EntityRecord<E, S> => {\n          const key = this.getKey(entity);\n          const state = this.state.get(entity);\n          const currentRecord = this.stateView.get(key);\n\n          if (\n            currentRecord !== undefined &&\n            currentRecord.entity === entity &&\n            this.statesAreTheSame(currentRecord.state, state)\n          ) {\n            return currentRecord;\n          }\n\n          const revision = currentRecord ? currentRecord.revision + 1 : 1;\n          const ref = `${key}-${revision}`;\n          return {entity, state, revision, ref};\n        }\n      })\n      .createIndex((record: EntityRecord<E, S>) => this.getKey(record.entity));\n  }\n\n  private statesAreTheSame(currentState: S, newState: S): boolean {\n    if (currentState === newState) {\n      return true;\n    }\n\n    const currentStateIsEmpty = Object.keys(currentState).length === 0;\n    const newStateIsEmpty = Object.keys(newState).length === 0;\n    return currentStateIsEmpty && newStateIsEmpty;\n  }\n\n}\n","import { ChangeDetectorRef } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { skip } from 'rxjs/operators';\n\nimport { ObjectUtils } from '@igo2/utils';\nimport { EntityKey } from './entity.interfaces';\n\nimport { EntityStore } from './store';\n\n/**\n * This class is used to synchronize a component's changes\n * detection with an EntityStore changes. For example, it is frequent\n * to have a component subscribe to a store's selected entity and, at the same time,\n * this component provides a way to select an entity with, let's say, a click.\n *\n * This class automatically handles those case and triggers the compoent's\n * change detection when needed.\n *\n * Note: If the component observes the store's stateView, a workspace is\n * probably not required because the stateView catches any changes to the\n * entities and their state.\n */\nexport class EntityStoreWatcher<E extends object> {\n\n  /**\n   * Component change detector\n   */\n  private cdRef: ChangeDetectorRef;\n\n  /**\n   * Entity store\n   */\n  private store: EntityStore<E>;\n\n  /**\n   * Component inner state\n   */\n  private innerStateIndex = new Map<EntityKey, {[key: string]: any}>();\n\n  /**\n   * Subscription to the store's entities\n   */\n  private entities$$: Subscription;\n\n  /**\n   * Subscription to the store's state\n   */\n  private state$$: Subscription;\n\n  constructor(store?: EntityStore<E>, cdRef?: ChangeDetectorRef) {\n    this.setChangeDetector(cdRef);\n    this.setStore(store);\n  }\n\n  destroy() {\n    this.setChangeDetector(undefined);\n    this.setStore(undefined);\n  }\n\n  /**\n   * Bind this workspace to a store and start watching for changes\n   * @param store Entity store\n   */\n  setStore(store?: EntityStore<E>) {\n    if (store === undefined) {\n      this.teardownObservers();\n      this.innerStateIndex.clear();\n      this.store = undefined;\n      return;\n    }\n\n    this.setStore(undefined);\n    this.store = store;\n    this.setupObservers();\n    this.detectChanges();\n  }\n\n  /**\n   * Bind this workspace to a component's change detector\n   * @param cdRef Change detector\n   */\n  setChangeDetector(cdRef?: ChangeDetectorRef) {\n    this.cdRef = cdRef;\n  }\n\n  /**\n   * Set up observers on a store's entities and their state\n   * @param store Entity store\n   */\n  private setupObservers() {\n    this.teardownObservers();\n\n    this.entities$$ = this.store.entities$\n      .subscribe((entities: E[]) => this.onEntitiesChange(entities));\n\n    this.state$$ = this.store.state.change$\n      .pipe(skip(1))\n      .subscribe(() => this.onStateChange());\n  }\n\n  /**\n   * Teardown store observers\n   */\n  private teardownObservers() {\n    if (this.entities$$ !== undefined) {\n      this.entities$$.unsubscribe();\n    }\n    if (this.state$$ !== undefined) {\n      this.state$$.unsubscribe();\n    }\n    this.entities$$ = undefined;\n    this.state$$ = undefined;\n  }\n\n  /**\n   * When the entities change, always trigger the changes detection\n   */\n  private onEntitiesChange(entities: E[]) {\n    this.detectChanges();\n  }\n\n  /**\n   * When the entities state change, trigger the change detection\n   * only if the component has not handled these changes yet. For example,\n   * the component might have initiated thoses changes itself.\n   */\n  private onStateChange() {\n    let changesDetected = false;\n    const storeIndex = this.store.state.index;\n    const innerIndex = this.innerStateIndex;\n\n    if (storeIndex.size !== innerIndex.size) {\n      changesDetected = this.detectChanges();\n    }\n\n    const storeKeys = Array.from(storeIndex.keys());\n    for (const key of storeKeys) {\n      const storeValue = storeIndex.get(key);\n      const innerValue = innerIndex.get(key);\n      if (changesDetected === false) {\n        if (innerValue === undefined) {\n          changesDetected = this.detectChanges();\n        } else if (!ObjectUtils.objectsAreEquivalent(storeValue, innerValue)) {\n          changesDetected = this.detectChanges();\n        }\n      }\n\n      this.innerStateIndex.set(key, Object.assign({}, storeValue));\n    }\n  }\n\n  /**\n   * Trigger the change detection of the workspace is bound to a change detector\n   */\n  private detectChanges() {\n    if (this.cdRef !== undefined) {\n      this.cdRef.detectChanges();\n    }\n    return true;\n  }\n\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport {\n  EntityKey,\n  EntityTransactionOptions,\n  EntityOperation,\n  EntityOperationState\n} from './entity.interfaces';\nimport { EntityStore } from './store';\nimport { EntityOperationType } from './entity.enums';\nimport { getEntityId } from './entity.utils';\n\nexport type EntityTransactionCommitHandler = (\n  transaction: EntityTransaction,\n  operations: EntityOperation[]\n) => Observable<any>;\n\n/**\n * This class holds a reference to the insert, update and delete\n * operations performed on a store. This is useful to commit\n * these operations in a single pass or to cancel them.\n */\nexport class EntityTransaction {\n\n  /**\n   * Store holding the operations on another store\n   */\n  readonly operations: EntityStore<EntityOperation, EntityOperationState>;\n\n  /**\n   * Method to get an entity's id\n   */\n  readonly getKey: (E) => EntityKey;\n\n  /**\n   * Whether there are pending operations\n   */\n  get empty$(): BehaviorSubject<boolean> { return this.operations.empty$; }\n\n  /**\n   * Whether there are pending operations\n   */\n  get empty(): boolean { return this.empty$.value; }\n\n  /**\n   * Whether thise store is in commit phase\n   */\n  get inCommitPhase(): boolean { return this.inCommitPhase$.value; }\n  readonly inCommitPhase$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(options: EntityTransactionOptions = {}) {\n    this.getKey = options.getKey ? options.getKey : getEntityId;\n    this.operations = new EntityStore<EntityOperation, EntityOperationState>([], {\n      getKey: (operation: EntityOperation) => operation.key\n    });\n  }\n\n  destroy() {\n    this.operations.destroy();\n  }\n\n  /**\n   * Insert an entity into a store. If no store is specified, an insert\n   * operation is still created but the transaction won't add the new\n   * entity to the store.\n   * @param current The entity to insert\n   * @param store Optional: The store to insert the entity into\n   * @param meta Optional: Any metadata on the operation\n   */\n  insert(current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    const existingOperation = this.getOperationByEntity(current);\n    if (existingOperation !== undefined) {\n      this.removeOperation(existingOperation);\n    }\n\n    this.doInsert(current, store, meta);\n  }\n\n  /**\n   * Update an entity in a store. If no store is specified, an update\n   * operation is still created but the transaction won't update the\n   * entity into the store.\n   * @param previous The entity before update\n   * @param current The entity after update\n   * @param store Optional: The store to update the entity into\n   * @param meta Optional: Any metadata on the operation\n   */\n  update(previous: object, current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    const existingOperation = this.getOperationByEntity(current);\n    if (existingOperation !== undefined) {\n      this.removeOperation(existingOperation);\n      if (existingOperation.type === EntityOperationType.Insert) {\n        this.doInsert(current, store, meta);\n        return;\n      } else if (existingOperation.type === EntityOperationType.Update) {\n        previous = existingOperation.previous;\n      }\n    }\n\n    this.doUpdate(previous, current, store, meta);\n  }\n\n  /**\n   * Delete an entity from a store. If no store is specified, a delete\n   * operation is still created but the transaction won't remove the\n   * entity from the store.\n   * @param previous The entity before delete\n   * @param store Optional: The store to delete the entity from\n   * @param meta Optional: Any metadata on the operation\n   */\n  delete(previous: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    const existingOperation = this.getOperationByEntity(previous);\n    if (existingOperation !== undefined) {\n      this.removeOperation(existingOperation);\n      if (existingOperation.type === EntityOperationType.Insert) {\n        if (store !== undefined) {\n          store.delete(previous);\n        }\n        return;\n      }\n    }\n\n    this.doDelete(previous, store, meta);\n  }\n\n  /**\n   * Commit operations the transaction. This method doesn't do much\n   * in itself. The handler it receives does the hard work and it's\n   * implementation is left to the caller. This method simply wraps\n   * the handler into an error catching mechanism to update\n   * the transaction afterward. The caller needs to subscribe to this\n   * method's output (observable) for the commit to be performed.\n   * @param operations Operations to commit\n   * @param handler Function that handles the commit operation\n   * @returns The handler output (observable)\n   */\n  commit(operations: EntityOperation[], handler: EntityTransactionCommitHandler): Observable<any> {\n    this.inCommitPhase$.next(true);\n\n    return handler(this, operations)\n      .pipe(\n        catchError(() => of(new Error())),\n        tap((result: any) => {\n          if (result instanceof Error) {\n            this.onCommitError(operations);\n          } else {\n            this.onCommitSuccess(operations);\n          }\n        })\n      );\n  }\n\n  /**\n   * Commit all the operations of the transaction.\n   * @param handler Function that handles the commit operation\n   * @returns The handler output (observable)\n   */\n  commitAll(handler: EntityTransactionCommitHandler): Observable<any> {\n    const operations = this.getOperationsInCommit();\n    return this.commit(operations, handler);\n  }\n\n  /**\n   * Rollback this transaction\n   */\n  rollback() {\n    this.rollbackOperations(this.operations.all());\n  }\n\n  /**\n   * Rollback specific operations\n   */\n  rollbackOperations(operations: EntityOperation[]) {\n    this.checkInCommitPhase();\n\n    const operationsFactory = () => new Map([\n      [EntityOperationType.Delete, []],\n      [EntityOperationType.Update, []],\n      [EntityOperationType.Insert, []]\n    ]);\n    const storesOperations = new Map();\n\n    // Group operations by store and by operation type.\n    // Grouping operations allows us to revert them in bacth, thus, triggering\n    // observables only one per operation type.\n    for (const operation of operations) {\n      const store = operation.store;\n      if (operation.store === undefined) { continue; }\n\n      let storeOperations = storesOperations.get(store);\n      if (storeOperations === undefined) {\n        storeOperations = operationsFactory();\n        storesOperations.set(store, storeOperations);\n      }\n      storeOperations.get(operation.type).push(operation);\n    }\n\n    Array.from(storesOperations.keys()).forEach((store: EntityStore<object>) => {\n      const storeOperations = storesOperations.get(store);\n\n      const deletes = storeOperations.get(EntityOperationType.Delete);\n      store.insertMany(deletes.map((_delete: EntityOperation) => _delete.previous));\n\n      const updates = storeOperations.get(EntityOperationType.Update);\n      store.updateMany(updates.map((_update: EntityOperation) => _update.previous));\n\n      const inserts = storeOperations.get(EntityOperationType.Insert);\n      store.deleteMany(inserts.map((_insert: EntityOperation) => _insert.current));\n    });\n\n    this.operations.deleteMany(operations);\n    this.inCommitPhase$.next(false);\n  }\n\n  /**\n   * Clear this transaction\n   * @todo Raise event and synchronize stores?\n   */\n  clear() {\n    this.operations.clear();\n    this.inCommitPhase$.next(false);\n  }\n\n  /**\n   * Get any existing operation on an entity\n   * @param entity Entity\n   * @returns Either an insert, update or delete operation\n   */\n  getOperationByEntity(entity: object): EntityOperation {\n    return this.operations.get(this.getKey(entity));\n  }\n\n  /**\n   * Merge another transaction in this one\n   * @param transaction Another transaction\n   */\n  mergeTransaction(transaction: EntityTransaction) {\n    this.checkInCommitPhase();\n\n    const operations = transaction.operations.all();\n    operations.forEach((operation: EntityOperation) => {\n      this.addOperation(operation);\n    });\n  }\n\n  /**\n   * Create an insert operation and add an entity to the store\n   * @param current The entity to insert\n   * @param store Optional: The store to insert the entity into\n   * @param meta Optional: Any metadata on the operation\n   */\n  private doInsert(current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    this.addOperation({\n      key: this.getKey(current),\n      type: EntityOperationType.Insert,\n      previous: undefined,\n      current,\n      store,\n      meta\n    });\n\n    if (store !== undefined) {\n      store.insert(current);\n    }\n  }\n\n  /**\n   * Create an update operation and update an entity into the store\n   * @param previous The entity before update\n   * @param current The entity after update\n   * @param store Optional: The store to update the entity into\n   * @param meta Optional: Any metadata on the operation\n   */\n  private doUpdate(previous: object, current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    this.addOperation({\n      key: this.getKey(current),\n      type: EntityOperationType.Update,\n      previous,\n      current,\n      store,\n      meta\n    });\n\n    if (store !== undefined) {\n      store.update(current);\n    }\n  }\n\n  /**\n   * Create a delete operation and delete an entity from the store\n   * @param previous The entity before delete\n   * @param store Optional: The store to delete the entity from\n   * @param meta Optional: Any metadata on the operation\n   */\n  private doDelete(previous: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    this.addOperation({\n      key: this.getKey(previous),\n      type: EntityOperationType.Delete,\n      previous,\n      current: undefined,\n      store,\n      meta\n    });\n\n    if (store !== undefined) {\n      store.delete(previous);\n    }\n  }\n\n  /**\n   * Remove committed operations from store\n   * @param operations Commited operations\n   * @todo Raise event and synchronize stores?\n   */\n  private resolveOperations(operations: EntityOperation[]) {\n    this.operations.deleteMany(operations);\n  }\n\n  /**\n   * On commit success, resolve commited operations and exit commit phase\n   * @param operations Commited operations\n   */\n  private onCommitSuccess(operations: EntityOperation[]) {\n    this.resolveOperations(operations);\n    this.inCommitPhase$.next(false);\n  }\n\n  /**\n   * On commit error, abort transaction\n   * @param operations Commited operations\n   */\n  private onCommitError(operations: EntityOperation[]) {\n    this.inCommitPhase$.next(false);\n  }\n\n  /**\n   * Add an operation to the operations store\n   * @param operation Operation to add\n   */\n  private addOperation(operation: EntityOperation) {\n    this.checkInCommitPhase();\n\n    this.operations.insert(operation);\n    this.operations.state.update(operation, {added: true});\n  }\n\n  /**\n   * Remove an operation from the operations store\n   * @param operation Operation to remove\n   */\n  private removeOperation(operation: EntityOperation) {\n    this.checkInCommitPhase();\n\n    this.operations.delete(operation);\n    this.operations.state.update(operation, {added: false});\n  }\n\n  /**\n   * Get all the operations to commit\n   * @returns Operations to commit\n   */\n  private getOperationsInCommit(): EntityOperation[] {\n    return this.operations.stateView\n      .manyBy((value: {entity: EntityOperation, state: EntityOperationState}) => {\n        return value.state.added === true;\n      })\n      .map((value: {entity: EntityOperation, state: EntityOperationState}) => value.entity);\n  }\n\n  /**\n   * Check if the transaction is in the commit phase and throw an error if it is\n   */\n  private checkInCommitPhase() {\n    if (this.inCommitPhase === true) {\n      throw new Error('This transaction is in the commit phase. Cannot complete this operation.');\n    }\n  }\n}\n","import { BehaviorSubject } from 'rxjs';\n\nimport { EntityStoreStrategyOptions } from '../entity.interfaces';\nimport { EntityStore } from '../store';\n\n/**\n * Entity store strategies. They can do pretty much anything during a store's\n * lifetime. For example, they may act as triggers when something happens.\n * Sharing a strategy is a good idea when multiple strategies would have\n * on cancelling effect on each other.\n *\n * At creation, strategy is inactive and needs to be manually activated.\n */\nexport class EntityStoreStrategy {\n\n  /**\n   * Feature store\n   * @internal\n   */\n  protected stores: EntityStore[] = [];\n\n  /**\n   * Whether this strategy is active\n   * @internal\n   */\n  get active(): boolean { return this.active$.value; }\n  readonly active$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(protected options: EntityStoreStrategyOptions = {}) {\n    this.options = options;\n  }\n\n  /**\n   * Activate the strategy. If it's already active, it'll be deactivated\n   * and activated again.\n   */\n  activate() {\n    if (this.active === true) {\n      this.doDeactivate();\n    }\n    this.active$.next(true);\n    this.doActivate();\n  }\n\n  /**\n   * Activate the strategy. If it's already active, it'll be deactivated\n   * and activated again.\n   */\n  deactivate() {\n    this.active$.next(false);\n    this.doDeactivate();\n  }\n\n  /**\n   * Bind this strategy to a store\n   * @param store Feature store\n   */\n  bindStore(store: EntityStore) {\n    if (this.stores.indexOf(store) < 0) {\n      this.stores.push(store);\n    }\n  }\n\n  /**\n   * Unbind this strategy from store\n   * @param store Feature store\n   */\n  unbindStore(store: EntityStore) {\n    const index = this.stores.indexOf(store);\n    if (index >= 0) {\n      this.stores.splice(index, 1);\n    }\n  }\n\n  /**\n   * Do the stataegy activation\n   * @internal\n   */\n  protected doActivate() {}\n\n  /**\n   * Do the strategy deactivation\n   * @internal\n   */\n  protected doDeactivate() {}\n\n}\n","import { EntityStoreStrategyFuncOptions } from '../entity.interfaces';\nimport { EntityStore } from '../store';\nimport { EntityStoreStrategy } from './strategy';\n\n/**\n * When active, this strategy filters a store's stateView to return\n * selected entities only.\n */\nexport class EntityStoreFilterCustomFuncStrategy extends EntityStoreStrategy {\n\n  constructor(protected options: EntityStoreStrategyFuncOptions) {\n    super(options);\n  }\n\n  /**\n   * Store / filter ids map\n   */\n  private filters: Map<EntityStore, string> = new Map();\n\n  /**\n   * Bind this strategy to a store and start filtering it\n   * @param store Entity store\n   */\n  bindStore(store: EntityStore) {\n    super.bindStore(store);\n    if (this.active === true) {\n      this.filterStore(store);\n    }\n  }\n\n  /**\n   * Unbind this strategy from a store and stop filtering it\n   * @param store Entity store\n   */\n  unbindStore(store: EntityStore) {\n    super.unbindStore(store);\n    if (this.active === true) {\n      this.unfilterStore(store);\n    }\n  }\n\n  /**\n   * Start filtering all stores\n   * @internal\n   */\n  protected doActivate() {\n    this.filterAll();\n  }\n\n  /**\n   * Stop filtering all stores\n   * @internal\n   */\n  protected doDeactivate() {\n    this.unfilterAll();\n  }\n\n  /**\n   * Filter all stores\n   */\n  private filterAll() {\n    this.stores.forEach((store: EntityStore) => this.filterStore(store));\n  }\n\n  /**\n   * Unfilter all stores\n   */\n  private unfilterAll() {\n    this.stores.forEach((store: EntityStore) => this.unfilterStore(store));\n  }\n\n  /**\n   * Filter a store and add it to the filters map\n   */\n  private filterStore(store: EntityStore) {\n    this.filters.set(store, store.stateView.addFilter(this.options.filterClauseFunc));\n  }\n\n  /**\n   * Unfilter a store and delete it from the filters map\n   */\n  private unfilterStore(store: EntityStore) {\n    const filterId = this.filters.get(store);\n    if (filterId === undefined) {\n      return;\n    }\n\n    store.stateView.removeFilter(filterId);\n    this.filters.delete(store);\n  }\n}\n","import { EntityRecord } from '../entity.interfaces';\nimport { EntityStore } from '../store';\nimport { EntityStoreStrategy } from './strategy';\n\n/**\n * When active, this strategy filters a store's stateView to return\n * selected entities only.\n */\nexport class EntityStoreFilterSelectionStrategy extends EntityStoreStrategy {\n\n  /**\n   * Store / filter ids map\n   */\n  private filters: Map<EntityStore, string> = new Map();\n\n  /**\n   * Bind this strategy to a store and start filtering it\n   * @param store Entity store\n   */\n  bindStore(store: EntityStore) {\n    super.bindStore(store);\n    if (this.active === true) {\n      this.filterStore(store);\n    }\n  }\n\n  /**\n   * Unbind this strategy from a store and stop filtering it\n   * @param store Entity store\n   */\n  unbindStore(store: EntityStore) {\n    super.unbindStore(store);\n    if (this.active === true) {\n      this.unfilterStore(store);\n    }\n  }\n\n  /**\n   * Start filtering all stores\n   * @internal\n   */\n  protected doActivate() {\n    this.filterAll();\n  }\n\n  /**\n   * Stop filtering all stores\n   * @internal\n   */\n  protected doDeactivate() {\n    this.unfilterAll();\n  }\n\n  /**\n   * Filter all stores\n   */\n  private filterAll() {\n    this.stores.forEach((store: EntityStore) => this.filterStore(store));\n  }\n\n  /**\n   * Unfilter all stores\n   */\n  private unfilterAll() {\n    this.stores.forEach((store: EntityStore) => this.unfilterStore(store));\n  }\n\n  /**\n   * Filter a store and add it to the filters map\n   */\n  private filterStore(store: EntityStore) {\n    if (this.filters.has(store)) {\n      return;\n    }\n\n    const filter = (record: EntityRecord<object>) => {\n      return record.state.selected === true;\n    };\n    this.filters.set(store, store.stateView.addFilter(filter));\n  }\n\n  /**\n   * Unfilter a store and delete it from the filters map\n   */\n  private unfilterStore(store: EntityStore) {\n    const filterId = this.filters.get(store);\n    if (filterId === undefined) {\n      return;\n    }\n\n    store.stateView.removeFilter(filterId);\n    this.filters.delete(store);\n  }\n}\n","<mat-form-field class=\"igo-entity-selector\">\n  <mat-select\n    [disabled]=\"disabled\"\n    [value]=\"selected$ | async\"\n    [multiple]=\"multi\"\n    [placeholder]=\"placeholder\"\n    (selectionChange)=\"onSelectionChange($event)\">\n    <mat-option *ngIf=\"emptyText !== undefined && multi === false\" [value]=\"emptyValue\">{{emptyText}}</mat-option>\n    <mat-option *ngIf=\"multi === true\" [value]=\"multiSelectValue\">{{multiText$ | async}}</mat-option>\n    <ng-template ngFor let-record [ngForOf]=\"store.stateView.all$() | async\">\n      <mat-option [value]=\"record.entity\">\n        {{titleAccessor(record.entity)}}\n      </mat-option>\n    </ng-template>\n  </mat-select>\n</mat-form-field>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { EntityRecord } from '../shared/entity.interfaces';\nimport { EntityStore } from '../shared/store';\nimport { EntityStoreWatcher } from '../shared/watcher';\nimport { getEntityTitle } from '../shared/entity.utils';\n\n@Component({\n  selector: 'igo-entity-selector',\n  templateUrl: './entity-selector.component.html',\n  styleUrls: ['./entity-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntitySelectorComponent implements OnInit, OnDestroy {\n\n  /**\n   * The selected entity\n   * @internal\n   */\n  readonly selected$ = new BehaviorSubject<object>(undefined);\n\n  /**\n   * The current multi select option text\n   * @internal\n   */\n  readonly multiText$ = new BehaviorSubject<string>(undefined);\n\n  readonly multiSelectValue = {id: 'IGO_MULTI_SELECT'};\n\n  readonly emptyValue = {id: 'IGO_EMPTY_SELECT'};\n\n  /**\n   * Subscription to the selected entity\n   */\n  private selected$$: Subscription;\n\n  /**\n   * Store watcher\n   */\n  private watcher: EntityStoreWatcher<object>;\n\n  /**\n   * Entity store\n   */\n  @Input() store: EntityStore<object>;\n\n  /**\n   * Title accessor\n   */\n  @Input() titleAccessor: (object) => string = getEntityTitle;\n\n  /**\n   * Text to display when nothing is selected\n   */\n  @Input() emptyText: string = undefined;\n\n  /**\n   * Wheter selecting many entities is allowed\n   */\n  @Input() multi: boolean = false;\n\n  /**\n   * Text to display for the select all option\n   */\n  @Input() multiAllText: string = 'All';\n\n  /**\n   * Text to display for the select none option\n   */\n  @Input() multiNoneText: string = 'None';\n\n  /**\n   * Field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Wheter the selector is disabled or not\n   */\n  @Input() disabled: boolean = false;\n\n  /**\n   * Event emitted when the selection changes\n   */\n  @Output() selectedChange = new EventEmitter<{\n    selected: boolean;\n    value: object | object[];\n  }>();\n\n  constructor(private cdRef: ChangeDetectorRef) {}\n\n  /**\n   * Create a store watcher and subscribe to the selected entity\n   * @internal\n   */\n  ngOnInit() {\n    this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\n\n    this.selected$$ = this.store.stateView\n      .manyBy$((record: EntityRecord<object>) => record.state.selected === true)\n      .subscribe((records: EntityRecord<object>[]) => {\n        const entities = records.map((record: EntityRecord<object>) => record.entity);\n        this.onSelectFromStore(entities);\n      });\n  }\n\n  /**\n   * Unsubscribe to the selected entity and destroy the store watcher\n   * @internal\n   */\n  ngOnDestroy() {\n    this.watcher.destroy();\n    this.selected$$.unsubscribe();\n  }\n\n  /**\n   * On selection change, update the store's state and emit an event\n   * @internal\n   */\n  onSelectionChange(event: {value: object | undefined}) {\n    const values = event.value instanceof Array ? event.value : [event.value];\n\n    const multiSelect = values.find((_value: object) => _value === this.multiSelectValue);\n    let entities = values.filter((_value: object) => _value !== this.multiSelectValue);\n    if (multiSelect !== undefined) {\n      if (entities.length === this.store.count) {\n        entities = [];\n      } else if (entities.length < this.store.count) {\n        entities = this.store.all();\n      }\n    }\n\n    entities = entities.filter((entity: object) => entity !== this.emptyValue);\n    if (entities.length === 0) {\n      this.store.state.updateAll({selected: false});\n    } else {\n      this.store.state.updateMany(entities, {selected: true}, true);\n    }\n\n    const value = this.multi ? entities : event.value;\n    this.selectedChange.emit({selected: true, value});\n  }\n\n  private onSelectFromStore(entities: object[]) {\n    if (this.multi === true) {\n      this.selected$.next(entities);\n    } else {\n      const entity = entities.length > 0 ? entities[0] : undefined;\n      this.selected$.next(entity);\n    }\n\n    this.updateMultiToggleWithEntities(entities);\n  }\n\n  private updateMultiToggleWithEntities(entities: object[]) {\n    if (entities.length === this.store.count && this.multiText$.value !== this.multiNoneText) {\n      this.multiText$.next(this.multiNoneText);\n    } else if (entities.length < this.store.count && this.multiText$.value !== this.multiAllText) {\n      this.multiText$.next(this.multiAllText);\n    }\n  }\n\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[igoStopPropagation]'\n})\nexport class StopPropagationDirective {\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    event.stopPropagation();\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Renderer2,\n  EventEmitter,\n  Output,\n  HostListener\n} from '@angular/core';\n\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nimport { EntityTableScrollBehavior } from '../shared/entity.enums';\n\n/**\n * Directive that handles an entity table row click and selection.\n */\n@Directive({\n  selector: '[igoEntityTableRow]'\n})\nexport class EntityTableRowDirective {\n\n  /**\n   * Class added to a selected row\n   */\n  static selectedCls = 'igo-entity-table-row-selected';\n\n  /**\n   * Class added to a highlighted row\n   */\n  static highlightedCls = 'igo-entity-table-row-highlighted';\n\n  /**\n   * Whether a row supports selection\n   */\n  @Input() selection = false;\n\n  /**\n   * Whether clicking a row should select it (if selection is true)\n   */\n  @Input() selectOnClick: boolean = true;\n\n  /**\n   * Whether the selected row should be highlighted\n   */\n  @Input() highlightSelection: boolean = true;\n\n  /**\n   * Whether a row is selected\n   */\n  @Input()\n  set selected(value: boolean) {\n    if (this.selection === false) { return; }\n    if (value === this._selected) { return; }\n\n    this.toggleSelected(value);\n    this.scroll();\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n  private _selected = false;\n\n  /**\n   * Scroll behavior on selection\n   */\n  @Input()\n  scrollBehavior: EntityTableScrollBehavior = EntityTableScrollBehavior.Auto;\n\n  /**\n   * Event emitted when a row is selected\n   */\n  @Output() select = new EventEmitter<EntityTableRowDirective>();\n\n  /**\n   * When a row is clicked, select it if it's supported\n   * @ignore\n   */\n  @HostListener('click')\n  onClick() {\n    if (this.selection === false || this.selectOnClick === false) {\n      return;\n    }\n\n    this.toggleSelected(true);\n    this.select.emit(this);\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  /**\n   * Select a row and add or remove the selected class from it\n   * @param selected Whether the row should be selected\n   */\n  private toggleSelected(selected: boolean) {\n    this._selected = selected;\n    if (selected === true) {\n      this.addCls(EntityTableRowDirective.selectedCls);\n      if (this.highlightSelection === true) {\n        this.addCls(EntityTableRowDirective.highlightedCls);\n      }\n    } else {\n      this.removeCls(EntityTableRowDirective.selectedCls);\n      this.removeCls(EntityTableRowDirective.highlightedCls);\n    }\n  }\n\n  /**\n   * Scroll to the selected row\n   */\n  private scroll() {\n    if (this._selected === true) {\n      scrollIntoView(this.el.nativeElement, {\n        scrollMode: 'if-needed',\n        behavior: 'smooth',\n        block: 'end',\n        inline: 'nearest'\n      });\n    }\n  }\n\n  /**\n   * Add the selected CSS class\n   */\n  private addCls(cls: string) {\n    this.renderer.addClass(this.el.nativeElement, cls);\n  }\n\n  /**\n   * Remove the selected CSS class\n   */\n  private removeCls(cls: string) {\n    this.renderer.removeClass(this.el.nativeElement, cls);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  OnChanges,\n  ViewChild,\n  Output,\n  EventEmitter,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  EntityStore\n} from '../shared';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { LanguageService, MediaService } from '@igo2/core';\nimport { EntityTablePaginatorOptions } from './entity-table-paginator.interface';\n\n@Component({\n  selector: 'igo-entity-table-paginator',\n  templateUrl: './entity-table-paginator.component.html',\n  styleUrls: ['./entity-table-paginator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntityTablePaginatorComponent implements OnChanges, OnDestroy {\n\n  public disabled: boolean = false;\n  public hidePageSize: boolean = false;\n  public pageIndex: number = 0;\n  public pageSize: number = 50;\n  public pageSizeOptions: number[] = [5, 10, 20, 50, 100, 200];\n  public showFirstLastButtons: boolean = true;\n  private count$$: Subscription;\n  private entitySortChange$$: Subscription;\n  private paginationLabelTranslation$$: Subscription[] = [];\n\n  @Input() entitySortChange$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  /**\n   * Entity store\n   */\n  @Input() store: EntityStore<object>;\n\n  /**\n   * Paginator options\n   */\n  @Input()\n  paginatorOptions: EntityTablePaginatorOptions;\n\n  /**\n   * Event emitted when the paginator changes the page size or page index.\n   */\n  @Output() page: EventEmitter<PageEvent>;\n\n  public length: number = 0;\n\n  /**\n   * Paginator emitted.\n   */\n  @Output() paginatorChange: EventEmitter<MatPaginator> = new EventEmitter<MatPaginator>();\n\n  constructor(private languageService: LanguageService, private mediaService: MediaService) {}\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  ngOnChanges() {\n    this.unsubscribeAll();\n    this.count$$ = this.store.stateView.count$.subscribe((count) => {\n      this.length = count;\n      this.emitPaginator();\n    });\n    this.entitySortChange$$ = this.entitySortChange$.subscribe(() => {\n      if (this.paginator) {\n        this.paginator.firstPage();\n      }\n    });\n    this.initPaginatorOptions();\n    this.translateLabels();\n  }\n\n  initPaginatorOptions() {\n    this.disabled = this.paginatorOptions?.disabled || this.disabled;\n    this.pageIndex = this.paginatorOptions?.pageIndex || this.pageIndex;\n    this.pageSize = this.paginatorOptions?.pageSize || this.pageSize;\n    this.pageSizeOptions = this.paginatorOptions?.pageSizeOptions || this.pageSizeOptions;\n    if (this.mediaService.isMobile()) {\n      this.showFirstLastButtons = false;\n      this.hidePageSize = true;\n    } else {\n      this.showFirstLastButtons = this.paginatorOptions?.showFirstLastButtons || this.showFirstLastButtons;\n      this.hidePageSize = this.paginatorOptions?.hidePageSize || this.hidePageSize;\n    }\n  }\n\n  translateLabels() {\n\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.firstPageLabel').subscribe((label: string) => {\n        this.paginator._intl.firstPageLabel = label;\n      }));\n\n    this.paginator._intl.getRangeLabel = this.rangeLabel;\n\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.itemsPerPageLabel').subscribe((label: string) => {\n        this.paginator._intl.itemsPerPageLabel = label;\n      }));\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.lastPageLabel').subscribe((label: string) => {\n        this.paginator._intl.lastPageLabel = label;\n      }));\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.nextPageLabel').subscribe((label: string) => {\n        this.paginator._intl.nextPageLabel = label;\n      }));\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.previousPageLabel').subscribe((label: string) => {\n        this.paginator._intl.previousPageLabel = label;\n      }));\n  }\n\n  rangeLabel = (page: number, pageSize: number, length: number) => {\n    const of: BehaviorSubject<string> = new BehaviorSubject('');\n\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.of').subscribe((label: string) => {\n        of.next(label);\n      }));\n    if (length === 0 || pageSize === 0) { return `0 ${of.value} ${length}`; }\n    length = Math.max(length, 0);\n    const startIndex = page * pageSize;\n    const endIndex = startIndex < length ?\n        Math.min(startIndex + pageSize, length) :\n        startIndex + pageSize;\n    return `${startIndex + 1} - ${endIndex} ${of.value} ${length}`;\n  }\n\n  private unsubscribeAll() {\n    this.paginationLabelTranslation$$.map(sub => sub.unsubscribe());\n    if (this.count$$) { this.count$$.unsubscribe(); }\n    if (this.entitySortChange$$) { this.entitySortChange$$.unsubscribe(); }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeAll();\n  }\n\n  emitPaginator() {\n    this.paginatorChange.emit(this.paginator);\n  }\n}\n","<mat-paginator \n  [disabled]=\"disabled\"\n  [hidePageSize]=\"hidePageSize\"\n  [length]=\"length\"\n  [pageIndex]=\"pageIndex\"\n  [pageSize]=\"pageSize\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  [showFirstLastButtons]=\"showFirstLastButtons\"\n  (page)=\"emitPaginator()\">\n</mat-paginator>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Cacheable } from 'ts-cacheable';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Pipe({\n  name: 'secureImage'\n})\nexport class SecureImagePipe implements PipeTransform {\n  constructor(private http: HttpClient) {}\n\n  @Cacheable({\n    maxCacheCount: 20\n  })\n  transform(url: string): Observable<string> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'text/plain',\n      activityInterceptor: 'false'\n    });\n\n    return this.http\n      .get(url, {\n        headers,\n        responseType: 'blob'\n      })\n      .pipe(\n        switchMap((blob) => {\n          return new Observable((observer) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.onloadend = () => {\n              observer.next(reader.result);\n              observer.complete();\n            };\n          });\n        })\n      ) as Observable<string>;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({ name: 'sanitizeHtml' })\nexport class SanitizeHtmlPipe implements PipeTransform {\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n  transform(v: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(v);\n  }\n}\n","<div class=\"table-container\">\n    <table mat-table matSort [ngClass]=\"getTableClass()\" [dataSource]=\"dataSource\" [trackBy]=\"getTrackByFunction()\" (matSortChange)=\"onSort($event)\">\n        <ng-container matColumnDef=\"selectionCheckbox\" class=\"mat-cell-checkbox\">\n            <th mat-header-cell *matHeaderCellDef>\n                <ng-container *ngIf=\"selectMany\">\n                    <ng-container *ngIf=\"selectionState$ | async as selectionState\">\n                        <mat-checkbox (change)=\"onToggleRows($event.checked)\" [checked]=\"selectionState === entityTableSelectionState.All\"\n                        [indeterminate]=\"selectionState === entityTableSelectionState.Some\">\n                        </mat-checkbox>\n                    </ng-container>\n                </ng-container>\n            </th>\n            <td mat-cell *matCellDef=\"let record\">\n                <mat-checkbox (mousedown)=\"$event.shiftKey ? $event.preventDefault() : null\" (click)=\"$event.shiftKey ?\n                onShiftToggleRow(!rowIsSelected(record), record, $event) : $event.stopPropagation()\" (change)=\"onToggleRow($event.checked,record)\"\n                [checked]=\"rowIsSelected(record)\">\n                </mat-checkbox>\n            </td>\n        </ng-container>\n\n        <ng-container [matColumnDef]=\"column.name\" *ngFor=\"let column of template.columns\">\n            <ng-container *ngIf=\"columnIsSortable(column)\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header [matTooltip]=\"column.tooltip ? column.tooltip : undefined\">\n                    {{column.title}}\n                </th>\n            </ng-container>\n\n            <ng-container *ngIf=\"!columnIsSortable(column)\">\n                <th mat-header-cell *matHeaderCellDef [matTooltip]=\"column.tooltip ? column.tooltip : undefined\">\n                    {{column.title}}\n                </th>\n            </ng-container>\n\n            <ng-container *ngIf=\"getColumnRenderer(column) as columnRenderer\">\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.Default\">\n                    <ng-container *matCellDef=\"let record\">\n                        <td mat-cell class=\"mat-cell-text\" *ngIf=\"!isUrl(getValue(record, column));else isAnUrlDefault\" [ngClass]=\"getCellClass(record, column)\">\n                            {{getValue(record, column)}}\n                        </td>\n                        <ng-template #isAnUrlDefault>\n                            <td mat-cell class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                                <a href=\"{{getValue(record, column)}}\" target='_blank' rel=\"noopener noreferrer\" (click)=\"$event.stopPropagation()\">\n                                    <img *ngIf=\"isImg(getValue(record, column));else notImg\" src=\"{{(getValue(record, column) | secureImage) | async}}\" width=\"50\" heigth=\"auto\">\n                                    <ng-template #notImg><span>{{\n                      'igo.common.entity-table.targetHtmlUrl' | translate }}\n                    </span></ng-template>\n                                </a>\n                            </td>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.HTML\">\n                    <ng-container *matCellDef=\"let record\">\n                        <td mat-cell class=\"mat-cell-text\" *ngIf=\"!isUrl(getValue(record, column));else isAnUrlHTML\" [ngClass]=\"getCellClass(record, column)\"\n                        [innerHTML]=\"getValue(record, column)\">\n                        </td>\n                        <ng-template #isAnUrlHTML>\n                            <td mat-cell class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                                <a href=\"{{getValue(record, column)}}\" target='_blank' rel=\"noopener noreferrer\" (click)=\"$event.stopPropagation()\">\n                                    <img *ngIf=\"isImg(getValue(record, column));else notImg\" src=\"{{(getValue(record, column) | secureImage) | async}}\" width=\"50\" heigth=\"auto\">\n                                    <ng-template #notImg><span>{{ 'igo.geo.targetHtmlUrl' |\n                      translate }} </span></ng-template>\n                                </a>\n                            </td>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.UnsanitizedHTML\">\n                    <ng-container *matCellDef=\"let record\">\n                        <td mat-cell class=\"mat-cell-text edition\" [formGroup]=\"formGroup\" *ngIf=\"isEdition(record);else isUnsanitizedHTML\"\n                        [ngClass]=\"getCellClass(record, column)\">\n                            <div class=\"date-picker\" *ngIf=\"column.type === 'date'\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <input matInput [matDatepicker]=\"picker\" [formControlName]=\"column.name\" value=\"{{getValue(record, column)}}\"\n                                (dateChange)=\"onDateChange(column.name, record, $event)\">\n                                <mat-datepicker #picker></mat-datepicker>\n                            </div>\n                            <input matInput type=\"time\" *ngIf=\"column.type === 'time'\" [formControlName]=\"column.name\" step=\"900\" (focus)=\"column.onFocus($event)\"\n                            (keypress)=\"column.onChange($event)\" (blur)=\"column.onBlur($event)\">\n                            <input matInput type=\"number\" class=\"class_number_edition\" *ngIf=\"column.type === 'number'\" [formControlName]=\"column.name\" step=\"{{column.step}}\"\n                            value=\"{{getValue(record,column)}}\" (input)=\"onValueChange(column.name, record, $event)\"\n                            readonly=\"{{getValidationAttributeValue(column, 'readonly')}}\" required=\"{{getValidationAttributeValue(column, 'mandatory')}}\"\n                            min=\"{{getValidationAttributeValue(column, 'minValue')}}\" max=\"{{getValidationAttributeValue(column, 'maxValue')}}\">\n                            <input matInput type=\"text\" *ngIf=\"!column.type || column.type ==='string'\" [formControlName]=\"column.name\"\n                            value=\"{{getValue(record, column)}}\" (input)=\"onValueChange(column.name, record, $event)\"\n                            readonly=\"{{getValidationAttributeValue(column, 'readonly')}}\" required=\"{{getValidationAttributeValue(column, 'mandatory')}}\">\n                            <mat-checkbox *ngIf=\"column.type === 'boolean'\" [formControlName]=\"column.name\" [checked]=\"getValue(record,column)\"\n                            (change)=\"onBooleanValueChange(column.name, record,$event)\"></mat-checkbox>\n                            <mat-select *ngIf=\"column.type === 'list'\" required=\"{{getValidationAttributeValue(column, 'mandatory')}}\"\n                            [formControlName]=\"column.name\" [multiple]=\"column.multiple\" (selectionChange)=\"onSelectValueChange(column.name, record, $event)\"\n                            [value]=\"getValue(record, column)\">\n                                <mat-option *ngFor=\"let option of column.domainValues\" [value]=\"option.id\" [disabled]=\"option.disabled\">\n                                    {{ option.value }}\n                                </mat-option>\n                            </mat-select>\n                            <input matInput type=\"text\" [formControlName]=\"column.name\" *ngIf=\"column.type === 'autocomplete'\"\n                            [matAutocomplete]=\"auto\" required=\"{{getValidationAttributeValue(column, 'mandatory')}}\" value=\"{{getValue(record, column)}}\">\n                                <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onAutocompleteValueChange(column.name, record, $event)\"\n                                panelWidth=\"430px\">\n                                    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.id\">\n                                        {{ option.value }}\n                                    </mat-option>\n                                </mat-autocomplete>\n                        </td>\n                        <ng-template #isUnsanitizedHTML>\n                            <td mat-cell class=\"mat-cell-text\" *ngIf=\"!isUrl(getValue(record, column));else isAnUrlUnsanitizedHTML\" [ngClass]=\"getCellClass(record, column)\"\n                            [innerHTML]=\"getValue(record, column) | sanitizeHtml\">\n                            </td>\n                            <ng-template #isAnUrlUnsanitizedHTML>\n                                <td mat-cell class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                                    <a href=\"{{getValue(record, column)}}\" target='_blank' rel=\"noopener noreferrer\" (click)=\"$event.stopPropagation()\">\n                                        <img *ngIf=\"isImg(getValue(record, column));else notImg\" src=\"{{(getValue(record, column) | secureImage) | async}}\" width=\"50\" heigth=\"auto\">\n                                        <ng-template #notImg><span>{{ 'igo.geo.targetHtmlUrl' | translate }} </span></ng-template>\n                                    </a>\n                                </td>\n                            </ng-template>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.Icon\">\n                    <td mat-cell *matCellDef=\"let record\" class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                        <mat-icon svgIcon=\"{{getValue(record, column)|| column.icon}}\" (click)=\"column.onClick($event)\"></mat-icon>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.ButtonGroup\">\n                    <ng-container *matCellDef=\"let record\">\n                        <td mat-cell class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                            <span *ngFor=\"let button of getValue(record, column)\">\n                                <ng-container *ngIf=\"isEdition(record) === button.editMode\">\n                                    <button *ngIf=\"button.style === 'mat-icon-button'\" igoStopPropagation mat-icon-button\n                                        [color]=\"button.color\" (mousedown)=\"onButtonClick(button.click, record)\" [disabled]=\"button.disabled\">\n                                        <mat-icon svgIcon=\"{{button.icon}}\"></mat-icon>\n                                    </button>\n                                    <button *ngIf=\"button.style !== 'mat-icon-button'\" igoStopPropagation mat-mini-fab\n                                        [color]=\"button.color\" (mousedown)=\"onButtonClick(button.click, record)\" [disabled]=\"button.disabled\">\n                                        <mat-icon svgIcon=\"{{button.icon}}\"></mat-icon>\n                                    </button>\n                                </ng-container>\n                            </span>\n                        </td>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"headers; sticky: fixedHeader;\" [ngClass]=\"getHeaderClass()\">\n        </tr>\n        <tr mat-row igoEntityTableRow *matRowDef=\"let record; columns: headers;\" [scrollBehavior]=\"scrollBehavior\" [ngClass]=\"getRowClass(record)\" [selection]=\"selection\" [selected]=\"rowIsSelected(record)\" (select)=\"onRowSelect(record)\" (click)=\"onRowClick(record)\">\n        </tr>\n    </table>\n    <igo-entity-table-paginator *ngIf=\"withPaginator\" [store]=\"store\" [paginatorOptions]=\"paginatorOptions\" [entitySortChange$]=\"entitySortChange$\" (paginatorChange)=\"paginatorChange($event)\">\n    </igo-entity-table-paginator>\n</div>","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  ElementRef,\n  Optional,\n  Self\n} from '@angular/core';\n\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport {\n  EntityKey,\n  EntityRecord,\n  EntityState,\n  EntityStore,\n  EntityTableTemplate,\n  EntityTableColumn,\n  EntityTableColumnRenderer,\n  EntityTableSelectionState,\n  EntityTableScrollBehavior\n} from '../shared';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { EntityTablePaginatorOptions } from '../entity-table-paginator/entity-table-paginator.interface';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { FormBuilder, NgControl, NgForm, FormControlName, FormGroup } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { DateAdapter, ErrorStateMatcher } from '@angular/material/core';\nimport { map } from 'rxjs/operators';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Component({\n  selector: 'igo-entity-table',\n  templateUrl: './entity-table.component.html',\n  styleUrls: ['./entity-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: MatFormFieldControl, useExisting: EntityTableComponent }]\n})\nexport class EntityTableComponent implements OnInit, OnChanges, OnDestroy {\n\n  entitySortChange$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  public formGroup: FormGroup = new FormGroup({});\n\n  public filteredOptions: Observable<any[]>;\n\n  /**\n   * Reference to the column renderer types\n   * @internal\n   */\n  entityTableColumnRenderer = EntityTableColumnRenderer;\n\n  /**\n   * Reference to the selection's state\n   * @internal\n   */\n  entityTableSelectionState = EntityTableSelectionState;\n\n  /**\n   * Observable of the selection,s state\n   * @internal\n   */\n  readonly selectionState$: BehaviorSubject<EntityTableSelectionState> = new BehaviorSubject(undefined);\n\n  /**\n   * Subscription to the store's selection\n   */\n  private selection$$: Subscription;\n\n  /**\n   * Subscription to the dataSource\n   */\n  private dataSource$$: Subscription;\n\n  /**\n   * The last record checked. Useful for selecting\n   * multiple records by holding the shift key and checking\n   * checkboxes.\n   */\n  private lastRecordCheckedKey: EntityKey;\n\n  /**\n   * Entity store\n   */\n  @Input() store: EntityStore<object>;\n\n  /**\n   * Table paginator\n   */\n  @Input() set paginator(value: MatPaginator) {\n    this._paginator = value;\n    this.dataSource.paginator = value;\n  }\n\n  get paginator(): MatPaginator {\n    return this._paginator;\n  }\n  private _paginator: MatPaginator;\n\n  /**\n   * Table template\n   */\n  @Input() template: EntityTableTemplate;\n\n  /**\n   * Scroll behavior on selection\n   */\n  @Input()\n  scrollBehavior: EntityTableScrollBehavior = EntityTableScrollBehavior.Auto;\n\n  /**\n   * Whether nulls should be first when sorting\n   */\n  @Input()\n  sortNullsFirst: boolean = false;\n\n  /**\n   * Show the table paginator or not. False by default.\n   */\n  @Input()\n  withPaginator: boolean = false;\n\n  /**\n   * Paginator options\n   */\n  @Input()\n  paginatorOptions: EntityTablePaginatorOptions;\n\n  /**\n   * Event emitted when an entity (row) is clicked\n   */\n  @Output() entityClick = new EventEmitter<object>();\n\n  /**\n   * Event emitted when an entity (row) is selected\n   */\n  @Output() entitySelectChange = new EventEmitter<{\n    added: object[];\n  }>();\n\n  /**\n   * Event emitted when the table sort is changed.\n   */\n  @Output() entitySortChange: EventEmitter<{column: EntityTableColumn, direction: string}> = new EventEmitter(undefined);\n\n  /**\n   * Table headers\n   * @internal\n   */\n  get headers(): string[] {\n    let columns = this.template.columns\n      .filter((column: EntityTableColumn) => column.visible !== false)\n      .map((column: EntityTableColumn) => column.name);\n\n    if (this.selectionCheckbox === true) {\n      columns = ['selectionCheckbox'].concat(columns);\n    }\n\n    return columns;\n  }\n\n  /**\n   * Data source consumable by the underlying material table\n   * @internal\n   */\n  dataSource = new MatTableDataSource<object>();\n\n  /**\n   * Whether selection is supported\n   * @internal\n   */\n  get selection(): boolean { return this.template.selection || false; }\n\n  /**\n   * Whether a selection checkbox should be displayed\n   * @internal\n   */\n  get selectionCheckbox(): boolean { return this.template.selectionCheckbox || false; }\n\n  /**\n   * Whether selection many entities should eb supported\n   * @internal\n   */\n  get selectMany(): boolean { return this.template.selectMany || false; }\n\n  /**\n   * Whether selection many entities should eb supported\n   * @internal\n   */\n  get fixedHeader(): boolean { return this.template.fixedHeader === undefined ? true : this.template.fixedHeader; }\n\n  constructor(private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    protected _focusMonitor: FocusMonitor,\n    protected _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Self() public ngControl: NgControl,\n    @Optional() protected _parentForm: NgForm,\n    @Optional() protected _controlName: FormControlName,\n    protected _defaultErrorStateMatcher: ErrorStateMatcher,\n    private dateAdapter: DateAdapter<Date>\n  ) {\n    this.dateAdapter.setLocale('fr-CA');\n  }\n\n  /**\n   * Track the selection state to properly display the selection checkboxes\n   * @internal\n   */\n  ngOnInit() {\n    this.handleDatasource();\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const store = changes.store;\n    if (store && store.currentValue !== store.previousValue) {\n      this.handleDatasource();\n    }\n  }\n\n  /**\n   * Process text or number value change (edition)\n   */\n  onValueChange(column: string, record: EntityRecord<any>, event) {\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = event.target.value;\n  }\n\n  /**\n   * Process boolean value change (edition)\n   */\n  onBooleanValueChange(column: string, record: EntityRecord<any>, event) {\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = event.checked;\n  }\n\n  /**\n   * Process select value change (edition)\n   */\n  onSelectValueChange(column: string, record: EntityRecord<any>, event) {\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = event.value;\n  }\n\n  /**\n   * Process autocomplete value change (edition)\n   */\n  onAutocompleteValueChange(column: string, record: EntityRecord<any>, event) {\n    this.formGroup.controls[column].setValue(event.option.viewValue);\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = event.option.value;\n  }\n\n  /**\n   * Process date value change (edition)\n   */\n  onDateChange(column: string, record: EntityRecord<any>, event) {\n    const format = \"YYYY-MM-DD\";\n    const value = moment(event.value).format(format);\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = value;\n  }\n\n  /**\n   * Enable edition mode for one row\n   * More than one row can be edited at the same time\n   */\n  private enableEdit(record: EntityRecord<any>) {\n    const item = record.entity.properties || record.entity;\n    this.template.columns.forEach(column => {\n      column.title = column.validation?.mandatory && !column.title.includes('*') ? column.title + ' *' : column.title;\n\n      const key = this.getColumnKeyWithoutPropertiesTag(column.name);\n      if (column.type === 'boolean') {\n        if (!item[key] || item[key] === null) {\n          item[key] = false;\n        } else if (typeof item[key] === 'string') {\n          item[key] = JSON.parse(item[key].toLowerCase());\n        }\n        this.formGroup.setControl(column.name, this.formBuilder.control(\n          item[key]\n        ));\n      } else if (column.type === 'list') {\n        if (column.multiple) {\n          this.formGroup.setControl(column.name, this.formBuilder.control(\n            [item[key]]\n          ));\n        } else {\n          this.formGroup.setControl(column.name, this.formBuilder.control(\n            item[key]\n          ));\n\n          typeof item[key] === 'string' ?\n            this.formGroup.controls[column.name].setValue(parseInt(item[key])) :\n            this.formGroup.controls[column.name].setValue(item[key]);\n        }\n      } else if (column.type === 'autocomplete') {\n        this.formGroup.setControl(column.name, this.formBuilder.control(\n          item[key]\n        ));\n\n        this.filteredOptions = this.formGroup.controls[column.name].valueChanges.pipe(\n          map(value => {\n            if (value.length) {\n              return column.domainValues.filter((option) => {\n                const filterNormalized = value ? value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : '';\n                const featureNameNormalized = option.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n                return featureNameNormalized.includes(filterNormalized);\n              });\n            }\n          })\n        );\n\n        let formControlValue = item[key];\n        column.domainValues.forEach(option => {\n          if (typeof formControlValue === 'string' && /^\\d+$/.test(formControlValue)) {\n            formControlValue = parseInt(formControlValue);\n          }\n          if (option.value === formControlValue || option.id === formControlValue) {\n            formControlValue = option.value;\n          }\n        });\n\n        this.formGroup.controls[column.name].setValue(formControlValue);\n      } else if (column.type === 'date') {\n        if (column.visible) {\n          if (item[key]) {\n            let date = moment(item[key]);\n            item[key] = date.utc().format('YYYY-MM-DD');\n            this.formGroup.setControl(column.name, this.formBuilder.control(\n              item[key]\n            ));\n          } else {\n            const newKey = this.getColumnKeyWithoutPropertiesTag(column.name);\n            record.entity.properties[newKey] = null;\n            this.formGroup.setControl(column.name, this.formBuilder.control(\n              null\n            ));\n          }\n        }\n      } else {\n        this.formGroup.setControl(column.name, this.formBuilder.control(\n          item[key]\n        ));\n      }\n\n      if (this.formGroup.controls[column.name] && this.getValidationAttributeValue(column, 'readonly')) {\n        this.formGroup.controls[column.name].disable();\n      }\n    });\n  }\n\n  private handleDatasource() {\n    this.unsubscribeStore();\n    this.selection$$ = this.store.stateView\n      .manyBy$((record: EntityRecord<object>) => record.state.selected === true)\n      .subscribe((records: EntityRecord<object>[]) => {\n        const firstSelected = records[0];\n        const firstSelectedStateviewPosition = this.store.stateView.all().indexOf(firstSelected);\n        const pageMax = this.paginator ? this.paginator.pageSize * (this.paginator.pageIndex + 1) : 0;\n        const pageMin = this.paginator ? pageMax - this.paginator.pageSize : 0;\n\n        if (\n          this.paginator &&\n          (firstSelectedStateviewPosition < pageMin ||\n          firstSelectedStateviewPosition >= pageMax)) {\n          const pageToReach = Math.floor(firstSelectedStateviewPosition / this.paginator.pageSize);\n          this.dataSource.paginator.pageIndex = pageToReach;\n        }\n        this.selectionState$.next(this.computeSelectionState(records));\n      });\n    this.dataSource$$ = this.store.stateView.all$().subscribe((all) => {\n      if (all[0]) {\n        this.enableEdit(all[0]);\n      }\n      this.dataSource.data = all;\n    });\n\n  }\n\n  /**\n   * Unbind the store watcher\n   * @internal\n   */\n  ngOnDestroy() {\n    this.unsubscribeStore();\n  }\n\n  private unsubscribeStore() {\n    if (this.selection$$) {\n      this.selection$$.unsubscribe();\n    }\n    if (this.dataSource$$) {\n      this.dataSource$$.unsubscribe();\n    }\n  }\n\n  /**\n   * Trackby function\n   * @param record Record\n   * @param index Record index\n   * @internal\n   */\n  getTrackByFunction() {\n    return (index: number, record: EntityRecord<object, EntityState>) => {\n      return record.ref;\n    };\n  }\n\n  /**\n   * Trigger a refresh of thre table. This can be useful when\n   * the data source doesn't emit a new value but for some reason\n   * the records need an update.\n   * @internal\n   */\n  refresh() {\n    this.cdRef.detectChanges();\n  }\n\n  paginatorChange(event: MatPaginator) {\n    this.paginator = event;\n  }\n\n  /**\n   * On sort, sort the store\n   * @param event Sort event\n   * @internal\n   */\n  onSort(event: {active: string, direction: string}) {\n    const direction = event.direction;\n    const column = this.template.columns\n      .find((c: EntityTableColumn) => c.name === event.active);\n\n    if (direction === 'asc' || direction === 'desc') {\n      this.store.stateView.sort({\n        valueAccessor: (record: EntityRecord<object>) => this.getValue(record, column),\n        direction,\n        nullsFirst: this.sortNullsFirst\n      });\n      this.entitySortChange.emit({column, direction});\n      this.entitySortChange$.next(true);\n    } else {\n      this.store.stateView.sort(undefined);\n    }\n  }\n\n  /**\n   * When an entity is clicked, emit an event\n   * @param record Record\n   * @internal\n   */\n  onRowClick(record: EntityRecord<object>) {\n    this.lastRecordCheckedKey = this.store.stateView.getKey(record);\n    this.entityClick.emit(record.entity);\n  }\n\n  /**\n   * When an entity is selected, select it in the store and emit an event. Even if\n   * \"many\" is set to true, this method always select a single, exclusive row. Selecting\n   * multiple rows should be achieved by using the checkboxes.\n   * @param record Record\n   * @internal\n   */\n  onRowSelect(record: EntityRecord<object>) {\n    if (this.selection === false) { return; }\n\n    const entity = record.entity;\n    this.store.state.update(entity, {selected: true}, true);\n    this.entitySelectChange.emit({added: [entity]});\n  }\n\n  /**\n   * Select or unselect all rows at once. On select, emit an event.\n   * @param toggle Select or unselect\n   * @internal\n   */\n  onToggleRows(toggle: boolean) {\n    if (this.selection === false) { return; }\n\n    this.store.state.updateAll({selected: toggle});\n    if (toggle === true) {\n      const entities = this.store.stateView\n        .all()\n        .map((record: EntityRecord<object>) => record.entity);\n      this.entitySelectChange.emit({added: [entities]});\n    }\n  }\n\n  /**\n   * When an entity is toggled, select or unselect it in the store. On select,\n   * emit an event.\n   * @param toggle Select or unselect\n   * @param record Record\n   * @internal\n   */\n  onToggleRow(toggle: boolean, record: EntityRecord<object>) {\n    if (this.selection === false) { return; }\n\n    const entity = record.entity;\n    const exclusive = toggle === true && !this.selectMany;\n    this.store.state.update(entity, {selected: toggle}, exclusive);\n    if (toggle === true) {\n      this.entitySelectChange.emit({added: [entity]});\n    }\n    this.lastRecordCheckedKey = this.store.stateView.getKey(record);\n  }\n\n  /**\n   * When an entity is toggled, select or unselect it in the store. On select,\n   * emit an event.\n   * @param toggle Select or unselect\n   * @param record Record\n   * @internal\n   */\n  onShiftToggleRow(toggle: boolean, record: EntityRecord<object>, event: MouseEvent) {\n    if (this.selection === false) { return; }\n\n    if (this.selectMany === false || this.lastRecordCheckedKey === undefined) {\n      this.onToggleRow(toggle, record);\n      return;\n    }\n\n    // This is a workaround mat checkbox wrong behavior\n    // when the shift key is held.\n    // See https://github.com/angular/components/issues/6232\n    const range = window.document.createRange();\n    range.selectNode(event.target as HTMLElement);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(range);\n    event.stopImmediatePropagation();\n\n    const records = this.store.stateView.all();\n    const recordIndex = records.indexOf(record);\n    const lastRecordChecked = this.store.stateView.get(this.lastRecordCheckedKey);\n    const lastRecordIndex = records.indexOf(lastRecordChecked);\n    const indexes = [recordIndex, lastRecordIndex];\n    const selectRecords = records.slice(Math.min(...indexes), Math.max(...indexes) + 1);\n\n    const entities = selectRecords.map((_record: EntityRecord<object>) => _record.entity);\n    this.store.state.updateMany(entities, {selected: toggle});\n    if (toggle === true) {\n      this.entitySelectChange.emit({added: entities});\n    }\n    this.lastRecordCheckedKey = this.store.stateView.getKey(record);\n  }\n\n  /**\n   * Compute the selection state\n   * @returns Whether all, some or no rows are selected\n   * @internal\n   */\n  private computeSelectionState(selectedRecords: EntityRecord<object>[]): EntityTableSelectionState {\n    const states = EntityTableSelectionState;\n    const selectionCount = selectedRecords.length;\n    return selectionCount === 0 ?\n      states.None :\n      (selectionCount === this.store.stateView.count ? states.All : states.Some);\n  }\n\n  /**\n   * Whether a column is sortable\n   * @param column Column\n   * @returns True if a column is sortable\n   * @internal\n   */\n  columnIsSortable(column: EntityTableColumn): boolean {\n    let sortable = column.sort;\n    if (sortable === undefined) {\n      sortable = this.template.sort === undefined ? false : this.template.sort;\n    }\n    return sortable;\n  }\n\n  /**\n   * Whether a row is should be selected based on the underlying entity state\n   * @param record Record\n   * @returns True if a row should be selected\n   * @internal\n   */\n  rowIsSelected(record: EntityRecord<object>): boolean {\n    const state = record.state;\n    return state.selected ? state.selected : false;\n  }\n\n  isImg(value) {\n    if (this.isUrl(value)) {\n      return (\n        ['jpg', 'png', 'gif'].indexOf(value.split('.').pop().toLowerCase()) !== -1\n      );\n    } else {\n      return false;\n    }\n  }\n\n  isUrl(value) {\n    if (typeof value === 'string') {\n      return (\n        value.slice(0, 8) === 'https://' || value.slice(0, 7) === 'http://'\n      );\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Method to access an entity's values\n   * @param record Record\n   * @param column Column\n   * @returns Any value\n   * @internal\n   */\n  getValue(record: EntityRecord<object>, column: EntityTableColumn): any {\n    const entity = record.entity;\n    let value;\n    if (column.valueAccessor !== undefined) {\n      return column.valueAccessor(entity, record);\n    }\n    if (this.template.valueAccessor !== undefined) {\n      return this.template.valueAccessor(entity, column.name, record);\n    }\n    value = this.store.getProperty(entity, column.name);\n\n    if (column.type === 'boolean') {\n      if (value === undefined || value === null || value === '') {\n        value = false;\n      } else if (typeof value !== 'boolean' && value !== undefined) {\n        if (typeof value === 'number'){\n          value = Boolean(value);\n        } else {\n          value = JSON.parse(value.toLowerCase());\n        }\n      }\n      if (!this.isEdition(record)){\n        value = value ? '&#10003;' : ''; // check mark\n      }\n    } else if (column.type === 'list' && value && column.domainValues) {\n      if (column.multiple) {\n        let list_id;\n        typeof value === 'string' ? list_id = value.match(/[\\w.-]+/g).map(Number) : list_id = value;\n        let list_option = [];\n\n        column.domainValues.forEach(option => {\n          if (list_id.includes(option.id)) {\n            if (record.edition) {\n              list_option.push(option.id);\n            } else {\n              list_option.push(option.value);\n            }\n          }\n        });\n\n        this.isEdition(record) ? value = list_id : value = list_option;\n      } else {\n        column.domainValues.forEach(option => {\n          if (typeof value === 'string' && /^\\d+$/.test(value)) {\n            value = parseInt(value);\n          }\n          if (option.value === value || option.id === value) {\n            this.isEdition(record) ? value = option.id : value = option.value;\n          }\n        });\n      }\n    } else if (column.type === 'autocomplete' && value && column.domainValues) {\n      column.domainValues.forEach(option => {\n        if (typeof value === 'string' && /^\\d+$/.test(value)) {\n          value = parseInt(value);\n        }\n        if (option.value === value || option.id === value) {\n          value = option.value;\n        }\n      });\n    }\n    else if (column.type === 'date') {\n      if (this.isEdition(record)) {\n        if (value) {\n          let date = moment(value);\n          value = date.format();\n          this.formGroup.controls[column.name].setValue(value);\n        }\n      } else if (!this.isEdition(record) && value === null) {\n        value = \"\";\n      }\n    }\n\n    if (value === undefined) {\n      value = '';\n    }\n\n    return value;\n  }\n\n  /**\n   * Method to access an entity's validation values\n   * @param column Column\n   * @param validationType string\n   * @returns Any value (false if no validation or not the one concerned)\n   * @internal\n   */\n  getValidationAttributeValue(column: EntityTableColumn, validationType: string): any {\n    if (column.validation !== undefined && column.validation[validationType] !== undefined) {\n      return column.validation[validationType];\n    } else {\n      return false;\n    }\n  }\n\n  public isEdition(record) {\n    return record.entity.edition ? true : false;\n  }\n\n  /**\n   * Return the type of renderer of a column\n   * @param column Column\n   * @returns Renderer type\n   * @internal\n   */\n  getColumnRenderer(column: EntityTableColumn): EntityTableColumnRenderer {\n    if (column.renderer !== undefined) {\n      return column.renderer;\n    }\n    return EntityTableColumnRenderer.Default;\n  }\n\n  /**\n   * Return the table ngClass\n   * @returns ngClass\n   * @internal\n   */\n  getTableClass(): {[key: string]: boolean} {\n    return {\n      'igo-entity-table-with-selection': this.selection\n    };\n  }\n\n  /**\n   * Return a header ngClass\n   * @returns ngClass\n   * @internal\n   */\n  getHeaderClass(): {[key: string]: boolean} {\n    const func = this.template.headerClassFunc;\n    if (func instanceof Function) {\n      return func();\n    }\n    return {};\n  }\n\n  /**\n   * Return a row ngClass\n   * @param record Record\n   * @returns ngClass\n   * @internal\n   */\n  getRowClass(record: EntityRecord<object>): {[key: string]: boolean} {\n    const entity = record.entity;\n    const func = this.template.rowClassFunc;\n    if (func instanceof Function) {\n      return func(entity, record);\n    }\n    return {};\n  }\n\n  /**\n   * Return a row ngClass\n   * @param record Record\n   * @param column Column\n   * @returns ngClass\n   * @internal\n   */\n  getCellClass(record: EntityRecord<object>, column: EntityTableColumn): {[key: string]: boolean} {\n    const entity = record.entity;\n    const cls = {};\n\n    const tableFunc = this.template.cellClassFunc;\n    if (tableFunc instanceof Function) {\n      Object.assign(cls, tableFunc(entity, column, record));\n    }\n\n    const columnFunc = column.cellClassFunc;\n    if (columnFunc instanceof Function) {\n      Object.assign(cls, columnFunc(entity, record));\n    }\n\n    return cls;\n  }\n\n  /**\n   * When a button is clicked\n   * @param func Function\n   * @param record Record\n   * @internal\n   */\n  onButtonClick(\n    clickFunc: (entity: object, record?: EntityRecord<object>) => void,\n    record: EntityRecord<object>\n  ) {\n    this.enableEdit(record);\n    if (typeof clickFunc === 'function') {\n      clickFunc(record.entity, record);\n    }\n  }\n\n  /**\n   * Retrieve column name without his \"properties\" tag (useful for edition workspace properties)\n   */\n  public getColumnKeyWithoutPropertiesTag(column: string) {\n    if (column.includes('properties.')) {\n      return column.split('.')[1];\n    }\n    return column;\n  }\n}\n","export enum ActionbarMode {\n  Dock = 'dock',\n  Overlay = 'overlay',\n  Context = 'context'\n}\n","<mat-list-item *ngIf=\"!action.checkbox\"\n  matTooltipClass=\"actionbarItemTooltip\"\n  matTooltipShowDelay=\"500\"\n  [matTooltip]=\"withTooltip ? ((tooltip$ | async) || title | translate) : ''\"\n  [ngClass]=\"ngClass$ | async\"\n  (click)=\"onClick()\">\n  <button *ngIf=\"withIcon\"\n    mat-list-avatar\n    mat-icon-button\n    [color]=\"color\"\n    [disabled]=\"disabled$ | async\">\n    <mat-icon *ngIf=\"withIcon\" svgIcon=\"{{icon$ | async}}\"></mat-icon>\n  </button>\n  <h4 *ngIf=\"withTitle\" matLine>{{title | translate}}</h4>\n</mat-list-item>\n\n<mat-list-item class=\"item-checkbox\" *ngIf=\"action.checkbox\"\n  matTooltipClass=\"actionbarItemTooltip\"\n  matTooltipShowDelay=\"500\"\n  [matTooltip]=\"withTooltip ? ((tooltip$ | async) || title | translate) : ''\"\n  [ngClass]=\"ngClass$ | async\">\n  <mat-checkbox *ngIf=\"withTitle\"\n      (change)=\"action.handler()\"\n      [checked]=\"checkCondition$ | async\">\n      {{title | translate}}\n  </mat-checkbox>\n</mat-list-item>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription, isObservable } from 'rxjs';\n\nimport { Action } from '../shared/action.interfaces';\n\n /**\n  * An action button\n  */\n@Component({\n  selector: 'igo-actionbar-item',\n  templateUrl: './actionbar-item.component.html',\n  styleUrls: ['./actionbar-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionbarItemComponent implements OnInit, OnDestroy {\n\n  readonly disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly checkCondition$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n\n  readonly icon$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly tooltip$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly noDisplay$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly ngClass$: BehaviorSubject<{[key: string]: boolean}> = new BehaviorSubject({});\n\n  private ngClass$$: Subscription;\n\n  private disabled$$: Subscription;\n\n  private availability$$: Subscription;\n\n  private icon$$: Subscription;\n\n  private checkCondition$$: Subscription;\n\n  private tooltip$$: Subscription;\n\n  private noDisplay$$: Subscription;\n\n  private display$$: Subscription;\n\n  /**\n   * Action\n   */\n  @Input() action: Action;\n\n  /**\n   * Color\n   */\n  @Input() color = 'default';\n\n  /**\n   * Whether the action title is displayed\n   */\n  @Input() withTitle = true;\n\n  /**\n   * Whether the action icon is displayed\n   */\n  @Input() withIcon = true;\n\n  /**\n   * Whether a tooltip should be shown\n   */\n  @Input() withTooltip = true;\n\n  /**\n   * Whether the action is disabled\n   */\n  @Input()\n  set disabled(value: boolean) { this.disabled$.next(value); }\n  get disabled(): boolean { return this.disabled$.value; }\n\n  /**\n   * Whether the action is display or not\n   */\n  @Input()\n  set noDisplay(value: boolean) { this.noDisplay$.next(value); }\n  get noDisplay(): boolean { return this.noDisplay$.value; }\n\n  /**\n   * Event emitted when the action button is clicked\n   */\n  @Output() trigger: EventEmitter<Action> = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  get title(): string { return this.action.title; }\n\n  constructor() {}\n\n  ngOnInit() {\n    const args = this.action.args || [];\n\n    if (this.action.ngClass !== undefined) {\n      this.ngClass$$ = this.action.ngClass(...args)\n        .subscribe((ngClass: {[key: string]: boolean}) => this.updateNgClass(ngClass));\n    }\n\n    if (isObservable(this.action.icon)) {\n      this.icon$$ = this.action.icon\n        .subscribe((icon: string) => this.updateIcon(icon));\n    } else {\n      this.updateIcon(this.action.icon);\n    }\n\n    if (isObservable(this.action.checkCondition)) {\n      this.checkCondition$$ = this.action.checkCondition\n        .subscribe((checkCondition: boolean) => this.updateCheckCondition(checkCondition));\n    } else {\n      this.updateCheckCondition(this.action.checkCondition);\n    }\n\n    if (isObservable(this.action.tooltip)) {\n      this.tooltip$$ = this.action.tooltip\n        .subscribe((tooltip: string) => this.updateTooltip(tooltip));\n    } else {\n      this.updateTooltip(this.action.tooltip);\n    }\n\n    if (this.action.availability !== undefined) {\n      this.availability$$ = this.action.availability(...args)\n        .subscribe((available: boolean) => this.disabled = !available);\n    }\n\n    this.disabled$$ = this.disabled$\n      .subscribe((disabled: boolean) => this.updateNgClass({'igo-actionbar-item-disabled': disabled}));\n\n    if (this.action.display !== undefined) {\n      this.display$$ = this.action.display(...args)\n        .subscribe((display: boolean) => this.noDisplay = !display);\n    }\n\n    this.noDisplay$$ = this.noDisplay$\n      .subscribe((noDisplay: boolean) => this.updateNgClass({'igo-actionbar-item-no-display': noDisplay}));\n  }\n\n  ngOnDestroy() {\n    if (this.ngClass$$ !== undefined) {\n      this.ngClass$$.unsubscribe();\n      this.ngClass$$ = undefined;\n    }\n\n    if (this.availability$$ !== undefined) {\n      this.availability$$.unsubscribe();\n      this.availability$$ = undefined;\n    }\n\n    if (this.display$$ !== undefined) {\n      this.display$$.unsubscribe();\n      this.display$$ = undefined;\n    }\n\n    if (this.checkCondition$$ !== undefined) {\n      this.checkCondition$$.unsubscribe();\n      this.checkCondition$$ = undefined;\n    }\n\n    if (this.icon$$ !== undefined) {\n      this.icon$$.unsubscribe();\n      this.icon$$ = undefined;\n    }\n\n    if (this.tooltip$$ !== undefined) {\n      this.tooltip$$.unsubscribe();\n      this.tooltip$$ = undefined;\n    }\n\n    this.disabled$$.unsubscribe();\n    this.noDisplay$$.unsubscribe();\n  }\n\n  /**\n   * When the action button is clicked, emit the 'trigger' event but don't\n   * invoke the action handler. This is handled by the parent component.\n   * @internal\n   */\n  onClick() {\n    if (this.disabled === true) {\n      return;\n    }\n    this.trigger.emit(this.action);\n  }\n\n  private updateNgClass(ngClass: {[key: string]: boolean}) {\n    this.ngClass$.next(Object.assign({}, this.ngClass$.value, ngClass));\n  }\n\n  private updateTooltip(tooltip: string) {\n    this.tooltip$.next(tooltip);\n  }\n\n  private updateCheckCondition(checkCondition: boolean) {\n    this.checkCondition$.next(checkCondition);\n  }\n\n  private updateIcon(icon: string) {\n    this.icon$.next(icon);\n  }\n}\n","<mat-list *ngIf=\"mode === actionbarMode.Dock\">\n\n    <div *ngIf=\"heightCondition && positionConditionTop && isDesktop\"\n      id=\"topChevron\">\n      <button\n        mat-icon-button\n        tooltip-position=\"below\"\n        matTooltipShowDelay=\"500\"\n        [matTooltip]=\"'igo.common.actionbar.scrollUp' | translate\"\n        (click)=\"scrollUp()\">\n        <mat-icon svgIcon=\"chevron-up\"></mat-icon>\n      </button>\n    </div>\n\n    <igo-actionbar-item\n      *ngIf=\"withToggleButton\"\n      color=\"accent\"\n      [withTitle]=\"false\"\n      [withIcon]=\"true\"\n      [color]=\"color\"\n      [disabled]=\"store.view.empty\"\n      [action]=\"toggleCollapseAction\"\n      (trigger)=\"onTriggerAction(toggleCollapseAction)\">\n    </igo-actionbar-item>\n\n    <ng-template #buttonContent *ngIf=\"!collapsed\" ngFor let-action [ngForOf]=\"store.view.all$() | async\">\n      <igo-actionbar-item\n        color=\"accent\"\n        [withTitle]=\"withTitle\"\n        [withIcon]=\"withIcon\"\n        [withTooltip]=\"withTooltip\"\n        [color]=\"color\"\n        [disabled]=\"store.state.get(action).disabled\"\n        [action]=\"action\"\n        (trigger)=\"onTriggerAction(action)\">\n      </igo-actionbar-item>\n    </ng-template>\n\n    <div *ngIf=\"heightCondition && positionConditionLow && isDesktop\"\n      id=\"lowChevron\">\n      <button\n        mat-icon-button\n        tooltip-position=\"below\"\n        matTooltipShowDelay=\"500\"\n        [matTooltip]=\"'igo.common.actionbar.scrollDown' | translate\"\n        (click)=\"scrollDown()\">\n        <mat-icon svgIcon=\"chevron-down\"></mat-icon>\n      </button>\n    </div>\n\n</mat-list>\n\n<div *ngIf=\"mode === actionbarMode.Overlay\">\n  <button class=\"buttonOverlay\"\n    mat-icon-button\n    tooltip-position=\"below\"\n    matTooltipShowDelay=\"500\"\n    [matTooltip]=\"'igo.common.actionbar.icon' | translate\"\n    [matMenuTriggerFor]=\"actionbarMenu\"\n    [disabled]=\"store.view.empty\"\n    [color]=\"iconColor\">\n    <mat-icon [svgIcon]=\"icon\"></mat-icon>\n  </button>\n\n  <mat-menu\n    #actionbarMenu=\"matMenu\"\n    class=\"igo-compact-menu igo-no-min-width-menu\"\n    overlapTrigger=\"true\"\n    [xPosition]=\"xPosition\"\n    [yPosition]=\"yPosition\"\n    [class]=\"overlayClass\">\n\n    <mat-list>\n      <ng-template ngFor let-action [ngForOf]=\"store.view.all$() | async\">\n        <igo-actionbar-item\n          color=\"accent\"\n          [withTitle]=\"withTitle\"\n          [withIcon]=\"withIcon\"\n          [color]=\"color\"\n          [action]=\"action\"\n          (trigger)=\"onTriggerAction(action)\">\n        </igo-actionbar-item>\n      </ng-template>\n    </mat-list>\n  </mat-menu>\n</div>\n<mat-card *ngIf=\"mode === actionbarMode.Context\" class=\"context-menu-card mat-elevation-z4\">\n  <mat-list>\n      <ng-template ngFor let-action [ngForOf]=\"store.view.all$() | async\">\n          <igo-actionbar-item\n            color=\"accent\"\n            [withTitle]=\"withTitle\"\n            [withIcon]=\"withIcon\"\n            [color]=\"color\"\n            [action]=\"action\"\n            (trigger)=\"onTriggerAction(action)\">\n          </igo-actionbar-item>\n        <br/>\n      </ng-template>\n  </mat-list>\n</mat-card>\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ElementRef\n} from '@angular/core';\n\nimport { MediaService, Media } from '@igo2/core';\nimport { EntityStoreWatcher } from '../../entity';\nimport { Action } from '../shared/action.interfaces';\nimport { ActionbarMode } from '../shared/action.enums';\nimport { ActionStore } from '../shared/store';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * A list of action buttons.\n * This component can be displayed in one of two way: 'dock' or 'overlay'\n */\n@Component({\n  selector: 'igo-actionbar',\n  templateUrl: './actionbar.component.html',\n  styleUrls: ['./actionbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionbarComponent implements OnDestroy, OnChanges {\n\n  /**\n   * Reference to the ActionbarMode enum for use in the template\n   * @internal\n   */\n  actionbarMode = ActionbarMode;\n\n  /**\n   * Whether the actionbar is collapsed (Dock mode)\n   * @internal\n   */\n  collapsed = false;\n\n  /**\n   * Toggle collapse action (Dock)\n   * @internal\n   */\n  toggleCollapseAction = {\n    id: 'actionbar_toggle',\n    icon: 'dots-vertical',\n    handler: () => {\n      this.collapsed = !this.collapsed;\n    }\n  };\n\n  /**\n   * Action store watcher\n   * @internal\n   */\n  private watcher: EntityStoreWatcher<Action>;\n\n  /**\n   * Height Condition for scroll button\n   */\n  heightCondition$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Position Condition for top scroll button\n   */\n  positionConditionTop$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  /**\n   * Position Condition for low scroll button\n   */\n  positionConditionLow$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  /**\n   * Action store\n   */\n  @Input() store: ActionStore;\n\n  /**\n   * Actionbar mode\n   */\n  @Input() mode: ActionbarMode = ActionbarMode.Dock;\n\n  /**\n   * Whether a toggle button should be displayed (Dock mode)\n   */\n  @Input() withToggleButton = false;\n\n  /**\n   * Whether a the actionbar should display buttons horizontally\n   */\n  @Input() horizontal = false;\n\n  /**\n   * Color\n   */\n  @Input() color = 'default';\n\n  /**\n   * Color of the button if action mode === overlay\n   */\n  @Input() iconColor = 'default';\n\n  /**\n   * Whether action titles are displayed\n   */\n  @Input() withTitle = true;\n\n  /**\n   * Whether action tooltips are displayed\n   */\n  @Input() withTooltip = true;\n\n  /**\n   * Whether action titles are displayed (condition for scroll button)\n   */\n  @Input() scrollActive = true;\n\n  /**\n   * Whether action icons are displayed\n   */\n  @Input() withIcon = true;\n\n  /**\n   * Which icon want to be shown\n   */\n  @Input() icon = 'dots-horizontal';\n\n  /**\n   * Overlay X position\n   */\n  @Input() xPosition = 'before';\n\n  /**\n   * Overlay Y position\n   */\n  @Input() yPosition = 'above';\n\n  /**\n   * Class to add to the actionbar overlay\n   */\n  @Input()\n  set overlayClass(value: string) {\n    this._overlayClass = value;\n  }\n  get overlayClass(): string {\n    return [this._overlayClass, 'igo-actionbar-overlay'].join(' ');\n  }\n  private _overlayClass = '';\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.with-title')\n  get withTitleClass() {\n    return this.withTitle;\n  }\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.with-icon')\n  get withIconClass() {\n    return this.withIcon;\n  }\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.horizontal')\n  get horizontalClass() {\n    return this.horizontal;\n  }\n\n  get heightCondition(): boolean {\n    const el = this.elRef.nativeElement;\n    if (this.scrollActive === false) {\n      if (el.clientHeight < el.scrollHeight) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  get positionConditionTop(): boolean {\n    if (this.elRef.nativeElement.scrollTop === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  get positionConditionLow(): boolean {\n    const el = this.elRef.nativeElement;\n    if (el.scrollTop >= (el.scrollHeight - el.clientHeight)) {\n      return false;\n    }\n    return true;\n  }\n\n  get isDesktop(): boolean {\n    return this.mediaService.getMedia() === Media.Desktop;\n  }\n\n  constructor(\n    public overlay: Overlay,\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    public mediaService: MediaService) {}\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const store = changes.store;\n    if (store && store.currentValue !== store.previousValue) {\n      if (this.watcher !== undefined) {\n        this.watcher.destroy();\n      }\n      this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this.watcher.destroy();\n  }\n\n  /**\n   * Invoke the action handler\n   * @internal\n   */\n  onTriggerAction(action: Action) {\n    const args = action.args || [];\n    action.handler(...args);\n  }\n\n  scrollDown() {\n    this.elRef.nativeElement.scrollBy(0, 52);\n  }\n\n  scrollUp() {\n    this.elRef.nativeElement.scrollBy(0, -52);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { ActionbarComponent } from './actionbar.component';\nimport { ActionbarItemComponent } from './actionbar-item.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoLanguageModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatListModule,\n    MatCardModule,\n    MatCheckboxModule\n  ],\n  exports: [ActionbarComponent],\n  declarations: [ActionbarComponent, ActionbarItemComponent]\n})\nexport class IgoActionbarModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoActionbarModule } from './actionbar/actionbar.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoActionbarModule\n  ],\n  exports: [\n    IgoActionbarModule\n  ],\n  declarations: [],\n  providers: []\n})\nexport class IgoActionModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'igo-backdrop',\n  templateUrl: './backdrop.component.html',\n  styleUrls: ['./backdrop.component.scss']\n})\nexport class BackdropComponent {\n  @Input()\n  get shown(): boolean {\n    return this._shown;\n  }\n  set shown(value: boolean) {\n    this._shown = value;\n  }\n  private _shown: boolean;\n\n  constructor() {}\n}\n","<div [ngClass]=\"{'igo-backdrop-shown': shown}\"></div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BackdropComponent } from './backdrop.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BackdropComponent],\n  exports: [BackdropComponent]\n})\nexport class IgoBackdropModule {\n  static forRoot(): ModuleWithProviders<IgoBackdropModule> {\n    return {\n      ngModule: IgoBackdropModule,\n      providers: []\n    };\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n\n/**\n * This directive allow to add an icon inside a matBadge.\n * A value must be set into the matBadge directive ex: matBadge=\"icon\".\n * The badge content will be overrided by this current directive.\n */\n@Directive({\n  selector: '[igoMatBadgeIcon]'\n})\nexport class IgoBadgeIconDirective implements OnInit {\n  @Input()\n  set igoMatBadgeIcon(value: string) {\n    this.matIconRegistry.getNamedSvgIcon(value).subscribe((svgObj) => {\n      this.svg = svgObj;\n      this.updateSvg();\n    });\n  }\n  private svg: SVGElement;\n\n  @Input()\n  set matBadgeHidden(value: boolean) {\n    this.hidden = value;\n    this.updateHidden();\n  }\n  private hidden = false;\n\n  @Input()\n  set matBadgeDisabled(value: boolean) {\n    this.disabled = value;\n    this.updateDisabled();\n  }\n  private disabled = false;\n\n  @Input()\n  set igoMatBadgeInverseColor(value: boolean) {\n    this.inverseColor = value;\n    this.updateColor();\n  }\n  private inverseColor = false;\n\n  @Input()\n  set igoMatBadgeInheritColor(value: boolean) {\n    this.inheritColor = value;\n    this.updateColor();\n  }\n  private inheritColor = false;\n\n  get badge() {\n    return this.el.nativeElement.querySelector('.mat-badge-content');\n  }\n\n  private originalColor: string;\n\n  constructor(\n    private el: ElementRef,\n    private matIconRegistry: MatIconRegistry\n  ) {}\n\n  ngOnInit() {\n    this.badge.style.alignItems = 'center';\n    this.badge.style.justifyContent = 'center';\n\n    this.updateHidden();\n    this.updateColor();\n    this.updateSvg();\n  }\n\n  private updateSvg() {\n    if (!this.badge) {\n      return;\n    }\n    this.badge.innerHTML = '';\n    if (this.svg) {\n      this.badge.appendChild(this.svg);\n    }\n  }\n  private updateColor() {\n    if (!this.badge) {\n      return;\n    }\n\n    if (this.inheritColor) {\n      if (this.inverseColor) {\n        this.badge.style.color = 'currentColor';\n        this.badge.style.background = 'none';\n      } else {\n        this.badge.style.color = '';\n        this.badge.style.background = 'currentColor';\n      }\n    } else {\n      if (this.inverseColor) {\n        this.badge.style.color = window\n          .getComputedStyle(this.badge, null)\n          .getPropertyValue('background-color');\n        this.badge.style.background = 'none';\n      } else {\n        this.badge.style.color = '';\n        this.badge.style.background = '';\n      }\n    }\n    this.originalColor = this.badge.style.color;\n    this.updateDisabled();\n  }\n\n  private updateHidden() {\n    if (!this.badge) {\n      return;\n    }\n    this.badge.style.display = this.hidden ? 'none' : 'flex';\n  }\n\n  private updateDisabled() {\n    if (!this.badge || !this.inverseColor) {\n      return;\n    }\n    if (this.disabled) {\n      this.originalColor = this.badge.style.color;\n      this.badge.style.color = '#b9b9b9';\n    } else {\n      this.badge.style.color = this.originalColor;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { IgoBadgeIconDirective } from './badge-icon.directive';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [MatBadgeModule, MatIconModule],\n  declarations: [IgoBadgeIconDirective],\n  exports: [MatBadgeModule, IgoBadgeIconDirective]\n})\nexport class IgoMatBadgeIconModule {\n  static forRoot(): ModuleWithProviders<IgoMatBadgeIconModule> {\n    return {\n      ngModule: IgoMatBadgeIconModule,\n      providers: []\n    };\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: '[igoClickout]'\n})\nexport class ClickoutDirective {\n  @Output() clickout = new EventEmitter<MouseEvent>();\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  handleMouseClick(event: MouseEvent, target: HTMLElement) {\n    if (!target) {\n      return;\n    }\n\n    if (!this.el.nativeElement.contains(target)) {\n      this.clickout.emit(event);\n    }\n  }\n\n  constructor(private el: ElementRef) {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ClickoutDirective } from './clickout.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [ClickoutDirective],\n  exports: [ClickoutDirective]\n})\nexport class IgoClickoutModule {\n  static forRoot(): ModuleWithProviders<IgoClickoutModule> {\n    return {\n      ngModule: IgoClickoutModule,\n      providers: []\n    };\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'clone'\n})\nexport class ClonePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value === undefined) {\n      return value;\n    }\n\n    if (value instanceof Array) {\n      return value.map(obj => Object.assign(Object.create(obj), obj));\n    } else {\n      return Object.assign(Object.create(value), value);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ClonePipe } from './clone.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [ClonePipe],\n  exports: [ClonePipe]\n})\nexport class IgoCloneModule {\n  static forRoot(): ModuleWithProviders<IgoCloneModule> {\n    return {\n      ngModule: IgoCloneModule,\n      providers: []\n    };\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\n\n@Directive({\n  selector: '[igoCollapse]'\n})\nexport class CollapseDirective {\n  @Input()\n  get target() {\n    return this._target;\n  }\n  set target(value: Element) {\n    this._target = value;\n  }\n  private _target: Element;\n\n  @Input()\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n  set collapsed(collapsed: boolean) {\n    collapsed ? this.collapseTarget() : this.expandTarget();\n    this._collapsed = collapsed;\n    this.toggle.emit(collapsed);\n  }\n  private _collapsed = false;\n\n  @Output() toggle: EventEmitter<boolean> = new EventEmitter();\n\n  @HostListener('click')\n  click() {\n    this.collapsed = !this.collapsed;\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  private collapseTarget() {\n    this.renderer.addClass(this.target, 'igo-collapsed');\n    this.renderer.addClass(this.el.nativeElement, 'collapsed');\n  }\n\n  private expandTarget() {\n    this.renderer.removeClass(this.target, 'igo-collapsed');\n    this.renderer.removeClass(this.el.nativeElement, 'collapsed');\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'igo-collapsible',\n  templateUrl: './collapsible.component.html',\n  styleUrls: ['./collapsible.component.scss']\n})\nexport class CollapsibleComponent {\n  @Input()\n  get title() {\n    return this._title;\n  }\n  set title(value: string) {\n    this._title = value;\n  }\n  private _title = '';\n\n  @Input()\n  get collapsed() {\n    return this._collapsed;\n  }\n  set collapsed(value: boolean) {\n    this._collapsed = value;\n    this.toggle.emit(value);\n  }\n  private _collapsed = false;\n\n  @Output() toggle: EventEmitter<boolean> = new EventEmitter();\n}\n","<mat-list-item>\n  <mat-icon\n    svgIcon=\"chevron-up\" \n    class=\"igo-chevron\"\n    mat-list-avatar\n    igoCollapse\n    [target]=\"content\"\n    [collapsed]=\"collapsed\"\n    (toggle)=\"collapsed = $event\">\n  </mat-icon>\n  <h4 matLine>{{title}}</h4>\n</mat-list-item>\n\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { CollapseDirective } from './collapse.directive';\nimport { CollapsibleComponent } from './collapsible.component';\n\n@NgModule({\n  imports: [MatIconModule, MatListModule],\n  declarations: [CollapsibleComponent, CollapseDirective],\n  exports: [CollapsibleComponent, CollapseDirective]\n})\nexport class IgoCollapsibleModule {\n  static forRoot(): ModuleWithProviders<IgoCollapsibleModule> {\n    return {\n      ngModule: IgoCollapsibleModule,\n      providers: []\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'igo-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent {\n  public confirmMessage: string;\n\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>) {}\n}\n","<h2 mat-dialog-title class=\"mat-typography\">{{'igo.common.confirmDialog.title' | translate}}</h2>\n<div mat-dialog-content class=\"mat-typography\">{{confirmMessage}}</div>\n<div mat-dialog-actions>\n  <button mat-button color=\"primary\" (click)=\"dialogRef.close(true)\">{{'igo.common.confirmDialog.confirmBtn' | translate}}</button>\n  <button mat-button (click)=\"dialogRef.close(false)\">{{'igo.common.confirmDialog.cancelBtn' | translate}}</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Observable } from 'rxjs';\n\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\n\n@Injectable()\nexport class ConfirmDialogService {\n  constructor(private dialog: MatDialog) {}\n\n  public open(message: string): Observable<any> {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      disableClose: false\n    });\n    dialogRef.componentInstance.confirmMessage = message;\n\n    return dialogRef.afterClosed();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\nimport { ConfirmDialogService } from './confirm-dialog.service';\n\n@NgModule({\n  imports: [MatButtonModule, MatDialogModule, IgoLanguageModule],\n  declarations: [ConfirmDialogComponent],\n  exports: [ConfirmDialogComponent],\n  providers: [ConfirmDialogService]\n})\nexport class IgoConfirmDialogModule {\n  static forRoot(): ModuleWithProviders<IgoConfirmDialogModule> {\n    return {\n      ngModule: IgoConfirmDialogModule,\n      providers: []\n    };\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport type { TemplateRef } from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\n\n@Directive({\n  selector: '[igoContextMenu]'\n})\nexport class ContextMenuDirective {\n  private overlayRef: OverlayRef | null;\n  private sub: Subscription;\n\n  @Input('igoContextMenu') menuContext: TemplateRef<any>;\n  @Output() menuPosition = new EventEmitter<{ x: number; y: number }>();\n\n  constructor(\n    public overlay: Overlay,\n    public viewContainerRef: ViewContainerRef,\n    private elementRef: ElementRef\n  ) {}\n\n  @HostListener('contextmenu', ['$event'])\n  public onContextMenu(e: MouseEvent): void {\n    const {x, y} = e;\n    this.close();\n    e.preventDefault();\n    this.menuPosition.emit({ x, y });\n    this.overlayRef = null;\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo({ x, y })\n      .withPositions([\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        }\n      ]);\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.close()\n    });\n    this.overlayRef.attach(\n      new TemplatePortal(this.menuContext, this.viewContainerRef, {\n        $implicit: undefined\n      })\n    );\n\n    this.sub = fromEvent<MouseEvent>(document, 'click')\n      .pipe(\n        filter(event => {\n          const clickTarget = event.target as HTMLElement;\n          this.close();\n          return (\n            !!this.overlayRef &&\n            !this.overlayRef.overlayElement.contains(clickTarget)\n          );\n        }),\n        take(1)\n      )\n      .subscribe(() => this.close());\n\n    this.sub = fromEvent<MouseEvent>(document, 'contextmenu')\n      .pipe(\n        filter(event => {\n          const clickTarget = event.target as HTMLElement;\n          if (\n            clickTarget &&\n            !this.elementRef.nativeElement.contains(clickTarget) &&\n            !this.overlayRef.overlayElement.contains(clickTarget)\n          ) {\n            return true;\n          } else {\n            event.preventDefault();\n          }\n        }),\n        take(1)\n      )\n      .subscribe(() => this.close());\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = null;\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ContextMenuDirective } from './context-menu.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [ContextMenuDirective],\n  exports: [ContextMenuDirective]\n})\nexport class IgoContextMenuModule {\n  static forRoot(): ModuleWithProviders<IgoContextMenuModule> {\n    return {\n      ngModule: IgoContextMenuModule,\n      providers: []\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'igo-custom-html',\n  templateUrl: './custom-html.component.html',\n  styleUrls: ['./custom-html.component.scss']\n})\nexport class CustomHtmlComponent {\n  @Input()\n  get html(): string {\n    return this._html;\n  }\n  set html(value: string) {\n    this._html = value;\n  }\n  private _html = '';\n\n  constructor() {}\n}\n","<div class=\"custom-html\" [innerHTML]=\"html | sanitizeHtml\"></div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { CustomHtmlComponent } from './custom-html.component';\nimport { SanitizeHtmlPipe } from './custom-html.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatButtonModule,\n    IgoLanguageModule\n  ],\n  exports: [SanitizeHtmlPipe, CustomHtmlComponent],\n  declarations: [SanitizeHtmlPipe, CustomHtmlComponent]\n})\nexport class IgoCustomHtmlModule {\n  static forRoot(): ModuleWithProviders<IgoCustomHtmlModule> {\n    return {\n      ngModule: IgoCustomHtmlModule\n    };\n  }\n}\n","import {\r\n  Directive,\r\n  HostListener,\r\n  HostBinding,\r\n  EventEmitter,\r\n  Output,\r\n  Input\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoDragAndDrop]'\r\n})\r\nexport class DragAndDropDirective {\r\n\r\n  @Input() allowedExtensions: Array<string> = [];\r\n\r\n  @Output() protected filesDropped: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  @Output() protected filesInvalid: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  @HostBinding('style.background') private background = 'inherit';\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  public onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = '#999';\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  public onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = 'inherit';\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    if (evt.alreadyFired) {\r\n      return;\r\n    }\r\n    evt.alreadyFired = true;\r\n\r\n    this.background = 'inherit';\r\n    const filesObj = this.validExtensions(evt);\r\n    if (filesObj.valid.length) {\r\n      this.filesDropped.emit(filesObj.valid);\r\n    }\r\n    if (filesObj.invalid.length) {\r\n      this.filesInvalid.emit(filesObj.invalid);\r\n    }\r\n  }\r\n\r\n  private validExtensions(evt) {\r\n    const files = evt.dataTransfer.files;\r\n    const filesObj = {\r\n      valid: [],\r\n      invalid: []\r\n    };\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const ext = file.name.split('.')[file.name.split('.').length - 1];\r\n        if (\r\n          this.allowedExtensions.length === 0 ||\r\n          (\r\n            this.allowedExtensions.lastIndexOf(ext) !== -1 &&\r\n            file.size !== 0\r\n          )\r\n        ) {\r\n          filesObj.valid.push(file);\r\n        } else {\r\n          filesObj.invalid.push(file);\r\n        }\r\n      }\r\n    }\r\n\r\n    return filesObj;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DragAndDropDirective } from './drag-drop.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [DragAndDropDirective],\n  exports: [DragAndDropDirective]\n})\nexport class IgoDrapDropModule {\n  static forRoot(): ModuleWithProviders<IgoDrapDropModule> {\n    return {\n      ngModule: IgoDrapDropModule,\n      providers: []\n    };\n  }\n}\n","import {\n  ComponentFactory,\n  ComponentRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * This class is used in the DynamicComponentOutlet component. It holds\n * a reference to a component factory and can render that component\n * in a target element on demand. It's also possible to set inputs\n * and to subscribe to outputs.\n */\nexport class DynamicComponent<C> {\n\n  /**\n   * Component reference\n   */\n  private componentRef: ComponentRef<C>;\n\n  /**\n   * Subscriptions to the component's outputs. Those need\n   * to be unsubscribed when the component is destroyed.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Component target element\n   */\n  private target: ViewContainerRef;\n\n  /**\n   * Component inputs\n   */\n  private inputs: {[key: string]: any} = {};\n\n  /**\n   * Subscriptions to the component's async inputs\n   */\n  private inputs$$: {[key: string]: Subscription} = {};\n\n  /**\n   * Subscribers to the component's outputs\n   */\n  private subscribers: {[key: string]: (event: any) => void} = {};\n\n  constructor(private componentFactory: ComponentFactory<C>) {}\n\n  /**\n   * Render the component to a target element.\n   * Set it's inputs and subscribe to it's outputs.\n   * @param target Target element\n   */\n  setTarget(target: ViewContainerRef) {\n    this.target = target;\n    this.componentRef = target.createComponent(this.componentFactory);\n    this.updateInputs(this.inputs);\n    this.updateSubscribers(this.subscribers);\n  }\n\n  /**\n   * Destroy this component. That means, removing from it's target\n   * element and unsubscribing to it's outputs.\n   */\n  destroy() {\n    if (this.target !== undefined) {\n      this.target.clear();\n    }\n    if (this.componentRef !== undefined) {\n      this.componentRef.destroy();\n      this.componentRef = undefined;\n    }\n    this.unobserveAllInputs();\n    this.unsubscribeAll();\n  }\n\n  /**\n   * Update the component inputs. This is an update so any\n   * key not defined won't be overwritten.\n   */\n  updateInputs(inputs: {[key: string]: any}) {\n    this.inputs = inputs;\n    if (this.componentRef === undefined) {\n      return;\n    }\n\n    const instance = this.componentRef.instance;\n    const allowedInputs = this.componentFactory.inputs;\n    allowedInputs.forEach((value: {propName: string; templateName: string; }) => {\n      const key = value.propName;\n\n      this.unobserveInput(key);\n\n      const inputValue = inputs[key];\n      if (inputs.hasOwnProperty(key)) {\n        if (inputValue instanceof Observable) {\n          this.observeInput(key, inputValue);\n        } else {\n          this.setInputValue(instance, key, inputValue);\n        }\n      }\n    });\n\n    if (typeof (instance as any).onUpdateInputs === 'function') {\n      (instance as any).onUpdateInputs();\n    }\n  }\n\n  /**\n   * Set an instance's input value\n   * @param instance Component instance\n   * @param key Input key\n   * @param value Input value\n   */\n  private setInputValue(instance: C, key: string, value: any) {\n    const currentValue = instance[key];\n    if (value === currentValue) {\n      return;\n    }\n\n    const prototype = Object.getPrototypeOf(instance);\n    const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\n    if (descriptor !== undefined && descriptor.set !== undefined) {\n      descriptor.set.call(instance, value);\n    } else {\n      instance[key] = value;\n    }\n  }\n\n  /**\n   * Update the component subscribers. This is an update so any\n   * key not defined won't be overwritten.\n   */\n  updateSubscribers(subscribers: {[key: string]: (event: any) => void}) {\n    this.subscribers = subscribers;\n    if (this.componentRef === undefined) {\n      return;\n    }\n\n    const instance = this.componentRef.instance;\n    const allowedSubscribers = this.componentFactory.outputs;\n    allowedSubscribers.forEach((value: {propName: string; templateName: string; }) => {\n      const key = value.propName;\n      if (subscribers.hasOwnProperty(key)) {\n        const emitter = instance[key];\n        const subscriber = subscribers[key];\n        if (Array.isArray(subscriber)) {\n          subscriber.forEach((_subscriber) => {\n            this.subscriptions.push(emitter.subscribe(_subscriber));\n          });\n        } else {\n          this.subscriptions.push(emitter.subscribe(subscriber));\n        }\n      }\n    });\n  }\n\n  /**\n   * Subscribe to an observable input and update the component's input value\n   * accordingly\n   * @param key Input key\n   * @param observable Observable\n   */\n  private observeInput(key: string, observable: Observable<any>) {\n    this.inputs$$[key] = observable.subscribe((value: any) => {\n      const instance = this.componentRef.instance;\n      this.setInputValue(instance, key, value);\n\n      if (typeof (instance as any).onUpdateInputs === 'function') {\n        (instance as any).onUpdateInputs();\n      }\n    });\n  }\n\n  /**\n   * Unsubscribe to an observable input\n   * @param key Input key\n   */\n  private unobserveInput(key: string) {\n    if (this.inputs$$[key] !== undefined) {\n      this.inputs$$[key].unsubscribe();\n      this.inputs$$[key] = undefined;\n    }\n  }\n\n  /**\n   * Unsubscribe to all outputs.\n   */\n  private unobserveAllInputs() {\n    Object.values(this.inputs$$).forEach((s: Subscription | undefined) => {\n      if (s !== undefined) {\n        s.unsubscribe();\n      }\n    });\n    this.inputs$$ = {};\n  }\n\n  /**\n   * Unsubscribe to all outputs.\n   */\n  private unsubscribeAll() {\n    this.subscriptions.forEach((s: Subscription) => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n}\n","import {\n  ComponentFactoryResolver,\n  Injectable\n} from '@angular/core';\n\nimport { DynamicComponent } from './dynamic-component';\n\n/**\n * Service to creates DynamicComponent instances from base component classes\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicComponentService {\n\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  /**\n   * Creates a DynamicComponent instance from a base component class\n   * @param componentCls The component class\n   * @returns DynamicComponent instance\n   */\n  create(componentCls: any): DynamicComponent<any> {\n    const factory = this.resolver.resolveComponentFactory(componentCls as any);\n    return new DynamicComponent<typeof componentCls>(factory);\n  }\n}\n","import {\n  Input,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  Component,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewContainerRef,\n  ViewChild\n} from '@angular/core';\n\nimport { ObjectUtils } from '@igo2/utils';\n\nimport { DynamicComponent } from '../shared/dynamic-component';\nimport { DynamicComponentService } from '../shared/dynamic-component.service';\n\n@Component({\n  selector: 'igo-dynamic-outlet',\n  templateUrl: 'dynamic-outlet.component.html',\n  styleUrls: ['dynamic-outlet.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicOutletComponent implements OnChanges, OnDestroy {\n  /**\n   * The dynamic component base class or the dynamic component itself\n   */\n  @Input() component: DynamicComponent<any> | any;\n\n  /**\n   * The dynamic component inputs\n   */\n  @Input() inputs: { [key: string]: any } = {};\n\n  /**\n   * The subscribers to the dynamic component outputs\n   */\n  @Input() subscribers: { [key: string]: (event: any) => void } = {};\n\n  /**\n   * The dynamic component\n   */\n  private dynamicComponent: DynamicComponent<any>;\n\n  /**\n   * The view element to render the component to\n   * @ignore\n   */\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  private target: ViewContainerRef;\n\n  constructor(\n    private dynamicComponentService: DynamicComponentService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  /**\n   * If the dynamic component changes, create it.\n   * If the inputs or subscribers change, update the current component's\n   * inputs or subscribers.\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const component = changes.component;\n    const inputs = changes.inputs;\n    const subscribers = changes.subscribers;\n    const eq = ObjectUtils.objectsAreEquivalent;\n\n    if (!component || !component.currentValue) {\n      return;\n    }\n\n    if (component.currentValue !== component.previousValue) {\n      this.createComponent(component.currentValue);\n    } else {\n      const inputsAreEquivalents =\n        inputs && eq(inputs.currentValue || {}, inputs.previousValue || {});\n      const subscribersAreEquivalents =\n        subscribers &&\n        eq(subscribers.currentValue || {}, subscribers.previousValue || {});\n\n      if (inputsAreEquivalents === false) {\n        this.updateInputs();\n      }\n\n      if (subscribersAreEquivalents === false) {\n        this.updateSubscribers();\n      }\n    }\n    this.cdRef.detectChanges();\n  }\n\n  /**\n   * Destroy the dynamic component and all it's subscribers\n   * @internal\n   */\n  ngOnDestroy() {\n    if (this.dynamicComponent) {\n      this.dynamicComponent.destroy();\n    }\n  }\n\n  /**\n   * Create a  DynamicComponent out of the component class and render it.\n   * @internal\n   */\n  private createComponent(component: DynamicComponent<any> | any) {\n    if (this.dynamicComponent !== undefined) {\n      this.dynamicComponent.destroy();\n    }\n    this.dynamicComponent =\n      component instanceof DynamicComponent\n        ? component\n        : this.dynamicComponentService.create(component);\n    this.renderComponent();\n  }\n\n  /**\n   * Create and render the dynamic component. Set it's inputs and subscribers\n   * @internal\n   */\n  private renderComponent() {\n    this.updateInputs();\n    this.updateSubscribers();\n    this.dynamicComponent.setTarget(this.target);\n  }\n\n  /**\n   * Update the dynamic component inputs. This is an update so any\n   * key not defined won't be overwritten.\n   * @internal\n   */\n  private updateInputs() {\n    this.dynamicComponent.updateInputs(this.inputs);\n  }\n\n  /**\n   * Update the dynamic component subscribers. This is an update so any\n   * key not defined won't be overwritten.\n   * @internal\n   */\n  private updateSubscribers() {\n    this.dynamicComponent.updateSubscribers(this.subscribers);\n  }\n}\n","<ng-template #target></ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DynamicOutletComponent } from './dynamic-outlet.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DynamicOutletComponent\n  ],\n  declarations: [\n    DynamicOutletComponent\n  ]\n})\nexport class IgoDynamicOutletModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoDynamicOutletModule } from './dynamic-outlet/dynamic-outlet.module';\nimport { DynamicComponentService } from './shared/dynamic-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoDynamicOutletModule\n  ],\n  exports: [\n    IgoDynamicOutletModule\n  ],\n  providers: [\n    DynamicComponentService\n  ]\n})\nexport class IgoDynamicComponentModule {}\n","import { Component, OnInit, OnDestroy, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Media, MediaService } from '@igo2/core';\n\nimport { FlexibleState, FlexibleDirection } from './flexible.type';\n\n@Component({\n  selector: 'igo-flexible',\n  templateUrl: './flexible.component.html',\n  styleUrls: ['./flexible.component.scss']\n})\nexport class FlexibleComponent implements OnInit, OnDestroy {\n  static transitionTime = 250;\n\n  @ViewChild('flexibleMain', { static: true }) main;\n\n  @Input()\n  get initial(): string {\n    return this._initial;\n  }\n  set initial(value: string) {\n    this._initial = value;\n  }\n  private _initial = '0';\n\n  @Input()\n  get collapsed(): string {\n    return this._collapsed;\n  }\n  set collapsed(value: string) {\n    this._collapsed = value;\n  }\n  private _collapsed = '0';\n\n  @Input()\n  get expanded(): string {\n    return this._expanded;\n  }\n  set expanded(value: string) {\n    this._expanded = value;\n  }\n  private _expanded = '100%';\n\n  @Input()\n  get initialMobile(): string {\n    return this._initialMobile;\n  }\n  set initialMobile(value: string) {\n    this._initialMobile = value;\n  }\n  private _initialMobile: string = this.expanded;\n\n  @Input()\n  get collapsedMobile(): string {\n    return this._collapsedMobile;\n  }\n  set collapsedMobile(value: string) {\n    this._collapsedMobile = value;\n  }\n  private _collapsedMobile: string = this.collapsed;\n\n  @Input()\n  get expandedMobile(): string {\n    return this._expandedMobile;\n  }\n  set expandedMobile(value: string) {\n    this._expandedMobile = value;\n  }\n  private _expandedMobile: string = this.expanded;\n\n  @Input()\n  get direction(): FlexibleDirection {\n    return this._direction;\n  }\n  set direction(value: FlexibleDirection) {\n    this._direction = value;\n  }\n  private _direction: FlexibleDirection = 'column';\n\n  @Input()\n  get state(): FlexibleState {\n    return this._state;\n  }\n  set state(value: FlexibleState) {\n    const sizes = {\n      initial: this.initial,\n      collapsed: this.collapsed,\n      expanded: this.expanded\n    };\n\n    if (this.mediaService.isMobile()) {\n      Object.assign(sizes, {\n        initial: this.initialMobile,\n        collapsed: this.collapsedMobile,\n        expanded: this.expandedMobile\n      });\n    }\n\n    const size = sizes[value];\n    if (size !== undefined) {\n      this.setSize(size);\n      setTimeout(() => {\n        this._state = value;\n      }, FlexibleComponent.transitionTime);\n    }\n  }\n  private _state: FlexibleState = 'initial';\n\n  private mediaService$$: Subscription;\n\n  constructor(private el: ElementRef, private mediaService: MediaService) {}\n\n  ngOnInit() {\n    this.el.nativeElement.className += this.direction;\n\n    // Since this component supports different sizes\n    // on mobile, force a redraw when the media changes\n    this.mediaService$$ = this.mediaService.media$.subscribe(\n      (media: Media) => (this.state = this.state)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.mediaService$$) {\n      this.mediaService$$.unsubscribe();\n    }\n  }\n\n  private setSize(size: string) {\n    this._state = 'transition';\n\n    if (this.direction === 'column') {\n      this.main.nativeElement.style.height = size;\n    } else if (this.direction === 'row') {\n      this.main.nativeElement.style.width = size;\n    }\n  }\n}\n","<div #flexibleMain class=\"igo-flexible-main {{state}} {{direction}}\">\n  <div class=\"igo-container\">\n    <ng-content></ng-content>\n  </div>\n</div>\n<div class=\"igo-flexible-fill\">\n  <div>\n  \t<div class=\"igo-container\">\n      <ng-content select=\"[igoFlexibleFill]\"></ng-content>\n    </div>\n  </div>\n</div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FlexibleComponent } from './flexible.component';\n\n@NgModule({\n  imports: [],\n  declarations: [FlexibleComponent],\n  exports: [FlexibleComponent]\n})\nexport class IgoFlexibleModule {\n  static forRoot(): ModuleWithProviders<IgoFlexibleModule> {\n    return {\n      ngModule: IgoFlexibleModule,\n      providers: []\n    };\n  }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { Form, FormField, FormFieldGroup } from './form.interfaces';\n\nexport function formControlIsRequired(control: AbstractControl): boolean {\n  if (control.validator) {\n    const validator = control.validator({} as AbstractControl);\n    if (validator && validator.required) {\n      return true;\n    }\n  }\n\n  if ((control as any).controls) {\n    const requiredControl = Object.keys((control as any).controls).find((key: string) => {\n      return formControlIsRequired((control as any).controls[key]);\n    });\n    return requiredControl !== undefined;\n  }\n\n  return false;\n}\n\nexport function getDefaultErrorMessages(): {[key: string]: string} {\n  return {\n    required: 'igo.common.form.errors.required'\n  };\n}\n\nexport function getControlErrorMessage(control: AbstractControl, messages: {[key: string]: string}): string {\n  const errors = control.errors || {};\n  const errorKeys = Object.keys(errors);\n  const errorMessages = errorKeys\n    .map((key: string) => messages[key])\n    .filter((message: string) => message !== undefined);\n  return errorMessages.length > 0 ? errorMessages[0] : '';\n}\n\nexport function getAllFormFields(form: Form): FormField[] {\n  return form.groups.reduce((acc: FormField[], group: FormFieldGroup) => {\n    return acc.concat(group.fields);\n  }, [].concat(form.fields));\n}\n\nexport function getFormFieldByName(form: Form, name: string): FormField {\n  const fields = getAllFormFields(form);\n  return fields.find((field: FormField) => {\n    return field.name === name;\n  });\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\n\nimport t from 'typy';\n\nimport { Form, FormField, FormFieldGroup } from '../shared/form.interfaces';\nimport { getAllFormFields } from '../shared/form.utils';\n\n/**\n * A configurable form\n */\n@Component({\n  selector: 'igo-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormComponent implements OnChanges {\n\n  /**\n   * Form\n   */\n  @Input() form: Form;\n\n  /**\n   * Input data\n   */\n  @Input() formData: { [key: string]: any};\n\n  /**\n   * Form autocomplete\n   */\n  @Input() autocomplete: string = 'off';\n\n  /**\n   * Event emitted when the form is submitted\n   */\n  @Output() submitForm = new EventEmitter<{[key: string]: any}>();\n\n  @ViewChild('buttons', { static: true }) buttons: ElementRef;\n\n  get hasButtons(): boolean {\n    return this.buttons.nativeElement.children.length !== 0;\n  }\n\n  constructor() {}\n\n  /**\n   * Is the entity or the template change, recreate the form or repopulate it.\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const formData = changes.formData;\n    if (formData && formData.currentValue !== formData.previousValue) {\n      if (formData.currentValue === undefined) {\n        this.clear();\n      } else {\n        this.setData(formData.currentValue);\n      }\n    }\n  }\n\n  /**\n   * Transform the form data to a feature and emit an event\n   * @param event Form submit event\n   * @internal\n   */\n  onSubmit() {\n    this.submitForm.emit(this.getData());\n  }\n\n  getData(): { [key: string]: any} {\n    const data = {};\n    getAllFormFields(this.form).forEach((field: FormField) => {\n      this.updateDataWithFormField(data, field);\n    });\n    return data;\n  }\n\n  private setData(data: {[key: string]: any}) {\n    this.form.fields.forEach((field: FormField) => {\n      field.control.setValue(t(data, field.name).safeObject);\n    });\n\n    this.form.groups.forEach((group: FormFieldGroup) => {\n      group.fields.forEach((field: FormField) => {\n        field.control.setValue(t(data, field.name).safeObject);\n      });\n    });\n  }\n\n  private updateDataWithFormField(data: { [key: string]: any}, field: FormField) {\n    const control = field.control;\n    if (!control.disabled) {\n      data[field.name] = control.value;\n    }\n  }\n\n  /**\n   * Clear form\n   */\n  private clear() {\n    this.form.control.reset();\n  }\n\n}\n","\n<form\n  [autocomplete]=\"autocomplete\"\n  [formGroup]=\"form.control\"\n  (ngSubmit)=\"onSubmit()\">\n  <div class=\"igo-form-body\" [ngClass]=\"{'igo-form-body-with-buttons': hasButtons}\">\n    <div class=\"igo-form-content\">\n      <ng-content></ng-content>\n    </div>\n    <div #buttons class=\"igo-form-buttons\">\n      <ng-content select=\"[formButtons]\"></ng-content>\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FormComponent } from './form.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    FormComponent,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    FormComponent\n  ]\n})\nexport class IgoFormFormModule {}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, ValidatorFn } from '@angular/forms';\n\nimport {\n  Form,\n  FormField,\n  FormFieldConfig,\n  FormFieldGroup,\n  FormFieldGroupConfig\n} from './form.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  form(fields: FormField[], groups: FormFieldGroup[]): Form {\n    const control = this.formBuilder.group({});\n    fields.forEach((field: FormField) => {\n      control.addControl(field.name, field.control);\n    });\n    groups.forEach((group: FormFieldGroup) => {\n      control.addControl(group.name, group.control);\n    });\n\n    return {fields, groups, control};\n  }\n\n  group(config: FormFieldGroupConfig, fields: FormField[]): FormFieldGroup {\n    const options = config.options || {};\n    const control = this.formBuilder.group({});\n    fields.forEach((field: FormField) => {\n      control.addControl(field.name, field.control);\n    });\n\n    if (options.validator) {\n      const validators = this.getValidators(options.validator); // convert string to actual validator\n      control.setValidators(validators);\n    }\n\n    return Object.assign({}, config, {fields, control}) as FormFieldGroup;\n  }\n\n  field(config: FormFieldConfig): FormField {\n    const options = config.options || {};\n    const state = {\n      value: '',\n      disabled: options.disabled\n    };\n    const control = this.formBuilder.control(state);\n\n    if (options.validator) {\n      const validators = this.getValidators(options.validator); // convert string to actual validator\n      control.setValidators(validators);\n    }\n\n    return Object.assign({type: 'text'}, config, {control}) as FormField;\n  }\n\n  extendFieldConfig(config: FormFieldConfig, partial: Partial<FormFieldConfig>): FormFieldConfig {\n    const options = Object.assign({}, config.options || {}, partial.options || {});\n    const inputs = Object.assign({}, config.inputs || {}, partial.inputs || {});\n    const subscribers = Object.assign({}, config.subscribers || {}, partial.subscribers || {});\n    return Object.assign({}, config, {options, inputs, subscribers});\n  }\n\n  private getValidators(validatorOption: string | string[] | ValidatorFn): ValidatorFn | ValidatorFn[] {\n    if (Array.isArray(validatorOption)) {\n      return validatorOption.map((validatorStr) => {\n        return this.getValidator(validatorStr);\n      });\n    }\n\n    return this.getValidator(validatorOption);\n  }\n\n  private getValidator(validatorStr: string | ValidatorFn): ValidatorFn {\n    if (typeof validatorStr !== 'string') {\n      return validatorStr;\n    }\n\n    // regex pattern to extract arguments from string for e.g applying on \"minLength(8)\" would extract 8\n    const re = /^([a-zA-Z]{3,15})\\((.{0,20})\\)$/;\n    const match = validatorStr.match(re);\n\n    if (!match) {\n      return Validators[validatorStr];\n    }\n\n    const name = match[1];\n    const args = match[2];\n    return Validators[name](args);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service where all available form fields are registered.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormFieldService {\n\n  static fields: {[key: string]: any} = {};\n\n  static register(type: string, component: any) {\n    FormFieldService.fields[type] = component;\n  }\n\n  constructor() {}\n\n  /**\n   * Return field component by type\n   * @param type Field type\n   * @returns Field component\n   */\n  getFieldByType(type: string): any {\n    return FormFieldService.fields[type];\n  }\n\n}\n","import { FormFieldService } from './form-field.service';\n\nexport function IgoFormFieldComponent(type: string): (cls: any) => any {\n  return (compType: any) => {\n    FormFieldService.register(type, compType);\n  };\n}\n","\n\n<ng-container *ngIf=\"field !== undefined\">\n  <igo-dynamic-outlet\n    [component]=\"getFieldComponent()\"\n    [inputs]=\"getFieldInputs()\"\n    [subscribers]=\"getFieldSubscribers()\">\n  </igo-dynamic-outlet>\n</ng-container>\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { FormField, FormFieldInputs, FormFieldOptions } from '../shared/form.interfaces';\nimport { FormFieldService } from '../shared/form-field.service';\nimport { getDefaultErrorMessages } from '../shared';\n\n/**\n * This component renders the proper form input based on\n * the field configuration it receives.\n */\n@Component({\n  selector: 'igo-form-field',\n  templateUrl: './form-field.component.html',\n  styleUrls: ['./form-field.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldComponent {\n\n  /**\n   * Field configuration\n   */\n  @Input() field: FormField;\n\n  /**\n   * Field inputs cache\n   */\n  private fieldInputs: FormFieldInputs = undefined;\n\n  /**\n   * Field subscribers cache\n   */\n  private fieldSubscribers: {[key: string]: ({field: FormField, control: FormControl}) => void } = undefined;\n\n  get fieldOptions(): FormFieldOptions {\n    return this.field.options || {};\n  }\n\n  constructor(private formFieldService: FormFieldService) {}\n\n  getFieldComponent(): any {\n    return this.formFieldService.getFieldByType(this.field.type || 'text');\n  }\n\n  getFieldInputs(): FormFieldInputs {\n    if (this.fieldInputs !== undefined) {\n      return this.fieldInputs;\n    }\n\n    const errors = this.fieldOptions.errors || {};\n    this.fieldInputs = Object.assign(\n      {\n        placeholder: this.field.title,\n        disableSwitch: this.fieldOptions.disableSwitch || false\n      },\n      Object.assign({}, this.field.inputs || {}),\n      {\n        formControl: this.field.control,\n        errors: Object.assign({}, getDefaultErrorMessages(), errors)\n      }\n    );\n    return this.fieldInputs;\n  }\n\n  getFieldSubscribers(): {[key: string]: ({field: FormField, control: FormControl}) => void } {\n    if (this.fieldSubscribers !== undefined) {\n      return this.fieldSubscribers;\n    }\n\n    this.fieldSubscribers = Object.assign({}, this.field.subscribers || {});\n    return this.fieldSubscribers;\n  }\n}\n","<mat-form-field>\n  <mat-select\n    [required]=\"required\"\n    [placeholder]=\"placeholder\"\n    [formControl]=\"formControl\">\n    <mat-option *ngFor=\"let choice of choices$ | async\" [value]=\"choice.value\">\n      {{choice.title}}\n    </mat-option>\n  </mat-select>\n  <mat-icon\n    *ngIf=\"disableSwitch === true\"\n    class=\"igo-form-disable-switch\"\n    [svgIcon]=\"(disabled$ | async) === true ? 'checkbox-blank-outline' : 'checkbox-marked-outline'\"\n    (click)=\"onDisableSwitchClick()\"\n    matPrefix>\n  </mat-icon>\n  <mat-error *ngIf=\"formControl.errors\">{{getErrorMessage() | translate}}</mat-error>\n</mat-form-field>\n","import {\n  Input,\n  Component,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\nimport type { FormControl } from '@angular/forms';\n\nimport { BehaviorSubject, } from 'rxjs';\n\nimport { formControlIsRequired, getControlErrorMessage } from '../shared/form.utils';\nimport { FormFieldSelectChoice } from '../shared/form.interfaces';\nimport { IgoFormFieldComponent } from '../shared/form-field-component';\n\n/**\n * This component renders a select field\n */\n@IgoFormFieldComponent('select')\n@Component({\n  selector: 'igo-form-field-select',\n  templateUrl: './form-field-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldSelectComponent implements OnInit {\n\n  readonly disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * Select input choices\n   */\n  @Input()\n  set choices(value: FormFieldSelectChoice[]) { this.choices$.next(value); }\n  get choices(): FormFieldSelectChoice[] { return this.choices$.value; }\n  readonly choices$: BehaviorSubject<FormFieldSelectChoice[]> = new BehaviorSubject([]);\n\n  /**\n   * The field's form control\n   */\n  @Input() formControl: FormControl;\n\n  /**\n   * Field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Field placeholder\n   */\n  @Input() errors: {[key: string]: string};\n\n  /**\n   * Wheter a disable switch should be available\n   */\n  @Input() disableSwitch: boolean = false;\n\n  /**\n   * Whether the field is required\n   */\n  get required(): boolean {\n    return formControlIsRequired(this.formControl);\n  }\n\n  ngOnInit() {\n    this.disabled$.next(this.formControl.disabled);\n  }\n\n  /**\n   * Get error message\n   */\n  getErrorMessage(): string {\n    return getControlErrorMessage(this.formControl, this.errors);\n  }\n\n  onDisableSwitchClick() {\n    this.toggleDisabled();\n  }\n\n  private toggleDisabled() {\n    const disabled = !this.disabled$.value;\n    if (disabled === true) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n    this.disabled$.next(disabled);\n  }\n\n}\n","<mat-form-field>\n  <input\n    matInput\n    [required]=\"required\"\n    [placeholder]=\"placeholder\"\n    [formControl]=\"formControl\">\n  <mat-icon\n    *ngIf=\"disableSwitch === true\"\n    class=\"igo-form-disable-switch\"\n    [svgIcon]=\"(disabled$ | async) === true ? 'checkbox-blank-outline' : 'checkbox-marked-outline'\"\n    (click)=\"onDisableSwitchClick()\"\n    matPrefix>\n  </mat-icon>\n  <mat-error *ngIf=\"formControl.errors\">{{getErrorMessage() | translate}}</mat-error>\n</mat-form-field>\n","import {\n  Input,\n  Component,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\nimport type { FormControl } from '@angular/forms';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport {\n  formControlIsRequired,\n  getControlErrorMessage\n} from '../shared/form.utils';\nimport { IgoFormFieldComponent } from '../shared/form-field-component';\n\n/**\n * This component renders a text field\n */\n@IgoFormFieldComponent('text')\n@Component({\n  selector: 'igo-form-field-text',\n  templateUrl: './form-field-text.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldTextComponent implements OnInit {\n\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * The field's form control\n   */\n  @Input() formControl: FormControl;\n\n  /**\n   * Field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Field placeholder\n   */\n  @Input() errors: {[key: string]: string};\n\n  /**\n   * Wheter a disable switch should be available\n   */\n  @Input() disableSwitch: boolean = false;\n\n  /**\n   * Whether the field is required\n   */\n  get required(): boolean {\n    return formControlIsRequired(this.formControl);\n  }\n\n  ngOnInit() {\n    this.disabled$.next(this.formControl.disabled);\n  }\n\n  /**\n   * Get error message\n   */\n  getErrorMessage(): string {\n    return getControlErrorMessage(this.formControl, this.errors);\n  }\n\n  onDisableSwitchClick() {\n    this.toggleDisabled();\n  }\n\n  private toggleDisabled() {\n    const disabled = !this.disabled$.value;\n    if (disabled === true) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n    this.disabled$.next(disabled);\n  }\n\n}\n","<mat-form-field>\n  <textarea\n    matInput\n    [required]=\"required\"\n    [placeholder]=\"placeholder\"\n    [formControl]=\"formControl\">\n  </textarea>\n  <mat-icon\n    *ngIf=\"disableSwitch === true\"\n    class=\"igo-form-disable-switch\"\n    [svgIcon]=\"(disabled$ | async) === true ? 'checkbox-blank-outline' : 'checkbox-marked-outline'\"\n    (click)=\"onDisableSwitchClick()\"\n    matPrefix>\n  </mat-icon>\n  <mat-error *ngIf=\"formControl.errors\">{{getErrorMessage() | translate}}</mat-error>\n</mat-form-field>\n","import {\n  Input,\n  Component,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\nimport type { FormControl } from '@angular/forms';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { formControlIsRequired, getControlErrorMessage } from '../shared/form.utils';\nimport { IgoFormFieldComponent } from '../shared/form-field-component';\n\n/**\n * This component renders a textarea field\n */\n@IgoFormFieldComponent('textarea')\n@Component({\n  selector: 'igo-form-field-textarea',\n  templateUrl: './form-field-textarea.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldTextareaComponent implements OnInit {\n\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * The field's form control\n   */\n  @Input() formControl: FormControl;\n\n  /**\n   * Field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Field placeholder\n   */\n  @Input() errors: {[key: string]: string};\n\n  /**\n   * Wheter a disable switch should be available\n   */\n  @Input() disableSwitch: boolean = false;\n\n  /**\n   * Whether the field is required\n   */\n  get required(): boolean {\n    return formControlIsRequired(this.formControl);\n  }\n\n  ngOnInit() {\n    this.disabled$.next(this.formControl.disabled);\n  }\n\n  /**\n   * Get error message\n   */\n  getErrorMessage(): string {\n    return getControlErrorMessage(this.formControl, this.errors);\n  }\n\n  onDisableSwitchClick() {\n    this.toggleDisabled();\n  }\n\n  private toggleDisabled() {\n    const disabled = !this.disabled$.value;\n    if (disabled === true) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n    this.disabled$.next(disabled);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoDynamicOutletModule } from '../../dynamic-component/dynamic-outlet/dynamic-outlet.module';\n\nimport { FormFieldComponent } from './form-field.component';\nimport { FormFieldSelectComponent } from './form-field-select.component';\nimport { FormFieldTextComponent } from './form-field-text.component';\nimport { FormFieldTextareaComponent } from './form-field-textarea.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    IgoLanguageModule,\n    IgoDynamicOutletModule\n  ],\n  exports: [\n    FormFieldComponent,\n    FormFieldSelectComponent,\n    FormFieldTextComponent,\n    FormFieldTextareaComponent\n  ],\n  declarations: [\n    FormFieldComponent,\n    FormFieldSelectComponent,\n    FormFieldTextComponent,\n    FormFieldTextareaComponent\n  ]\n})\nexport class IgoFormFieldModule {}\n","<div\n  *ngIf=\"group && group.fields.length > 0\"\n  class=\"igo-form-group-fields\">\n  <div\n    *ngFor=\"let field of group.fields\"\n    class=\"igo-form-field-wrapper\"\n    [ngClass]=\"getFieldNgClass(field)\">\n    <igo-form-field [field]=\"field\"></igo-form-field>\n  </div>\n</div>\n\n<div class=\"igo-form-group-extra-content\">\n  <ng-content></ng-content>\n</div>\n\n<mat-error *ngIf=\"formControl.errors\">{{getErrorMessage() | translate}}</mat-error>\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { getControlErrorMessage } from '../shared/form.utils';\nimport { FormField, FormFieldGroup } from '../shared/form.interfaces';\n\n/**\n * A configurable form, optionnally bound to an entity\n * (for example in case of un update). Submitting that form\n * emits an event with the form data but no other operation is performed.\n */\n@Component({\n  selector: 'igo-form-group',\n  templateUrl: './form-group.component.html',\n  styleUrls: ['./form-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormGroupComponent {\n\n  /**\n   * Form field group\n   */\n  @Input() group: FormFieldGroup;\n\n  /**\n   * Field placeholder\n   */\n  @Input() errors: {[key: string]: string};\n\n  /**\n   * Form group control\n   */\n  get formControl(): FormGroup { return this.group.control; }\n\n  constructor() {}\n\n  /**\n   * Return the number of columns a field should occupy.\n   * The maximum allowed is 2, even if the field config says more.\n   * @param field Field\n   * @returns Number of columns\n   * @internal\n   */\n  getFieldColSpan(field: FormField): number {\n    let colSpan = 2;\n    const options = field.options || {};\n    if (options.cols && options.cols > 0) {\n      colSpan = Math.min(options.cols, 2);\n    }\n\n    return colSpan;\n  }\n\n  /**\n   * Return the number of columns a field should occupy.\n   * The maximum allowed is 2, even if the field config says more.\n   * @param field Field\n   * @returns Number of columns\n   * @internal\n   */\n  getFieldNgClass(field: FormField): {[key: string]: boolean} {\n    const colspan = this.getFieldColSpan(field);\n    return {[`igo-form-field-colspan-${colspan}`]: true};\n  }\n\n  /**\n   * Get error message\n   */\n  getErrorMessage(): string {\n    const options = this.group.options || {};\n    return getControlErrorMessage(this.formControl, options.errors || {});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { IgoFormFieldModule } from '../form-field/form-field.module';\nimport { FormGroupComponent } from './form-group.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    IgoLanguageModule,\n    IgoFormFieldModule\n  ],\n  exports: [\n    FormGroupComponent\n  ],\n  declarations: [\n    FormGroupComponent\n  ]\n})\nexport class IgoFormGroupModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoFormFormModule } from './form/form.module';\nimport { IgoFormGroupModule } from './form-group/form-group.module';\nimport { IgoFormFieldModule } from './form-field/form-field.module';\nimport { FormService } from './shared/form.service';\nimport { FormFieldService } from './shared/form-field.service';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoFormGroupModule,\n    IgoFormFieldModule\n  ],\n  exports: [\n    IgoFormFormModule,\n    IgoFormGroupModule,\n    IgoFormFieldModule\n  ],\n  declarations: [],\n  providers: [\n    FormService,\n    FormFieldService\n  ]\n})\nexport class IgoFormModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'igo-home-button',\n  templateUrl: './home-button.component.html',\n  styleUrls: ['./home-button.component.scss']\n})\nexport class HomeButtonComponent {\n\n  @Output() unselectButton = new EventEmitter<any>();\n\n  constructor() {}\n\n  onUnselectButtonClick() {\n    this.unselectButton.emit();\n  }\n}\n","<button\n    id=\"homeButton\"\n    mat-icon-button\n    tooltip-position=\"below\"\n    matTooltipShowDelay=\"500\"\n    [matTooltip]=\"'igo.context.sidenav.mainMenu' | translate\"\n    (click)=\"onUnselectButtonClick()\">\n    <mat-icon svgIcon=\"home\"></mat-icon>\n</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HomeButtonComponent } from './home-button.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    IgoLanguageModule\n  ],\n  exports: [HomeButtonComponent],\n  declarations: [HomeButtonComponent],\n  providers: []\n})\nexport class IgoHomeButtonModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { EntitySelectorComponent } from './entity-selector.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule\n  ],\n  exports: [EntitySelectorComponent],\n  declarations: [EntitySelectorComponent]\n})\nexport class IgoEntitySelectorModule {}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[igoStopDropPropagation]'\n})\nexport class StopDropPropagationDirective {\n  @HostListener('drop', ['$event'])\n  public onDrop(event: any): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { StopDropPropagationDirective } from './stop-drop-propagation.directive';\nimport { StopPropagationDirective } from './stop-propagation.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [StopDropPropagationDirective, StopPropagationDirective],\n  exports: [StopDropPropagationDirective, StopPropagationDirective]\n})\nexport class IgoStopPropagationModule {\n  static forRoot(): ModuleWithProviders<IgoStopPropagationModule> {\n    return {\n      ngModule: IgoStopPropagationModule,\n      providers: []\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EntityTablePaginatorComponent } from './entity-table-paginator.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    MatPaginatorModule,\n  ],\n  exports: [\n    EntityTablePaginatorComponent\n  ],\n  declarations: [\n    EntityTablePaginatorComponent,\n  ]\n})\nexport class IgoEntityTablePaginatorModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SecureImagePipe } from './secure-image.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [SecureImagePipe],\n  exports: [SecureImagePipe]\n})\nexport class IgoImageModule {\n  static forRoot(): ModuleWithProviders<IgoImageModule> {\n    return {\n      ngModule: IgoImageModule,\n      providers: []\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { IgoStopPropagationModule } from '../../stop-propagation/stop-propagation.module';\nimport { IgoCustomHtmlModule } from '../../custom-html/custom-html.module';\nimport { EntityTableRowDirective } from './entity-table-row.directive';\nimport { EntityTableComponent } from './entity-table.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { IgoEntityTablePaginatorModule } from '../entity-table-paginator/entity-table-paginator.module';\nimport { IgoImageModule } from '../../image/image.module';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatSortModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    IgoStopPropagationModule,\n    IgoCustomHtmlModule,\n    IgoEntityTablePaginatorModule,\n    IgoImageModule,\n    IgoLanguageModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatTooltipModule\n  ],\n  exports: [\n    EntityTableComponent\n  ],\n  declarations: [\n    EntityTableComponent,\n    EntityTableRowDirective\n  ]\n})\nexport class IgoEntityTableModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoEntitySelectorModule } from './entity-selector/entity-selector.module';\nimport { IgoEntityTableModule } from './entity-table/entity-table.module';\nimport { IgoEntityTablePaginatorModule } from './entity-table-paginator/entity-table-paginator.module';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IgoEntitySelectorModule,\n    IgoEntityTableModule,\n    IgoEntityTablePaginatorModule\n  ],\n  declarations: []\n})\nexport class IgoEntityModule {}\n","import { catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { InteractiveTourOptions } from './interactive-tour.interface';\nimport { ConfigService } from '@igo2/core';\n\n@Injectable()\nexport class InteractiveTourLoader {\n  private jsonURL: string;\n  private allToursOptions;\n\n  constructor(private http: HttpClient, private configService: ConfigService) {\n    this.jsonURL = this.getPathToConfigFile();\n  }\n\n   public loadConfigTour() {\n      this.getJSON()\n        .subscribe(\n          (data) => {\n            this.allToursOptions = data;\n          },\n          (err) => {\n            throw new Error(`Problem with Interactive tour configuration file: interactiveTour.json not find. Check if the file and is path is set correctly.`);\n          }\n        );\n   }\n\n  public getPathToConfigFile(): string {\n    return (\n      this.configService.getConfig('interactiveTour.pathToConfigFile') ||\n      './config/interactiveTour.json'\n    );\n  }\n\n  public getJSON(): Observable<any> {\n    return this.http.get(this.jsonURL).pipe(\n      catchError((e) => {\n        e.error.caught = true;\n        throw e;\n      })\n    );\n  }\n\n  public getTourOptionData(toolName): InteractiveTourOptions {\n    if (this.allToursOptions === undefined) {\n      return undefined;\n    }\n    let nameInConfigFile = toolName;\n    nameInConfigFile = nameInConfigFile.replace(/\\s/g, '');\n    return this.allToursOptions[nameInConfigFile];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ShepherdService } from 'angular-shepherd';\n\nimport { ConfigService, MediaService, LanguageService } from '@igo2/core';\nimport { InteractiveTourLoader } from './interactive-tour.loader';\nimport {\n  InteractiveTourOptions,\n  InteractiveTourStep,\n  InteractiveTourAction\n} from './interactive-tour.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InteractiveTourService {\n  private previousStep: InteractiveTourStep;\n  private nextIndex = 1;\n\n  constructor(\n    private configService: ConfigService,\n    private mediaService: MediaService,\n    private languageService: LanguageService,\n    private interactiveTourLoader: InteractiveTourLoader,\n    private shepherdService: ShepherdService\n  ) {\n    if (this.isAppHaveTour()) {\n      this.interactiveTourLoader.loadConfigTour();\n    }\n  }\n\n  public isAppHaveTour() {\n    const haveTour = this.configService.getConfig('interactiveTour.activateInteractiveTour');\n    if (haveTour === undefined) {\n      return true;\n    } else {\n      return haveTour;\n    }\n  }\n\n  public isToolHaveTourConfig(toolName: string): boolean {\n    const checkTourActiveOptions = this.interactiveTourLoader.getTourOptionData(\n      toolName\n    );\n    if (checkTourActiveOptions === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  public disabledTourButton(toolName: string): boolean {\n    const stepConfig: InteractiveTourOptions = this.interactiveTourLoader.getTourOptionData(\n      toolName\n    );\n\n    if (stepConfig?.conditions) {\n      for (const condition of stepConfig?.conditions) {\n        if (document.querySelector(condition) === null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public isMobile(): boolean {\n    return this.mediaService.isMobile();\n  }\n\n  public isTourDisplayInMobile(): boolean {\n    const showInMobile = this.configService.getConfig(\n      'interactiveTour.tourInMobile'\n    );\n    if (showInMobile === undefined) {\n      return true;\n    }\n    return this.configService.getConfig('interactiveTour.tourInMobile');\n  }\n\n  private getButtons(buttonKind?: 'first' | 'last' | 'noBackButton') {\n    if (buttonKind === 'noBackButton') {\n      return [\n        {\n          classes: 'shepherd-button-primary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.nextButton'\n          ),\n          type: 'next'\n        }\n      ];\n    }\n    if (buttonKind === 'first') {\n      return [\n        {\n          classes: 'shepherd-button-secondary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.exitButton'\n          ),\n          type: 'cancel'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.nextButton'\n          ),\n          type: 'next'\n        }\n      ];\n    }\n\n    if (buttonKind === 'last') {\n      return [\n        {\n          classes: 'shepherd-button-secondary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.backButton'\n          ),\n          type: 'back'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.exitButton'\n          ),\n          type: 'cancel'\n        }\n      ];\n    }\n\n    return [\n      {\n        classes: 'shepherd-button-secondary',\n        text: this.languageService.translate.instant(\n          'igo.common.interactiveTour.backButton'\n        ),\n        type: 'back'\n      },\n      {\n        classes: 'shepherd-button-primary',\n        text: this.languageService.translate.instant(\n          'igo.common.interactiveTour.nextButton'\n        ),\n        type: 'next'\n      }\n    ];\n  }\n\n  private getAction(actionName: string) {\n    const action = {\n      click: 'click'\n    };\n    return action[actionName.toLowerCase()];\n  }\n\n  private addProgress() {\n    const self = this as any;\n    let nbTry = 0;\n    const maxTry = 21;\n    const checkExist = setInterval(() => {\n      if (self.getCurrentStep()) {\n        if (self.getCurrentStep().options.attachTo.element && !document.querySelector(self.getCurrentStep().options.attachTo.element)) {\n          self.cancel();\n          clearInterval(checkExist);\n          return;\n        } else {\n          const currentStepElement = self.getCurrentStep().getElement();\n          if (currentStepElement) {\n            const shepherdList = currentStepElement.querySelectorAll('.shepherd-content, .shepherd-text');\n            shepherdList.forEach(element => {\n              element.classList.add('mat-typography');\n            });\n          }\n          const header = currentStepElement\n            ? currentStepElement.querySelector('.shepherd-header')\n            : undefined;\n\n          nbTry++;\n          if (header || nbTry > maxTry) {\n            clearInterval(checkExist);\n          }\n\n          if (header) {\n            const stepsArray = self.steps;\n            const progress = document.createElement('span');\n            progress.className = 'shepherd-progress';\n            progress.innerText = `${\n              stepsArray.indexOf(self.getCurrentStep()) + 1\n            }/${stepsArray.length}`;\n            header.insertBefore(\n              progress,\n              currentStepElement.querySelector('.shepherd-cancel-icon')\n            );\n          }\n        }\n      }\n    }, 100);\n  }\n\n  private checkNext(index, tour, service) {\n    if (tour.getCurrentStep()) {\n      if (tour.getCurrentStep().options.attachTo.element && document.querySelector(tour.getCurrentStep().options.attachTo.element)) {\n        tour.complete();\n        return;\n      }\n\n      if (index.index === tour.steps.length - 1) {\n        tour.complete();\n        return;\n      }\n\n      tour.steps.splice(index.index, 1);\n      const nextStep = tour.steps[index.index];\n      if (nextStep.options.attachTo.element && !document.querySelector(nextStep.options.attachTo.element)) {\n        service.checkNext(index, tour, service);\n      } else {\n        tour._setupModal();\n        tour.show(nextStep.id);\n      }\n    }\n  }\n\n  private executeAction(\n    step: InteractiveTourStep,\n    actionConfig: InteractiveTourAction\n  ) {\n    if (!actionConfig) {\n      return;\n    }\n\n    if (\n      actionConfig.condition &&\n      ((actionConfig.condition.charAt(0) === '!' &&\n        document.querySelector(actionConfig.condition.slice(1))) ||\n        (actionConfig.condition.charAt(0) !== '!' &&\n          !document.querySelector(actionConfig.condition)))\n    ) {\n      return;\n    }\n\n    const element: HTMLElement = document.querySelector(\n      actionConfig.element || step.element\n    ) as HTMLElement;\n    const action = this.getAction(actionConfig.action);\n    if (element && action) {\n      element[action]();\n    }\n  }\n\n  private executeActionPromise(\n    step: InteractiveTourStep,\n    actionConfig: InteractiveTourAction\n  ) {\n    return new Promise<void>((resolve) => {\n      this.executeAction(step, actionConfig);\n      if (!actionConfig || !actionConfig.waitFor) {\n        resolve();\n        return;\n      }\n      let nbTry = 0;\n      const maxTry = actionConfig.maxWait ? actionConfig.maxWait / 100 : 20;\n      const checkExist = setInterval(() => {\n        nbTry++;\n        if (nbTry > maxTry || document.querySelector(actionConfig.waitFor)) {\n          clearInterval(checkExist);\n          resolve();\n        }\n      }, 100);\n    });\n  }\n\n  private getShepherdSteps(stepConfig: InteractiveTourOptions) {\n    const shepherdSteps = [];\n\n    let i = 0;\n    for (const step of stepConfig.steps) {\n      shepherdSteps.push({\n        attachTo: {\n          element: step.element,\n          on: step.position || stepConfig.position\n        },\n        popperOptions: {\n          modifiers: [{ name: 'offset', options: { offset: [0, 15] } }]\n        },\n        beforeShowPromise: () => {\n          return Promise.all([\n            this.executeActionPromise(\n              this.previousStep,\n              this.previousStep ? this.previousStep.beforeChange : undefined\n            ),\n            this.executeActionPromise(step, step.beforeShow)\n          ]);\n        },\n        buttons: this.getButtons(\n          i === 0\n            ? 'first'\n            : i + 1 === stepConfig.steps.length\n            ? 'last'\n            : stepConfig.steps[i].noBackButton\n            ? 'noBackButton'\n            : undefined\n        ),\n        classes: step.class,\n        highlightClass: step.highlightClass,\n        scrollTo: step.scrollToElement || stepConfig.scrollToElement || true,\n        canClickTarget: step.disableInteraction\n          ? !step.disableInteraction\n          : undefined,\n        title: this.languageService.translate.instant(\n          step.title || stepConfig.title\n        ),\n        text: [this.languageService.translate.instant(step.text)],\n        when: {\n          show: () => {\n            this.executeAction(step, step.onShow);\n          },\n          hide: () => {\n            this.previousStep = step;\n            this.executeAction(step, step.onHide);\n          }\n        }\n      });\n      i++;\n    }\n\n    return shepherdSteps;\n  }\n\n  public startTour(toolName: string) {\n    const stepConfig: InteractiveTourOptions = this.interactiveTourLoader.getTourOptionData(\n      toolName\n    );\n\n    this.shepherdService.defaultStepOptions = {\n      classes: stepConfig.class,\n      highlightClass: stepConfig.highlightClass,\n      canClickTarget: stepConfig.disableInteraction\n        ? !stepConfig.disableInteraction\n        : true,\n      cancelIcon: {\n        enabled: true\n      }\n    };\n\n    const shepherdSteps = this.getShepherdSteps(stepConfig);\n\n    this.shepherdService.modal = true;\n    this.shepherdService.confirmCancel = false;\n    this.shepherdService.addSteps(shepherdSteps);\n\n    this.shepherdService.tourObject.on('show', this.addProgress);\n    this.shepherdService.tourObject.on('cancel', (index) => {\n      this.checkNext(index, this.shepherdService.tourObject, this);\n    });\n\n    this.shepherdService.start();\n  }\n}\n","import { EntityRecord, EntityStore } from '../../entity';\nimport { Tool, ToolboxOptions } from './tool.interface';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n/**\n * Service where all available tools and their component are registered.\n */\nexport class Toolbox {\n  /**\n   * Observable of the active tool\n   */\n  activeTool$: BehaviorSubject<Tool> = new BehaviorSubject(undefined);\n\n  /**\n   * Ordered list of tool names to display in a toolbar\n   */\n  toolbar$: BehaviorSubject<string[]> = new BehaviorSubject([]);\n\n  /**\n   * Observable of the active tool\n   */\n  private activeTool$$: Subscription;\n\n  /**\n   * Active tool history. Useful for activating the previous tool.\n   */\n  private activeToolHistory: string[] = [];\n\n  /**\n   * Tool store\n   */\n  private store = new EntityStore<Tool>([], {\n    getKey: (tool: Tool) => tool.name\n  });\n\n  get tools$(): BehaviorSubject<Tool[]> {\n    return this.store.entities$;\n  }\n\n  constructor(private options: ToolboxOptions = {}) {\n    this.setToolbar(options.toolbar);\n    this.initStore();\n  }\n\n  /**\n   * Destroy the toolbox\n   */\n  destroy() {\n    this.activeTool$$.unsubscribe();\n    this.store.destroy();\n  }\n\n  /**\n   * Return a tool\n   * @param name Tool name\n   * @returns tool Tool\n   */\n  getTool(name: string): Tool {\n    return this.store.get(name);\n  }\n\n  /**\n   * Return all tools\n   * @returns Array of tools\n   */\n  getTools(): Tool[] {\n    return this.store.all();\n  }\n\n  /**\n   * Set tool configurations\n   * @param tools Tools\n   */\n  setTools(tools: Tool[]) {\n    this.store.load(tools);\n  }\n\n  /**\n   * Get toolbar\n   * @returns Toolbar value\n   */\n  getToolbar(): string[] {\n    return this.toolbar$.getValue();\n  }\n\n  /**\n   * Set toolbar\n   * @param toolbar A list of tool names\n   */\n  setToolbar(toolbar: string[]) {\n    this.toolbar$.next(toolbar || []);\n  }\n\n  /**\n   * Activate a tool (and deactivate other tools)\n   * @param name Tool name\n   * @param options Tool options\n   */\n  activateTool(name: string, options: { [key: string]: any } = {}) {\n    const tool = this.getTool(name);\n    if (tool === undefined) {\n      return;\n    }\n\n    this.store.state.update(tool, { active: true, options }, true);\n  }\n\n  /**\n   * Activate the previous tool, if any\n   */\n  activatePreviousTool() {\n    if (this.activeToolHistory.length <= 1) {\n      this.deactivateTool();\n      return;\n    }\n    const [previous, current] = this.activeToolHistory.splice(-2, 2);\n    this.activateTool(previous);\n  }\n\n  /**\n   * Activate the tool below, if any\n   */\n  /* activateBelowTool() {\n    const arrayTools = this.getToolbar();\n    const index = arrayTools.findIndex(t => t === this.activeTool$.getValue().name);\n    if (arrayTools[index + 1] !== undefined) {\n      this.deactivateTool();\n      const below = arrayTools[index + 1];\n      this.activateTool(below);\n    } else {\n      this.deactivateTool();\n      const below = arrayTools[0];\n      this.activateTool(below);\n    }\n  } */\n\n  /**\n   * Activate the tool above, if any\n   */\n  /* activateAboveTool() {\n    const arrayTools = this.getToolbar();\n    const index = arrayTools.findIndex(t => t === this.activeTool$.getValue().name);\n    if (arrayTools[index - 1] !== undefined) {\n      this.deactivateTool();\n      const above = arrayTools[index - 1];\n      this.activateTool(above);\n    } else {\n      this.deactivateTool();\n      const above = arrayTools[arrayTools.length - 1];\n      this.activateTool(above);\n    }\n  } */\n\n  /**\n   * Deactivate the active tool\n   */\n  deactivateTool() {\n    this.clearActiveToolHistory();\n    this.store.state.updateAll({ active: false });\n  }\n\n  /**\n   * Initialize the tool store and start observing the active tool\n   */\n  private initStore() {\n    this.store = new EntityStore<Tool>([], {\n      getKey: (entity: Tool) => entity.name\n    });\n\n    this.activeTool$$ = this.store.stateView\n      .firstBy$((record: EntityRecord<Tool>) => record.state.active === true)\n      .subscribe((record: EntityRecord<Tool>) => {\n        if (record === undefined) {\n          this.setActiveTool(undefined);\n          return;\n        }\n\n        const tool = record.entity;\n        const options = Object.assign(\n          {},\n          tool.options || {},\n          record.state.options || {}\n        );\n        this.setActiveTool(Object.assign({}, tool, { options }));\n      });\n  }\n\n  /**\n   * Set the active tool and update the tool history\n   * @param tool Tool\n   */\n  private setActiveTool(tool: Tool | undefined) {\n    this.activeTool$.next(tool);\n    if (tool === undefined) {\n      this.clearActiveToolHistory();\n    } else {\n      this.activeToolHistory = this.activeToolHistory\n        .filter((name: string) => name !== tool.name)\n        .concat([tool.name]);\n    }\n  }\n\n  /**\n   * Clear the tool history\n   */\n  private clearActiveToolHistory() {\n    this.activeToolHistory = [];\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Tool } from './tool.interface';\nimport { Toolbox } from './toolbox';\n\n/**\n * Service where runtime tool configurations are registered\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolService {\n  static tools: { [key: string]: Tool } = {};\n\n  /**\n   * Toolbox that holds main tools\n   */\n  public toolbox: Toolbox = new Toolbox();\n\n  static register(tool: Tool) {\n    ToolService.tools[tool.name] = tool;\n  }\n\n  constructor() {\n    this.toolbox.setTools(this.getTools());\n  }\n\n  /**\n   * Return a tool\n   * @param name Tool name\n   * @returns tool Tool\n   */\n  getTool(name: string): Tool {\n    return ToolService.tools[name];\n  }\n\n  /**\n   * Return all tools\n   * @returns tTols\n   */\n  getTools(): Tool[] {\n    return Object.values(ToolService.tools);\n  }\n}\n","<button *ngIf=\"showTourButton\"\n  (click) = \"startInteractiveTour()\"\n  [ngClass]=\"getClass()\"\n  mat-raised-button\n  tooltip-position=\"below\"\n  matTooltipShowDelay=\"500\"\n  [disabled]=disabledTourButton>\n  <span class=\"interactive-tour-button-title\">{{'igo.common.interactiveTour.buttonTitle' | translate}} {{(discoverTitleInLocale$ | async) | translate}}</span>\n  <mat-icon\n    svgIcon=\"presentation-play\"\n    [matTooltip]=\"disabledTourButton ?\n    ('igo.common.interactiveTour.disaledTooltipTourToolButton' | translate) :\n    ('igo.common.interactiveTour.tooltipTourToolButton' | translate)\">\n  </mat-icon>\n</button>\n","import { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { InteractiveTourService } from './interactive-tour.service';\nimport { ToolService } from '../tool/shared/tool.service';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'igo-interactive-tour',\n  templateUrl: './interactive-tour.component.html',\n  styleUrls: ['./interactive-tour.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class InteractiveTourComponent {\n  /**\n   * Toolbox that holds main tools\n   */\n  @Input() tourToStart: string = '';\n  @Input() styleButton: string;\n  @Input() discoverTitleInLocale$: Observable<string> = of('IGO');\n\n  getClass() {\n    return {\n      'tour-button-tool-icon': this.styleButton === 'icon',\n      'tour-button-tool': this.styleButton === 'raised'\n    };\n  }\n\n  get toolbox() {\n    return this.toolService.toolbox;\n  }\n\n  getTourToStart() {\n    if (this.tourToStart) {\n      return this.tourToStart;\n    } else {\n      return this.activeToolName;\n    }\n  }\n\n  get activeToolName() {\n    if (this.toolbox) {\n      if (this.isActiveTool) {\n        return this.toolbox.activeTool$.getValue().name;\n      } else {\n        return 'global';\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  get isActiveTool(): boolean {\n    if (this.toolbox) {\n      return this.toolbox.activeTool$.getValue() !== undefined;\n    } else {\n      return undefined;\n    }\n  }\n\n  get isToolHaveTour(): boolean {\n    if (this.activeToolName === 'about' && !this.tourToStart) {\n      return false;\n    }\n    return this.interactiveTourService.isToolHaveTourConfig(\n      this.getTourToStart()\n    );\n  }\n\n  get showTourButton(): boolean {\n    // 2 conditions to show: have Tour on tool in Config file and if we are in mobile displayInMobile= true\n    let haveTour: boolean;\n    haveTour = this.isToolHaveTour;\n    if (haveTour === false) {\n      return false;\n    }\n\n    let inMobileAndShow: boolean;\n    if (this.interactiveTourService.isMobile()) {\n      inMobileAndShow = this.isTourDisplayInMobile;\n      if (inMobileAndShow === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get isTourDisplayInMobile(): boolean {\n    return this.interactiveTourService.isTourDisplayInMobile();\n  }\n\n  get disabledTourButton(): boolean {\n    return this.interactiveTourService.disabledTourButton(this.activeToolName);\n  }\n\n  constructor(\n    private interactiveTourService: InteractiveTourService,\n    private toolService: ToolService\n  ) {}\n\n  startInteractiveTour() {\n    const tour = this.getTourToStart();\n    if (tour) {\n      this.interactiveTourService.startTour(tour);\n    } else {\n      return;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { InteractiveTourService } from './interactive-tour.service';\nimport { InteractiveTourComponent } from './interactive-tour.component';\nimport { InteractiveTourLoader } from './interactive-tour.loader';\n\n@NgModule({\n  declarations: [InteractiveTourComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    IgoLanguageModule\n  ],\n  providers: [InteractiveTourService, InteractiveTourLoader],\n  exports: [InteractiveTourComponent]\n})\nexport class IgoInteractiveTourModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keyvalue'\n})\nexport class KeyValuePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    const keyValues = [];\n    Object.getOwnPropertyNames(value).forEach((key: string) =>\n      keyValues.push({ key, value: value[key] })\n    );\n\n    return keyValues;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { KeyValuePipe } from './keyvalue.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [KeyValuePipe],\n  exports: [KeyValuePipe]\n})\nexport class IgoKeyValueModule {\n  static forRoot(): ModuleWithProviders<IgoKeyValueModule> {\n    return {\n      ngModule: IgoKeyValueModule,\n      providers: []\n    };\n  }\n}\n","<h1 mat-dialog-title class=\"mat-typography\">{{ title }}</h1>\n\n<div mat-dialog-content class=\"mat-typography\">\n  <ng-container *ngTemplateOutlet=\"loopObject;context:{ obj: data }\"></ng-container>\n\n  <ng-template #loopObject let-obj='obj' let-baseKey='baseKey'>\n    <ng-container *ngFor=\"let property of obj | keyvalue\">\n      <ng-container *ngIf=\"ignoreKeys.indexOf(getKey(baseKey, property.key)) === -1\">\n\n        <ng-container *ngIf=\"isObject(property.value); else notObject\">\n          <ng-container *ngTemplateOutlet=\"loopObject;context:{ obj: property.value, baseKey: getKey(baseKey, property.key) }\"></ng-container>\n        </ng-container>\n\n        <ng-template #notObject>\n          <p><span><b>{{getKey(baseKey, property.key)}}</b> : </span><span class=\"propertyValue\" [innerHtml]=\"property.value\"></span></p>\n        </ng-template>\n\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button color=\"primary\"\n          (click)=\"dialogRef.close(false)\">\n    OK\n  </button>\n</div>\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'igo-json-dialog',\n  templateUrl: './json-dialog.component.html'\n})\nexport class JsonDialogComponent {\n  public title: string;\n  public data: any;\n  public ignoreKeys: string[];\n\n  constructor(public dialogRef: MatDialogRef<JsonDialogComponent>) {}\n\n  isObject(val) {\n    return typeof val === 'object' && !Array.isArray(val);\n  }\n\n  getKey(baseKey, key) {\n    return (baseKey ? baseKey + '.' : '') + key;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Observable } from 'rxjs';\n\nimport { JsonDialogComponent } from './json-dialog.component';\n\n@Injectable()\nexport class JsonDialogService {\n  constructor(private dialog: MatDialog) {}\n\n  public open(title: any, data, ignoreKeys?: string[]): Observable<any> {\n    const dialogRef = this.dialog.open(JsonDialogComponent, {\n      disableClose: false\n    });\n    dialogRef.componentInstance.data = data;\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.ignoreKeys = ignoreKeys;\n\n    return dialogRef.afterClosed();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { IgoKeyValueModule } from '../keyvalue/keyvalue.module';\n\nimport { JsonDialogComponent } from './json-dialog.component';\nimport { JsonDialogService } from './json-dialog.service';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatDialogModule, IgoKeyValueModule],\n  exports: [JsonDialogComponent],\n  declarations: [JsonDialogComponent],\n  providers: [JsonDialogService]\n})\nexport class IgoJsonDialogModule {\n  static forRoot(): ModuleWithProviders<IgoJsonDialogModule> {\n    return {\n      ngModule: IgoJsonDialogModule\n    };\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  ElementRef,\n  Renderer2,\n  HostListener,\n  EventEmitter\n} from '@angular/core';\n\n@Directive({\n  selector: '[igoListItem]'\n})\nexport class ListItemDirective {\n\n  static focusedCls = 'igo-list-item-focused';\n  static selectedCls = 'igo-list-item-selected';\n  static disabledCls = 'igo-list-item-disabled';\n\n  @Input()\n  get color() {\n    return this._color;\n  }\n  set color(value: string) {\n    this._color = value;\n  }\n  private _color = 'primary';\n\n  @Input()\n  get focused() {\n    return this._focused;\n  }\n  set focused(value: boolean) {\n    if (value === this._focused) {\n      return;\n    }\n    if (this.disabled) {\n      return;\n    }\n\n    value ? this.beforeFocus.emit(this) : this.beforeUnfocus.emit(this);\n\n    this._focused = value;\n    if (this.selected !== true) {\n      this.toggleFocusedClass();\n    }\n\n    value ? this.focus.emit(this) : this.unfocus.emit(this);\n  }\n  private _focused = false;\n\n  @Input()\n  get selected() {\n    return this._selected;\n  }\n  set selected(value: boolean) {\n    if (value === this._selected) {\n      return;\n    }\n    if (this.disabled) {\n      return;\n    }\n\n    value ? this.beforeSelect.emit(this) : this.beforeUnselect.emit(this);\n\n    this._selected = value;\n    this._focused = value;\n    this.toggleSelectedClass();\n\n    value ? this.select.emit(this) : this.unselect.emit(this);\n  }\n  private _selected = false;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    if (value === this._disabled) {\n      return;\n    }\n\n    if (value === true) {\n      this.selected = false;\n    }\n\n    value ? this.beforeDisable.emit(this) : this.beforeEnable.emit(this);\n\n    this._disabled = value;\n    this.toggleDisabledClass();\n\n    value ? this.disable.emit(this) : this.enable.emit(this);\n  }\n  private _disabled = false;\n\n  @Output() beforeSelect = new EventEmitter<ListItemDirective>();\n  @Output() beforeFocus = new EventEmitter<ListItemDirective>();\n  @Output() beforeUnselect = new EventEmitter<ListItemDirective>();\n  @Output() beforeUnfocus = new EventEmitter<ListItemDirective>();\n  @Output() beforeDisable = new EventEmitter<ListItemDirective>();\n  @Output() beforeEnable = new EventEmitter<ListItemDirective>();\n  @Output() focus = new EventEmitter<ListItemDirective>();\n  @Output() unfocus = new EventEmitter<ListItemDirective>();\n  @Output() select = new EventEmitter<ListItemDirective>();\n  @Output() unselect = new EventEmitter<ListItemDirective>();\n  @Output() disable = new EventEmitter<ListItemDirective>();\n  @Output() enable = new EventEmitter<ListItemDirective>();\n\n  @HostListener('click')\n  onClick() {\n    this.selected = true;\n  }\n\n  constructor(public renderer: Renderer2, public el: ElementRef) {}\n\n  getOffsetTop(): number {\n    const padding = 5;\n\n    return this.el.nativeElement.offsetTop - padding;\n  }\n\n  private toggleFocusedClass() {\n    if (this.focused) {\n      this.addCls(ListItemDirective.focusedCls);\n    } else {\n      this.removeCls(ListItemDirective.focusedCls);\n    }\n  }\n\n  private toggleSelectedClass() {\n    if (this.selected) {\n      this.addCls(ListItemDirective.selectedCls);\n      this.removeCls(ListItemDirective.focusedCls);\n    } else {\n      this.removeCls(ListItemDirective.selectedCls);\n    }\n  }\n\n  private toggleDisabledClass() {\n    if (this.disabled) {\n      this.addCls(ListItemDirective.disabledCls);\n    } else {\n      this.removeCls(ListItemDirective.disabledCls);\n    }\n  }\n\n  private addCls(cls: string) {\n    this.renderer.addClass(this.el.nativeElement, cls);\n  }\n\n  private removeCls(cls: string) {\n    this.renderer.removeClass(this.el.nativeElement, cls);\n  }\n}\n","import {\n  Component,\n  AfterViewInit,\n  OnInit,\n  OnDestroy,\n  Input,\n  ContentChildren,\n  HostListener,\n  ElementRef\n} from '@angular/core';\nimport type { QueryList } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { ListItemDirective } from './list-item.directive';\n\n@Component({\n  selector: 'igo-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements AfterViewInit, OnInit, OnDestroy {\n  @Input()\n  get navigation() {\n    return this._navigation;\n  }\n  set navigation(value: boolean) {\n    this._navigation = value;\n  }\n  private _navigation = true;\n\n  @Input()\n  get selection() {\n    return this._selection;\n  }\n  set selection(value: boolean) {\n    this._selection = value;\n  }\n  private _selection = true;\n\n  get selectedItem() {\n    return this._selectedItem;\n  }\n  set selectedItem(value: ListItemDirective) {\n    this.focusedItem = value;\n    this._selectedItem = value;\n  }\n  private _selectedItem: ListItemDirective;\n\n  get focusedItem() {\n    return this._focusedItem;\n  }\n  set focusedItem(value: ListItemDirective) {\n    this._focusedItem = value;\n  }\n  private _focusedItem: ListItemDirective;\n\n  private navigationEnabled: boolean;\n  private listItems$$: Subscription;\n  private subscriptions: Subscription[] = [];\n\n  @ContentChildren(ListItemDirective, { descendants: true })\n  listItems: QueryList<ListItemDirective>;\n\n  @HostListener('document:keydown', ['$event'])\n  @HostListener('document:enter', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // It would be nice to be able to unsubscribe to the event\n    // completely but until ES7 this won't be possible because\n    // document events are not observables\n    if (this.navigationEnabled) {\n      if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n        event.preventDefault();\n        this.navigate(event.key);\n      } else if (event.key === 'Enter') {\n        this.select(this.focusedItem);\n      }\n    }\n  }\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.enableNavigation();\n  }\n\n  ngAfterViewInit() {\n    if (this.listItems.length) {\n      this.init();\n    }\n\n    this.listItems$$ = this.listItems.changes.subscribe(\n      (items: ListItemDirective[]) => this.init()\n    );\n  }\n\n  ngOnDestroy() {\n    this.listItems$$.unsubscribe();\n  }\n\n  focus(item?: ListItemDirective) {\n    if (!this.selection) {\n      return;\n    }\n\n    this.unfocus();\n\n    // We need to make this check because dynamic\n    // lists such as in the search results list may fail\n    if (item !== undefined) {\n      item.focused = true;\n    }\n  }\n\n  unfocus() {\n    if (this.focusedItem !== undefined) {\n      this.focusedItem.focused = false;\n    }\n\n    this.focusedItem = undefined;\n  }\n\n  focusNext() {\n    const items = this.listItems.toArray();\n    let item;\n    const igoList = this.el.nativeElement;\n    let disabled = true;\n    let index = this.getFocusedIndex();\n    if (index === undefined) {\n      index = -1;\n    }\n\n    while (disabled && index < items.length - 1) {\n      index += 1;\n      item = items[index];\n      disabled = item.disabled;\n    }\n\n    if (item !== undefined) {\n      this.focus(item);\n    }\n\n    if (!items[index + 1]) {\n      igoList.scrollTop = igoList.scrollHeight - igoList.clientHeight;\n      return;\n    }\n\n    if (item !== undefined && !this.isScrolledIntoView(item.el.nativeElement)) {\n      igoList.scrollTop =\n        item.el.nativeElement.offsetTop +\n        item.el.nativeElement.children[0].offsetHeight -\n        igoList.clientHeight;\n    }\n  }\n\n  focusPrevious() {\n    const items = this.listItems.toArray();\n    let item: ListItemDirective;\n    const igoList = this.el.nativeElement;\n    let disabled = true;\n    let index = this.getFocusedIndex();\n\n    while (disabled && index > 0) {\n      index -= 1;\n      item = items[index];\n      disabled = item.disabled;\n    }\n\n    if (item !== undefined) {\n      this.focus(item);\n    }\n\n    if (!items[index - 1]) {\n      igoList.scrollTop = 0;\n      return;\n    }\n\n    if (item !== undefined && !this.isScrolledIntoView(item.el.nativeElement)) {\n      const padding = 3;\n      igoList.scrollTop = item.el.nativeElement.offsetTop - padding;\n    }\n  }\n\n  select(item?: ListItemDirective) {\n    if (!this.selection) {\n      return;\n    }\n\n    this.unselect();\n\n    if (item !== undefined) {\n      item.selected = true;\n    }\n  }\n\n  unselect() {\n    this.unfocus();\n\n    if (this.selectedItem !== undefined) {\n      this.selectedItem.selected = false;\n    }\n\n    this.selectedItem = undefined;\n  }\n\n  enableNavigation() {\n    if (this.navigation) {\n      this.navigationEnabled = true;\n    }\n  }\n\n  disableNavigation() {\n    this.navigationEnabled = false;\n  }\n\n  scrollToItem(item: ListItemDirective) {\n    this.el.nativeElement.scrollTop = item.getOffsetTop();\n  }\n\n  isScrolledIntoView(elem) {\n    const docViewTop =\n      this.el.nativeElement.scrollTop + this.el.nativeElement.offsetTop;\n    const docViewBottom = docViewTop + this.el.nativeElement.clientHeight;\n\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.children[0].offsetHeight;\n    return elemBottom <= docViewBottom && elemTop >= docViewTop;\n  }\n\n  private init() {\n    this.subscribe();\n\n    this.selectedItem = this.findSelectedItem();\n    this.focusedItem = this.findFocusedItem();\n\n    this.enableNavigation();\n  }\n\n  private subscribe() {\n    this.unsubscribe();\n\n    this.listItems.toArray().forEach(item => {\n      this.subscriptions.push(\n        item.beforeSelect.subscribe((item2: ListItemDirective) =>\n          this.handleItemBeforeSelect(item2)\n        )\n      );\n\n      this.subscriptions.push(\n        item.select.subscribe((item2: ListItemDirective) =>\n          this.handleItemSelect(item2)\n        )\n      );\n\n      this.subscriptions.push(\n        item.beforeFocus.subscribe((item2: ListItemDirective) =>\n          this.handleItemBeforeFocus(item2)\n        )\n      );\n\n      this.subscriptions.push(\n        item.focus.subscribe((item2: ListItemDirective) =>\n          this.handleItemFocus(item2)\n        )\n      );\n    }, this);\n  }\n\n  private unsubscribe() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  private handleItemBeforeFocus(item: ListItemDirective) {\n    if (item !== this.focusedItem) {\n      this.unfocus();\n    }\n  }\n\n  private handleItemFocus(item: ListItemDirective) {\n    this.focusedItem = item;\n  }\n\n  private handleItemBeforeSelect(item: ListItemDirective) {\n    if (item !== this.focusedItem) {\n      this.unselect();\n    }\n  }\n\n  private handleItemSelect(item: ListItemDirective) {\n    this.selectedItem = item;\n  }\n\n  private findSelectedItem() {\n    return this.listItems.toArray().find(item => item.selected);\n  }\n\n  private findFocusedItem() {\n    return this.listItems.toArray().find(item => item.focused);\n  }\n\n  private getFocusedIndex() {\n    return this.listItems\n      .toArray()\n      .findIndex(item => item === this.focusedItem);\n  }\n\n  private navigate(key: string) {\n    switch (key) {\n      case 'ArrowUp':\n        this.focusPrevious();\n        break;\n      case 'ArrowDown':\n        this.focusNext();\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<mat-list\n  igoClickout\n  [ngClass]=\"{'selectable': selection}\"\n  (clickout)=\"disableNavigation()\"\n  (click)=\"enableNavigation()\">\n  <ng-content></ng-content>\n</mat-list>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { IgoClickoutModule } from '../clickout/clickout.module';\n\nimport { ListItemDirective } from './list-item.directive';\nimport { ListComponent } from './list.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatListModule, IgoClickoutModule],\n  declarations: [ListItemDirective, ListComponent],\n  exports: [ListItemDirective, ListComponent]\n})\nexport class IgoListModule {\n  static forRoot(): ModuleWithProviders<IgoListModule> {\n    return {\n      ngModule: IgoListModule,\n      providers: []\n    };\n  }\n}\n","<div *ngIf=\"withHeader\" class=\"igo-panel-header mat-typography\" title=\"\">\n  <h3>\n    <ng-content select=\"[panelLeftButton]\"></ng-content>\n    <div class=\"igo-panel-title\">\n      {{ title }}\n      <ng-content select=\"[panelHeader]\"></ng-content>\n    </div>\n    <ng-content select=\"[panelRightButton]\"></ng-content>\n  </h3>\n</div>\n<div class=\"igo-panel-content\" title=\"\">\n  <ng-content></ng-content>\n</div>\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  HostBinding\n} from '@angular/core';\n\n@Component({\n  selector: 'igo-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelComponent {\n  @Input()\n  get title() {\n    return this._title;\n  }\n  set title(value: string) {\n    this._title = value;\n  }\n  private _title: string;\n\n  @Input()\n  @HostBinding('class.igo-panel-with-header')\n  get withHeader(): boolean {\n    return this._withHeader;\n  }\n  set withHeader(value: boolean) {\n    this._withHeader = value;\n  }\n  private _withHeader = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PanelComponent } from './panel.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [PanelComponent],\n  declarations: [PanelComponent]\n})\nexport class IgoPanelModule {}\n","import { Directive, Self, HostListener, Renderer2 } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n/**\n * <igoSidenavShim> directive.\n *\n * This directive prevents a material sidenav with mode=\"side\"\n * from focusing an element after it's closed\n */\n@Directive({\n  selector: '[igoSidenavShim]'\n})\nexport class SidenavShimDirective {\n  private focusedElement: HTMLElement;\n  private blurElement: HTMLElement;\n\n  @HostListener('open', ['$event'])\n  onOpen() {\n    this.focusedElement = document.activeElement as HTMLElement;\n  }\n\n  @HostListener('close-start', ['$event'])\n  onCloseStart() {\n    const focusedElement = document.activeElement as HTMLElement;\n    if (focusedElement !== this.focusedElement) {\n      this.blurElement = this.focusedElement;\n    } else {\n      this.blurElement = undefined;\n    }\n  }\n\n  @HostListener('close', ['$event'])\n  onClose() {\n    if (this.blurElement) {\n      this.renderer.selectRootElement(this.blurElement).blur();\n    }\n\n    this.blurElement = undefined;\n    this.focusedElement = undefined;\n  }\n\n  constructor(@Self() component: MatSidenav, private renderer: Renderer2) {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SidenavShimDirective } from './sidenav-shim.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [SidenavShimDirective],\n  exports: [SidenavShimDirective]\n})\nexport class IgoSidenavModule {\n  static forRoot(): ModuleWithProviders<IgoSidenavModule> {\n    return {\n      ngModule: IgoSidenavModule,\n      providers: []\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'igo-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent {\n\n  public shown$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  @Input()\n  set shown(value: boolean) { this.shown$.next(value); }\n  get shown(): boolean { return this.shown$.value; }\n\n  constructor() {}\n\n  show() {\n    this.shown = true;\n  }\n\n  hide() {\n    this.shown = false;\n  }\n}\n","<div\n  [ngClass]=\"{'igo-spinner-container': true, 'igo-spinner-shown': (shown$ | async)}\">\n  <div class=\"igo-spinner-background\"></div>\n  <mat-progress-spinner diameter=\"40\" mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { ActivityService } from '@igo2/core';\nimport { SpinnerComponent } from './spinner.component';\n\n/**\n * A directive to bind a SpinnerComponent to the activity service.\n * The activity service tracks any HTTP request and this directive\n * will display the spinner it's attached to when the activity counter\n * is greater than 0.\n */\n@Directive({\n  selector: '[igoSpinnerActivity]'\n})\nexport class SpinnerActivityDirective implements OnInit, OnDestroy {\n  /**\n   * Subscription to the activity service counter\n   */\n  private counter$$: Subscription;\n\n  constructor(\n    @Self() private spinner: SpinnerComponent,\n    private activityService: ActivityService\n  ) {}\n\n  /**\n   * Subscribe to the activity service counter and display the spinner\n   * when it's is greater than 0.\n   * @internal\n   */\n  ngOnInit() {\n    this.counter$$ = this.activityService.counter$\n      .pipe(debounceTime(50))\n      .subscribe((count: number) => {\n        count > 0 ? this.spinner.show() : this.spinner.hide();\n      });\n  }\n\n  /**\n   * Unsubcribe to the activity service counter.\n   * @internal\n   */\n  ngOnDestroy() {\n    this.counter$$.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerActivityDirective } from './spinner-activity.directive';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerActivityDirective, SpinnerComponent],\n  exports: [SpinnerActivityDirective, SpinnerComponent]\n})\nexport class IgoSpinnerModule {}\n","import { DataSource } from '@angular/cdk/table';\nimport { MatSort } from '@angular/material/sort';\n\nimport { Observable, BehaviorSubject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ObjectUtils } from '@igo2/utils';\n\nimport { TableDatabase, TableModel } from './index';\n\nexport class TableDataSource extends DataSource<any> {\n  get filter(): string {\n    return this._filterChange.value;\n  }\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n  private _filterChange = new BehaviorSubject('');\n\n  constructor(\n    private _database: TableDatabase,\n    private _model: TableModel,\n    private _sort: MatSort\n  ) {\n    super();\n  }\n\n  // Connect function called by the table to retrieve one stream containing\n  // the data to render.\n  connect(): Observable<any[]> {\n    if (!this._database) {\n      return merge([]);\n    }\n    const displayDataChanges = [\n      this._database.dataChange,\n      this._filterChange,\n      this._sort.sortChange\n    ];\n\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        return this.getFilteredData(this._database.data);\n      }),\n      map(data => {\n        return this.getSortedData(data);\n      })\n    );\n  }\n\n  disconnect() {}\n\n  getFilteredData(data): any[] {\n    if (!this.filter) {\n      return data;\n    }\n    return data.slice().filter((item: any) => {\n      const searchStr: string = this._model.columns\n        .filter(c => c.filterable)\n        .map(c => ObjectUtils.resolve(item, c.name))\n        .join(' ')\n        .toLowerCase();\n\n      return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n    });\n  }\n\n  getSortedData(data): any[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const propertyA: number | string = ObjectUtils.resolve(\n        a,\n        this._sort.active\n      );\n      const propertyB: number | string = ObjectUtils.resolve(\n        b,\n        this._sort.active\n      );\n\n      return ObjectUtils.naturalCompare(\n        propertyB,\n        propertyA,\n        this._sort.direction\n      );\n    });\n  }\n}\n","export enum TableActionColor {\n  primary,\n  accent,\n  warn\n}\n","<div class='table-box'>\n  <div class='table-header' *ngIf=\"hasFilterInput\">\n    <mat-form-field floatPlaceholder='never'>\n      <input matInput #filter [placeholder]=\"'igo.common.table.filter' | translate\">\n    </mat-form-field>\n  </div>\n\n  <div class='table-container'>\n    <table mat-table #table [dataSource]='dataSource' matSort>\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"selectionCheckbox\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container [matColumnDef]='column.name' *ngFor='let column of model.columns'>\n        <ng-container *ngIf='column.sortable'>\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.title}} </th>\n        </ng-container>\n\n        <ng-container *ngIf='!column.sortable'>\n          <th mat-header-cell *matHeaderCellDef> {{column.title}} </th>\n        </ng-container>\n\n        <ng-container *ngIf=\"!column.html; else cellHTML\">\n          <td mat-cell *matCellDef='let row' class=\"mat-cell-text\"\n            [ngClass]=\"model.cellClassFunc ? model.cellClassFunc(row, column) : {}\">\n            {{getValue(row, column.name)}}\n          </td>\n        </ng-container>\n\n        <ng-template #cellHTML>\n          <td mat-cell *matCellDef='let row' class=\"mat-cell-text\"\n            [ngClass]=\"model.cellClassFunc ? model.cellClassFunc(row, column) : {}\"\n            [innerHTML]=\"getValue(row, column.name)\">\n          </td>\n        </ng-template>\n      </ng-container>\n\n      <!-- Action Column -->\n      <ng-container matColumnDef='action'>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef='let row'>\n          <button *ngFor='let action of model.actions'\n          mat-mini-fab\n          [color]='getActionColor(action.color)'\n          (click)='handleClickAction($event, action, row)'>\n            <mat-icon svgIcon=\"{{action.icon}}\"></mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef='displayedColumns;'></tr>\n      <tr mat-row\n        *matRowDef='let row; columns: displayedColumns;'\n        [ngClass]=\"model.rowClassFunc ? model.rowClassFunc(row) : {}\"\n        (click)=\"selection.toggle(row)\">\n      </tr>\n\n    </table>\n  </div>\n\n</div>\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  Input,\n  Output,\n  OnChanges,\n  OnInit,\n  AfterViewInit,\n  EventEmitter\n} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { fromEvent } from 'rxjs';\n\nimport { ObjectUtils } from '@igo2/utils';\n\nimport { TableModel } from './table-model.interface';\nimport { TableDatabase } from './table-database';\nimport { TableDataSource } from './table-datasource';\nimport { TableActionColor } from './table-action-color.enum';\n\n@Component({\n  selector: 'igo-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnChanges, OnInit, AfterViewInit {\n  @Input()\n  get database(): TableDatabase {\n    return this._database;\n  }\n  set database(value: TableDatabase) {\n    this._database = value;\n  }\n  private _database: TableDatabase;\n\n  @Input()\n  get model(): TableModel {\n    return this._model;\n  }\n  set model(value: TableModel) {\n    this._model = value;\n  }\n  private _model: TableModel;\n\n  @Input()\n  get hasFilterInput(): boolean {\n    return this._hasFIlterInput;\n  }\n  set hasFilterInput(value: boolean) {\n    this._hasFIlterInput = value;\n  }\n  private _hasFIlterInput = true;\n\n  public displayedColumns;\n  public dataSource: TableDataSource | null;\n  public selection = new SelectionModel<any>(true, []);\n\n  @Output()\n  select = new EventEmitter<{\n    added: any[];\n    removed: any[];\n    source: SelectionModel<any>;\n  }>();\n\n  @ViewChild('filter') filter: ElementRef;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit() {\n    this.dataSource = new TableDataSource(this.database, this.model, this.sort);\n\n    if (this.model) {\n      this.displayedColumns = this.model.columns\n        .filter(c => c.displayed !== false)\n        .map(c => c.name);\n\n      if (this.model.selectionCheckbox) {\n        this.displayedColumns.unshift('selectionCheckbox');\n      }\n      if (this.model.actions && this.model.actions.length) {\n        this.displayedColumns.push('action');\n      }\n    }\n\n    this.selection.changed.subscribe(e => this.select.emit(e));\n  }\n\n  ngAfterViewInit() {\n    if (this.filter) {\n      fromEvent(this.filter.nativeElement, 'keyup')\n        .pipe(\n          debounceTime(150),\n          distinctUntilChanged()\n        )\n        .subscribe(() => {\n          if (!this.dataSource) {\n            return;\n          }\n          this.dataSource.filter = this.filter.nativeElement.value;\n        });\n    }\n  }\n\n  ngOnChanges(change) {\n    if (change.database) {\n      this.dataSource = new TableDataSource(\n        this.database,\n        this.model,\n        this.sort\n      );\n      this.selection.clear();\n    }\n  }\n\n  getActionColor(colorId: number): string {\n    return TableActionColor[colorId];\n  }\n\n  getValue(row, key) {\n    return ObjectUtils.resolve(row, key);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.database.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.database.data.forEach(row => this.selection.select(row));\n  }\n\n  handleClickAction(event, action, row) {\n    event.stopPropagation();\n    action.click(row);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { TableComponent } from './table.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CdkTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSortModule,\n    MatCheckboxModule,\n    IgoLanguageModule\n  ],\n  declarations: [TableComponent],\n  exports: [TableComponent]\n})\nexport class IgoTableModule {\n  static forRoot(): ModuleWithProviders<IgoTableModule> {\n    return {\n      ngModule: IgoTableModule,\n      providers: []\n    };\n  }\n}\n","import { EntityStore } from '../../entity';\nimport { Action } from './action.interfaces';\n\n/**\n * The class is a specialized version of an EntityStore that stores\n * actions.\n */\nexport class ActionStore extends EntityStore<Action> {\n\n}\n","export enum ToolboxColor {\n  White = 'white',\n  Grey = 'grey',\n  Primary = 'primary'\n}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function toolSlideInOut(\n  speed = '300ms',\n  type = 'ease-in-out'\n): AnimationTriggerMetadata {\n  return trigger('toolSlideInOut', [\n    state(\n      'enter',\n      style({\n        transform: 'translate3d(0, 0, 0)'\n      })\n    ),\n    transition('void => enter', animate(speed + ' ' + type))\n  ]);\n}\n","<igo-actionbar\n  *ngIf=\"(toolbar$ | async).length > 0\"\n  [store]=\"actionStore\"\n  [withIcon]=\"true\"\n  [withTitle]=\"toolbarWithTitle$ | async\"\n  [withTooltip]=\"(toolbarWithTitle$ | async) === false\"\n  [scrollActive]=\"toolbarWithTitle$ | async\"\n  [horizontal]=\"false\">\n</igo-actionbar>\n\n<div\n  *ngIf=\"activeTool$ | async as tool\"\n  class=\"igo-tool-container\"\n  [ngClass]=\"{'igo-tool-container-with-toolbar': !actionStore.empty, 'igo-tool-container-with-animation': animate}\"\n  [@toolSlideInOut]=\"animation$ | async\"\n  (@toolSlideInOut.start)=\"onAnimationStart()\"\n  (@toolSlideInOut.done)=\"onAnimationComplete()\">\n\n  <igo-dynamic-outlet\n    [component]=\"tool.component\"\n    [inputs]=\"getToolInputs(tool)\">\n  </igo-dynamic-outlet>\n\n</div>\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { Subscription, BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Action, ActionStore } from '../../action';\nimport { Tool } from '../shared/tool.interface';\nimport { ToolboxColor } from '../shared/toolbox.enums';\nimport { Toolbox } from '../shared/toolbox';\nimport { toolSlideInOut } from './toolbox.animation';\n\n@Component({\n  selector: 'igo-toolbox',\n  templateUrl: 'toolbox.component.html',\n  styleUrls: ['toolbox.component.scss'],\n  animations: [toolSlideInOut()],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolboxComponent implements OnInit, OnDestroy {\n  /**\n   * Observable of the active tool\n   */\n  activeTool$: BehaviorSubject<Tool> = new BehaviorSubject(undefined);\n\n  /**\n   * Store of actions that toggle tools\n   */\n  actionStore: ActionStore = new ActionStore([]);\n\n  /**\n   * Observable of he anmation state\n   */\n  animation$: BehaviorSubject<string> = new BehaviorSubject('none');\n\n  /**\n   * Observable of the toolbar\n   */\n  toolbar$: BehaviorSubject<string[]> = new BehaviorSubject([]);\n\n  /**\n   * Whether the Toolbar should display actions' titles\n   */\n  toolbarWithTitle$: Observable<boolean> = this.activeTool$.pipe(\n    map((tool: Tool | undefined) => tool === undefined)\n  );\n\n  /**\n   * Subscription to the active tool\n   */\n  private activeTool$$: Subscription;\n\n  /**\n   * Subscription to the toolbar\n   */\n  private toolbar$$: Subscription;\n\n  /**\n   * Observable of the ongoing animation. This is useful when\n   * multiple animations are triggered at once i.e. when the user clicks\n   * too fast on different actions\n   */\n  private animating$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Subscription to the ongoing animation\n   */\n  private animating$$: Subscription;\n\n  /**\n   * Toolbox\n   */\n  @Input() toolbox: Toolbox;\n\n  /**\n   * Whether the toolbox should animate the first tool entering\n   */\n  @Input() animate: boolean = false;\n\n  /**\n   * Color of Toolbox\n   */\n  @Input() color: ToolboxColor = ToolboxColor.White;\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.color-grey')\n  get classColorGrey() {\n    return this.color === ToolboxColor.Grey;\n  }\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.color-primary')\n  get classColorPrimary() {\n    return this.color === ToolboxColor.Primary;\n  }\n\n  /**\n   * Initialize the toolbar and subscribe to the active tool\n   * @internal\n   */\n  ngOnInit() {\n    this.toolbar$$ = this.toolbox.toolbar$.subscribe((toolbar: string[]) =>\n      this.onToolbarChange(toolbar)\n    );\n    this.activeTool$$ = this.toolbox.activeTool$.subscribe((tool: Tool) =>\n      this.onActiveToolChange(tool)\n    );\n  }\n\n  /**\n   * Unsubscribe to the active tool and destroy the action store\n   * @internal\n   */\n  ngOnDestroy() {\n    this.toolbar$$.unsubscribe();\n    this.activeTool$$.unsubscribe();\n    this.actionStore.destroy();\n  }\n\n  /**\n   * Track the starting animation\n   * @internal\n   */\n  onAnimationStart() {\n    this.animating$.next(true);\n  }\n\n  /**\n   * Untrack the completed animation\n   * @internal\n   */\n  onAnimationComplete() {\n    this.animating$.next(false);\n  }\n\n  /**\n   * Return a tool's inputs\n   * @param tool Tool\n   * @returns Tool inputs\n   * @internal\n   */\n  getToolInputs(tool: Tool): { [key: string]: any } {\n    return tool.options || {};\n  }\n\n  /**\n   * Initialize an action store\n   * @param toolbar Toolbar\n   */\n  private onToolbarChange(toolbar: string[]) {\n    this.setToolbar(toolbar);\n  }\n\n  /**\n   * Activate a tool and trigger an animation or not\n   * @param tool Tool to activate\n   */\n  private onActiveToolChange(tool: Tool) {\n    if (!this.animate) {\n      this.setActiveTool(tool);\n      return;\n    }\n    this.onAnimate(() => this.setActiveTool(tool));\n  }\n\n  /**\n   * Set the active tool\n   * @param tool Tool to activate\n   */\n  private setActiveTool(tool: Tool | undefined) {\n    if (tool === undefined) {\n      this.actionStore.state.updateAll({ active: false });\n    } else {\n      const action = this.actionStore.get(tool.name);\n      if (action !== undefined) {\n        this.actionStore.state.update(action, { active: true }, true);\n      }\n    }\n\n    this.activeTool$.next(tool);\n    if (this.animate) {\n      this.animation$.next('enter');\n    }\n  }\n\n  /**\n   * Initialize the toolbar\n   */\n  private setToolbar(toolbar: string[]) {\n    const actions = toolbar.reduce((acc: Action[], toolName: string) => {\n      const tool = this.toolbox.getTool(toolName);\n      if (tool === undefined) {\n        return acc;\n      }\n\n      acc.push({\n        id: tool.name,\n        title: tool.title,\n        icon: tool.icon,\n        // iconImage: tool.iconImage,\n        tooltip: tool.tooltip,\n        args: [tool, this.toolbox],\n        handler: (_tool: Tool, _toolbox: Toolbox) => {\n          _toolbox.activateTool(_tool.name);\n        },\n        ngClass: (_tool: Tool, _toolbox: Toolbox) => {\n          return this.toolbox.activeTool$.pipe(\n            map((activeTool: Tool) => {\n              let toolActivated = false;\n              if (activeTool !== undefined && _tool.name === activeTool.name) {\n                toolActivated = true;\n              }\n\n              let childrenToolActivated = false;\n              if (\n                activeTool !== undefined &&\n                _tool.name === activeTool.parent\n              ) {\n                childrenToolActivated = true;\n              }\n\n              return {\n                'tool-activated': toolActivated,\n                'children-tool-activated': childrenToolActivated\n              };\n            })\n          );\n        }\n      });\n      return acc;\n    }, []);\n    this.actionStore.load(actions);\n    this.toolbar$.next(toolbar);\n  }\n\n  /**\n   * Observe the ongoing animation and ignore any incoming animation\n   * while one is still ongoing.\n   * @param callback Callback to execute when the animation completes\n   */\n  private onAnimate(callback: () => void) {\n    this.unAnimate();\n    this.animating$$ = this.animating$.subscribe((animation: boolean) => {\n      if (!animation) {\n        callback.call(this);\n        this.unAnimate();\n      }\n    });\n  }\n\n  /**\n   * Stop observing an animation when it's complete\n   */\n  private unAnimate() {\n    if (this.animating$$) {\n      this.animating$$.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoActionModule } from '../../action/action.module';\nimport {\n    IgoDynamicComponentModule\n} from '../../dynamic-component/dynamic-component.module';\n\nimport { ToolboxComponent } from './toolbox.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoActionModule,\n    IgoDynamicComponentModule\n  ],\n  exports: [\n    ToolboxComponent\n  ],\n  declarations: [\n    ToolboxComponent\n  ]\n})\nexport class IgoToolboxModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToolService } from './shared/tool.service';\nimport { IgoToolboxModule } from './toolbox/toolbox.module';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IgoToolboxModule\n  ],\n  declarations: []\n})\nexport class IgoToolModule {\n  static forRoot(): ModuleWithProviders<IgoToolModule> {\n    return {\n      ngModule: IgoToolModule,\n      providers: [\n        ToolService\n      ]\n    };\n  }\n}\n","<igo-dynamic-outlet\n  *ngIf=\"widget\"\n  [component]=\"widget\"\n  [inputs]=\"inputs\"\n  [subscribers]=\"getEffectiveSubscribers()\">\n</igo-dynamic-outlet>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\n\nimport { DynamicComponent } from '../../dynamic-component';\n\nimport { WidgetComponent } from '../shared/widget.interfaces';\n\n/**\n * This component dynamically renders a widget. It also subscribes\n * to the widget's 'cancel' and 'complete' events and destroys it\n * when any of those event is emitted.\n */\n@Component({\n  selector: 'igo-widget-outlet',\n  templateUrl: './widget-outlet.component.html',\n  styleUrls: ['./widget-outlet.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WidgetOutletComponent implements OnDestroy {\n\n  /**\n   * Widget subscribers to 'cancel' and 'complete'\n   * @internal\n   */\n  private baseSubscribers = {\n    cancel: (event: any) => this.onCancel(event),\n    complete: (event: any) => this.onComplete(event)\n  };\n\n  /**\n   * Widget\n   */\n  @Input() widget: DynamicComponent<WidgetComponent>;\n\n  /**\n   * Widget inputs\n   */\n  @Input() inputs: {[key: string]: any};\n\n  /**\n   * Widget subscribers\n   */\n  @Input() subscribers: {[key: string]: (event: any) => void} = {};\n\n  /**\n   * Event emitted when the widget emits 'complete'\n   */\n  @Output() complete = new EventEmitter<any>();\n\n  /**\n   * Event emitted when the widget emits 'cancel'\n   */\n  @Output() cancel = new EventEmitter<any>();\n\n  constructor() {}\n\n  /**\n   * Destroy the current widget and all it's inner subscriptions\n   * @internal\n   */\n  ngOnDestroy() {\n    this.destroyWidget();\n  }\n\n  /**\n   * Get the effective subscribers. That means a combination of the base\n   * subscribers and any subscriber given as input.\n   * @returns Combined subscribers\n   * @internal\n   */\n  getEffectiveSubscribers(): {[key: string]: (event: any) => void} {\n    const subscribers = Object.assign({}, this.subscribers);\n\n    // Base subscribers\n    Object.keys(this.baseSubscribers).forEach((key: string) => {\n      const subscriber = subscribers[key];\n      const baseSubscriber = this.baseSubscribers[key];\n      if (subscriber !== undefined) {\n        subscribers[key] = (event: any) => {\n          subscriber(event);\n          baseSubscriber(event);\n        };\n      } else {\n        subscribers[key] = baseSubscriber;\n      }\n    });\n\n    return subscribers;\n  }\n\n  /**\n   * When the widget emits 'cancel', propagate that event and destroy\n   * the widget\n   */\n  private onCancel(event: any) {\n    this.cancel.emit(event);\n    this.destroyWidget();\n  }\n\n  /**\n   * When the widget emits 'complete', propagate that event and destroy\n   * the widget\n   */\n  private onComplete(event: any) {\n    this.complete.emit(event);\n    this.destroyWidget();\n  }\n\n  /**\n   * Destroy the current widget\n   */\n  private destroyWidget() {\n    if (this.widget !== undefined) {\n      this.widget.destroy();\n    }\n    this.widget = undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  IgoDynamicComponentModule\n} from '../../dynamic-component/dynamic-component.module';\n\nimport { WidgetOutletComponent } from './widget-outlet.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoDynamicComponentModule\n  ],\n  exports: [\n    WidgetOutletComponent\n  ],\n  declarations: [\n    WidgetOutletComponent\n  ]\n})\nexport class IgoWidgetOutletModule {}\n","import { Injectable } from '@angular/core';\n\nimport { DynamicComponentService } from '../../dynamic-component/shared/dynamic-component.service';\n\nimport { Widget } from './widget';\nimport { WidgetComponent } from './widget.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetService {\n\n  constructor(private dynamicComponentService: DynamicComponentService) {}\n\n  create(widgetCls: any): Widget {\n    return this.dynamicComponentService.create(widgetCls as WidgetComponent);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoWidgetOutletModule } from './widget-outlet/widget-outlet.module';\nimport { WidgetService } from './shared/widget.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoWidgetOutletModule\n  ],\n  exports: [\n    IgoWidgetOutletModule\n  ],\n  declarations: [],\n  providers: [\n    WidgetService\n  ]\n})\nexport class IgoWidgetModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { getEntityTitle } from '../../entity';\nimport { Workspace } from '../shared/workspace';\nimport { WorkspaceStore } from '../shared/store';\n\n/**\n * Drop list that activates the selected workspace emit an event.\n */\n@Component({\n  selector: 'igo-workspace-selector',\n  templateUrl: './workspace-selector.component.html',\n  styleUrls: ['./workspace-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkspaceSelectorComponent {\n\n  /**\n   * Store that holds the available workspaces.\n   */\n  @Input() store: WorkspaceStore;\n\n  /**\n   * Wheither the selector must be disabled or not.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * Event emitted when an workspace is selected or unselected\n   */\n  @Output() selectedChange = new EventEmitter<{\n    selected: boolean;\n    value: Workspace;\n  }>();\n\n  /**\n   * @internal\n   */\n  getWorkspaceTitle(workspace: Workspace): string {\n    return getEntityTitle(workspace);\n  }\n\n  /**\n   * When an workspace is manually selected, select it into the\n   * store and emit an event.\n   * @internal\n   * @param event The selection change event\n   */\n  onSelectedChange(event: {value: Workspace}) {\n    const workspace = event.value;\n    this.store.activateWorkspace(workspace);\n    this.selectedChange.emit({selected: true, value: workspace});\n  }\n\n}\n","<igo-entity-selector\n  [store]=\"store\"\n  [multi]=\"false\"\n  [titleAccessor]=\"getWorkspaceTitle\"\n  [disabled]=\"disabled\"\n  (selectedChange)=\"onSelectedChange($event)\">\n</igo-entity-selector>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoEntitySelectorModule } from '../../entity/entity-selector/entity-selector.module';\nimport { WorkspaceSelectorComponent } from './workspace-selector.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoEntitySelectorModule\n  ],\n  exports: [\n    WorkspaceSelectorComponent\n  ],\n  declarations: [\n    WorkspaceSelectorComponent\n  ]\n})\nexport class IgoWorkspaceSelectorModule {}\n","<ng-container *ngIf=\"widget$ | async as widget\">\n  <igo-widget-outlet\n    [widget]=\"widget\"\n    [inputs]=\"widgetInputs$ | async\"\n    [subscribers]=\"widgetSubscribers$ | async\"\n    (cancel)=\"onWidgetCancel(widget)\"\n    (complete)=\"onWidgetComplete(widget)\">\n  </igo-widget-outlet>\n</ng-container>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Widget } from '../../widget';\nimport { Workspace } from '../shared/workspace';\n\n/**\n * This component dynamically render an Workspace's active widget.\n * It also deactivate that widget whenever the widget's component\n * emit the 'cancel' or 'complete' event.\n */\n@Component({\n  selector: 'igo-workspace-widget-outlet',\n  templateUrl: './workspace-widget-outlet.component.html',\n  styleUrls: ['./workspace-widget-outlet.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkspaceWidgetOutletComponent {\n\n  /**\n   * Workspace\n   */\n  @Input() workspace: Workspace;\n\n  /**\n   * Event emitted when a widget is deactivate which happens\n   * when the widget's component emits the 'cancel' or 'complete' event.\n   */\n  @Output() deactivateWidget = new EventEmitter<Widget>();\n\n  /**\n   * Observable of the workspace's active widget\n   * @internal\n   */\n  get widget$(): BehaviorSubject<Widget> { return this.workspace.widget$; }\n\n  /**\n   * Observable of the workspace's widget inputs\n   * @internal\n   */\n  get widgetInputs$(): BehaviorSubject<{[key: string]: any}> {\n    return this.workspace.widgetInputs$;\n  }\n\n  /**\n   * Observable of the workspace's widget inputs\n   * @internal\n   */\n  get widgetSubscribers$(): BehaviorSubject<{[key: string]: (event: any) => void}> {\n    return this.workspace.widgetSubscribers$;\n  }\n\n  constructor() {}\n\n  /**\n   * When a widget's component emit the 'cancel' event,\n   * deactivate that widget and emit the 'deactivateWidget' event.\n   * @param widget Widget\n   * @internal\n   */\n  onWidgetCancel(widget: Widget) {\n    this.workspace.deactivateWidget();\n    this.deactivateWidget.emit(widget);\n  }\n\n  /**\n   * When a widget's component emit the 'cancel' event,\n   * deactivate that widget and emit the 'deactivateWidget' event.\n   * @param widget Widget\n   * @internal\n   */\n  onWidgetComplete(widget: Widget) {\n    this.workspace.deactivateWidget();\n    this.deactivateWidget.emit(widget);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoWidgetOutletModule } from '../../widget/widget-outlet/widget-outlet.module';\n\nimport { WorkspaceWidgetOutletComponent } from './workspace-widget-outlet.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoWidgetOutletModule\n  ],\n  exports: [\n    WorkspaceWidgetOutletComponent\n  ],\n  declarations: [\n    WorkspaceWidgetOutletComponent\n  ]\n})\nexport class IgoWorkspaceWidgetOutletModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoWorkspaceSelectorModule } from './workspace-selector/workspace-selector.module';\nimport { IgoWorkspaceWidgetOutletModule } from './workspace-widget-outlet/workspace-widget-outlet.module';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IgoWorkspaceSelectorModule,\n    IgoWorkspaceWidgetOutletModule\n  ],\n  declarations: []\n})\nexport class IgoWorkspaceModule {}\n","import { BehaviorSubject } from 'rxjs';\n\nexport class TableDatabase {\n  /** Stream that emits whenever the data has been modified. */\n  dataChange: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  get data(): any[] {\n    return this.dataChange.value;\n  }\n\n  constructor(data?) {\n    if (data) {\n      this.dataChange.next(data);\n    }\n  }\n\n  set(data) {\n    this.dataChange.next(data);\n  }\n\n  add(item) {\n    const copiedData = this.data.slice();\n    copiedData.push(item);\n    this.set(copiedData);\n  }\n\n  remove(item) {\n    const copiedData = this.data.slice();\n    const index = copiedData.indexOf(item);\n    copiedData.splice(index, 1);\n    this.set(copiedData);\n  }\n}\n","import { Tool } from './tool.interface';\nimport { ToolService } from './tool.service';\n\nexport function ToolComponent(tool: Partial<Tool>): (cls: any) => any {\n  return (compType: any) => {\n    ToolService.register(Object.assign({}, tool, {\n      component: compType\n    } as Tool));\n  };\n}\n","import { DynamicComponent } from '../../dynamic-component/shared/dynamic-component';\nimport { WidgetComponent } from './widget.interfaces';\n\nexport class Widget extends DynamicComponent<WidgetComponent> {}\n","import { EntityStore } from '../../entity';\nimport { Workspace } from './workspace';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * The class is a specialized version of an EntityStore that stores\n * workspaces.\n */\nexport class WorkspaceStore extends EntityStore<Workspace> {\n\n  activeWorkspace$: BehaviorSubject<Workspace> = new BehaviorSubject(undefined);\n\n  /**\n   * Activate the an workspace workspace and deactivate the one currently active\n   * @param workspace Workspace\n   */\n  activateWorkspace(workspace: Workspace) {\n    const active = this.activeWorkspace$.value;\n    if (active !== undefined) {\n      active.deactivate();\n    }\n\n    this.deactivateWorkspace();\n    if (workspace !== undefined) {\n      this.state.update(workspace, {active: true, selected: true}, true);\n      this.activeWorkspace$.next(workspace);\n      workspace.activate();\n    }\n  }\n\n  /**\n   * Deactivate the current workspace\n   * @param workspace Workspace\n   */\n  deactivateWorkspace() {\n    const active = this.activeWorkspace$.value;\n    if (active !== undefined) {\n      active.deactivate();\n      this.activeWorkspace$.next(undefined);\n    }\n  }\n\n}\n","import { Subscription, BehaviorSubject, Subject } from 'rxjs';\n\nimport { ActionStore } from '../../action';\nimport { Widget } from '../../widget';\nimport { EntityStore } from '../../entity';\n\nimport { WorkspaceOptions } from './workspace.interfaces';\n\n/**\n * This class is responsible of managing the relations between\n * entities and the actions that consume them. It also defines an\n * entity table template that may be used by an entity table component.\n */\nexport class Workspace<E extends object = object> {\n\n  /**\n   * Observable of the selected widget\n   */\n  readonly widget$ = new BehaviorSubject<Widget>(undefined);\n\n  /**\n   * Observable of the selected widget's inputs\n   */\n  readonly widgetInputs$ = new BehaviorSubject<{[key: string]: any}>({});\n\n  /**\n   * Observable of the selected widget's subscribers\n   */\n  readonly widgetSubscribers$ = new BehaviorSubject<{[key: string]: (event: any) => void}>({});\n\n  /**\n   * Subscription to the selected entity\n   */\n  private entities$$: Subscription;\n\n  /**\n   * State change that trigger an update of the actions availability\n   */\n  private change: Subject<void> = new Subject();\n\n  /**\n   * Subscription to state changes\n   */\n  private change$: Subscription;\n\n  /**\n   * Workspace id\n   */\n  get id(): string { return this.options.id; }\n\n  /**\n   * Workspace title\n   */\n  get title(): string { return this.options.title; }\n\n  /**\n   * Workspace title\n   */\n  get meta(): {[key: string]: any} { return this.options.meta || {}; }\n\n  /**\n   * Entities store\n   */\n  get entityStore(): EntityStore<E> { return this.options.entityStore as EntityStore<E>; }\n\n  /**\n   * Actions store (some actions activate a widget)\n   */\n  get actionStore(): ActionStore { return this.options.actionStore; }\n\n  /**\n   * Selected widget\n   */\n  get widget(): Widget { return this.widget$.value; }\n\n  /**\n   * Whether a widget is selected\n   */\n  get hasWidget(): boolean { return this.widget !== undefined; }\n\n  constructor(protected options: WorkspaceOptions) {}\n\n  /**\n   * Whether this strategy is active\n   * @internal\n   */\n  get active(): boolean { return this.active$.value; }\n  readonly active$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * Activate the workspace. By doing that, the workspace will observe\n   * the selected entity (from the store) and update the actions availability.\n   * For example, some actions require an entity to be selected.\n   */\n  activate() {\n    if (this.active === true) {\n      this.deactivate();\n    }\n    this.active$.next(true);\n\n    if (this.entityStore !== undefined) {\n      this.entities$$ = this.entityStore.stateView.all$()\n        .subscribe(() => this.onStateChange());\n    }\n\n    this.change.next();\n  }\n\n  /**\n   * Deactivate the workspace. Unsubcribe to the selected entity.\n   */\n  deactivate() {\n    this.active$.next(false);\n    this.deactivateWidget();\n\n    if (this.entities$$ !== undefined) {\n      this.entities$$.unsubscribe();\n    }\n    if (this.change$ !== undefined) {\n      this.change$.unsubscribe();\n    }\n  }\n\n  /**\n   * Activate a widget. In itself, activating a widget doesn't render it but,\n   * if an WorkspaceWidgetOutlet component is bound to this workspace, the widget will\n   * show up.\n   * @param widget Widget\n   * @param inputs Inputs the widget will receive\n   */\n  activateWidget(\n    widget: Widget,\n    inputs: {[key: string]: any} = {},\n    subscribers: {[key: string]: (event: any) => void} = {}\n  ) {\n    this.widget$.next(widget);\n    this.widgetInputs$.next(inputs);\n    this.widgetSubscribers$.next(subscribers);\n    this.change.next();\n  }\n\n  /**\n   * Deactivate a widget.\n   */\n  deactivateWidget() {\n    this.widget$.next(undefined);\n    this.change.next();\n  }\n\n  /**\n   * When the state changes, update the actions availability.\n   */\n  private onStateChange() {\n    this.change.next();\n  }\n\n}\n","/*\n * Public API Surface of common\n */\n\nexport * from './lib/action/action.module';\nexport * from './lib/action/actionbar/actionbar.module';\nexport * from './lib/backdrop/backdrop.module';\nexport * from './lib/badge-icon/badge-icon.module';\nexport * from './lib/clickout/clickout.module';\nexport * from './lib/clone/clone.module';\nexport * from './lib/collapsible/collapsible.module';\nexport * from './lib/confirm-dialog/confirm-dialog.module';\nexport * from './lib/context-menu/context-menu.module';\nexport * from './lib/custom-html/custom-html.module';\nexport * from './lib/drag-drop/drag-drop.module';\nexport * from './lib/dynamic-component/dynamic-component.module';\nexport * from './lib/dynamic-component/dynamic-outlet/dynamic-outlet.module';\nexport * from './lib/flexible/flexible.module';\nexport * from './lib/form/form.module';\nexport * from './lib/form/form/form.module';\nexport * from './lib/home-button/home-button.module';\nexport * from './lib/form/form-field/form-field.module';\nexport * from './lib/form/form-group/form-group.module';\nexport * from './lib/entity/entity.module';\nexport * from './lib/entity/entity-selector/entity-selector.module';\nexport * from './lib/entity/entity-table/entity-table.module';\nexport * from './lib/entity/entity-table-paginator/entity-table-paginator.module';\nexport * from './lib/image/image.module';\nexport * from './lib/interactive-tour/interactive-tour.module';\nexport * from './lib/json-dialog/json-dialog.module';\nexport * from './lib/keyvalue/keyvalue.module';\nexport * from './lib/list/list.module';\nexport * from './lib/panel/panel.module';\nexport * from './lib/sidenav/sidenav.module';\nexport * from './lib/spinner/spinner.module';\nexport * from './lib/stop-propagation/stop-propagation.module';\nexport * from './lib/table/table.module';\nexport * from './lib/tool/tool.module';\nexport * from './lib/tool/toolbox/toolbox.module';\nexport * from './lib/widget/widget.module';\nexport * from './lib/widget/widget-outlet/widget-outlet.module';\nexport * from './lib/workspace/workspace.module';\nexport * from './lib/workspace/workspace-selector/workspace-selector.module';\nexport * from './lib/workspace/workspace-widget-outlet/workspace-widget-outlet.module';\n\nexport * from './lib/action';\nexport * from './lib/backdrop';\nexport * from './lib/badge-icon';\nexport * from './lib/clickout';\nexport * from './lib/clone';\nexport * from './lib/collapsible';\nexport * from './lib/confirm-dialog';\nexport * from './lib/context-menu';\nexport * from './lib/custom-html';\nexport * from './lib/drag-drop';\nexport * from './lib/dynamic-component';\nexport * from './lib/form';\nexport * from './lib/home-button';\nexport * from './lib/entity';\nexport * from './lib/flexible';\nexport * from './lib/image';\nexport * from './lib/interactive-tour';\nexport * from './lib/json-dialog';\nexport * from './lib/keyvalue';\nexport * from './lib/list';\nexport * from './lib/panel';\nexport * from './lib/sidenav';\nexport * from './lib/spinner';\nexport * from './lib/stop-propagation';\nexport * from './lib/table';\nexport * from './lib/tool';\nexport * from './lib/widget';\nexport * from './lib/workspace';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EntityOperationType","EntityTableColumnRenderer","EntityTableScrollBehavior","EntityTableSelectionState","t","ReplaySubject","BehaviorSubject","map","uuid","combineLatest","skip","debounceTime","ObjectUtils","catchError","of","tap","i0","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","Directive","HostListener","scrollIntoView","MatPaginator","ViewChild","HttpHeaders","switchMap","Observable","Cacheable","Pipe","moment_","FormGroup","MatTableDataSource","MatFormFieldControl","Optional","Self","ActionbarMode","isObservable","Media","HostBinding","CommonModule","IgoLanguageModule","MatButtonModule","MatIconModule","MatTooltipModule","MatMenuModule","MatListModule","MatCardModule","MatCheckboxModule","NgModule","MatBadgeModule","Injectable","MatDialogModule","TemplatePortal","fromEvent","filter","take","MatInputModule","ViewContainerRef","FormsModule","ReactiveFormsModule","Validators","FormFieldSelectComponent","FormFieldTextComponent","FormFieldTextareaComponent","MatFormFieldModule","MatSelectModule","MatPaginatorModule","MatTableModule","MatAutocompleteModule","MatSortModule","MatDatepickerModule","ViewEncapsulation","ContentChildren","MatProgressSpinnerModule","merge","DataSource","TableActionColor","SelectionModel","distinctUntilChanged","MatSort","CdkTableModule","ToolboxColor","trigger","state","style","transition","animate","Subject"],"mappings":"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"}