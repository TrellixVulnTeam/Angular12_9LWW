{"version":3,"file":"igo2-common.js","sources":["../../../packages/common/src/lib/entity/shared/entity.enums.ts","../../../packages/common/src/lib/entity/shared/entity.utils.ts","../../../packages/common/src/lib/entity/shared/state.ts","../../../packages/common/src/lib/entity/shared/view.ts","../../../packages/common/src/lib/entity/shared/store.ts","../../../packages/common/src/lib/entity/shared/watcher.ts","../../../packages/common/src/lib/entity/shared/transaction.ts","../../../packages/common/src/lib/entity/shared/strategies/strategy.ts","../../../packages/common/src/lib/entity/shared/strategies/filter-custom-function.ts","../../../packages/common/src/lib/entity/shared/strategies/filter-selection.ts","../../../packages/common/src/lib/entity/entity-selector/entity-selector.component.html","../../../packages/common/src/lib/entity/entity-selector/entity-selector.component.ts","../../../packages/common/src/lib/stop-propagation/stop-propagation.directive.ts","../../../packages/common/src/lib/entity/entity-table/entity-table-row.directive.ts","../../../packages/common/src/lib/entity/entity-table-paginator/entity-table-paginator.component.ts","../../../packages/common/src/lib/entity/entity-table-paginator/entity-table-paginator.component.html","../../../packages/common/src/lib/image/secure-image.pipe.ts","../../../packages/common/src/lib/custom-html/custom-html.pipe.ts","../../../packages/common/src/lib/entity/entity-table/entity-table.component.html","../../../packages/common/src/lib/entity/entity-table/entity-table.component.ts","../../../packages/common/src/lib/action/shared/action.enums.ts","../../../packages/common/src/lib/action/actionbar/actionbar-item.component.html","../../../packages/common/src/lib/action/actionbar/actionbar-item.component.ts","../../../packages/common/src/lib/action/actionbar/actionbar.component.html","../../../packages/common/src/lib/action/actionbar/actionbar.component.ts","../../../packages/common/src/lib/action/actionbar/actionbar.module.ts","../../../packages/common/src/lib/action/action.module.ts","../../../packages/common/src/lib/backdrop/backdrop.component.ts","../../../packages/common/src/lib/backdrop/backdrop.component.html","../../../packages/common/src/lib/backdrop/backdrop.module.ts","../../../packages/common/src/lib/badge-icon/badge-icon.directive.ts","../../../packages/common/src/lib/badge-icon/badge-icon.module.ts","../../../packages/common/src/lib/clickout/clickout.directive.ts","../../../packages/common/src/lib/clickout/clickout.module.ts","../../../packages/common/src/lib/clone/clone.pipe.ts","../../../packages/common/src/lib/clone/clone.module.ts","../../../packages/common/src/lib/collapsible/collapse.directive.ts","../../../packages/common/src/lib/collapsible/collapsible.component.ts","../../../packages/common/src/lib/collapsible/collapsible.component.html","../../../packages/common/src/lib/collapsible/collapsible.module.ts","../../../packages/common/src/lib/confirm-dialog/confirm-dialog.component.ts","../../../packages/common/src/lib/confirm-dialog/confirm-dialog.component.html","../../../packages/common/src/lib/confirm-dialog/confirm-dialog.service.ts","../../../packages/common/src/lib/confirm-dialog/confirm-dialog.module.ts","../../../packages/common/src/lib/context-menu/context-menu.directive.ts","../../../packages/common/src/lib/context-menu/context-menu.module.ts","../../../packages/common/src/lib/custom-html/custom-html.component.ts","../../../packages/common/src/lib/custom-html/custom-html.component.html","../../../packages/common/src/lib/custom-html/custom-html.module.ts","../../../packages/common/src/lib/drag-drop/drag-drop.directive.ts","../../../packages/common/src/lib/drag-drop/drag-drop.module.ts","../../../packages/common/src/lib/dynamic-component/shared/dynamic-component.ts","../../../packages/common/src/lib/dynamic-component/shared/dynamic-component.service.ts","../../../packages/common/src/lib/dynamic-component/dynamic-outlet/dynamic-outlet.component.ts","../../../packages/common/src/lib/dynamic-component/dynamic-outlet/dynamic-outlet.component.html","../../../packages/common/src/lib/dynamic-component/dynamic-outlet/dynamic-outlet.module.ts","../../../packages/common/src/lib/dynamic-component/dynamic-component.module.ts","../../../packages/common/src/lib/flexible/flexible.component.ts","../../../packages/common/src/lib/flexible/flexible.component.html","../../../packages/common/src/lib/flexible/flexible.module.ts","../../../packages/common/src/lib/form/shared/form.utils.ts","../../../packages/common/src/lib/form/form/form.component.ts","../../../packages/common/src/lib/form/form/form.component.html","../../../packages/common/src/lib/form/form/form.module.ts","../../../packages/common/src/lib/form/shared/form.service.ts","../../../packages/common/src/lib/form/shared/form-field.service.ts","../../../packages/common/src/lib/form/shared/form-field-component.ts","../../../packages/common/src/lib/form/form-field/form-field.component.html","../../../packages/common/src/lib/form/form-field/form-field.component.ts","../../../packages/common/src/lib/form/form-field/form-field-select.component.html","../../../packages/common/src/lib/form/form-field/form-field-select.component.ts","../../../packages/common/src/lib/form/form-field/form-field-text.component.html","../../../packages/common/src/lib/form/form-field/form-field-text.component.ts","../../../packages/common/src/lib/form/form-field/form-field-textarea.component.html","../../../packages/common/src/lib/form/form-field/form-field-textarea.component.ts","../../../packages/common/src/lib/form/form-field/form-field.module.ts","../../../packages/common/src/lib/form/form-group/form-group.component.html","../../../packages/common/src/lib/form/form-group/form-group.component.ts","../../../packages/common/src/lib/form/form-group/form-group.module.ts","../../../packages/common/src/lib/form/form.module.ts","../../../packages/common/src/lib/home-button/home-button.component.ts","../../../packages/common/src/lib/home-button/home-button.component.html","../../../packages/common/src/lib/home-button/home-button.module.ts","../../../packages/common/src/lib/entity/entity-selector/entity-selector.module.ts","../../../packages/common/src/lib/stop-propagation/stop-drop-propagation.directive.ts","../../../packages/common/src/lib/stop-propagation/stop-propagation.module.ts","../../../packages/common/src/lib/entity/entity-table-paginator/entity-table-paginator.module.ts","../../../packages/common/src/lib/image/image.module.ts","../../../packages/common/src/lib/entity/entity-table/entity-table.module.ts","../../../packages/common/src/lib/entity/entity.module.ts","../../../packages/common/src/lib/interactive-tour/interactive-tour.loader.ts","../../../packages/common/src/lib/interactive-tour/interactive-tour.service.ts","../../../packages/common/src/lib/tool/shared/toolbox.ts","../../../packages/common/src/lib/tool/shared/tool.service.ts","../../../packages/common/src/lib/interactive-tour/interactive-tour.component.html","../../../packages/common/src/lib/interactive-tour/interactive-tour.component.ts","../../../packages/common/src/lib/interactive-tour/interactive-tour.module.ts","../../../packages/common/src/lib/keyvalue/keyvalue.pipe.ts","../../../packages/common/src/lib/keyvalue/keyvalue.module.ts","../../../packages/common/src/lib/json-dialog/json-dialog.component.html","../../../packages/common/src/lib/json-dialog/json-dialog.component.ts","../../../packages/common/src/lib/json-dialog/json-dialog.service.ts","../../../packages/common/src/lib/json-dialog/json-dialog.module.ts","../../../packages/common/src/lib/list/list-item.directive.ts","../../../packages/common/src/lib/list/list.component.ts","../../../packages/common/src/lib/list/list.component.html","../../../packages/common/src/lib/list/list.module.ts","../../../packages/common/src/lib/panel/panel.component.html","../../../packages/common/src/lib/panel/panel.component.ts","../../../packages/common/src/lib/panel/panel.module.ts","../../../packages/common/src/lib/sidenav/sidenav-shim.directive.ts","../../../packages/common/src/lib/sidenav/sidenav.module.ts","../../../packages/common/src/lib/spinner/spinner.component.ts","../../../packages/common/src/lib/spinner/spinner.component.html","../../../packages/common/src/lib/spinner/spinner-activity.directive.ts","../../../packages/common/src/lib/spinner/spinner.module.ts","../../../packages/common/src/lib/table/table-datasource.ts","../../../packages/common/src/lib/table/table-action-color.enum.ts","../../../packages/common/src/lib/table/table.component.html","../../../packages/common/src/lib/table/table.component.ts","../../../packages/common/src/lib/table/table.module.ts","../../../packages/common/src/lib/action/shared/store.ts","../../../packages/common/src/lib/tool/shared/toolbox.enums.ts","../../../packages/common/src/lib/tool/toolbox/toolbox.animation.ts","../../../packages/common/src/lib/tool/toolbox/toolbox.component.html","../../../packages/common/src/lib/tool/toolbox/toolbox.component.ts","../../../packages/common/src/lib/tool/toolbox/toolbox.module.ts","../../../packages/common/src/lib/tool/tool.module.ts","../../../packages/common/src/lib/widget/widget-outlet/widget-outlet.component.html","../../../packages/common/src/lib/widget/widget-outlet/widget-outlet.component.ts","../../../packages/common/src/lib/widget/widget-outlet/widget-outlet.module.ts","../../../packages/common/src/lib/widget/shared/widget.service.ts","../../../packages/common/src/lib/widget/widget.module.ts","../../../packages/common/src/lib/workspace/workspace-selector/workspace-selector.component.ts","../../../packages/common/src/lib/workspace/workspace-selector/workspace-selector.component.html","../../../packages/common/src/lib/workspace/workspace-selector/workspace-selector.module.ts","../../../packages/common/src/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.component.html","../../../packages/common/src/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.component.ts","../../../packages/common/src/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.module.ts","../../../packages/common/src/lib/workspace/workspace.module.ts","../../../packages/common/src/lib/table/table-database.ts","../../../packages/common/src/lib/tool/shared/tool-component.ts","../../../packages/common/src/lib/widget/shared/widget.ts","../../../packages/common/src/lib/workspace/shared/store.ts","../../../packages/common/src/lib/workspace/shared/workspace.ts","../../../packages/common/src/public_api.ts","../../../packages/common/src/igo2-common.ts"],"sourcesContent":["export enum EntityOperationType {\n  Insert = 'Insert',\n  Update = 'Update',\n  Delete = 'Delete'\n}\n\nexport enum EntityTableColumnRenderer {\n  Default = 'Default',\n  HTML = 'HTML',\n  UnsanitizedHTML = 'UnsanitizedHTML',\n  Editable = 'Editable',\n  Icon = 'Icon',\n  ButtonGroup = 'ButtonGroup'\n}\n\nexport enum EntityTableScrollBehavior {\n  Auto = 'auto',\n  Instant = 'instant',\n  Smooth = 'smooth'\n}\n\nexport enum EntityTableSelectionState {\n  None = 'None',\n  All = 'All',\n  Some = 'Some'\n}\n","import t from 'typy';\n\nimport { EntityKey } from './entity.interfaces';\n\n/**\n * Get an entity's named property. Nested properties are supported\n * with the dotted notation. (i.e 'author.name')\n *\n * Note: this method is a 'best attempt' at getting an entity's property.\n * It fits the most common cases but you might need to explicitely define\n * a property getter when using an EntityStore, for example.\n * @param entity Entity\n * @param property Property name\n * @returns Property value\n */\nexport function getEntityProperty(entity: object, property: string): any {\n  return t(entity, property).safeObject;\n}\n\n/**\n * Get an entity's id. An entity's id can be one of:\n * 'entity.meta.id', 'entity.meta.idProperty' or 'entity.id'.\n *\n * Note: See the note in the 'getEntityProperty' documentation.\n * @param entity Entity\n * @returns Entity id\n */\nexport function getEntityId(entity: object): EntityKey {\n  const meta = (entity as any).meta || {};\n  return meta.id ? meta.id : getEntityProperty(entity, meta.idProperty || 'id');\n}\n\n/**\n * Get an entity's title. An entity's title can be one of:\n * 'entity.meta.title', 'entity.meta.titleProperty' or 'entity.title'.\n * @param entity Entity\n * @returns Entity title\n */\nexport function getEntityTitle(entity: object): string {\n  const meta = (entity as any).meta || {};\n  return meta.title ? meta.title : getEntityProperty(entity, meta.titleProperty || 'title');\n}\n\n/**\n * Get an entity's HTML title. An entity's HTML title can be one of:\n * 'entity.meta.titleHtml', 'entity.meta.titleHtmlProperty' or 'entity.titleHtml'.\n * @param entity Entity\n * @returns Entity HTML title\n */\nexport function getEntityTitleHtml(entity: object): string {\n  const meta = (entity as any).meta || {};\n  return meta.titleHtml ? meta.titleHtml : getEntityProperty(entity, meta.titleHtmlProperty || 'titleHtml');\n}\n\n/**\n * Get an entity's icon. An entity's icon can be one of:\n * 'entity.meta.icon', 'entity.meta.iconProperty' or 'entity.icon'.\n * @param entity Entity\n * @returns Entity icon\n */\nexport function getEntityIcon(entity: object): string {\n  const meta = (entity as any).meta || {};\n  return meta.icon ? meta.icon : getEntityProperty(entity, meta.iconProperty || 'icon');\n}\n\n/**\n * Get an entity's revision.\n * @param entity Entity\n * @returns Entity revision\n */\nexport function getEntityRevision(entity: object): number {\n  const meta = (entity as any).meta || {};\n  return meta.revision || 0;\n}\n","import { ReplaySubject } from 'rxjs';\n\nimport { EntityKey, EntityState, EntityStateManagerOptions } from './entity.interfaces';\nimport { getEntityId } from './entity.utils';\nimport { EntityStore } from './store';\n\n/**\n * This class is used to track a store's entities state\n */\nexport class EntityStateManager<E extends object, S extends EntityState = EntityState> {\n\n  /**\n   * State index\n   */\n  readonly index = new Map<EntityKey, S>();\n\n  /**\n   * Change emitter\n   */\n  readonly change$ = new ReplaySubject<void>(1);\n\n  /**\n   * Method to get an entity's id\n   */\n  readonly getKey: (E) => EntityKey;\n\n  private store: EntityStore<object> | undefined;\n\n  constructor(options: EntityStateManagerOptions = {}) {\n    this.store = options.store ? options.store : undefined;\n    this.getKey = options.getKey\n      ? options.getKey\n      : (this.store ? this.store.getKey : getEntityId);\n    this.next();\n  }\n\n  /**\n   * Clear state\n   */\n  clear() {\n    if (this.index.size > 0) {\n      this.index.clear();\n      this.next();\n    }\n  }\n\n  /**\n   * Get an entity's state\n   * @param entity Entity\n   * @returns State\n   */\n  get(entity: E): S {\n    return (this.index.get(this.getKey(entity)) || {}) as S;\n  }\n\n  /**\n   * Set an entity's state\n   * @param entity Entity\n   * @param state State\n   */\n  set(entity: E, state: S) {\n    this.setMany([entity], state);\n  }\n\n  /**\n   * Set many entitie's state\n   * @param entitie Entities\n   * @param state State\n   */\n  setMany(entities: E[], state: S) {\n    entities.forEach((entity: E) => {\n      this.index.set(this.getKey(entity), Object.assign({}, state));\n    });\n    this.next();\n  }\n\n  /**\n   * Set state of all entities that already have a state. This is not\n   * the same as setting the state of all the store's entities.\n   * @param state State\n   */\n  setAll(state: S) {\n    Array.from(this.index.keys()).forEach((key: EntityKey) => {\n      this.index.set(key, Object.assign({}, state));\n    });\n    this.next();\n  }\n\n  /**\n   * Update an entity's state\n   * @param entity Entity\n   * @param changes State changes\n   */\n  update(entity: E, changes: Partial<S>, exclusive = false) {\n    this.updateMany([entity], changes, exclusive);\n  }\n\n  /**\n   * Update many entitie's state\n   * @param entitie Entities\n   * @param changes State changes\n   */\n  updateMany(entities: E[], changes: Partial<S>, exclusive = false) {\n    if (exclusive === true) {\n      return this.updateManyExclusive(entities, changes);\n    }\n\n    entities.forEach((entity: E) => {\n      const state = Object.assign({}, this.get(entity), changes);\n      this.index.set(this.getKey(entity), state);\n    });\n    this.next();\n  }\n\n  /**\n   * Reversee an entity's state\n   * @param entity Entity\n   * @param keys State keys to reverse\n   */\n  reverse(entity: E, keys: string[]) {\n    this.reverseMany([entity], keys);\n  }\n\n  /**\n   * Reverse many entitie's state\n   * @param entitie Entities\n   * @param keys State keys to reverse\n   */\n  reverseMany(entities: E[], keys: string[]) {\n    entities.forEach((entity: E) => {\n      const currentState = this.get(entity);\n      const changes = keys.reduce((acc: {[key: string]: boolean}, key: string) => {\n        acc[key] = currentState[key] || false;\n        return acc;\n      }, {}) as Partial<S>;\n      const reversedChanges = this.reverseChanges(changes);\n      const state = Object.assign({}, currentState, reversedChanges);\n      this.index.set(this.getKey(entity), state);\n    });\n    this.next();\n  }\n\n  /**\n   * Update state of all entities that already have a state. This is not\n   * the same as updating the state of all the store's entities.\n   * @param changes State\n   */\n  updateAll(changes: Partial<S>) {\n    const allKeys = this.getAllKeys();\n    Array.from(allKeys).forEach((key: EntityKey) => {\n      const state = Object.assign({}, this.index.get(key), changes);\n      this.index.set(key, state);\n    });\n    this.next();\n  }\n\n  /**\n   * When some state changes are flagged as 'exclusive', reverse\n   * the state of all other entities. Changes are reversable when\n   * they are boolean.\n   * @param entitie Entities\n   * @param changes State changes\n   */\n  private updateManyExclusive(entities: E[], changes: Partial<S>) {\n    const reverseChanges = this.reverseChanges(changes);\n\n    const keys = entities.map((entity: E) => this.getKey(entity));\n    const allKeys = new Set(keys.concat(Array.from(this.getAllKeys())));\n    allKeys.forEach((key: EntityKey) => {\n      const state = this.index.get(key) || {} as S;\n\n      if (keys.indexOf(key) >= 0) {\n        this.index.set(key, Object.assign({}, state, changes));\n      } else {\n        // Update only if the reverse changes would modify\n        // a key already present in the current state\n        const shouldUpdate = Object.keys(reverseChanges).some((changeKey: string) => {\n          return state[changeKey] !== undefined &&\n            state[changeKey] !== reverseChanges[changeKey];\n        });\n        if (shouldUpdate === true) {\n          this.index.set(key, Object.assign({}, state, reverseChanges));\n        }\n      }\n    });\n\n    this.next();\n  }\n\n  /**\n   * Compute a 'reversed' version of some state changes.\n   * Changes are reversable when they are boolean.\n   * @param changes State changes\n   * @returns Reversed state changes\n   */\n  private reverseChanges(changes: Partial<S>): Partial<S> {\n    return Object.entries(changes).reduce((reverseChanges: Partial<S>, bunch: [string, any]) => {\n      const [changeKey, value] = bunch;\n      if (typeof value === typeof true) {\n        (reverseChanges as object)[changeKey] = !value;\n      }\n      return reverseChanges;\n    }, {});\n  }\n\n  /**\n   * Return all the keys in that state and in the store it's bound to, if any.\n   * @returns Set of keys\n   */\n  private getAllKeys(): Set<EntityKey> {\n    const storeKeys = this.store ? Array.from(this.store.index.keys()) : [];\n    return new Set(Array.from(this.index.keys()).concat(storeKeys));\n  }\n\n  /**\n   * Emit 'change' event\n   */\n  private next() {\n    this.change$.next();\n  }\n\n}\n","import { BehaviorSubject, Observable, Subscription, combineLatest } from 'rxjs';\nimport { debounceTime, map, skip } from 'rxjs/operators';\n\nimport { ObjectUtils, uuid } from '@igo2/utils';\nimport {\n  EntityKey,\n  EntityFilterClause,\n  EntitySortClause,\n  EntityJoinClause\n} from './entity.interfaces';\n\n/**\n * An entity view streams entities from an observable source. These entities\n * can be filtered or sorted without affecting the source. A view can also\n * combine data from multiple sources, joined together.\n */\nexport class EntityView<E extends object, V extends object = E> {\n\n  /**\n   * Observable stream of values\n   */\n  readonly values$ = new BehaviorSubject<V[]>([]);\n\n  /**\n   * Subscription to the source (and joined sources) values\n   */\n  private values$$: Subscription;\n\n  /**\n   * Whether this view has been lifted\n   */\n  private lifted = false;\n\n  /**\n   * Join clauses\n   */\n  private joins: EntityJoinClause[] = [];\n\n  /**\n   * Observable of a filter clause\n   */\n  private filter$ = new BehaviorSubject(undefined);\n\n  /**\n   * Observable of filter clauses\n   */\n  private filters$: BehaviorSubject<EntityFilterClause[]> = new BehaviorSubject([]);\n\n  /**\n   * Filters index\n   */\n  private filterIndex: Map<string, EntityFilterClause> = new Map();\n\n  /**\n   * Observable of a sort clause\n   */\n  private sort$ = new BehaviorSubject(undefined);\n\n  /**\n   * Method for indexing\n   */\n  get getKey(): (V) => EntityKey { return this.getKey$.value; }\n  private getKey$: BehaviorSubject<(V) => EntityKey> = new BehaviorSubject(undefined);\n\n  /**\n   * Number of entities\n   */\n  readonly count$ = new BehaviorSubject<number>(0);\n  get count(): number { return this.count$.value; }\n\n  /**\n   * Whether the store is empty\n   */\n  readonly empty$ = new BehaviorSubject<boolean>(true);\n  get empty(): boolean { return this.empty$.value; }\n\n  /**\n   * Store index\n   */\n  get index(): Map<EntityKey, V> { return this._index; }\n  private _index: Map<EntityKey, V>;\n\n  constructor(private source$: BehaviorSubject<E[]>) {}\n\n  /**\n   * Get a value from the view by key\n   * @param key Key\n   * @returns Value\n   */\n  get(key: EntityKey): V {\n    if (this._index === undefined) {\n      throw new Error('This view has no index, therefore, this method is unavailable.');\n    }\n    return this.index.get(key);\n  }\n\n  /**\n   * Get all the values\n   * @returns Array of values\n   */\n  all(): V[] {\n    return this.values$.value;\n  }\n\n  /**\n   * Observe all the values\n   * @returns Observable of values\n   */\n  all$(): BehaviorSubject<V[]> {\n    return this.values$;\n  }\n\n  /**\n   * Get the first value that respects a criteria\n   * @returns A value\n   */\n  firstBy(clause: EntityFilterClause<V>): V {\n    return this.values$.value.find(clause);\n  }\n\n  /**\n   * Observe the first value that respects a criteria\n   * @returns Observable of a value\n   */\n  firstBy$(clause: EntityFilterClause<V>): Observable<V> {\n    return this.values$.pipe(map((values: V[]) => values.find(clause)));\n  }\n\n  /**\n   * Get all the values that respect a criteria\n   * @returns Array of values\n   */\n  manyBy(clause: EntityFilterClause<V>): V[] {\n    return this.values$.value.filter(clause);\n  }\n\n  /**\n   * Observe all the values that respect a criteria\n   * @returns Observable of values\n   */\n  manyBy$(clause: EntityFilterClause<V>): Observable<V[]> {\n    return this.values$.pipe(map((values: V[]) => values.filter(clause)));\n  }\n\n  /**\n   * Clear the filter and sort and unsubscribe from the source\n   */\n  clear() {\n    this.filter(undefined);\n    this.sort(undefined);\n  }\n\n  destroy() {\n    if (this.values$$ !== undefined) {\n      this.values$$.unsubscribe();\n    }\n    this.clear();\n  }\n\n  /**\n   * Create an index\n   * @param getKey Method to get a value's id\n   * @returns The view\n   */\n  createIndex(getKey: (E) => EntityKey): EntityView<E, V> {\n    this._index = new Map();\n    this.getKey$.next(getKey);\n    return this;\n  }\n\n  /**\n   * Join another source to the stream (chainable)\n   * @param clause Join clause\n   * @returns The view\n   */\n  join(clause: EntityJoinClause): EntityView<E, V> {\n    if (this.lifted === true) {\n      throw new Error('This view has already been lifted, therefore, no join is allowed.');\n    }\n    this.joins.push(clause);\n    return this;\n  }\n\n  /**\n   * Filter values (chainable)\n   * @param clause Filter clause\n   * @returns The view\n   */\n  filter(clause: EntityFilterClause<V>): EntityView<E, V> {\n    this.filter$.next(clause);\n    return this;\n  }\n\n  /**\n   * @param clause Filter clause\n   * @returns The filter id\n   */\n  addFilter(clause: EntityFilterClause<V>): string {\n    const id = uuid();\n    this.filterIndex.set(id, clause);\n    this.filters$.next(Array.from(this.filterIndex.values()));\n    return id;\n  }\n\n  /**\n   * Remove a filter by id\n   * @param clause Filter clause\n   */\n  removeFilter(id: string) {\n    this.filterIndex.delete(id);\n    this.filters$.next(Array.from(this.filterIndex.values()));\n  }\n\n  /**\n   * Sort values (chainable)\n   * @param clauseSort clause\n   * @returns The view\n   */\n  sort(clause: EntitySortClause<V>): EntityView<E, V> {\n    this.sort$.next(clause);\n    return this;\n  }\n\n  /**\n   * Create the final observable\n   * @returns Observable\n   */\n  lift() {\n    this.lifted = true;\n    const source$ = this.joins.length > 0 ? this.liftJoinedSource() : this.liftSource();\n    const observables$ = [\n      source$,\n      this.filters$,\n      this.filter$,\n      this.sort$,\n      this.getKey$\n    ];\n\n    this.values$$ = combineLatest(observables$)\n      .pipe(skip(1), debounceTime(5))\n      .subscribe((bunch: [V[], EntityFilterClause[], EntityFilterClause, EntitySortClause, (V) => EntityKey]) => {\n        const [_values, filters, filter, sort, getKey] = bunch;\n        const values = this.processValues(_values, filters, filter, sort);\n        const generateIndex = getKey !== undefined;\n        this.setValues(values, generateIndex);\n      });\n  }\n\n  /**\n   * Create the source observable when no joins are defined\n   * @returns Observable\n   */\n  private liftSource(): Observable<V[]> {\n    return this.source$ as any as Observable<V[]>;\n  }\n\n  /**\n   * Create the source observable when joins are defined\n   * @returns Observable\n   */\n  private liftJoinedSource(): Observable<V[]> {\n    const sources$ = [this.source$, combineLatest(\n      this.joins.map((join: EntityJoinClause) => join.source)\n    )];\n\n    return combineLatest(sources$)\n      .pipe(\n        map((bunch: [E[], any[]]) => {\n          const [entities, joinData] = bunch;\n          return entities.reduce((values: V[], entity: E) => {\n            const value = this.computeJoinedValue(entity, joinData);\n            if (value !== undefined) {\n              values.push(value);\n            }\n            return values;\n          }, []);\n        })\n      );\n  }\n\n  /**\n   * Apply joins to a source's entity and return the final value\n   * @returns Final value\n   */\n  private computeJoinedValue(entity: E, joinData: any[]): V | undefined {\n    let value = entity as Partial<V>;\n    let joinIndex = 0;\n    while (value !== undefined && joinIndex < this.joins.length) {\n      value = this.joins[joinIndex].reduce(value, joinData[joinIndex]);\n      joinIndex += 1;\n    }\n    return value as V;\n  }\n\n  /**\n   * Filter and sort values before streaming them\n   * @param values Values\n   * @param filters Filter clauses\n   * @param filter Filter clause\n   * @param sort Sort clause\n   * @returns Filtered and sorted values\n   */\n  private processValues(\n    values: V[], filters: EntityFilterClause[], filter: EntityFilterClause, sort: EntitySortClause\n  ): V[] {\n    values = values.slice(0);\n    values = this.filterValues(values, filters.concat([filter]));\n    values = this.sortValues(values, sort);\n    return values;\n  }\n\n  /**\n   * Filter values\n   * @param values Values\n   * @param filters Filter clauses\n   * @returns Filtered values\n   */\n  private filterValues(values: V[], clauses: EntityFilterClause[]): V[] {\n    if (clauses.length === 0) { return values; }\n\n    return values\n      .filter((value: V) => {\n        return clauses\n          .filter((clause: EntityFilterClause) => clause !== undefined)\n          .every((clause: EntityFilterClause) => clause(value));\n      });\n  }\n\n  /**\n   * Sort values\n   * @param values Values\n   * @param sort Sort clause\n   * @returns Sorted values\n   */\n  private sortValues(values: V[], clause: EntitySortClause): V[] {\n    if (clause === undefined) { return values; }\n    return values.sort((v1: V, v2: V) => {\n      return ObjectUtils.naturalCompare(\n        clause.valueAccessor(v1),\n        clause.valueAccessor(v2),\n        clause.direction,\n        clause.nullsFirst\n      );\n    });\n  }\n\n  /**\n   * Set value and optionally generate an index\n   * @param values Values\n   * @param generateIndex boolean\n   */\n  private setValues(values: V[], generateIndex: boolean) {\n    if (generateIndex === true) {\n      this._index = this.generateIndex(values);\n    }\n\n    this.values$.next(values);\n\n    const count = values.length;\n    const empty = count === 0;\n    this.count$.next(count);\n    this.empty$.next(empty);\n  }\n\n  /**\n   * Generate a complete index of all the values\n   * @param entities Entities\n   * @returns Index\n   */\n  private generateIndex(values: V[]): Map<EntityKey, V> {\n    const entries = values.map((value: V) => [this.getKey(value), value]);\n    return new Map(entries as [EntityKey, V][]);\n  }\n}\n","import { BehaviorSubject } from 'rxjs';\n\nimport { EntityStateManager } from './state';\nimport { EntityView } from './view';\nimport { EntityKey, EntityState, EntityRecord, EntityStoreOptions } from './entity.interfaces';\nimport { getEntityId, getEntityProperty } from './entity.utils';\nimport { EntityStoreStrategy } from './strategies/strategy';\n\n/**\n * An entity store class holds any number of entities\n * as well as their state. It can be observed, filtered and sorted and\n * provides methods to insert, update or delete entities.\n */\nexport class EntityStore<E extends object = object, S extends EntityState = EntityState> {\n\n  /**\n   * Observable of the raw entities\n   */\n  readonly entities$ = new BehaviorSubject<E[]>([]);\n\n  /**\n   * Number of entities\n   */\n  readonly count$ = new BehaviorSubject<number>(0);\n  get count(): number { return this.count$.value; }\n\n  /**\n   * Whether the store is empty\n   */\n  readonly empty$ = new BehaviorSubject<boolean>(true);\n  get empty(): boolean { return this.empty$.value; }\n\n  /**\n   * Entity store state\n   */\n  readonly state: EntityStateManager<E, S>;\n\n  /**\n   * View of all the entities\n   */\n  readonly view: EntityView<E>;\n\n  /**\n   * View of all the entities and their state\n   */\n  readonly stateView: EntityView<E, EntityRecord<E, S>>;\n\n  /**\n   * Method to get an entity's id\n   */\n  readonly getKey: (E) => EntityKey;\n\n  /**\n   * Method to get an entity's named property\n   */\n  readonly getProperty: (E, prop: string) => any;\n\n  /**\n   * Store index\n   */\n  get index(): Map<EntityKey, E> { return this._index; }\n  private _index: Map<EntityKey, E>;\n\n  /**\n   * Store index\n   */\n  get pristine(): boolean { return this._pristine; }\n  private _pristine: boolean = true;\n\n  /**\n   * Strategies\n   */\n  private strategies: EntityStoreStrategy[] = [];\n\n  constructor(entities: E[], options: EntityStoreOptions = {}) {\n    this.getKey = options.getKey ? options.getKey : getEntityId;\n    this.getProperty = options.getProperty ? options.getProperty : getEntityProperty;\n\n    this.state = this.createStateManager();\n    this.view = this.createDataView();\n    this.stateView = this.createStateView();\n\n    this.view.lift();\n    this.stateView.lift();\n\n    if (entities.length > 0) {\n      this.load(entities);\n    } else {\n      this._index = this.generateIndex(entities);\n    }\n  }\n\n  /**\n   * Get an entity from the store by key\n   * @param key Key\n   * @returns Entity\n   */\n  get(key: EntityKey): E {\n    return this.index.get(key);\n  }\n\n  /**\n   * Get all entities in the store\n   * @returns Array of entities\n   */\n  all(): E[] {\n    return this.entities$.value;\n  }\n\n  /**\n   * Set this store's entities\n   * @param entities Entities\n   */\n  load(entities: E[], pristine: boolean = true) {\n    this._index = this.generateIndex(entities);\n    this._pristine = pristine;\n    this.next();\n  }\n\n  /**\n   * Clear the store's entities but keep the state and views intact.\n   * Views won't return any data but future data will be subject to the\n   * current views filter and sort\n   */\n  softClear() {\n    if (this.index && this.index.size > 0) {\n      this.index.clear();\n      this._pristine = true;\n      this.next();\n    } else if (this.index) {\n      this.updateCount();\n    }\n  }\n\n  /**\n   * Clear the store's entities, state and views\n   */\n  clear() {\n    this.stateView.clear();\n    this.view.clear();\n    this.state.clear();\n    this.softClear();\n  }\n\n  destroy() {\n    this.stateView.destroy();\n    this.view.destroy();\n    this.clear();\n  }\n\n  /**\n   * Insert an entity into the store\n   * @param entity Entity\n   */\n  insert(entity: E) {\n    this.insertMany([entity]);\n  }\n\n  /**\n   * Insert many entities into the store\n   * @param entities Entities\n   */\n  insertMany(entities: E[]) {\n    entities.forEach((entity: E) => this.index.set(this.getKey(entity), entity));\n    this._pristine = false;\n    this.next();\n  }\n\n  /**\n   * Update or insert an entity into the store\n   * @param entity Entity\n   */\n  update(entity: E) {\n    this.updateMany([entity]);\n  }\n\n  /**\n   * Update or insert many entities into the store\n   * @param entities Entities\n   */\n  updateMany(entities: E[]) {\n    entities.forEach((entity: E) => this.index.set(this.getKey(entity), entity));\n    this._pristine = false;\n    this.next();\n  }\n\n  /**\n   * Delete an entity from the store\n   * @param entity Entity\n   */\n  delete(entity: E) {\n    this.deleteMany([entity]);\n  }\n\n  /**\n   * Delete many entities from the store\n   * @param entities Entities\n   */\n  deleteMany(entities: E[]) {\n    entities.forEach((entity: E) => this.index.delete(this.getKey(entity)));\n    this._pristine = false;\n    this.next();\n  }\n\n  /**\n   * Add a strategy to this store\n   * @param strategy Entity store strategy\n   * @returns Entity store\n   */\n  addStrategy(strategy: EntityStoreStrategy, activate: boolean = false): EntityStore {\n    const existingStrategy = this.strategies.find((_strategy: EntityStoreStrategy) => {\n      return strategy.constructor === _strategy.constructor;\n    });\n    if (existingStrategy !== undefined) {\n      throw new Error('A strategy of this type already exists on that EntityStore.');\n    }\n\n    this.strategies.push(strategy);\n    strategy.bindStore(this);\n\n    if (activate === true) {\n      strategy.activate();\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove a strategy from this store\n   * @param strategy Entity store strategy\n   * @returns Entity store\n   */\n  removeStrategy(strategy: EntityStoreStrategy): EntityStore {\n    const index = this.strategies.indexOf(strategy);\n    if (index >= 0) {\n      this.strategies.splice(index, 1);\n      strategy.unbindStore(this);\n    }\n    return this;\n  }\n\n  /**\n   * Return strategies of a given type\n   * @param type Entity store strategy class\n   * @returns Strategies\n   */\n  getStrategyOfType(type: typeof EntityStoreStrategy): EntityStoreStrategy {\n    return this.strategies.find((strategy: EntityStoreStrategy) => {\n      return strategy instanceof type;\n    });\n  }\n\n  /**\n   * Activate strategies of a given type\n   * @param type Entity store strategy class\n   */\n  activateStrategyOfType(type: typeof EntityStoreStrategy) {\n    const strategy = this.getStrategyOfType(type);\n    if (strategy !== undefined) {\n      strategy.activate();\n    }\n  }\n\n  /**\n   * Deactivate strategies of a given type\n   * @param type Entity store strategy class\n   */\n  deactivateStrategyOfType(type: typeof EntityStoreStrategy) {\n    const strategy = this.getStrategyOfType(type);\n    if (strategy !== undefined) {\n      strategy.deactivate();\n    }\n  }\n\n  /**\n   * Generate a complete index of all the entities\n   * @param entities Entities\n   * @returns Index\n   */\n  private generateIndex(entities: E[]): Map<EntityKey, E> {\n    const entries = entities.map((entity: E) => [this.getKey(entity), entity]);\n    return new Map(entries as [EntityKey, E][]);\n  }\n\n  /**\n   * Push the index's entities into the entities$ observable\n   */\n  private next() {\n    this.entities$.next(Array.from(this.index.values()));\n    this.updateCount();\n  }\n\n  /**\n   * Update the store's count and empty\n   */\n  private updateCount() {\n    const count = this.index.size;\n    const empty = count === 0;\n    this.count$.next(count);\n    this.empty$.next(empty);\n  }\n\n  /**\n   * Create the entity state manager\n   * @returns EntityStateManager\n   */\n  private createStateManager() {\n    return new EntityStateManager<E, S>({store: this});\n  }\n\n  /**\n   * Create the data view\n   * @returns EntityView<E>\n   */\n  private createDataView() {\n    return new EntityView<E>(this.entities$);\n  }\n\n  /**\n   * Create the state view\n   * @returns EntityView<EntityRecord<E>>\n   */\n  private createStateView() {\n    return new EntityView<E, EntityRecord<E, S>>(this.view.all$())\n      .join({\n        source: this.state.change$,\n        reduce: (entity: E): EntityRecord<E, S> => {\n          const key = this.getKey(entity);\n          const state = this.state.get(entity);\n          const currentRecord = this.stateView.get(key);\n\n          if (\n            currentRecord !== undefined &&\n            currentRecord.entity === entity &&\n            this.statesAreTheSame(currentRecord.state, state)\n          ) {\n            return currentRecord;\n          }\n\n          const revision = currentRecord ? currentRecord.revision + 1 : 1;\n          const ref = `${key}-${revision}`;\n          return {entity, state, revision, ref};\n        }\n      })\n      .createIndex((record: EntityRecord<E, S>) => this.getKey(record.entity));\n  }\n\n  private statesAreTheSame(currentState: S, newState: S): boolean {\n    if (currentState === newState) {\n      return true;\n    }\n\n    const currentStateIsEmpty = Object.keys(currentState).length === 0;\n    const newStateIsEmpty = Object.keys(newState).length === 0;\n    return currentStateIsEmpty && newStateIsEmpty;\n  }\n\n}\n","import { ChangeDetectorRef } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { skip } from 'rxjs/operators';\n\nimport { ObjectUtils } from '@igo2/utils';\nimport { EntityKey } from './entity.interfaces';\n\nimport { EntityStore } from './store';\n\n/**\n * This class is used to synchronize a component's changes\n * detection with an EntityStore changes. For example, it is frequent\n * to have a component subscribe to a store's selected entity and, at the same time,\n * this component provides a way to select an entity with, let's say, a click.\n *\n * This class automatically handles those case and triggers the compoent's\n * change detection when needed.\n *\n * Note: If the component observes the store's stateView, a workspace is\n * probably not required because the stateView catches any changes to the\n * entities and their state.\n */\nexport class EntityStoreWatcher<E extends object> {\n\n  /**\n   * Component change detector\n   */\n  private cdRef: ChangeDetectorRef;\n\n  /**\n   * Entity store\n   */\n  private store: EntityStore<E>;\n\n  /**\n   * Component inner state\n   */\n  private innerStateIndex = new Map<EntityKey, {[key: string]: any}>();\n\n  /**\n   * Subscription to the store's entities\n   */\n  private entities$$: Subscription;\n\n  /**\n   * Subscription to the store's state\n   */\n  private state$$: Subscription;\n\n  constructor(store?: EntityStore<E>, cdRef?: ChangeDetectorRef) {\n    this.setChangeDetector(cdRef);\n    this.setStore(store);\n  }\n\n  destroy() {\n    this.setChangeDetector(undefined);\n    this.setStore(undefined);\n  }\n\n  /**\n   * Bind this workspace to a store and start watching for changes\n   * @param store Entity store\n   */\n  setStore(store?: EntityStore<E>) {\n    if (store === undefined) {\n      this.teardownObservers();\n      this.innerStateIndex.clear();\n      this.store = undefined;\n      return;\n    }\n\n    this.setStore(undefined);\n    this.store = store;\n    this.setupObservers();\n    this.detectChanges();\n  }\n\n  /**\n   * Bind this workspace to a component's change detector\n   * @param cdRef Change detector\n   */\n  setChangeDetector(cdRef?: ChangeDetectorRef) {\n    this.cdRef = cdRef;\n  }\n\n  /**\n   * Set up observers on a store's entities and their state\n   * @param store Entity store\n   */\n  private setupObservers() {\n    this.teardownObservers();\n\n    this.entities$$ = this.store.entities$\n      .subscribe((entities: E[]) => this.onEntitiesChange(entities));\n\n    this.state$$ = this.store.state.change$\n      .pipe(skip(1))\n      .subscribe(() => this.onStateChange());\n  }\n\n  /**\n   * Teardown store observers\n   */\n  private teardownObservers() {\n    if (this.entities$$ !== undefined) {\n      this.entities$$.unsubscribe();\n    }\n    if (this.state$$ !== undefined) {\n      this.state$$.unsubscribe();\n    }\n    this.entities$$ = undefined;\n    this.state$$ = undefined;\n  }\n\n  /**\n   * When the entities change, always trigger the changes detection\n   */\n  private onEntitiesChange(entities: E[]) {\n    this.detectChanges();\n  }\n\n  /**\n   * When the entities state change, trigger the change detection\n   * only if the component has not handled these changes yet. For example,\n   * the component might have initiated thoses changes itself.\n   */\n  private onStateChange() {\n    let changesDetected = false;\n    const storeIndex = this.store.state.index;\n    const innerIndex = this.innerStateIndex;\n\n    if (storeIndex.size !== innerIndex.size) {\n      changesDetected = this.detectChanges();\n    }\n\n    const storeKeys = Array.from(storeIndex.keys());\n    for (const key of storeKeys) {\n      const storeValue = storeIndex.get(key);\n      const innerValue = innerIndex.get(key);\n      if (changesDetected === false) {\n        if (innerValue === undefined) {\n          changesDetected = this.detectChanges();\n        } else if (!ObjectUtils.objectsAreEquivalent(storeValue, innerValue)) {\n          changesDetected = this.detectChanges();\n        }\n      }\n\n      this.innerStateIndex.set(key, Object.assign({}, storeValue));\n    }\n  }\n\n  /**\n   * Trigger the change detection of the workspace is bound to a change detector\n   */\n  private detectChanges() {\n    if (this.cdRef !== undefined) {\n      this.cdRef.detectChanges();\n    }\n    return true;\n  }\n\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport {\n  EntityKey,\n  EntityTransactionOptions,\n  EntityOperation,\n  EntityOperationState\n} from './entity.interfaces';\nimport { EntityStore } from './store';\nimport { EntityOperationType } from './entity.enums';\nimport { getEntityId } from './entity.utils';\n\nexport type EntityTransactionCommitHandler = (\n  transaction: EntityTransaction,\n  operations: EntityOperation[]\n) => Observable<any>;\n\n/**\n * This class holds a reference to the insert, update and delete\n * operations performed on a store. This is useful to commit\n * these operations in a single pass or to cancel them.\n */\nexport class EntityTransaction {\n\n  /**\n   * Store holding the operations on another store\n   */\n  readonly operations: EntityStore<EntityOperation, EntityOperationState>;\n\n  /**\n   * Method to get an entity's id\n   */\n  readonly getKey: (E) => EntityKey;\n\n  /**\n   * Whether there are pending operations\n   */\n  get empty$(): BehaviorSubject<boolean> { return this.operations.empty$; }\n\n  /**\n   * Whether there are pending operations\n   */\n  get empty(): boolean { return this.empty$.value; }\n\n  /**\n   * Whether thise store is in commit phase\n   */\n  get inCommitPhase(): boolean { return this.inCommitPhase$.value; }\n  readonly inCommitPhase$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(options: EntityTransactionOptions = {}) {\n    this.getKey = options.getKey ? options.getKey : getEntityId;\n    this.operations = new EntityStore<EntityOperation, EntityOperationState>([], {\n      getKey: (operation: EntityOperation) => operation.key\n    });\n  }\n\n  destroy() {\n    this.operations.destroy();\n  }\n\n  /**\n   * Insert an entity into a store. If no store is specified, an insert\n   * operation is still created but the transaction won't add the new\n   * entity to the store.\n   * @param current The entity to insert\n   * @param store Optional: The store to insert the entity into\n   * @param meta Optional: Any metadata on the operation\n   */\n  insert(current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    const existingOperation = this.getOperationByEntity(current);\n    if (existingOperation !== undefined) {\n      this.removeOperation(existingOperation);\n    }\n\n    this.doInsert(current, store, meta);\n  }\n\n  /**\n   * Update an entity in a store. If no store is specified, an update\n   * operation is still created but the transaction won't update the\n   * entity into the store.\n   * @param previous The entity before update\n   * @param current The entity after update\n   * @param store Optional: The store to update the entity into\n   * @param meta Optional: Any metadata on the operation\n   */\n  update(previous: object, current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    const existingOperation = this.getOperationByEntity(current);\n    if (existingOperation !== undefined) {\n      this.removeOperation(existingOperation);\n      if (existingOperation.type === EntityOperationType.Insert) {\n        this.doInsert(current, store, meta);\n        return;\n      } else if (existingOperation.type === EntityOperationType.Update) {\n        previous = existingOperation.previous;\n      }\n    }\n\n    this.doUpdate(previous, current, store, meta);\n  }\n\n  /**\n   * Delete an entity from a store. If no store is specified, a delete\n   * operation is still created but the transaction won't remove the\n   * entity from the store.\n   * @param previous The entity before delete\n   * @param store Optional: The store to delete the entity from\n   * @param meta Optional: Any metadata on the operation\n   */\n  delete(previous: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    const existingOperation = this.getOperationByEntity(previous);\n    if (existingOperation !== undefined) {\n      this.removeOperation(existingOperation);\n      if (existingOperation.type === EntityOperationType.Insert) {\n        if (store !== undefined) {\n          store.delete(previous);\n        }\n        return;\n      }\n    }\n\n    this.doDelete(previous, store, meta);\n  }\n\n  /**\n   * Commit operations the transaction. This method doesn't do much\n   * in itself. The handler it receives does the hard work and it's\n   * implementation is left to the caller. This method simply wraps\n   * the handler into an error catching mechanism to update\n   * the transaction afterward. The caller needs to subscribe to this\n   * method's output (observable) for the commit to be performed.\n   * @param operations Operations to commit\n   * @param handler Function that handles the commit operation\n   * @returns The handler output (observable)\n   */\n  commit(operations: EntityOperation[], handler: EntityTransactionCommitHandler): Observable<any> {\n    this.inCommitPhase$.next(true);\n\n    return handler(this, operations)\n      .pipe(\n        catchError(() => of(new Error())),\n        tap((result: any) => {\n          if (result instanceof Error) {\n            this.onCommitError(operations);\n          } else {\n            this.onCommitSuccess(operations);\n          }\n        })\n      );\n  }\n\n  /**\n   * Commit all the operations of the transaction.\n   * @param handler Function that handles the commit operation\n   * @returns The handler output (observable)\n   */\n  commitAll(handler: EntityTransactionCommitHandler): Observable<any> {\n    const operations = this.getOperationsInCommit();\n    return this.commit(operations, handler);\n  }\n\n  /**\n   * Rollback this transaction\n   */\n  rollback() {\n    this.rollbackOperations(this.operations.all());\n  }\n\n  /**\n   * Rollback specific operations\n   */\n  rollbackOperations(operations: EntityOperation[]) {\n    this.checkInCommitPhase();\n\n    const operationsFactory = () => new Map([\n      [EntityOperationType.Delete, []],\n      [EntityOperationType.Update, []],\n      [EntityOperationType.Insert, []]\n    ]);\n    const storesOperations = new Map();\n\n    // Group operations by store and by operation type.\n    // Grouping operations allows us to revert them in bacth, thus, triggering\n    // observables only one per operation type.\n    for (const operation of operations) {\n      const store = operation.store;\n      if (operation.store === undefined) { continue; }\n\n      let storeOperations = storesOperations.get(store);\n      if (storeOperations === undefined) {\n        storeOperations = operationsFactory();\n        storesOperations.set(store, storeOperations);\n      }\n      storeOperations.get(operation.type).push(operation);\n    }\n\n    Array.from(storesOperations.keys()).forEach((store: EntityStore<object>) => {\n      const storeOperations = storesOperations.get(store);\n\n      const deletes = storeOperations.get(EntityOperationType.Delete);\n      store.insertMany(deletes.map((_delete: EntityOperation) => _delete.previous));\n\n      const updates = storeOperations.get(EntityOperationType.Update);\n      store.updateMany(updates.map((_update: EntityOperation) => _update.previous));\n\n      const inserts = storeOperations.get(EntityOperationType.Insert);\n      store.deleteMany(inserts.map((_insert: EntityOperation) => _insert.current));\n    });\n\n    this.operations.deleteMany(operations);\n    this.inCommitPhase$.next(false);\n  }\n\n  /**\n   * Clear this transaction\n   * @todo Raise event and synchronize stores?\n   */\n  clear() {\n    this.operations.clear();\n    this.inCommitPhase$.next(false);\n  }\n\n  /**\n   * Get any existing operation on an entity\n   * @param entity Entity\n   * @returns Either an insert, update or delete operation\n   */\n  getOperationByEntity(entity: object): EntityOperation {\n    return this.operations.get(this.getKey(entity));\n  }\n\n  /**\n   * Merge another transaction in this one\n   * @param transaction Another transaction\n   */\n  mergeTransaction(transaction: EntityTransaction) {\n    this.checkInCommitPhase();\n\n    const operations = transaction.operations.all();\n    operations.forEach((operation: EntityOperation) => {\n      this.addOperation(operation);\n    });\n  }\n\n  /**\n   * Create an insert operation and add an entity to the store\n   * @param current The entity to insert\n   * @param store Optional: The store to insert the entity into\n   * @param meta Optional: Any metadata on the operation\n   */\n  private doInsert(current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    this.addOperation({\n      key: this.getKey(current),\n      type: EntityOperationType.Insert,\n      previous: undefined,\n      current,\n      store,\n      meta\n    });\n\n    if (store !== undefined) {\n      store.insert(current);\n    }\n  }\n\n  /**\n   * Create an update operation and update an entity into the store\n   * @param previous The entity before update\n   * @param current The entity after update\n   * @param store Optional: The store to update the entity into\n   * @param meta Optional: Any metadata on the operation\n   */\n  private doUpdate(previous: object, current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    this.addOperation({\n      key: this.getKey(current),\n      type: EntityOperationType.Update,\n      previous,\n      current,\n      store,\n      meta\n    });\n\n    if (store !== undefined) {\n      store.update(current);\n    }\n  }\n\n  /**\n   * Create a delete operation and delete an entity from the store\n   * @param previous The entity before delete\n   * @param store Optional: The store to delete the entity from\n   * @param meta Optional: Any metadata on the operation\n   */\n  private doDelete(previous: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\n    this.addOperation({\n      key: this.getKey(previous),\n      type: EntityOperationType.Delete,\n      previous,\n      current: undefined,\n      store,\n      meta\n    });\n\n    if (store !== undefined) {\n      store.delete(previous);\n    }\n  }\n\n  /**\n   * Remove committed operations from store\n   * @param operations Commited operations\n   * @todo Raise event and synchronize stores?\n   */\n  private resolveOperations(operations: EntityOperation[]) {\n    this.operations.deleteMany(operations);\n  }\n\n  /**\n   * On commit success, resolve commited operations and exit commit phase\n   * @param operations Commited operations\n   */\n  private onCommitSuccess(operations: EntityOperation[]) {\n    this.resolveOperations(operations);\n    this.inCommitPhase$.next(false);\n  }\n\n  /**\n   * On commit error, abort transaction\n   * @param operations Commited operations\n   */\n  private onCommitError(operations: EntityOperation[]) {\n    this.inCommitPhase$.next(false);\n  }\n\n  /**\n   * Add an operation to the operations store\n   * @param operation Operation to add\n   */\n  private addOperation(operation: EntityOperation) {\n    this.checkInCommitPhase();\n\n    this.operations.insert(operation);\n    this.operations.state.update(operation, {added: true});\n  }\n\n  /**\n   * Remove an operation from the operations store\n   * @param operation Operation to remove\n   */\n  private removeOperation(operation: EntityOperation) {\n    this.checkInCommitPhase();\n\n    this.operations.delete(operation);\n    this.operations.state.update(operation, {added: false});\n  }\n\n  /**\n   * Get all the operations to commit\n   * @returns Operations to commit\n   */\n  private getOperationsInCommit(): EntityOperation[] {\n    return this.operations.stateView\n      .manyBy((value: {entity: EntityOperation, state: EntityOperationState}) => {\n        return value.state.added === true;\n      })\n      .map((value: {entity: EntityOperation, state: EntityOperationState}) => value.entity);\n  }\n\n  /**\n   * Check if the transaction is in the commit phase and throw an error if it is\n   */\n  private checkInCommitPhase() {\n    if (this.inCommitPhase === true) {\n      throw new Error('This transaction is in the commit phase. Cannot complete this operation.');\n    }\n  }\n}\n","import { BehaviorSubject } from 'rxjs';\n\nimport { EntityStoreStrategyOptions } from '../entity.interfaces';\nimport { EntityStore } from '../store';\n\n/**\n * Entity store strategies. They can do pretty much anything during a store's\n * lifetime. For example, they may act as triggers when something happens.\n * Sharing a strategy is a good idea when multiple strategies would have\n * on cancelling effect on each other.\n *\n * At creation, strategy is inactive and needs to be manually activated.\n */\nexport class EntityStoreStrategy {\n\n  /**\n   * Feature store\n   * @internal\n   */\n  protected stores: EntityStore[] = [];\n\n  /**\n   * Whether this strategy is active\n   * @internal\n   */\n  get active(): boolean { return this.active$.value; }\n  readonly active$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(protected options: EntityStoreStrategyOptions = {}) {\n    this.options = options;\n  }\n\n  /**\n   * Activate the strategy. If it's already active, it'll be deactivated\n   * and activated again.\n   */\n  activate() {\n    if (this.active === true) {\n      this.doDeactivate();\n    }\n    this.active$.next(true);\n    this.doActivate();\n  }\n\n  /**\n   * Activate the strategy. If it's already active, it'll be deactivated\n   * and activated again.\n   */\n  deactivate() {\n    this.active$.next(false);\n    this.doDeactivate();\n  }\n\n  /**\n   * Bind this strategy to a store\n   * @param store Feature store\n   */\n  bindStore(store: EntityStore) {\n    if (this.stores.indexOf(store) < 0) {\n      this.stores.push(store);\n    }\n  }\n\n  /**\n   * Unbind this strategy from store\n   * @param store Feature store\n   */\n  unbindStore(store: EntityStore) {\n    const index = this.stores.indexOf(store);\n    if (index >= 0) {\n      this.stores.splice(index, 1);\n    }\n  }\n\n  /**\n   * Do the stataegy activation\n   * @internal\n   */\n  protected doActivate() {}\n\n  /**\n   * Do the strategy deactivation\n   * @internal\n   */\n  protected doDeactivate() {}\n\n}\n","import { EntityStoreStrategyFuncOptions } from '../entity.interfaces';\nimport { EntityStore } from '../store';\nimport { EntityStoreStrategy } from './strategy';\n\n/**\n * When active, this strategy filters a store's stateView to return\n * selected entities only.\n */\nexport class EntityStoreFilterCustomFuncStrategy extends EntityStoreStrategy {\n\n  constructor(protected options: EntityStoreStrategyFuncOptions) {\n    super(options);\n  }\n\n  /**\n   * Store / filter ids map\n   */\n  private filters: Map<EntityStore, string> = new Map();\n\n  /**\n   * Bind this strategy to a store and start filtering it\n   * @param store Entity store\n   */\n  bindStore(store: EntityStore) {\n    super.bindStore(store);\n    if (this.active === true) {\n      this.filterStore(store);\n    }\n  }\n\n  /**\n   * Unbind this strategy from a store and stop filtering it\n   * @param store Entity store\n   */\n  unbindStore(store: EntityStore) {\n    super.unbindStore(store);\n    if (this.active === true) {\n      this.unfilterStore(store);\n    }\n  }\n\n  /**\n   * Start filtering all stores\n   * @internal\n   */\n  protected doActivate() {\n    this.filterAll();\n  }\n\n  /**\n   * Stop filtering all stores\n   * @internal\n   */\n  protected doDeactivate() {\n    this.unfilterAll();\n  }\n\n  /**\n   * Filter all stores\n   */\n  private filterAll() {\n    this.stores.forEach((store: EntityStore) => this.filterStore(store));\n  }\n\n  /**\n   * Unfilter all stores\n   */\n  private unfilterAll() {\n    this.stores.forEach((store: EntityStore) => this.unfilterStore(store));\n  }\n\n  /**\n   * Filter a store and add it to the filters map\n   */\n  private filterStore(store: EntityStore) {\n    this.filters.set(store, store.stateView.addFilter(this.options.filterClauseFunc));\n  }\n\n  /**\n   * Unfilter a store and delete it from the filters map\n   */\n  private unfilterStore(store: EntityStore) {\n    const filterId = this.filters.get(store);\n    if (filterId === undefined) {\n      return;\n    }\n\n    store.stateView.removeFilter(filterId);\n    this.filters.delete(store);\n  }\n}\n","import { EntityRecord } from '../entity.interfaces';\nimport { EntityStore } from '../store';\nimport { EntityStoreStrategy } from './strategy';\n\n/**\n * When active, this strategy filters a store's stateView to return\n * selected entities only.\n */\nexport class EntityStoreFilterSelectionStrategy extends EntityStoreStrategy {\n\n  /**\n   * Store / filter ids map\n   */\n  private filters: Map<EntityStore, string> = new Map();\n\n  /**\n   * Bind this strategy to a store and start filtering it\n   * @param store Entity store\n   */\n  bindStore(store: EntityStore) {\n    super.bindStore(store);\n    if (this.active === true) {\n      this.filterStore(store);\n    }\n  }\n\n  /**\n   * Unbind this strategy from a store and stop filtering it\n   * @param store Entity store\n   */\n  unbindStore(store: EntityStore) {\n    super.unbindStore(store);\n    if (this.active === true) {\n      this.unfilterStore(store);\n    }\n  }\n\n  /**\n   * Start filtering all stores\n   * @internal\n   */\n  protected doActivate() {\n    this.filterAll();\n  }\n\n  /**\n   * Stop filtering all stores\n   * @internal\n   */\n  protected doDeactivate() {\n    this.unfilterAll();\n  }\n\n  /**\n   * Filter all stores\n   */\n  private filterAll() {\n    this.stores.forEach((store: EntityStore) => this.filterStore(store));\n  }\n\n  /**\n   * Unfilter all stores\n   */\n  private unfilterAll() {\n    this.stores.forEach((store: EntityStore) => this.unfilterStore(store));\n  }\n\n  /**\n   * Filter a store and add it to the filters map\n   */\n  private filterStore(store: EntityStore) {\n    if (this.filters.has(store)) {\n      return;\n    }\n\n    const filter = (record: EntityRecord<object>) => {\n      return record.state.selected === true;\n    };\n    this.filters.set(store, store.stateView.addFilter(filter));\n  }\n\n  /**\n   * Unfilter a store and delete it from the filters map\n   */\n  private unfilterStore(store: EntityStore) {\n    const filterId = this.filters.get(store);\n    if (filterId === undefined) {\n      return;\n    }\n\n    store.stateView.removeFilter(filterId);\n    this.filters.delete(store);\n  }\n}\n","<mat-form-field class=\"igo-entity-selector\">\n  <mat-select\n    [disabled]=\"disabled\"\n    [value]=\"selected$ | async\"\n    [multiple]=\"multi\"\n    [placeholder]=\"placeholder\"\n    (selectionChange)=\"onSelectionChange($event)\">\n    <mat-option *ngIf=\"emptyText !== undefined && multi === false\" [value]=\"emptyValue\">{{emptyText}}</mat-option>\n    <mat-option *ngIf=\"multi === true\" [value]=\"multiSelectValue\">{{multiText$ | async}}</mat-option>\n    <ng-template ngFor let-record [ngForOf]=\"store.stateView.all$() | async\">\n      <mat-option [value]=\"record.entity\">\n        {{titleAccessor(record.entity)}}\n      </mat-option>\n    </ng-template>\n  </mat-select>\n</mat-form-field>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { EntityRecord } from '../shared/entity.interfaces';\nimport { EntityStore } from '../shared/store';\nimport { EntityStoreWatcher } from '../shared/watcher';\nimport { getEntityTitle } from '../shared/entity.utils';\n\n@Component({\n  selector: 'igo-entity-selector',\n  templateUrl: './entity-selector.component.html',\n  styleUrls: ['./entity-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntitySelectorComponent implements OnInit, OnDestroy {\n\n  /**\n   * The selected entity\n   * @internal\n   */\n  readonly selected$ = new BehaviorSubject<object>(undefined);\n\n  /**\n   * The current multi select option text\n   * @internal\n   */\n  readonly multiText$ = new BehaviorSubject<string>(undefined);\n\n  readonly multiSelectValue = {id: 'IGO_MULTI_SELECT'};\n\n  readonly emptyValue = {id: 'IGO_EMPTY_SELECT'};\n\n  /**\n   * Subscription to the selected entity\n   */\n  private selected$$: Subscription;\n\n  /**\n   * Store watcher\n   */\n  private watcher: EntityStoreWatcher<object>;\n\n  /**\n   * Entity store\n   */\n  @Input() store: EntityStore<object>;\n\n  /**\n   * Title accessor\n   */\n  @Input() titleAccessor: (object) => string = getEntityTitle;\n\n  /**\n   * Text to display when nothing is selected\n   */\n  @Input() emptyText: string = undefined;\n\n  /**\n   * Wheter selecting many entities is allowed\n   */\n  @Input() multi: boolean = false;\n\n  /**\n   * Text to display for the select all option\n   */\n  @Input() multiAllText: string = 'All';\n\n  /**\n   * Text to display for the select none option\n   */\n  @Input() multiNoneText: string = 'None';\n\n  /**\n   * Field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Wheter the selector is disabled or not\n   */\n  @Input() disabled: boolean = false;\n\n  /**\n   * Event emitted when the selection changes\n   */\n  @Output() selectedChange = new EventEmitter<{\n    selected: boolean;\n    value: object | object[];\n  }>();\n\n  constructor(private cdRef: ChangeDetectorRef) {}\n\n  /**\n   * Create a store watcher and subscribe to the selected entity\n   * @internal\n   */\n  ngOnInit() {\n    this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\n\n    this.selected$$ = this.store.stateView\n      .manyBy$((record: EntityRecord<object>) => record.state.selected === true)\n      .subscribe((records: EntityRecord<object>[]) => {\n        const entities = records.map((record: EntityRecord<object>) => record.entity);\n        this.onSelectFromStore(entities);\n      });\n  }\n\n  /**\n   * Unsubscribe to the selected entity and destroy the store watcher\n   * @internal\n   */\n  ngOnDestroy() {\n    this.watcher.destroy();\n    this.selected$$.unsubscribe();\n  }\n\n  /**\n   * On selection change, update the store's state and emit an event\n   * @internal\n   */\n  onSelectionChange(event: {value: object | undefined}) {\n    const values = event.value instanceof Array ? event.value : [event.value];\n\n    const multiSelect = values.find((_value: object) => _value === this.multiSelectValue);\n    let entities = values.filter((_value: object) => _value !== this.multiSelectValue);\n    if (multiSelect !== undefined) {\n      if (entities.length === this.store.count) {\n        entities = [];\n      } else if (entities.length < this.store.count) {\n        entities = this.store.all();\n      }\n    }\n\n    entities = entities.filter((entity: object) => entity !== this.emptyValue);\n    if (entities.length === 0) {\n      this.store.state.updateAll({selected: false});\n    } else {\n      this.store.state.updateMany(entities, {selected: true}, true);\n    }\n\n    const value = this.multi ? entities : event.value;\n    this.selectedChange.emit({selected: true, value});\n  }\n\n  private onSelectFromStore(entities: object[]) {\n    if (this.multi === true) {\n      this.selected$.next(entities);\n    } else {\n      const entity = entities.length > 0 ? entities[0] : undefined;\n      this.selected$.next(entity);\n    }\n\n    this.updateMultiToggleWithEntities(entities);\n  }\n\n  private updateMultiToggleWithEntities(entities: object[]) {\n    if (entities.length === this.store.count && this.multiText$.value !== this.multiNoneText) {\n      this.multiText$.next(this.multiNoneText);\n    } else if (entities.length < this.store.count && this.multiText$.value !== this.multiAllText) {\n      this.multiText$.next(this.multiAllText);\n    }\n  }\n\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[igoStopPropagation]'\n})\nexport class StopPropagationDirective {\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    event.stopPropagation();\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Renderer2,\n  EventEmitter,\n  Output,\n  HostListener\n} from '@angular/core';\n\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nimport { EntityTableScrollBehavior } from '../shared/entity.enums';\n\n/**\n * Directive that handles an entity table row click and selection.\n */\n@Directive({\n  selector: '[igoEntityTableRow]'\n})\nexport class EntityTableRowDirective {\n\n  /**\n   * Class added to a selected row\n   */\n  static selectedCls = 'igo-entity-table-row-selected';\n\n  /**\n   * Class added to a highlighted row\n   */\n  static highlightedCls = 'igo-entity-table-row-highlighted';\n\n  /**\n   * Whether a row supports selection\n   */\n  @Input() selection = false;\n\n  /**\n   * Whether clicking a row should select it (if selection is true)\n   */\n  @Input() selectOnClick: boolean = true;\n\n  /**\n   * Whether the selected row should be highlighted\n   */\n  @Input() highlightSelection: boolean = true;\n\n  /**\n   * Whether a row is selected\n   */\n  @Input()\n  set selected(value: boolean) {\n    if (this.selection === false) { return; }\n    if (value === this._selected) { return; }\n\n    this.toggleSelected(value);\n    this.scroll();\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n  private _selected = false;\n\n  /**\n   * Scroll behavior on selection\n   */\n  @Input()\n  scrollBehavior: EntityTableScrollBehavior = EntityTableScrollBehavior.Auto;\n\n  /**\n   * Event emitted when a row is selected\n   */\n  @Output() select = new EventEmitter<EntityTableRowDirective>();\n\n  /**\n   * When a row is clicked, select it if it's supported\n   * @ignore\n   */\n  @HostListener('click')\n  onClick() {\n    if (this.selection === false || this.selectOnClick === false) {\n      return;\n    }\n\n    this.toggleSelected(true);\n    this.select.emit(this);\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  /**\n   * Select a row and add or remove the selected class from it\n   * @param selected Whether the row should be selected\n   */\n  private toggleSelected(selected: boolean) {\n    this._selected = selected;\n    if (selected === true) {\n      this.addCls(EntityTableRowDirective.selectedCls);\n      if (this.highlightSelection === true) {\n        this.addCls(EntityTableRowDirective.highlightedCls);\n      }\n    } else {\n      this.removeCls(EntityTableRowDirective.selectedCls);\n      this.removeCls(EntityTableRowDirective.highlightedCls);\n    }\n  }\n\n  /**\n   * Scroll to the selected row\n   */\n  private scroll() {\n    if (this._selected === true) {\n      scrollIntoView(this.el.nativeElement, {\n        scrollMode: 'if-needed',\n        behavior: 'smooth',\n        block: 'end',\n        inline: 'nearest'\n      });\n    }\n  }\n\n  /**\n   * Add the selected CSS class\n   */\n  private addCls(cls: string) {\n    this.renderer.addClass(this.el.nativeElement, cls);\n  }\n\n  /**\n   * Remove the selected CSS class\n   */\n  private removeCls(cls: string) {\n    this.renderer.removeClass(this.el.nativeElement, cls);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  OnChanges,\n  ViewChild,\n  Output,\n  EventEmitter,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  EntityStore\n} from '../shared';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { LanguageService, MediaService } from '@igo2/core';\nimport { EntityTablePaginatorOptions } from './entity-table-paginator.interface';\n\n@Component({\n  selector: 'igo-entity-table-paginator',\n  templateUrl: './entity-table-paginator.component.html',\n  styleUrls: ['./entity-table-paginator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntityTablePaginatorComponent implements OnChanges, OnDestroy {\n\n  public disabled: boolean = false;\n  public hidePageSize: boolean = false;\n  public pageIndex: number = 0;\n  public pageSize: number = 50;\n  public pageSizeOptions: number[] = [5, 10, 20, 50, 100, 200];\n  public showFirstLastButtons: boolean = true;\n  private count$$: Subscription;\n  private entitySortChange$$: Subscription;\n  private paginationLabelTranslation$$: Subscription[] = [];\n\n  @Input() entitySortChange$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  /**\n   * Entity store\n   */\n  @Input() store: EntityStore<object>;\n\n  /**\n   * Paginator options\n   */\n  @Input()\n  paginatorOptions: EntityTablePaginatorOptions;\n\n  /**\n   * Event emitted when the paginator changes the page size or page index.\n   */\n  @Output() page: EventEmitter<PageEvent>;\n\n  public length: number = 0;\n\n  /**\n   * Paginator emitted.\n   */\n  @Output() paginatorChange: EventEmitter<MatPaginator> = new EventEmitter<MatPaginator>();\n\n  constructor(private languageService: LanguageService, private mediaService: MediaService) {}\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  ngOnChanges() {\n    this.unsubscribeAll();\n    this.count$$ = this.store.stateView.count$.subscribe((count) => {\n      this.length = count;\n      this.emitPaginator();\n    });\n    this.entitySortChange$$ = this.entitySortChange$.subscribe(() => {\n      if (this.paginator) {\n        this.paginator.firstPage();\n      }\n    });\n    this.initPaginatorOptions();\n    this.translateLabels();\n  }\n\n  initPaginatorOptions() {\n    this.disabled = this.paginatorOptions?.disabled || this.disabled;\n    this.pageIndex = this.paginatorOptions?.pageIndex || this.pageIndex;\n    this.pageSize = this.paginatorOptions?.pageSize || this.pageSize;\n    this.pageSizeOptions = this.paginatorOptions?.pageSizeOptions || this.pageSizeOptions;\n    if (this.mediaService.isMobile()) {\n      this.showFirstLastButtons = false;\n      this.hidePageSize = true;\n    } else {\n      this.showFirstLastButtons = this.paginatorOptions?.showFirstLastButtons || this.showFirstLastButtons;\n      this.hidePageSize = this.paginatorOptions?.hidePageSize || this.hidePageSize;\n    }\n  }\n\n  translateLabels() {\n\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.firstPageLabel').subscribe((label: string) => {\n        this.paginator._intl.firstPageLabel = label;\n      }));\n\n    this.paginator._intl.getRangeLabel = this.rangeLabel;\n\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.itemsPerPageLabel').subscribe((label: string) => {\n        this.paginator._intl.itemsPerPageLabel = label;\n      }));\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.lastPageLabel').subscribe((label: string) => {\n        this.paginator._intl.lastPageLabel = label;\n      }));\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.nextPageLabel').subscribe((label: string) => {\n        this.paginator._intl.nextPageLabel = label;\n      }));\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.previousPageLabel').subscribe((label: string) => {\n        this.paginator._intl.previousPageLabel = label;\n      }));\n  }\n\n  rangeLabel = (page: number, pageSize: number, length: number) => {\n    const of: BehaviorSubject<string> = new BehaviorSubject('');\n\n    this.paginationLabelTranslation$$.push(\n      this.languageService.translate.get('igo.common.paginator.of').subscribe((label: string) => {\n        of.next(label);\n      }));\n    if (length === 0 || pageSize === 0) { return `0 ${of.value} ${length}`; }\n    length = Math.max(length, 0);\n    const startIndex = page * pageSize;\n    const endIndex = startIndex < length ?\n        Math.min(startIndex + pageSize, length) :\n        startIndex + pageSize;\n    return `${startIndex + 1} - ${endIndex} ${of.value} ${length}`;\n  }\n\n  private unsubscribeAll() {\n    this.paginationLabelTranslation$$.map(sub => sub.unsubscribe());\n    if (this.count$$) { this.count$$.unsubscribe(); }\n    if (this.entitySortChange$$) { this.entitySortChange$$.unsubscribe(); }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeAll();\n  }\n\n  emitPaginator() {\n    this.paginatorChange.emit(this.paginator);\n  }\n}\n","<mat-paginator \n  [disabled]=\"disabled\"\n  [hidePageSize]=\"hidePageSize\"\n  [length]=\"length\"\n  [pageIndex]=\"pageIndex\"\n  [pageSize]=\"pageSize\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  [showFirstLastButtons]=\"showFirstLastButtons\"\n  (page)=\"emitPaginator()\">\n</mat-paginator>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Cacheable } from 'ts-cacheable';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Pipe({\n  name: 'secureImage'\n})\nexport class SecureImagePipe implements PipeTransform {\n  constructor(private http: HttpClient) {}\n\n  @Cacheable({\n    maxCacheCount: 20\n  })\n  transform(url: string): Observable<string> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'text/plain',\n      activityInterceptor: 'false'\n    });\n\n    return this.http\n      .get(url, {\n        headers,\n        responseType: 'blob'\n      })\n      .pipe(\n        switchMap((blob) => {\n          return new Observable((observer) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.onloadend = () => {\n              observer.next(reader.result);\n              observer.complete();\n            };\n          });\n        })\n      ) as Observable<string>;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({ name: 'sanitizeHtml' })\nexport class SanitizeHtmlPipe implements PipeTransform {\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n  transform(v: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(v);\n  }\n}\n","<div class=\"table-container\">\n    <table mat-table matSort [ngClass]=\"getTableClass()\" [dataSource]=\"dataSource\" [trackBy]=\"getTrackByFunction()\" (matSortChange)=\"onSort($event)\">\n        <ng-container matColumnDef=\"selectionCheckbox\" class=\"mat-cell-checkbox\">\n            <th mat-header-cell *matHeaderCellDef>\n                <ng-container *ngIf=\"selectMany\">\n                    <ng-container *ngIf=\"selectionState$ | async as selectionState\">\n                        <mat-checkbox (change)=\"onToggleRows($event.checked)\" [checked]=\"selectionState === entityTableSelectionState.All\"\n                        [indeterminate]=\"selectionState === entityTableSelectionState.Some\">\n                        </mat-checkbox>\n                    </ng-container>\n                </ng-container>\n            </th>\n            <td mat-cell *matCellDef=\"let record\">\n                <mat-checkbox (mousedown)=\"$event.shiftKey ? $event.preventDefault() : null\" (click)=\"$event.shiftKey ?\n                onShiftToggleRow(!rowIsSelected(record), record, $event) : $event.stopPropagation()\" (change)=\"onToggleRow($event.checked,record)\"\n                [checked]=\"rowIsSelected(record)\">\n                </mat-checkbox>\n            </td>\n        </ng-container>\n\n        <ng-container [matColumnDef]=\"column.name\" *ngFor=\"let column of template.columns\">\n            <ng-container *ngIf=\"columnIsSortable(column)\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header [matTooltip]=\"column.tooltip ? column.tooltip : undefined\">\n                    {{column.title}}\n                </th>\n            </ng-container>\n\n            <ng-container *ngIf=\"!columnIsSortable(column)\">\n                <th mat-header-cell *matHeaderCellDef [matTooltip]=\"column.tooltip ? column.tooltip : undefined\">\n                    {{column.title}}\n                </th>\n            </ng-container>\n\n            <ng-container *ngIf=\"getColumnRenderer(column) as columnRenderer\">\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.Default\">\n                    <ng-container *matCellDef=\"let record\">\n                        <td mat-cell class=\"mat-cell-text\" *ngIf=\"!isUrl(getValue(record, column));else isAnUrlDefault\" [ngClass]=\"getCellClass(record, column)\">\n                            {{getValue(record, column)}}\n                        </td>\n                        <ng-template #isAnUrlDefault>\n                            <td mat-cell class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                                <a href=\"{{getValue(record, column)}}\" target='_blank' rel=\"noopener noreferrer\" (click)=\"$event.stopPropagation()\">\n                                    <img *ngIf=\"isImg(getValue(record, column));else notImg\" src=\"{{(getValue(record, column) | secureImage) | async}}\" width=\"50\" heigth=\"auto\">\n                                    <ng-template #notImg><span>{{\n                      'igo.common.entity-table.targetHtmlUrl' | translate }}\n                    </span></ng-template>\n                                </a>\n                            </td>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.HTML\">\n                    <ng-container *matCellDef=\"let record\">\n                        <td mat-cell class=\"mat-cell-text\" *ngIf=\"!isUrl(getValue(record, column));else isAnUrlHTML\" [ngClass]=\"getCellClass(record, column)\"\n                        [innerHTML]=\"getValue(record, column)\">\n                        </td>\n                        <ng-template #isAnUrlHTML>\n                            <td mat-cell class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                                <a href=\"{{getValue(record, column)}}\" target='_blank' rel=\"noopener noreferrer\" (click)=\"$event.stopPropagation()\">\n                                    <img *ngIf=\"isImg(getValue(record, column));else notImg\" src=\"{{(getValue(record, column) | secureImage) | async}}\" width=\"50\" heigth=\"auto\">\n                                    <ng-template #notImg><span>{{ 'igo.geo.targetHtmlUrl' |\n                      translate }} </span></ng-template>\n                                </a>\n                            </td>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.UnsanitizedHTML\">\n                    <ng-container *matCellDef=\"let record\">\n                        <td mat-cell class=\"mat-cell-text edition\" [formGroup]=\"formGroup\" *ngIf=\"isEdition(record);else isUnsanitizedHTML\"\n                        [ngClass]=\"getCellClass(record, column)\">\n                            <div class=\"date-picker\" *ngIf=\"column.type === 'date'\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <input matInput [matDatepicker]=\"picker\" [formControlName]=\"column.name\" value=\"{{getValue(record, column)}}\"\n                                (dateChange)=\"onDateChange(column.name, record, $event)\">\n                                <mat-datepicker #picker></mat-datepicker>\n                            </div>\n                            <input matInput type=\"time\" *ngIf=\"column.type === 'time'\" [formControlName]=\"column.name\" step=\"900\" (focus)=\"column.onFocus($event)\"\n                            (keypress)=\"column.onChange($event)\" (blur)=\"column.onBlur($event)\">\n                            <input matInput type=\"number\" class=\"class_number_edition\" *ngIf=\"column.type === 'number'\" [formControlName]=\"column.name\" step=\"{{column.step}}\"\n                            value=\"{{getValue(record,column)}}\" (input)=\"onValueChange(column.name, record, $event)\"\n                            readonly=\"{{getValidationAttributeValue(column, 'readonly')}}\" required=\"{{getValidationAttributeValue(column, 'mandatory')}}\"\n                            min=\"{{getValidationAttributeValue(column, 'minValue')}}\" max=\"{{getValidationAttributeValue(column, 'maxValue')}}\">\n                            <input matInput type=\"text\" *ngIf=\"!column.type || column.type ==='string'\" [formControlName]=\"column.name\"\n                            value=\"{{getValue(record, column)}}\" (input)=\"onValueChange(column.name, record, $event)\"\n                            readonly=\"{{getValidationAttributeValue(column, 'readonly')}}\" required=\"{{getValidationAttributeValue(column, 'mandatory')}}\">\n                            <mat-checkbox *ngIf=\"column.type === 'boolean'\" [formControlName]=\"column.name\" [checked]=\"getValue(record,column)\"\n                            (change)=\"onBooleanValueChange(column.name, record,$event)\"></mat-checkbox>\n                            <mat-select *ngIf=\"column.type === 'list'\" required=\"{{getValidationAttributeValue(column, 'mandatory')}}\"\n                            [formControlName]=\"column.name\" [multiple]=\"column.multiple\" (selectionChange)=\"onSelectValueChange(column.name, record, $event)\"\n                            [value]=\"getValue(record, column)\">\n                                <mat-option *ngFor=\"let option of column.domainValues\" [value]=\"option.id\" [disabled]=\"option.disabled\">\n                                    {{ option.value }}\n                                </mat-option>\n                            </mat-select>\n                            <input matInput type=\"text\" [formControlName]=\"column.name\" *ngIf=\"column.type === 'autocomplete'\"\n                            [matAutocomplete]=\"auto\" required=\"{{getValidationAttributeValue(column, 'mandatory')}}\" value=\"{{getValue(record, column)}}\">\n                                <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onAutocompleteValueChange(column.name, record, $event)\"\n                                panelWidth=\"430px\">\n                                    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.id\">\n                                        {{ option.value }}\n                                    </mat-option>\n                                </mat-autocomplete>\n                        </td>\n                        <ng-template #isUnsanitizedHTML>\n                            <td mat-cell class=\"mat-cell-text\" *ngIf=\"!isUrl(getValue(record, column));else isAnUrlUnsanitizedHTML\" [ngClass]=\"getCellClass(record, column)\"\n                            [innerHTML]=\"getValue(record, column) | sanitizeHtml\">\n                            </td>\n                            <ng-template #isAnUrlUnsanitizedHTML>\n                                <td mat-cell class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                                    <a href=\"{{getValue(record, column)}}\" target='_blank' rel=\"noopener noreferrer\" (click)=\"$event.stopPropagation()\">\n                                        <img *ngIf=\"isImg(getValue(record, column));else notImg\" src=\"{{(getValue(record, column) | secureImage) | async}}\" width=\"50\" heigth=\"auto\">\n                                        <ng-template #notImg><span>{{ 'igo.geo.targetHtmlUrl' | translate }} </span></ng-template>\n                                    </a>\n                                </td>\n                            </ng-template>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.Icon\">\n                    <td mat-cell *matCellDef=\"let record\" class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                        <mat-icon svgIcon=\"{{getValue(record, column)|| column.icon}}\" (click)=\"column.onClick($event)\"></mat-icon>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"columnRenderer === entityTableColumnRenderer.ButtonGroup\">\n                    <ng-container *matCellDef=\"let record\">\n                        <td mat-cell class=\"mat-cell-text\" [ngClass]=\"getCellClass(record, column)\">\n                            <span *ngFor=\"let button of getValue(record, column)\">\n                                <ng-container *ngIf=\"isEdition(record) === button.editMode\">\n                                    <button *ngIf=\"button.style === 'mat-icon-button'\" igoStopPropagation mat-icon-button\n                                        [color]=\"button.color\" (mousedown)=\"onButtonClick(button.click, record)\" [disabled]=\"button.disabled\">\n                                        <mat-icon svgIcon=\"{{button.icon}}\"></mat-icon>\n                                    </button>\n                                    <button *ngIf=\"button.style !== 'mat-icon-button'\" igoStopPropagation mat-mini-fab\n                                        [color]=\"button.color\" (mousedown)=\"onButtonClick(button.click, record)\" [disabled]=\"button.disabled\">\n                                        <mat-icon svgIcon=\"{{button.icon}}\"></mat-icon>\n                                    </button>\n                                </ng-container>\n                            </span>\n                        </td>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"headers; sticky: fixedHeader;\" [ngClass]=\"getHeaderClass()\">\n        </tr>\n        <tr mat-row igoEntityTableRow *matRowDef=\"let record; columns: headers;\" [scrollBehavior]=\"scrollBehavior\" [ngClass]=\"getRowClass(record)\" [selection]=\"selection\" [selected]=\"rowIsSelected(record)\" (select)=\"onRowSelect(record)\" (click)=\"onRowClick(record)\">\n        </tr>\n    </table>\n    <igo-entity-table-paginator *ngIf=\"withPaginator\" [store]=\"store\" [paginatorOptions]=\"paginatorOptions\" [entitySortChange$]=\"entitySortChange$\" (paginatorChange)=\"paginatorChange($event)\">\n    </igo-entity-table-paginator>\n</div>","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  ElementRef,\n  Optional,\n  Self\n} from '@angular/core';\n\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport {\n  EntityKey,\n  EntityRecord,\n  EntityState,\n  EntityStore,\n  EntityTableTemplate,\n  EntityTableColumn,\n  EntityTableColumnRenderer,\n  EntityTableSelectionState,\n  EntityTableScrollBehavior\n} from '../shared';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { EntityTablePaginatorOptions } from '../entity-table-paginator/entity-table-paginator.interface';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { FormBuilder, NgControl, NgForm, FormControlName, FormGroup } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { DateAdapter, ErrorStateMatcher } from '@angular/material/core';\nimport { map } from 'rxjs/operators';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Component({\n  selector: 'igo-entity-table',\n  templateUrl: './entity-table.component.html',\n  styleUrls: ['./entity-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: MatFormFieldControl, useExisting: EntityTableComponent }]\n})\nexport class EntityTableComponent implements OnInit, OnChanges, OnDestroy {\n\n  entitySortChange$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  public formGroup: FormGroup = new FormGroup({});\n\n  public filteredOptions: Observable<any[]>;\n\n  /**\n   * Reference to the column renderer types\n   * @internal\n   */\n  entityTableColumnRenderer = EntityTableColumnRenderer;\n\n  /**\n   * Reference to the selection's state\n   * @internal\n   */\n  entityTableSelectionState = EntityTableSelectionState;\n\n  /**\n   * Observable of the selection,s state\n   * @internal\n   */\n  readonly selectionState$: BehaviorSubject<EntityTableSelectionState> = new BehaviorSubject(undefined);\n\n  /**\n   * Subscription to the store's selection\n   */\n  private selection$$: Subscription;\n\n  /**\n   * Subscription to the dataSource\n   */\n  private dataSource$$: Subscription;\n\n  /**\n   * The last record checked. Useful for selecting\n   * multiple records by holding the shift key and checking\n   * checkboxes.\n   */\n  private lastRecordCheckedKey: EntityKey;\n\n  /**\n   * Entity store\n   */\n  @Input() store: EntityStore<object>;\n\n  /**\n   * Table paginator\n   */\n  @Input() set paginator(value: MatPaginator) {\n    this._paginator = value;\n    this.dataSource.paginator = value;\n  }\n\n  get paginator(): MatPaginator {\n    return this._paginator;\n  }\n  private _paginator: MatPaginator;\n\n  /**\n   * Table template\n   */\n  @Input() template: EntityTableTemplate;\n\n  /**\n   * Scroll behavior on selection\n   */\n  @Input()\n  scrollBehavior: EntityTableScrollBehavior = EntityTableScrollBehavior.Auto;\n\n  /**\n   * Whether nulls should be first when sorting\n   */\n  @Input()\n  sortNullsFirst: boolean = false;\n\n  /**\n   * Show the table paginator or not. False by default.\n   */\n  @Input()\n  withPaginator: boolean = false;\n\n  /**\n   * Paginator options\n   */\n  @Input()\n  paginatorOptions: EntityTablePaginatorOptions;\n\n  /**\n   * Event emitted when an entity (row) is clicked\n   */\n  @Output() entityClick = new EventEmitter<object>();\n\n  /**\n   * Event emitted when an entity (row) is selected\n   */\n  @Output() entitySelectChange = new EventEmitter<{\n    added: object[];\n  }>();\n\n  /**\n   * Event emitted when the table sort is changed.\n   */\n  @Output() entitySortChange: EventEmitter<{column: EntityTableColumn, direction: string}> = new EventEmitter(undefined);\n\n  /**\n   * Table headers\n   * @internal\n   */\n  get headers(): string[] {\n    let columns = this.template.columns\n      .filter((column: EntityTableColumn) => column.visible !== false)\n      .map((column: EntityTableColumn) => column.name);\n\n    if (this.selectionCheckbox === true) {\n      columns = ['selectionCheckbox'].concat(columns);\n    }\n\n    return columns;\n  }\n\n  /**\n   * Data source consumable by the underlying material table\n   * @internal\n   */\n  dataSource = new MatTableDataSource<object>();\n\n  /**\n   * Whether selection is supported\n   * @internal\n   */\n  get selection(): boolean { return this.template.selection || false; }\n\n  /**\n   * Whether a selection checkbox should be displayed\n   * @internal\n   */\n  get selectionCheckbox(): boolean { return this.template.selectionCheckbox || false; }\n\n  /**\n   * Whether selection many entities should eb supported\n   * @internal\n   */\n  get selectMany(): boolean { return this.template.selectMany || false; }\n\n  /**\n   * Whether selection many entities should eb supported\n   * @internal\n   */\n  get fixedHeader(): boolean { return this.template.fixedHeader === undefined ? true : this.template.fixedHeader; }\n\n  constructor(private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    protected _focusMonitor: FocusMonitor,\n    protected _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Self() public ngControl: NgControl,\n    @Optional() protected _parentForm: NgForm,\n    @Optional() protected _controlName: FormControlName,\n    protected _defaultErrorStateMatcher: ErrorStateMatcher,\n    private dateAdapter: DateAdapter<Date>\n  ) {\n    this.dateAdapter.setLocale('fr-CA');\n  }\n\n  /**\n   * Track the selection state to properly display the selection checkboxes\n   * @internal\n   */\n  ngOnInit() {\n    this.handleDatasource();\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const store = changes.store;\n    if (store && store.currentValue !== store.previousValue) {\n      this.handleDatasource();\n    }\n  }\n\n  /**\n   * Process text or number value change (edition)\n   */\n  onValueChange(column: string, record: EntityRecord<any>, event) {\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = event.target.value;\n  }\n\n  /**\n   * Process boolean value change (edition)\n   */\n  onBooleanValueChange(column: string, record: EntityRecord<any>, event) {\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = event.checked;\n  }\n\n  /**\n   * Process select value change (edition)\n   */\n  onSelectValueChange(column: string, record: EntityRecord<any>, event) {\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = event.value;\n  }\n\n  /**\n   * Process autocomplete value change (edition)\n   */\n  onAutocompleteValueChange(column: string, record: EntityRecord<any>, event) {\n    this.formGroup.controls[column].setValue(event.option.viewValue);\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = event.option.value;\n  }\n\n  /**\n   * Process date value change (edition)\n   */\n  onDateChange(column: string, record: EntityRecord<any>, event) {\n    const format = \"YYYY-MM-DD\";\n    const value = moment(event.value).format(format);\n    const key = this.getColumnKeyWithoutPropertiesTag(column);\n    record.entity.properties[key] = value;\n  }\n\n  /**\n   * Enable edition mode for one row\n   * More than one row can be edited at the same time\n   */\n  private enableEdit(record: EntityRecord<any>) {\n    const item = record.entity.properties || record.entity;\n    this.template.columns.forEach(column => {\n      column.title = column.validation?.mandatory && !column.title.includes('*') ? column.title + ' *' : column.title;\n\n      const key = this.getColumnKeyWithoutPropertiesTag(column.name);\n      if (column.type === 'boolean') {\n        if (!item[key] || item[key] === null) {\n          item[key] = false;\n        } else if (typeof item[key] === 'string') {\n          item[key] = JSON.parse(item[key].toLowerCase());\n        }\n        this.formGroup.setControl(column.name, this.formBuilder.control(\n          item[key]\n        ));\n      } else if (column.type === 'list') {\n        if (column.multiple) {\n          this.formGroup.setControl(column.name, this.formBuilder.control(\n            [item[key]]\n          ));\n        } else {\n          this.formGroup.setControl(column.name, this.formBuilder.control(\n            item[key]\n          ));\n\n          typeof item[key] === 'string' ?\n            this.formGroup.controls[column.name].setValue(parseInt(item[key])) :\n            this.formGroup.controls[column.name].setValue(item[key]);\n        }\n      } else if (column.type === 'autocomplete') {\n        this.formGroup.setControl(column.name, this.formBuilder.control(\n          item[key]\n        ));\n\n        this.filteredOptions = this.formGroup.controls[column.name].valueChanges.pipe(\n          map(value => {\n            if (value.length) {\n              return column.domainValues.filter((option) => {\n                const filterNormalized = value ? value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : '';\n                const featureNameNormalized = option.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n                return featureNameNormalized.includes(filterNormalized);\n              });\n            }\n          })\n        );\n\n        let formControlValue = item[key];\n        column.domainValues.forEach(option => {\n          if (typeof formControlValue === 'string' && /^\\d+$/.test(formControlValue)) {\n            formControlValue = parseInt(formControlValue);\n          }\n          if (option.value === formControlValue || option.id === formControlValue) {\n            formControlValue = option.value;\n          }\n        });\n\n        this.formGroup.controls[column.name].setValue(formControlValue);\n      } else if (column.type === 'date') {\n        if (column.visible) {\n          if (item[key]) {\n            let date = moment(item[key]);\n            item[key] = date.utc().format('YYYY-MM-DD');\n            this.formGroup.setControl(column.name, this.formBuilder.control(\n              item[key]\n            ));\n          } else {\n            const newKey = this.getColumnKeyWithoutPropertiesTag(column.name);\n            record.entity.properties[newKey] = null;\n            this.formGroup.setControl(column.name, this.formBuilder.control(\n              null\n            ));\n          }\n        }\n      } else {\n        this.formGroup.setControl(column.name, this.formBuilder.control(\n          item[key]\n        ));\n      }\n\n      if (this.formGroup.controls[column.name] && this.getValidationAttributeValue(column, 'readonly')) {\n        this.formGroup.controls[column.name].disable();\n      }\n    });\n  }\n\n  private handleDatasource() {\n    this.unsubscribeStore();\n    this.selection$$ = this.store.stateView\n      .manyBy$((record: EntityRecord<object>) => record.state.selected === true)\n      .subscribe((records: EntityRecord<object>[]) => {\n        const firstSelected = records[0];\n        const firstSelectedStateviewPosition = this.store.stateView.all().indexOf(firstSelected);\n        const pageMax = this.paginator ? this.paginator.pageSize * (this.paginator.pageIndex + 1) : 0;\n        const pageMin = this.paginator ? pageMax - this.paginator.pageSize : 0;\n\n        if (\n          this.paginator &&\n          (firstSelectedStateviewPosition < pageMin ||\n          firstSelectedStateviewPosition >= pageMax)) {\n          const pageToReach = Math.floor(firstSelectedStateviewPosition / this.paginator.pageSize);\n          this.dataSource.paginator.pageIndex = pageToReach;\n        }\n        this.selectionState$.next(this.computeSelectionState(records));\n      });\n    this.dataSource$$ = this.store.stateView.all$().subscribe((all) => {\n      if (all[0]) {\n        this.enableEdit(all[0]);\n      }\n      this.dataSource.data = all;\n    });\n\n  }\n\n  /**\n   * Unbind the store watcher\n   * @internal\n   */\n  ngOnDestroy() {\n    this.unsubscribeStore();\n  }\n\n  private unsubscribeStore() {\n    if (this.selection$$) {\n      this.selection$$.unsubscribe();\n    }\n    if (this.dataSource$$) {\n      this.dataSource$$.unsubscribe();\n    }\n  }\n\n  /**\n   * Trackby function\n   * @param record Record\n   * @param index Record index\n   * @internal\n   */\n  getTrackByFunction() {\n    return (index: number, record: EntityRecord<object, EntityState>) => {\n      return record.ref;\n    };\n  }\n\n  /**\n   * Trigger a refresh of thre table. This can be useful when\n   * the data source doesn't emit a new value but for some reason\n   * the records need an update.\n   * @internal\n   */\n  refresh() {\n    this.cdRef.detectChanges();\n  }\n\n  paginatorChange(event: MatPaginator) {\n    this.paginator = event;\n  }\n\n  /**\n   * On sort, sort the store\n   * @param event Sort event\n   * @internal\n   */\n  onSort(event: {active: string, direction: string}) {\n    const direction = event.direction;\n    const column = this.template.columns\n      .find((c: EntityTableColumn) => c.name === event.active);\n\n    if (direction === 'asc' || direction === 'desc') {\n      this.store.stateView.sort({\n        valueAccessor: (record: EntityRecord<object>) => this.getValue(record, column),\n        direction,\n        nullsFirst: this.sortNullsFirst\n      });\n      this.entitySortChange.emit({column, direction});\n      this.entitySortChange$.next(true);\n    } else {\n      this.store.stateView.sort(undefined);\n    }\n  }\n\n  /**\n   * When an entity is clicked, emit an event\n   * @param record Record\n   * @internal\n   */\n  onRowClick(record: EntityRecord<object>) {\n    this.lastRecordCheckedKey = this.store.stateView.getKey(record);\n    this.entityClick.emit(record.entity);\n  }\n\n  /**\n   * When an entity is selected, select it in the store and emit an event. Even if\n   * \"many\" is set to true, this method always select a single, exclusive row. Selecting\n   * multiple rows should be achieved by using the checkboxes.\n   * @param record Record\n   * @internal\n   */\n  onRowSelect(record: EntityRecord<object>) {\n    if (this.selection === false) { return; }\n\n    const entity = record.entity;\n    this.store.state.update(entity, {selected: true}, true);\n    this.entitySelectChange.emit({added: [entity]});\n  }\n\n  /**\n   * Select or unselect all rows at once. On select, emit an event.\n   * @param toggle Select or unselect\n   * @internal\n   */\n  onToggleRows(toggle: boolean) {\n    if (this.selection === false) { return; }\n\n    this.store.state.updateAll({selected: toggle});\n    if (toggle === true) {\n      const entities = this.store.stateView\n        .all()\n        .map((record: EntityRecord<object>) => record.entity);\n      this.entitySelectChange.emit({added: [entities]});\n    }\n  }\n\n  /**\n   * When an entity is toggled, select or unselect it in the store. On select,\n   * emit an event.\n   * @param toggle Select or unselect\n   * @param record Record\n   * @internal\n   */\n  onToggleRow(toggle: boolean, record: EntityRecord<object>) {\n    if (this.selection === false) { return; }\n\n    const entity = record.entity;\n    const exclusive = toggle === true && !this.selectMany;\n    this.store.state.update(entity, {selected: toggle}, exclusive);\n    if (toggle === true) {\n      this.entitySelectChange.emit({added: [entity]});\n    }\n    this.lastRecordCheckedKey = this.store.stateView.getKey(record);\n  }\n\n  /**\n   * When an entity is toggled, select or unselect it in the store. On select,\n   * emit an event.\n   * @param toggle Select or unselect\n   * @param record Record\n   * @internal\n   */\n  onShiftToggleRow(toggle: boolean, record: EntityRecord<object>, event: MouseEvent) {\n    if (this.selection === false) { return; }\n\n    if (this.selectMany === false || this.lastRecordCheckedKey === undefined) {\n      this.onToggleRow(toggle, record);\n      return;\n    }\n\n    // This is a workaround mat checkbox wrong behavior\n    // when the shift key is held.\n    // See https://github.com/angular/components/issues/6232\n    const range = window.document.createRange();\n    range.selectNode(event.target as HTMLElement);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(range);\n    event.stopImmediatePropagation();\n\n    const records = this.store.stateView.all();\n    const recordIndex = records.indexOf(record);\n    const lastRecordChecked = this.store.stateView.get(this.lastRecordCheckedKey);\n    const lastRecordIndex = records.indexOf(lastRecordChecked);\n    const indexes = [recordIndex, lastRecordIndex];\n    const selectRecords = records.slice(Math.min(...indexes), Math.max(...indexes) + 1);\n\n    const entities = selectRecords.map((_record: EntityRecord<object>) => _record.entity);\n    this.store.state.updateMany(entities, {selected: toggle});\n    if (toggle === true) {\n      this.entitySelectChange.emit({added: entities});\n    }\n    this.lastRecordCheckedKey = this.store.stateView.getKey(record);\n  }\n\n  /**\n   * Compute the selection state\n   * @returns Whether all, some or no rows are selected\n   * @internal\n   */\n  private computeSelectionState(selectedRecords: EntityRecord<object>[]): EntityTableSelectionState {\n    const states = EntityTableSelectionState;\n    const selectionCount = selectedRecords.length;\n    return selectionCount === 0 ?\n      states.None :\n      (selectionCount === this.store.stateView.count ? states.All : states.Some);\n  }\n\n  /**\n   * Whether a column is sortable\n   * @param column Column\n   * @returns True if a column is sortable\n   * @internal\n   */\n  columnIsSortable(column: EntityTableColumn): boolean {\n    let sortable = column.sort;\n    if (sortable === undefined) {\n      sortable = this.template.sort === undefined ? false : this.template.sort;\n    }\n    return sortable;\n  }\n\n  /**\n   * Whether a row is should be selected based on the underlying entity state\n   * @param record Record\n   * @returns True if a row should be selected\n   * @internal\n   */\n  rowIsSelected(record: EntityRecord<object>): boolean {\n    const state = record.state;\n    return state.selected ? state.selected : false;\n  }\n\n  isImg(value) {\n    if (this.isUrl(value)) {\n      return (\n        ['jpg', 'png', 'gif'].indexOf(value.split('.').pop().toLowerCase()) !== -1\n      );\n    } else {\n      return false;\n    }\n  }\n\n  isUrl(value) {\n    if (typeof value === 'string') {\n      return (\n        value.slice(0, 8) === 'https://' || value.slice(0, 7) === 'http://'\n      );\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Method to access an entity's values\n   * @param record Record\n   * @param column Column\n   * @returns Any value\n   * @internal\n   */\n  getValue(record: EntityRecord<object>, column: EntityTableColumn): any {\n    const entity = record.entity;\n    let value;\n    if (column.valueAccessor !== undefined) {\n      return column.valueAccessor(entity, record);\n    }\n    if (this.template.valueAccessor !== undefined) {\n      return this.template.valueAccessor(entity, column.name, record);\n    }\n    value = this.store.getProperty(entity, column.name);\n\n    if (column.type === 'boolean') {\n      if (value === undefined || value === null || value === '') {\n        value = false;\n      } else if (typeof value !== 'boolean' && value !== undefined) {\n        if (typeof value === 'number'){\n          value = Boolean(value);\n        } else {\n          value = JSON.parse(value.toLowerCase());\n        }\n      }\n      if (!this.isEdition(record)){\n        value = value ? '&#10003;' : ''; // check mark\n      }\n    } else if (column.type === 'list' && value && column.domainValues) {\n      if (column.multiple) {\n        let list_id;\n        typeof value === 'string' ? list_id = value.match(/[\\w.-]+/g).map(Number) : list_id = value;\n        let list_option = [];\n\n        column.domainValues.forEach(option => {\n          if (list_id.includes(option.id)) {\n            if (record.edition) {\n              list_option.push(option.id);\n            } else {\n              list_option.push(option.value);\n            }\n          }\n        });\n\n        this.isEdition(record) ? value = list_id : value = list_option;\n      } else {\n        column.domainValues.forEach(option => {\n          if (typeof value === 'string' && /^\\d+$/.test(value)) {\n            value = parseInt(value);\n          }\n          if (option.value === value || option.id === value) {\n            this.isEdition(record) ? value = option.id : value = option.value;\n          }\n        });\n      }\n    } else if (column.type === 'autocomplete' && value && column.domainValues) {\n      column.domainValues.forEach(option => {\n        if (typeof value === 'string' && /^\\d+$/.test(value)) {\n          value = parseInt(value);\n        }\n        if (option.value === value || option.id === value) {\n          value = option.value;\n        }\n      });\n    }\n    else if (column.type === 'date') {\n      if (this.isEdition(record)) {\n        if (value) {\n          let date = moment(value);\n          value = date.format();\n          this.formGroup.controls[column.name].setValue(value);\n        }\n      } else if (!this.isEdition(record) && value === null) {\n        value = \"\";\n      }\n    }\n\n    if (value === undefined) {\n      value = '';\n    }\n\n    return value;\n  }\n\n  /**\n   * Method to access an entity's validation values\n   * @param column Column\n   * @param validationType string\n   * @returns Any value (false if no validation or not the one concerned)\n   * @internal\n   */\n  getValidationAttributeValue(column: EntityTableColumn, validationType: string): any {\n    if (column.validation !== undefined && column.validation[validationType] !== undefined) {\n      return column.validation[validationType];\n    } else {\n      return false;\n    }\n  }\n\n  public isEdition(record) {\n    return record.entity.edition ? true : false;\n  }\n\n  /**\n   * Return the type of renderer of a column\n   * @param column Column\n   * @returns Renderer type\n   * @internal\n   */\n  getColumnRenderer(column: EntityTableColumn): EntityTableColumnRenderer {\n    if (column.renderer !== undefined) {\n      return column.renderer;\n    }\n    return EntityTableColumnRenderer.Default;\n  }\n\n  /**\n   * Return the table ngClass\n   * @returns ngClass\n   * @internal\n   */\n  getTableClass(): {[key: string]: boolean} {\n    return {\n      'igo-entity-table-with-selection': this.selection\n    };\n  }\n\n  /**\n   * Return a header ngClass\n   * @returns ngClass\n   * @internal\n   */\n  getHeaderClass(): {[key: string]: boolean} {\n    const func = this.template.headerClassFunc;\n    if (func instanceof Function) {\n      return func();\n    }\n    return {};\n  }\n\n  /**\n   * Return a row ngClass\n   * @param record Record\n   * @returns ngClass\n   * @internal\n   */\n  getRowClass(record: EntityRecord<object>): {[key: string]: boolean} {\n    const entity = record.entity;\n    const func = this.template.rowClassFunc;\n    if (func instanceof Function) {\n      return func(entity, record);\n    }\n    return {};\n  }\n\n  /**\n   * Return a row ngClass\n   * @param record Record\n   * @param column Column\n   * @returns ngClass\n   * @internal\n   */\n  getCellClass(record: EntityRecord<object>, column: EntityTableColumn): {[key: string]: boolean} {\n    const entity = record.entity;\n    const cls = {};\n\n    const tableFunc = this.template.cellClassFunc;\n    if (tableFunc instanceof Function) {\n      Object.assign(cls, tableFunc(entity, column, record));\n    }\n\n    const columnFunc = column.cellClassFunc;\n    if (columnFunc instanceof Function) {\n      Object.assign(cls, columnFunc(entity, record));\n    }\n\n    return cls;\n  }\n\n  /**\n   * When a button is clicked\n   * @param func Function\n   * @param record Record\n   * @internal\n   */\n  onButtonClick(\n    clickFunc: (entity: object, record?: EntityRecord<object>) => void,\n    record: EntityRecord<object>\n  ) {\n    this.enableEdit(record);\n    if (typeof clickFunc === 'function') {\n      clickFunc(record.entity, record);\n    }\n  }\n\n  /**\n   * Retrieve column name without his \"properties\" tag (useful for edition workspace properties)\n   */\n  public getColumnKeyWithoutPropertiesTag(column: string) {\n    if (column.includes('properties.')) {\n      return column.split('.')[1];\n    }\n    return column;\n  }\n}\n","export enum ActionbarMode {\n  Dock = 'dock',\n  Overlay = 'overlay',\n  Context = 'context'\n}\n","<mat-list-item *ngIf=\"!action.checkbox\"\n  matTooltipClass=\"actionbarItemTooltip\"\n  matTooltipShowDelay=\"500\"\n  [matTooltip]=\"withTooltip ? ((tooltip$ | async) || title | translate) : ''\"\n  [ngClass]=\"ngClass$ | async\"\n  (click)=\"onClick()\">\n  <button *ngIf=\"withIcon\"\n    mat-list-avatar\n    mat-icon-button\n    [color]=\"color\"\n    [disabled]=\"disabled$ | async\">\n    <mat-icon *ngIf=\"withIcon\" svgIcon=\"{{icon$ | async}}\"></mat-icon>\n  </button>\n  <h4 *ngIf=\"withTitle\" matLine>{{title | translate}}</h4>\n</mat-list-item>\n\n<mat-list-item class=\"item-checkbox\" *ngIf=\"action.checkbox\"\n  matTooltipClass=\"actionbarItemTooltip\"\n  matTooltipShowDelay=\"500\"\n  [matTooltip]=\"withTooltip ? ((tooltip$ | async) || title | translate) : ''\"\n  [ngClass]=\"ngClass$ | async\">\n  <mat-checkbox *ngIf=\"withTitle\"\n      (change)=\"action.handler()\"\n      [checked]=\"checkCondition$ | async\">\n      {{title | translate}}\n  </mat-checkbox>\n</mat-list-item>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription, isObservable } from 'rxjs';\n\nimport { Action } from '../shared/action.interfaces';\n\n /**\n  * An action button\n  */\n@Component({\n  selector: 'igo-actionbar-item',\n  templateUrl: './actionbar-item.component.html',\n  styleUrls: ['./actionbar-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionbarItemComponent implements OnInit, OnDestroy {\n\n  readonly disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly checkCondition$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n\n  readonly icon$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly tooltip$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly noDisplay$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly ngClass$: BehaviorSubject<{[key: string]: boolean}> = new BehaviorSubject({});\n\n  private ngClass$$: Subscription;\n\n  private disabled$$: Subscription;\n\n  private availability$$: Subscription;\n\n  private icon$$: Subscription;\n\n  private checkCondition$$: Subscription;\n\n  private tooltip$$: Subscription;\n\n  private noDisplay$$: Subscription;\n\n  private display$$: Subscription;\n\n  /**\n   * Action\n   */\n  @Input() action: Action;\n\n  /**\n   * Color\n   */\n  @Input() color = 'default';\n\n  /**\n   * Whether the action title is displayed\n   */\n  @Input() withTitle = true;\n\n  /**\n   * Whether the action icon is displayed\n   */\n  @Input() withIcon = true;\n\n  /**\n   * Whether a tooltip should be shown\n   */\n  @Input() withTooltip = true;\n\n  /**\n   * Whether the action is disabled\n   */\n  @Input()\n  set disabled(value: boolean) { this.disabled$.next(value); }\n  get disabled(): boolean { return this.disabled$.value; }\n\n  /**\n   * Whether the action is display or not\n   */\n  @Input()\n  set noDisplay(value: boolean) { this.noDisplay$.next(value); }\n  get noDisplay(): boolean { return this.noDisplay$.value; }\n\n  /**\n   * Event emitted when the action button is clicked\n   */\n  @Output() trigger: EventEmitter<Action> = new EventEmitter();\n\n  /**\n   * @internal\n   */\n  get title(): string { return this.action.title; }\n\n  constructor() {}\n\n  ngOnInit() {\n    const args = this.action.args || [];\n\n    if (this.action.ngClass !== undefined) {\n      this.ngClass$$ = this.action.ngClass(...args)\n        .subscribe((ngClass: {[key: string]: boolean}) => this.updateNgClass(ngClass));\n    }\n\n    if (isObservable(this.action.icon)) {\n      this.icon$$ = this.action.icon\n        .subscribe((icon: string) => this.updateIcon(icon));\n    } else {\n      this.updateIcon(this.action.icon);\n    }\n\n    if (isObservable(this.action.checkCondition)) {\n      this.checkCondition$$ = this.action.checkCondition\n        .subscribe((checkCondition: boolean) => this.updateCheckCondition(checkCondition));\n    } else {\n      this.updateCheckCondition(this.action.checkCondition);\n    }\n\n    if (isObservable(this.action.tooltip)) {\n      this.tooltip$$ = this.action.tooltip\n        .subscribe((tooltip: string) => this.updateTooltip(tooltip));\n    } else {\n      this.updateTooltip(this.action.tooltip);\n    }\n\n    if (this.action.availability !== undefined) {\n      this.availability$$ = this.action.availability(...args)\n        .subscribe((available: boolean) => this.disabled = !available);\n    }\n\n    this.disabled$$ = this.disabled$\n      .subscribe((disabled: boolean) => this.updateNgClass({'igo-actionbar-item-disabled': disabled}));\n\n    if (this.action.display !== undefined) {\n      this.display$$ = this.action.display(...args)\n        .subscribe((display: boolean) => this.noDisplay = !display);\n    }\n\n    this.noDisplay$$ = this.noDisplay$\n      .subscribe((noDisplay: boolean) => this.updateNgClass({'igo-actionbar-item-no-display': noDisplay}));\n  }\n\n  ngOnDestroy() {\n    if (this.ngClass$$ !== undefined) {\n      this.ngClass$$.unsubscribe();\n      this.ngClass$$ = undefined;\n    }\n\n    if (this.availability$$ !== undefined) {\n      this.availability$$.unsubscribe();\n      this.availability$$ = undefined;\n    }\n\n    if (this.display$$ !== undefined) {\n      this.display$$.unsubscribe();\n      this.display$$ = undefined;\n    }\n\n    if (this.checkCondition$$ !== undefined) {\n      this.checkCondition$$.unsubscribe();\n      this.checkCondition$$ = undefined;\n    }\n\n    if (this.icon$$ !== undefined) {\n      this.icon$$.unsubscribe();\n      this.icon$$ = undefined;\n    }\n\n    if (this.tooltip$$ !== undefined) {\n      this.tooltip$$.unsubscribe();\n      this.tooltip$$ = undefined;\n    }\n\n    this.disabled$$.unsubscribe();\n    this.noDisplay$$.unsubscribe();\n  }\n\n  /**\n   * When the action button is clicked, emit the 'trigger' event but don't\n   * invoke the action handler. This is handled by the parent component.\n   * @internal\n   */\n  onClick() {\n    if (this.disabled === true) {\n      return;\n    }\n    this.trigger.emit(this.action);\n  }\n\n  private updateNgClass(ngClass: {[key: string]: boolean}) {\n    this.ngClass$.next(Object.assign({}, this.ngClass$.value, ngClass));\n  }\n\n  private updateTooltip(tooltip: string) {\n    this.tooltip$.next(tooltip);\n  }\n\n  private updateCheckCondition(checkCondition: boolean) {\n    this.checkCondition$.next(checkCondition);\n  }\n\n  private updateIcon(icon: string) {\n    this.icon$.next(icon);\n  }\n}\n","<mat-list *ngIf=\"mode === actionbarMode.Dock\">\n\n    <div *ngIf=\"heightCondition && positionConditionTop && isDesktop\"\n      id=\"topChevron\">\n      <button\n        mat-icon-button\n        tooltip-position=\"below\"\n        matTooltipShowDelay=\"500\"\n        [matTooltip]=\"'igo.common.actionbar.scrollUp' | translate\"\n        (click)=\"scrollUp()\">\n        <mat-icon svgIcon=\"chevron-up\"></mat-icon>\n      </button>\n    </div>\n\n    <igo-actionbar-item\n      *ngIf=\"withToggleButton\"\n      color=\"accent\"\n      [withTitle]=\"false\"\n      [withIcon]=\"true\"\n      [color]=\"color\"\n      [disabled]=\"store.view.empty\"\n      [action]=\"toggleCollapseAction\"\n      (trigger)=\"onTriggerAction(toggleCollapseAction)\">\n    </igo-actionbar-item>\n\n    <ng-template #buttonContent *ngIf=\"!collapsed\" ngFor let-action [ngForOf]=\"store.view.all$() | async\">\n      <igo-actionbar-item\n        color=\"accent\"\n        [withTitle]=\"withTitle\"\n        [withIcon]=\"withIcon\"\n        [withTooltip]=\"withTooltip\"\n        [color]=\"color\"\n        [disabled]=\"store.state.get(action).disabled\"\n        [action]=\"action\"\n        (trigger)=\"onTriggerAction(action)\">\n      </igo-actionbar-item>\n    </ng-template>\n\n    <div *ngIf=\"heightCondition && positionConditionLow && isDesktop\"\n      id=\"lowChevron\">\n      <button\n        mat-icon-button\n        tooltip-position=\"below\"\n        matTooltipShowDelay=\"500\"\n        [matTooltip]=\"'igo.common.actionbar.scrollDown' | translate\"\n        (click)=\"scrollDown()\">\n        <mat-icon svgIcon=\"chevron-down\"></mat-icon>\n      </button>\n    </div>\n\n</mat-list>\n\n<div *ngIf=\"mode === actionbarMode.Overlay\">\n  <button class=\"buttonOverlay\"\n    mat-icon-button\n    tooltip-position=\"below\"\n    matTooltipShowDelay=\"500\"\n    [matTooltip]=\"'igo.common.actionbar.icon' | translate\"\n    [matMenuTriggerFor]=\"actionbarMenu\"\n    [disabled]=\"store.view.empty\"\n    [color]=\"iconColor\">\n    <mat-icon [svgIcon]=\"icon\"></mat-icon>\n  </button>\n\n  <mat-menu\n    #actionbarMenu=\"matMenu\"\n    class=\"igo-compact-menu igo-no-min-width-menu\"\n    overlapTrigger=\"true\"\n    [xPosition]=\"xPosition\"\n    [yPosition]=\"yPosition\"\n    [class]=\"overlayClass\">\n\n    <mat-list>\n      <ng-template ngFor let-action [ngForOf]=\"store.view.all$() | async\">\n        <igo-actionbar-item\n          color=\"accent\"\n          [withTitle]=\"withTitle\"\n          [withIcon]=\"withIcon\"\n          [color]=\"color\"\n          [action]=\"action\"\n          (trigger)=\"onTriggerAction(action)\">\n        </igo-actionbar-item>\n      </ng-template>\n    </mat-list>\n  </mat-menu>\n</div>\n<mat-card *ngIf=\"mode === actionbarMode.Context\" class=\"context-menu-card mat-elevation-z4\">\n  <mat-list>\n      <ng-template ngFor let-action [ngForOf]=\"store.view.all$() | async\">\n          <igo-actionbar-item\n            color=\"accent\"\n            [withTitle]=\"withTitle\"\n            [withIcon]=\"withIcon\"\n            [color]=\"color\"\n            [action]=\"action\"\n            (trigger)=\"onTriggerAction(action)\">\n          </igo-actionbar-item>\n        <br/>\n      </ng-template>\n  </mat-list>\n</mat-card>\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ElementRef\n} from '@angular/core';\n\nimport { MediaService, Media } from '@igo2/core';\nimport { EntityStoreWatcher } from '../../entity';\nimport { Action } from '../shared/action.interfaces';\nimport { ActionbarMode } from '../shared/action.enums';\nimport { ActionStore } from '../shared/store';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * A list of action buttons.\n * This component can be displayed in one of two way: 'dock' or 'overlay'\n */\n@Component({\n  selector: 'igo-actionbar',\n  templateUrl: './actionbar.component.html',\n  styleUrls: ['./actionbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionbarComponent implements OnDestroy, OnChanges {\n\n  /**\n   * Reference to the ActionbarMode enum for use in the template\n   * @internal\n   */\n  actionbarMode = ActionbarMode;\n\n  /**\n   * Whether the actionbar is collapsed (Dock mode)\n   * @internal\n   */\n  collapsed = false;\n\n  /**\n   * Toggle collapse action (Dock)\n   * @internal\n   */\n  toggleCollapseAction = {\n    id: 'actionbar_toggle',\n    icon: 'dots-vertical',\n    handler: () => {\n      this.collapsed = !this.collapsed;\n    }\n  };\n\n  /**\n   * Action store watcher\n   * @internal\n   */\n  private watcher: EntityStoreWatcher<Action>;\n\n  /**\n   * Height Condition for scroll button\n   */\n  heightCondition$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Position Condition for top scroll button\n   */\n  positionConditionTop$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  /**\n   * Position Condition for low scroll button\n   */\n  positionConditionLow$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  /**\n   * Action store\n   */\n  @Input() store: ActionStore;\n\n  /**\n   * Actionbar mode\n   */\n  @Input() mode: ActionbarMode = ActionbarMode.Dock;\n\n  /**\n   * Whether a toggle button should be displayed (Dock mode)\n   */\n  @Input() withToggleButton = false;\n\n  /**\n   * Whether a the actionbar should display buttons horizontally\n   */\n  @Input() horizontal = false;\n\n  /**\n   * Color\n   */\n  @Input() color = 'default';\n\n  /**\n   * Color of the button if action mode === overlay\n   */\n  @Input() iconColor = 'default';\n\n  /**\n   * Whether action titles are displayed\n   */\n  @Input() withTitle = true;\n\n  /**\n   * Whether action tooltips are displayed\n   */\n  @Input() withTooltip = true;\n\n  /**\n   * Whether action titles are displayed (condition for scroll button)\n   */\n  @Input() scrollActive = true;\n\n  /**\n   * Whether action icons are displayed\n   */\n  @Input() withIcon = true;\n\n  /**\n   * Which icon want to be shown\n   */\n  @Input() icon = 'dots-horizontal';\n\n  /**\n   * Overlay X position\n   */\n  @Input() xPosition = 'before';\n\n  /**\n   * Overlay Y position\n   */\n  @Input() yPosition = 'above';\n\n  /**\n   * Class to add to the actionbar overlay\n   */\n  @Input()\n  set overlayClass(value: string) {\n    this._overlayClass = value;\n  }\n  get overlayClass(): string {\n    return [this._overlayClass, 'igo-actionbar-overlay'].join(' ');\n  }\n  private _overlayClass = '';\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.with-title')\n  get withTitleClass() {\n    return this.withTitle;\n  }\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.with-icon')\n  get withIconClass() {\n    return this.withIcon;\n  }\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.horizontal')\n  get horizontalClass() {\n    return this.horizontal;\n  }\n\n  get heightCondition(): boolean {\n    const el = this.elRef.nativeElement;\n    if (this.scrollActive === false) {\n      if (el.clientHeight < el.scrollHeight) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  get positionConditionTop(): boolean {\n    if (this.elRef.nativeElement.scrollTop === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  get positionConditionLow(): boolean {\n    const el = this.elRef.nativeElement;\n    if (el.scrollTop >= (el.scrollHeight - el.clientHeight)) {\n      return false;\n    }\n    return true;\n  }\n\n  get isDesktop(): boolean {\n    return this.mediaService.getMedia() === Media.Desktop;\n  }\n\n  constructor(\n    public overlay: Overlay,\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    public mediaService: MediaService) {}\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const store = changes.store;\n    if (store && store.currentValue !== store.previousValue) {\n      if (this.watcher !== undefined) {\n        this.watcher.destroy();\n      }\n      this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this.watcher.destroy();\n  }\n\n  /**\n   * Invoke the action handler\n   * @internal\n   */\n  onTriggerAction(action: Action) {\n    const args = action.args || [];\n    action.handler(...args);\n  }\n\n  scrollDown() {\n    this.elRef.nativeElement.scrollBy(0, 52);\n  }\n\n  scrollUp() {\n    this.elRef.nativeElement.scrollBy(0, -52);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { ActionbarComponent } from './actionbar.component';\nimport { ActionbarItemComponent } from './actionbar-item.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoLanguageModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatListModule,\n    MatCardModule,\n    MatCheckboxModule\n  ],\n  exports: [ActionbarComponent],\n  declarations: [ActionbarComponent, ActionbarItemComponent]\n})\nexport class IgoActionbarModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoActionbarModule } from './actionbar/actionbar.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoActionbarModule\n  ],\n  exports: [\n    IgoActionbarModule\n  ],\n  declarations: [],\n  providers: []\n})\nexport class IgoActionModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'igo-backdrop',\n  templateUrl: './backdrop.component.html',\n  styleUrls: ['./backdrop.component.scss']\n})\nexport class BackdropComponent {\n  @Input()\n  get shown(): boolean {\n    return this._shown;\n  }\n  set shown(value: boolean) {\n    this._shown = value;\n  }\n  private _shown: boolean;\n\n  constructor() {}\n}\n","<div [ngClass]=\"{'igo-backdrop-shown': shown}\"></div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BackdropComponent } from './backdrop.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BackdropComponent],\n  exports: [BackdropComponent]\n})\nexport class IgoBackdropModule {\n  static forRoot(): ModuleWithProviders<IgoBackdropModule> {\n    return {\n      ngModule: IgoBackdropModule,\n      providers: []\n    };\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n\n/**\n * This directive allow to add an icon inside a matBadge.\n * A value must be set into the matBadge directive ex: matBadge=\"icon\".\n * The badge content will be overrided by this current directive.\n */\n@Directive({\n  selector: '[igoMatBadgeIcon]'\n})\nexport class IgoBadgeIconDirective implements OnInit {\n  @Input()\n  set igoMatBadgeIcon(value: string) {\n    this.matIconRegistry.getNamedSvgIcon(value).subscribe((svgObj) => {\n      this.svg = svgObj;\n      this.updateSvg();\n    });\n  }\n  private svg: SVGElement;\n\n  @Input()\n  set matBadgeHidden(value: boolean) {\n    this.hidden = value;\n    this.updateHidden();\n  }\n  private hidden = false;\n\n  @Input()\n  set matBadgeDisabled(value: boolean) {\n    this.disabled = value;\n    this.updateDisabled();\n  }\n  private disabled = false;\n\n  @Input()\n  set igoMatBadgeInverseColor(value: boolean) {\n    this.inverseColor = value;\n    this.updateColor();\n  }\n  private inverseColor = false;\n\n  @Input()\n  set igoMatBadgeInheritColor(value: boolean) {\n    this.inheritColor = value;\n    this.updateColor();\n  }\n  private inheritColor = false;\n\n  get badge() {\n    return this.el.nativeElement.querySelector('.mat-badge-content');\n  }\n\n  private originalColor: string;\n\n  constructor(\n    private el: ElementRef,\n    private matIconRegistry: MatIconRegistry\n  ) {}\n\n  ngOnInit() {\n    this.badge.style.alignItems = 'center';\n    this.badge.style.justifyContent = 'center';\n\n    this.updateHidden();\n    this.updateColor();\n    this.updateSvg();\n  }\n\n  private updateSvg() {\n    if (!this.badge) {\n      return;\n    }\n    this.badge.innerHTML = '';\n    if (this.svg) {\n      this.badge.appendChild(this.svg);\n    }\n  }\n  private updateColor() {\n    if (!this.badge) {\n      return;\n    }\n\n    if (this.inheritColor) {\n      if (this.inverseColor) {\n        this.badge.style.color = 'currentColor';\n        this.badge.style.background = 'none';\n      } else {\n        this.badge.style.color = '';\n        this.badge.style.background = 'currentColor';\n      }\n    } else {\n      if (this.inverseColor) {\n        this.badge.style.color = window\n          .getComputedStyle(this.badge, null)\n          .getPropertyValue('background-color');\n        this.badge.style.background = 'none';\n      } else {\n        this.badge.style.color = '';\n        this.badge.style.background = '';\n      }\n    }\n    this.originalColor = this.badge.style.color;\n    this.updateDisabled();\n  }\n\n  private updateHidden() {\n    if (!this.badge) {\n      return;\n    }\n    this.badge.style.display = this.hidden ? 'none' : 'flex';\n  }\n\n  private updateDisabled() {\n    if (!this.badge || !this.inverseColor) {\n      return;\n    }\n    if (this.disabled) {\n      this.originalColor = this.badge.style.color;\n      this.badge.style.color = '#b9b9b9';\n    } else {\n      this.badge.style.color = this.originalColor;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { IgoBadgeIconDirective } from './badge-icon.directive';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [MatBadgeModule, MatIconModule],\n  declarations: [IgoBadgeIconDirective],\n  exports: [MatBadgeModule, IgoBadgeIconDirective]\n})\nexport class IgoMatBadgeIconModule {\n  static forRoot(): ModuleWithProviders<IgoMatBadgeIconModule> {\n    return {\n      ngModule: IgoMatBadgeIconModule,\n      providers: []\n    };\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: '[igoClickout]'\n})\nexport class ClickoutDirective {\n  @Output() clickout = new EventEmitter<MouseEvent>();\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  handleMouseClick(event: MouseEvent, target: HTMLElement) {\n    if (!target) {\n      return;\n    }\n\n    if (!this.el.nativeElement.contains(target)) {\n      this.clickout.emit(event);\n    }\n  }\n\n  constructor(private el: ElementRef) {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ClickoutDirective } from './clickout.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [ClickoutDirective],\n  exports: [ClickoutDirective]\n})\nexport class IgoClickoutModule {\n  static forRoot(): ModuleWithProviders<IgoClickoutModule> {\n    return {\n      ngModule: IgoClickoutModule,\n      providers: []\n    };\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'clone'\n})\nexport class ClonePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value === undefined) {\n      return value;\n    }\n\n    if (value instanceof Array) {\n      return value.map(obj => Object.assign(Object.create(obj), obj));\n    } else {\n      return Object.assign(Object.create(value), value);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ClonePipe } from './clone.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [ClonePipe],\n  exports: [ClonePipe]\n})\nexport class IgoCloneModule {\n  static forRoot(): ModuleWithProviders<IgoCloneModule> {\n    return {\n      ngModule: IgoCloneModule,\n      providers: []\n    };\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\n\n@Directive({\n  selector: '[igoCollapse]'\n})\nexport class CollapseDirective {\n  @Input()\n  get target() {\n    return this._target;\n  }\n  set target(value: Element) {\n    this._target = value;\n  }\n  private _target: Element;\n\n  @Input()\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n  set collapsed(collapsed: boolean) {\n    collapsed ? this.collapseTarget() : this.expandTarget();\n    this._collapsed = collapsed;\n    this.toggle.emit(collapsed);\n  }\n  private _collapsed = false;\n\n  @Output() toggle: EventEmitter<boolean> = new EventEmitter();\n\n  @HostListener('click')\n  click() {\n    this.collapsed = !this.collapsed;\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  private collapseTarget() {\n    this.renderer.addClass(this.target, 'igo-collapsed');\n    this.renderer.addClass(this.el.nativeElement, 'collapsed');\n  }\n\n  private expandTarget() {\n    this.renderer.removeClass(this.target, 'igo-collapsed');\n    this.renderer.removeClass(this.el.nativeElement, 'collapsed');\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'igo-collapsible',\n  templateUrl: './collapsible.component.html',\n  styleUrls: ['./collapsible.component.scss']\n})\nexport class CollapsibleComponent {\n  @Input()\n  get title() {\n    return this._title;\n  }\n  set title(value: string) {\n    this._title = value;\n  }\n  private _title = '';\n\n  @Input()\n  get collapsed() {\n    return this._collapsed;\n  }\n  set collapsed(value: boolean) {\n    this._collapsed = value;\n    this.toggle.emit(value);\n  }\n  private _collapsed = false;\n\n  @Output() toggle: EventEmitter<boolean> = new EventEmitter();\n}\n","<mat-list-item>\n  <mat-icon\n    svgIcon=\"chevron-up\" \n    class=\"igo-chevron\"\n    mat-list-avatar\n    igoCollapse\n    [target]=\"content\"\n    [collapsed]=\"collapsed\"\n    (toggle)=\"collapsed = $event\">\n  </mat-icon>\n  <h4 matLine>{{title}}</h4>\n</mat-list-item>\n\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { CollapseDirective } from './collapse.directive';\nimport { CollapsibleComponent } from './collapsible.component';\n\n@NgModule({\n  imports: [MatIconModule, MatListModule],\n  declarations: [CollapsibleComponent, CollapseDirective],\n  exports: [CollapsibleComponent, CollapseDirective]\n})\nexport class IgoCollapsibleModule {\n  static forRoot(): ModuleWithProviders<IgoCollapsibleModule> {\n    return {\n      ngModule: IgoCollapsibleModule,\n      providers: []\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'igo-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent {\n  public confirmMessage: string;\n\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>) {}\n}\n","<h2 mat-dialog-title class=\"mat-typography\">{{'igo.common.confirmDialog.title' | translate}}</h2>\n<div mat-dialog-content class=\"mat-typography\">{{confirmMessage}}</div>\n<div mat-dialog-actions>\n  <button mat-button color=\"primary\" (click)=\"dialogRef.close(true)\">{{'igo.common.confirmDialog.confirmBtn' | translate}}</button>\n  <button mat-button (click)=\"dialogRef.close(false)\">{{'igo.common.confirmDialog.cancelBtn' | translate}}</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Observable } from 'rxjs';\n\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\n\n@Injectable()\nexport class ConfirmDialogService {\n  constructor(private dialog: MatDialog) {}\n\n  public open(message: string): Observable<any> {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      disableClose: false\n    });\n    dialogRef.componentInstance.confirmMessage = message;\n\n    return dialogRef.afterClosed();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\nimport { ConfirmDialogService } from './confirm-dialog.service';\n\n@NgModule({\n  imports: [MatButtonModule, MatDialogModule, IgoLanguageModule],\n  declarations: [ConfirmDialogComponent],\n  exports: [ConfirmDialogComponent],\n  providers: [ConfirmDialogService]\n})\nexport class IgoConfirmDialogModule {\n  static forRoot(): ModuleWithProviders<IgoConfirmDialogModule> {\n    return {\n      ngModule: IgoConfirmDialogModule,\n      providers: []\n    };\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport type { TemplateRef } from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\n\n@Directive({\n  selector: '[igoContextMenu]'\n})\nexport class ContextMenuDirective {\n  private overlayRef: OverlayRef | null;\n  private sub: Subscription;\n\n  @Input('igoContextMenu') menuContext: TemplateRef<any>;\n  @Output() menuPosition = new EventEmitter<{ x: number; y: number }>();\n\n  constructor(\n    public overlay: Overlay,\n    public viewContainerRef: ViewContainerRef,\n    private elementRef: ElementRef\n  ) {}\n\n  @HostListener('contextmenu', ['$event'])\n  public onContextMenu(e: MouseEvent): void {\n    const {x, y} = e;\n    this.close();\n    e.preventDefault();\n    this.menuPosition.emit({ x, y });\n    this.overlayRef = null;\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo({ x, y })\n      .withPositions([\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        }\n      ]);\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.close()\n    });\n    this.overlayRef.attach(\n      new TemplatePortal(this.menuContext, this.viewContainerRef, {\n        $implicit: undefined\n      })\n    );\n\n    this.sub = fromEvent<MouseEvent>(document, 'click')\n      .pipe(\n        filter(event => {\n          const clickTarget = event.target as HTMLElement;\n          this.close();\n          return (\n            !!this.overlayRef &&\n            !this.overlayRef.overlayElement.contains(clickTarget)\n          );\n        }),\n        take(1)\n      )\n      .subscribe(() => this.close());\n\n    this.sub = fromEvent<MouseEvent>(document, 'contextmenu')\n      .pipe(\n        filter(event => {\n          const clickTarget = event.target as HTMLElement;\n          if (\n            clickTarget &&\n            !this.elementRef.nativeElement.contains(clickTarget) &&\n            !this.overlayRef.overlayElement.contains(clickTarget)\n          ) {\n            return true;\n          } else {\n            event.preventDefault();\n          }\n        }),\n        take(1)\n      )\n      .subscribe(() => this.close());\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = null;\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ContextMenuDirective } from './context-menu.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [ContextMenuDirective],\n  exports: [ContextMenuDirective]\n})\nexport class IgoContextMenuModule {\n  static forRoot(): ModuleWithProviders<IgoContextMenuModule> {\n    return {\n      ngModule: IgoContextMenuModule,\n      providers: []\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'igo-custom-html',\n  templateUrl: './custom-html.component.html',\n  styleUrls: ['./custom-html.component.scss']\n})\nexport class CustomHtmlComponent {\n  @Input()\n  get html(): string {\n    return this._html;\n  }\n  set html(value: string) {\n    this._html = value;\n  }\n  private _html = '';\n\n  constructor() {}\n}\n","<div class=\"custom-html\" [innerHTML]=\"html | sanitizeHtml\"></div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { CustomHtmlComponent } from './custom-html.component';\nimport { SanitizeHtmlPipe } from './custom-html.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatButtonModule,\n    IgoLanguageModule\n  ],\n  exports: [SanitizeHtmlPipe, CustomHtmlComponent],\n  declarations: [SanitizeHtmlPipe, CustomHtmlComponent]\n})\nexport class IgoCustomHtmlModule {\n  static forRoot(): ModuleWithProviders<IgoCustomHtmlModule> {\n    return {\n      ngModule: IgoCustomHtmlModule\n    };\n  }\n}\n","import {\r\n  Directive,\r\n  HostListener,\r\n  HostBinding,\r\n  EventEmitter,\r\n  Output,\r\n  Input\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoDragAndDrop]'\r\n})\r\nexport class DragAndDropDirective {\r\n\r\n  @Input() allowedExtensions: Array<string> = [];\r\n\r\n  @Output() protected filesDropped: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  @Output() protected filesInvalid: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  @HostBinding('style.background') private background = 'inherit';\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  public onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = '#999';\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  public onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = 'inherit';\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    if (evt.alreadyFired) {\r\n      return;\r\n    }\r\n    evt.alreadyFired = true;\r\n\r\n    this.background = 'inherit';\r\n    const filesObj = this.validExtensions(evt);\r\n    if (filesObj.valid.length) {\r\n      this.filesDropped.emit(filesObj.valid);\r\n    }\r\n    if (filesObj.invalid.length) {\r\n      this.filesInvalid.emit(filesObj.invalid);\r\n    }\r\n  }\r\n\r\n  private validExtensions(evt) {\r\n    const files = evt.dataTransfer.files;\r\n    const filesObj = {\r\n      valid: [],\r\n      invalid: []\r\n    };\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const ext = file.name.split('.')[file.name.split('.').length - 1];\r\n        if (\r\n          this.allowedExtensions.length === 0 ||\r\n          (\r\n            this.allowedExtensions.lastIndexOf(ext) !== -1 &&\r\n            file.size !== 0\r\n          )\r\n        ) {\r\n          filesObj.valid.push(file);\r\n        } else {\r\n          filesObj.invalid.push(file);\r\n        }\r\n      }\r\n    }\r\n\r\n    return filesObj;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DragAndDropDirective } from './drag-drop.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [DragAndDropDirective],\n  exports: [DragAndDropDirective]\n})\nexport class IgoDrapDropModule {\n  static forRoot(): ModuleWithProviders<IgoDrapDropModule> {\n    return {\n      ngModule: IgoDrapDropModule,\n      providers: []\n    };\n  }\n}\n","import {\n  ComponentFactory,\n  ComponentRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * This class is used in the DynamicComponentOutlet component. It holds\n * a reference to a component factory and can render that component\n * in a target element on demand. It's also possible to set inputs\n * and to subscribe to outputs.\n */\nexport class DynamicComponent<C> {\n\n  /**\n   * Component reference\n   */\n  private componentRef: ComponentRef<C>;\n\n  /**\n   * Subscriptions to the component's outputs. Those need\n   * to be unsubscribed when the component is destroyed.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Component target element\n   */\n  private target: ViewContainerRef;\n\n  /**\n   * Component inputs\n   */\n  private inputs: {[key: string]: any} = {};\n\n  /**\n   * Subscriptions to the component's async inputs\n   */\n  private inputs$$: {[key: string]: Subscription} = {};\n\n  /**\n   * Subscribers to the component's outputs\n   */\n  private subscribers: {[key: string]: (event: any) => void} = {};\n\n  constructor(private componentFactory: ComponentFactory<C>) {}\n\n  /**\n   * Render the component to a target element.\n   * Set it's inputs and subscribe to it's outputs.\n   * @param target Target element\n   */\n  setTarget(target: ViewContainerRef) {\n    this.target = target;\n    this.componentRef = target.createComponent(this.componentFactory);\n    this.updateInputs(this.inputs);\n    this.updateSubscribers(this.subscribers);\n  }\n\n  /**\n   * Destroy this component. That means, removing from it's target\n   * element and unsubscribing to it's outputs.\n   */\n  destroy() {\n    if (this.target !== undefined) {\n      this.target.clear();\n    }\n    if (this.componentRef !== undefined) {\n      this.componentRef.destroy();\n      this.componentRef = undefined;\n    }\n    this.unobserveAllInputs();\n    this.unsubscribeAll();\n  }\n\n  /**\n   * Update the component inputs. This is an update so any\n   * key not defined won't be overwritten.\n   */\n  updateInputs(inputs: {[key: string]: any}) {\n    this.inputs = inputs;\n    if (this.componentRef === undefined) {\n      return;\n    }\n\n    const instance = this.componentRef.instance;\n    const allowedInputs = this.componentFactory.inputs;\n    allowedInputs.forEach((value: {propName: string; templateName: string; }) => {\n      const key = value.propName;\n\n      this.unobserveInput(key);\n\n      const inputValue = inputs[key];\n      if (inputs.hasOwnProperty(key)) {\n        if (inputValue instanceof Observable) {\n          this.observeInput(key, inputValue);\n        } else {\n          this.setInputValue(instance, key, inputValue);\n        }\n      }\n    });\n\n    if (typeof (instance as any).onUpdateInputs === 'function') {\n      (instance as any).onUpdateInputs();\n    }\n  }\n\n  /**\n   * Set an instance's input value\n   * @param instance Component instance\n   * @param key Input key\n   * @param value Input value\n   */\n  private setInputValue(instance: C, key: string, value: any) {\n    const currentValue = instance[key];\n    if (value === currentValue) {\n      return;\n    }\n\n    const prototype = Object.getPrototypeOf(instance);\n    const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\n    if (descriptor !== undefined && descriptor.set !== undefined) {\n      descriptor.set.call(instance, value);\n    } else {\n      instance[key] = value;\n    }\n  }\n\n  /**\n   * Update the component subscribers. This is an update so any\n   * key not defined won't be overwritten.\n   */\n  updateSubscribers(subscribers: {[key: string]: (event: any) => void}) {\n    this.subscribers = subscribers;\n    if (this.componentRef === undefined) {\n      return;\n    }\n\n    const instance = this.componentRef.instance;\n    const allowedSubscribers = this.componentFactory.outputs;\n    allowedSubscribers.forEach((value: {propName: string; templateName: string; }) => {\n      const key = value.propName;\n      if (subscribers.hasOwnProperty(key)) {\n        const emitter = instance[key];\n        const subscriber = subscribers[key];\n        if (Array.isArray(subscriber)) {\n          subscriber.forEach((_subscriber) => {\n            this.subscriptions.push(emitter.subscribe(_subscriber));\n          });\n        } else {\n          this.subscriptions.push(emitter.subscribe(subscriber));\n        }\n      }\n    });\n  }\n\n  /**\n   * Subscribe to an observable input and update the component's input value\n   * accordingly\n   * @param key Input key\n   * @param observable Observable\n   */\n  private observeInput(key: string, observable: Observable<any>) {\n    this.inputs$$[key] = observable.subscribe((value: any) => {\n      const instance = this.componentRef.instance;\n      this.setInputValue(instance, key, value);\n\n      if (typeof (instance as any).onUpdateInputs === 'function') {\n        (instance as any).onUpdateInputs();\n      }\n    });\n  }\n\n  /**\n   * Unsubscribe to an observable input\n   * @param key Input key\n   */\n  private unobserveInput(key: string) {\n    if (this.inputs$$[key] !== undefined) {\n      this.inputs$$[key].unsubscribe();\n      this.inputs$$[key] = undefined;\n    }\n  }\n\n  /**\n   * Unsubscribe to all outputs.\n   */\n  private unobserveAllInputs() {\n    Object.values(this.inputs$$).forEach((s: Subscription | undefined) => {\n      if (s !== undefined) {\n        s.unsubscribe();\n      }\n    });\n    this.inputs$$ = {};\n  }\n\n  /**\n   * Unsubscribe to all outputs.\n   */\n  private unsubscribeAll() {\n    this.subscriptions.forEach((s: Subscription) => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n}\n","import {\n  ComponentFactoryResolver,\n  Injectable\n} from '@angular/core';\n\nimport { DynamicComponent } from './dynamic-component';\n\n/**\n * Service to creates DynamicComponent instances from base component classes\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicComponentService {\n\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  /**\n   * Creates a DynamicComponent instance from a base component class\n   * @param componentCls The component class\n   * @returns DynamicComponent instance\n   */\n  create(componentCls: any): DynamicComponent<any> {\n    const factory = this.resolver.resolveComponentFactory(componentCls as any);\n    return new DynamicComponent<typeof componentCls>(factory);\n  }\n}\n","import {\n  Input,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  Component,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewContainerRef,\n  ViewChild\n} from '@angular/core';\n\nimport { ObjectUtils } from '@igo2/utils';\n\nimport { DynamicComponent } from '../shared/dynamic-component';\nimport { DynamicComponentService } from '../shared/dynamic-component.service';\n\n@Component({\n  selector: 'igo-dynamic-outlet',\n  templateUrl: 'dynamic-outlet.component.html',\n  styleUrls: ['dynamic-outlet.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicOutletComponent implements OnChanges, OnDestroy {\n  /**\n   * The dynamic component base class or the dynamic component itself\n   */\n  @Input() component: DynamicComponent<any> | any;\n\n  /**\n   * The dynamic component inputs\n   */\n  @Input() inputs: { [key: string]: any } = {};\n\n  /**\n   * The subscribers to the dynamic component outputs\n   */\n  @Input() subscribers: { [key: string]: (event: any) => void } = {};\n\n  /**\n   * The dynamic component\n   */\n  private dynamicComponent: DynamicComponent<any>;\n\n  /**\n   * The view element to render the component to\n   * @ignore\n   */\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  private target: ViewContainerRef;\n\n  constructor(\n    private dynamicComponentService: DynamicComponentService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  /**\n   * If the dynamic component changes, create it.\n   * If the inputs or subscribers change, update the current component's\n   * inputs or subscribers.\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const component = changes.component;\n    const inputs = changes.inputs;\n    const subscribers = changes.subscribers;\n    const eq = ObjectUtils.objectsAreEquivalent;\n\n    if (!component || !component.currentValue) {\n      return;\n    }\n\n    if (component.currentValue !== component.previousValue) {\n      this.createComponent(component.currentValue);\n    } else {\n      const inputsAreEquivalents =\n        inputs && eq(inputs.currentValue || {}, inputs.previousValue || {});\n      const subscribersAreEquivalents =\n        subscribers &&\n        eq(subscribers.currentValue || {}, subscribers.previousValue || {});\n\n      if (inputsAreEquivalents === false) {\n        this.updateInputs();\n      }\n\n      if (subscribersAreEquivalents === false) {\n        this.updateSubscribers();\n      }\n    }\n    this.cdRef.detectChanges();\n  }\n\n  /**\n   * Destroy the dynamic component and all it's subscribers\n   * @internal\n   */\n  ngOnDestroy() {\n    if (this.dynamicComponent) {\n      this.dynamicComponent.destroy();\n    }\n  }\n\n  /**\n   * Create a  DynamicComponent out of the component class and render it.\n   * @internal\n   */\n  private createComponent(component: DynamicComponent<any> | any) {\n    if (this.dynamicComponent !== undefined) {\n      this.dynamicComponent.destroy();\n    }\n    this.dynamicComponent =\n      component instanceof DynamicComponent\n        ? component\n        : this.dynamicComponentService.create(component);\n    this.renderComponent();\n  }\n\n  /**\n   * Create and render the dynamic component. Set it's inputs and subscribers\n   * @internal\n   */\n  private renderComponent() {\n    this.updateInputs();\n    this.updateSubscribers();\n    this.dynamicComponent.setTarget(this.target);\n  }\n\n  /**\n   * Update the dynamic component inputs. This is an update so any\n   * key not defined won't be overwritten.\n   * @internal\n   */\n  private updateInputs() {\n    this.dynamicComponent.updateInputs(this.inputs);\n  }\n\n  /**\n   * Update the dynamic component subscribers. This is an update so any\n   * key not defined won't be overwritten.\n   * @internal\n   */\n  private updateSubscribers() {\n    this.dynamicComponent.updateSubscribers(this.subscribers);\n  }\n}\n","<ng-template #target></ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DynamicOutletComponent } from './dynamic-outlet.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DynamicOutletComponent\n  ],\n  declarations: [\n    DynamicOutletComponent\n  ]\n})\nexport class IgoDynamicOutletModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoDynamicOutletModule } from './dynamic-outlet/dynamic-outlet.module';\nimport { DynamicComponentService } from './shared/dynamic-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoDynamicOutletModule\n  ],\n  exports: [\n    IgoDynamicOutletModule\n  ],\n  providers: [\n    DynamicComponentService\n  ]\n})\nexport class IgoDynamicComponentModule {}\n","import { Component, OnInit, OnDestroy, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Media, MediaService } from '@igo2/core';\n\nimport { FlexibleState, FlexibleDirection } from './flexible.type';\n\n@Component({\n  selector: 'igo-flexible',\n  templateUrl: './flexible.component.html',\n  styleUrls: ['./flexible.component.scss']\n})\nexport class FlexibleComponent implements OnInit, OnDestroy {\n  static transitionTime = 250;\n\n  @ViewChild('flexibleMain', { static: true }) main;\n\n  @Input()\n  get initial(): string {\n    return this._initial;\n  }\n  set initial(value: string) {\n    this._initial = value;\n  }\n  private _initial = '0';\n\n  @Input()\n  get collapsed(): string {\n    return this._collapsed;\n  }\n  set collapsed(value: string) {\n    this._collapsed = value;\n  }\n  private _collapsed = '0';\n\n  @Input()\n  get expanded(): string {\n    return this._expanded;\n  }\n  set expanded(value: string) {\n    this._expanded = value;\n  }\n  private _expanded = '100%';\n\n  @Input()\n  get initialMobile(): string {\n    return this._initialMobile;\n  }\n  set initialMobile(value: string) {\n    this._initialMobile = value;\n  }\n  private _initialMobile: string = this.expanded;\n\n  @Input()\n  get collapsedMobile(): string {\n    return this._collapsedMobile;\n  }\n  set collapsedMobile(value: string) {\n    this._collapsedMobile = value;\n  }\n  private _collapsedMobile: string = this.collapsed;\n\n  @Input()\n  get expandedMobile(): string {\n    return this._expandedMobile;\n  }\n  set expandedMobile(value: string) {\n    this._expandedMobile = value;\n  }\n  private _expandedMobile: string = this.expanded;\n\n  @Input()\n  get direction(): FlexibleDirection {\n    return this._direction;\n  }\n  set direction(value: FlexibleDirection) {\n    this._direction = value;\n  }\n  private _direction: FlexibleDirection = 'column';\n\n  @Input()\n  get state(): FlexibleState {\n    return this._state;\n  }\n  set state(value: FlexibleState) {\n    const sizes = {\n      initial: this.initial,\n      collapsed: this.collapsed,\n      expanded: this.expanded\n    };\n\n    if (this.mediaService.isMobile()) {\n      Object.assign(sizes, {\n        initial: this.initialMobile,\n        collapsed: this.collapsedMobile,\n        expanded: this.expandedMobile\n      });\n    }\n\n    const size = sizes[value];\n    if (size !== undefined) {\n      this.setSize(size);\n      setTimeout(() => {\n        this._state = value;\n      }, FlexibleComponent.transitionTime);\n    }\n  }\n  private _state: FlexibleState = 'initial';\n\n  private mediaService$$: Subscription;\n\n  constructor(private el: ElementRef, private mediaService: MediaService) {}\n\n  ngOnInit() {\n    this.el.nativeElement.className += this.direction;\n\n    // Since this component supports different sizes\n    // on mobile, force a redraw when the media changes\n    this.mediaService$$ = this.mediaService.media$.subscribe(\n      (media: Media) => (this.state = this.state)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.mediaService$$) {\n      this.mediaService$$.unsubscribe();\n    }\n  }\n\n  private setSize(size: string) {\n    this._state = 'transition';\n\n    if (this.direction === 'column') {\n      this.main.nativeElement.style.height = size;\n    } else if (this.direction === 'row') {\n      this.main.nativeElement.style.width = size;\n    }\n  }\n}\n","<div #flexibleMain class=\"igo-flexible-main {{state}} {{direction}}\">\n  <div class=\"igo-container\">\n    <ng-content></ng-content>\n  </div>\n</div>\n<div class=\"igo-flexible-fill\">\n  <div>\n  \t<div class=\"igo-container\">\n      <ng-content select=\"[igoFlexibleFill]\"></ng-content>\n    </div>\n  </div>\n</div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FlexibleComponent } from './flexible.component';\n\n@NgModule({\n  imports: [],\n  declarations: [FlexibleComponent],\n  exports: [FlexibleComponent]\n})\nexport class IgoFlexibleModule {\n  static forRoot(): ModuleWithProviders<IgoFlexibleModule> {\n    return {\n      ngModule: IgoFlexibleModule,\n      providers: []\n    };\n  }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { Form, FormField, FormFieldGroup } from './form.interfaces';\n\nexport function formControlIsRequired(control: AbstractControl): boolean {\n  if (control.validator) {\n    const validator = control.validator({} as AbstractControl);\n    if (validator && validator.required) {\n      return true;\n    }\n  }\n\n  if ((control as any).controls) {\n    const requiredControl = Object.keys((control as any).controls).find((key: string) => {\n      return formControlIsRequired((control as any).controls[key]);\n    });\n    return requiredControl !== undefined;\n  }\n\n  return false;\n}\n\nexport function getDefaultErrorMessages(): {[key: string]: string} {\n  return {\n    required: 'igo.common.form.errors.required'\n  };\n}\n\nexport function getControlErrorMessage(control: AbstractControl, messages: {[key: string]: string}): string {\n  const errors = control.errors || {};\n  const errorKeys = Object.keys(errors);\n  const errorMessages = errorKeys\n    .map((key: string) => messages[key])\n    .filter((message: string) => message !== undefined);\n  return errorMessages.length > 0 ? errorMessages[0] : '';\n}\n\nexport function getAllFormFields(form: Form): FormField[] {\n  return form.groups.reduce((acc: FormField[], group: FormFieldGroup) => {\n    return acc.concat(group.fields);\n  }, [].concat(form.fields));\n}\n\nexport function getFormFieldByName(form: Form, name: string): FormField {\n  const fields = getAllFormFields(form);\n  return fields.find((field: FormField) => {\n    return field.name === name;\n  });\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\n\nimport t from 'typy';\n\nimport { Form, FormField, FormFieldGroup } from '../shared/form.interfaces';\nimport { getAllFormFields } from '../shared/form.utils';\n\n/**\n * A configurable form\n */\n@Component({\n  selector: 'igo-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormComponent implements OnChanges {\n\n  /**\n   * Form\n   */\n  @Input() form: Form;\n\n  /**\n   * Input data\n   */\n  @Input() formData: { [key: string]: any};\n\n  /**\n   * Form autocomplete\n   */\n  @Input() autocomplete: string = 'off';\n\n  /**\n   * Event emitted when the form is submitted\n   */\n  @Output() submitForm = new EventEmitter<{[key: string]: any}>();\n\n  @ViewChild('buttons', { static: true }) buttons: ElementRef;\n\n  get hasButtons(): boolean {\n    return this.buttons.nativeElement.children.length !== 0;\n  }\n\n  constructor() {}\n\n  /**\n   * Is the entity or the template change, recreate the form or repopulate it.\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const formData = changes.formData;\n    if (formData && formData.currentValue !== formData.previousValue) {\n      if (formData.currentValue === undefined) {\n        this.clear();\n      } else {\n        this.setData(formData.currentValue);\n      }\n    }\n  }\n\n  /**\n   * Transform the form data to a feature and emit an event\n   * @param event Form submit event\n   * @internal\n   */\n  onSubmit() {\n    this.submitForm.emit(this.getData());\n  }\n\n  getData(): { [key: string]: any} {\n    const data = {};\n    getAllFormFields(this.form).forEach((field: FormField) => {\n      this.updateDataWithFormField(data, field);\n    });\n    return data;\n  }\n\n  private setData(data: {[key: string]: any}) {\n    this.form.fields.forEach((field: FormField) => {\n      field.control.setValue(t(data, field.name).safeObject);\n    });\n\n    this.form.groups.forEach((group: FormFieldGroup) => {\n      group.fields.forEach((field: FormField) => {\n        field.control.setValue(t(data, field.name).safeObject);\n      });\n    });\n  }\n\n  private updateDataWithFormField(data: { [key: string]: any}, field: FormField) {\n    const control = field.control;\n    if (!control.disabled) {\n      data[field.name] = control.value;\n    }\n  }\n\n  /**\n   * Clear form\n   */\n  private clear() {\n    this.form.control.reset();\n  }\n\n}\n","\n<form\n  [autocomplete]=\"autocomplete\"\n  [formGroup]=\"form.control\"\n  (ngSubmit)=\"onSubmit()\">\n  <div class=\"igo-form-body\" [ngClass]=\"{'igo-form-body-with-buttons': hasButtons}\">\n    <div class=\"igo-form-content\">\n      <ng-content></ng-content>\n    </div>\n    <div #buttons class=\"igo-form-buttons\">\n      <ng-content select=\"[formButtons]\"></ng-content>\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FormComponent } from './form.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    FormComponent,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    FormComponent\n  ]\n})\nexport class IgoFormFormModule {}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, ValidatorFn } from '@angular/forms';\n\nimport {\n  Form,\n  FormField,\n  FormFieldConfig,\n  FormFieldGroup,\n  FormFieldGroupConfig\n} from './form.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  form(fields: FormField[], groups: FormFieldGroup[]): Form {\n    const control = this.formBuilder.group({});\n    fields.forEach((field: FormField) => {\n      control.addControl(field.name, field.control);\n    });\n    groups.forEach((group: FormFieldGroup) => {\n      control.addControl(group.name, group.control);\n    });\n\n    return {fields, groups, control};\n  }\n\n  group(config: FormFieldGroupConfig, fields: FormField[]): FormFieldGroup {\n    const options = config.options || {};\n    const control = this.formBuilder.group({});\n    fields.forEach((field: FormField) => {\n      control.addControl(field.name, field.control);\n    });\n\n    if (options.validator) {\n      const validators = this.getValidators(options.validator); // convert string to actual validator\n      control.setValidators(validators);\n    }\n\n    return Object.assign({}, config, {fields, control}) as FormFieldGroup;\n  }\n\n  field(config: FormFieldConfig): FormField {\n    const options = config.options || {};\n    const state = {\n      value: '',\n      disabled: options.disabled\n    };\n    const control = this.formBuilder.control(state);\n\n    if (options.validator) {\n      const validators = this.getValidators(options.validator); // convert string to actual validator\n      control.setValidators(validators);\n    }\n\n    return Object.assign({type: 'text'}, config, {control}) as FormField;\n  }\n\n  extendFieldConfig(config: FormFieldConfig, partial: Partial<FormFieldConfig>): FormFieldConfig {\n    const options = Object.assign({}, config.options || {}, partial.options || {});\n    const inputs = Object.assign({}, config.inputs || {}, partial.inputs || {});\n    const subscribers = Object.assign({}, config.subscribers || {}, partial.subscribers || {});\n    return Object.assign({}, config, {options, inputs, subscribers});\n  }\n\n  private getValidators(validatorOption: string | string[] | ValidatorFn): ValidatorFn | ValidatorFn[] {\n    if (Array.isArray(validatorOption)) {\n      return validatorOption.map((validatorStr) => {\n        return this.getValidator(validatorStr);\n      });\n    }\n\n    return this.getValidator(validatorOption);\n  }\n\n  private getValidator(validatorStr: string | ValidatorFn): ValidatorFn {\n    if (typeof validatorStr !== 'string') {\n      return validatorStr;\n    }\n\n    // regex pattern to extract arguments from string for e.g applying on \"minLength(8)\" would extract 8\n    const re = /^([a-zA-Z]{3,15})\\((.{0,20})\\)$/;\n    const match = validatorStr.match(re);\n\n    if (!match) {\n      return Validators[validatorStr];\n    }\n\n    const name = match[1];\n    const args = match[2];\n    return Validators[name](args);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service where all available form fields are registered.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormFieldService {\n\n  static fields: {[key: string]: any} = {};\n\n  static register(type: string, component: any) {\n    FormFieldService.fields[type] = component;\n  }\n\n  constructor() {}\n\n  /**\n   * Return field component by type\n   * @param type Field type\n   * @returns Field component\n   */\n  getFieldByType(type: string): any {\n    return FormFieldService.fields[type];\n  }\n\n}\n","import { FormFieldService } from './form-field.service';\n\nexport function IgoFormFieldComponent(type: string): (cls: any) => any {\n  return (compType: any) => {\n    FormFieldService.register(type, compType);\n  };\n}\n","\n\n<ng-container *ngIf=\"field !== undefined\">\n  <igo-dynamic-outlet\n    [component]=\"getFieldComponent()\"\n    [inputs]=\"getFieldInputs()\"\n    [subscribers]=\"getFieldSubscribers()\">\n  </igo-dynamic-outlet>\n</ng-container>\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { FormField, FormFieldInputs, FormFieldOptions } from '../shared/form.interfaces';\nimport { FormFieldService } from '../shared/form-field.service';\nimport { getDefaultErrorMessages } from '../shared';\n\n/**\n * This component renders the proper form input based on\n * the field configuration it receives.\n */\n@Component({\n  selector: 'igo-form-field',\n  templateUrl: './form-field.component.html',\n  styleUrls: ['./form-field.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldComponent {\n\n  /**\n   * Field configuration\n   */\n  @Input() field: FormField;\n\n  /**\n   * Field inputs cache\n   */\n  private fieldInputs: FormFieldInputs = undefined;\n\n  /**\n   * Field subscribers cache\n   */\n  private fieldSubscribers: {[key: string]: ({field: FormField, control: FormControl}) => void } = undefined;\n\n  get fieldOptions(): FormFieldOptions {\n    return this.field.options || {};\n  }\n\n  constructor(private formFieldService: FormFieldService) {}\n\n  getFieldComponent(): any {\n    return this.formFieldService.getFieldByType(this.field.type || 'text');\n  }\n\n  getFieldInputs(): FormFieldInputs {\n    if (this.fieldInputs !== undefined) {\n      return this.fieldInputs;\n    }\n\n    const errors = this.fieldOptions.errors || {};\n    this.fieldInputs = Object.assign(\n      {\n        placeholder: this.field.title,\n        disableSwitch: this.fieldOptions.disableSwitch || false\n      },\n      Object.assign({}, this.field.inputs || {}),\n      {\n        formControl: this.field.control,\n        errors: Object.assign({}, getDefaultErrorMessages(), errors)\n      }\n    );\n    return this.fieldInputs;\n  }\n\n  getFieldSubscribers(): {[key: string]: ({field: FormField, control: FormControl}) => void } {\n    if (this.fieldSubscribers !== undefined) {\n      return this.fieldSubscribers;\n    }\n\n    this.fieldSubscribers = Object.assign({}, this.field.subscribers || {});\n    return this.fieldSubscribers;\n  }\n}\n","<mat-form-field>\n  <mat-select\n    [required]=\"required\"\n    [placeholder]=\"placeholder\"\n    [formControl]=\"formControl\">\n    <mat-option *ngFor=\"let choice of choices$ | async\" [value]=\"choice.value\">\n      {{choice.title}}\n    </mat-option>\n  </mat-select>\n  <mat-icon\n    *ngIf=\"disableSwitch === true\"\n    class=\"igo-form-disable-switch\"\n    [svgIcon]=\"(disabled$ | async) === true ? 'checkbox-blank-outline' : 'checkbox-marked-outline'\"\n    (click)=\"onDisableSwitchClick()\"\n    matPrefix>\n  </mat-icon>\n  <mat-error *ngIf=\"formControl.errors\">{{getErrorMessage() | translate}}</mat-error>\n</mat-form-field>\n","import {\n  Input,\n  Component,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\nimport type { FormControl } from '@angular/forms';\n\nimport { BehaviorSubject, } from 'rxjs';\n\nimport { formControlIsRequired, getControlErrorMessage } from '../shared/form.utils';\nimport { FormFieldSelectChoice } from '../shared/form.interfaces';\nimport { IgoFormFieldComponent } from '../shared/form-field-component';\n\n/**\n * This component renders a select field\n */\n@IgoFormFieldComponent('select')\n@Component({\n  selector: 'igo-form-field-select',\n  templateUrl: './form-field-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldSelectComponent implements OnInit {\n\n  readonly disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * Select input choices\n   */\n  @Input()\n  set choices(value: FormFieldSelectChoice[]) { this.choices$.next(value); }\n  get choices(): FormFieldSelectChoice[] { return this.choices$.value; }\n  readonly choices$: BehaviorSubject<FormFieldSelectChoice[]> = new BehaviorSubject([]);\n\n  /**\n   * The field's form control\n   */\n  @Input() formControl: FormControl;\n\n  /**\n   * Field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Field placeholder\n   */\n  @Input() errors: {[key: string]: string};\n\n  /**\n   * Wheter a disable switch should be available\n   */\n  @Input() disableSwitch: boolean = false;\n\n  /**\n   * Whether the field is required\n   */\n  get required(): boolean {\n    return formControlIsRequired(this.formControl);\n  }\n\n  ngOnInit() {\n    this.disabled$.next(this.formControl.disabled);\n  }\n\n  /**\n   * Get error message\n   */\n  getErrorMessage(): string {\n    return getControlErrorMessage(this.formControl, this.errors);\n  }\n\n  onDisableSwitchClick() {\n    this.toggleDisabled();\n  }\n\n  private toggleDisabled() {\n    const disabled = !this.disabled$.value;\n    if (disabled === true) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n    this.disabled$.next(disabled);\n  }\n\n}\n","<mat-form-field>\n  <input\n    matInput\n    [required]=\"required\"\n    [placeholder]=\"placeholder\"\n    [formControl]=\"formControl\">\n  <mat-icon\n    *ngIf=\"disableSwitch === true\"\n    class=\"igo-form-disable-switch\"\n    [svgIcon]=\"(disabled$ | async) === true ? 'checkbox-blank-outline' : 'checkbox-marked-outline'\"\n    (click)=\"onDisableSwitchClick()\"\n    matPrefix>\n  </mat-icon>\n  <mat-error *ngIf=\"formControl.errors\">{{getErrorMessage() | translate}}</mat-error>\n</mat-form-field>\n","import {\n  Input,\n  Component,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\nimport type { FormControl } from '@angular/forms';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport {\n  formControlIsRequired,\n  getControlErrorMessage\n} from '../shared/form.utils';\nimport { IgoFormFieldComponent } from '../shared/form-field-component';\n\n/**\n * This component renders a text field\n */\n@IgoFormFieldComponent('text')\n@Component({\n  selector: 'igo-form-field-text',\n  templateUrl: './form-field-text.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldTextComponent implements OnInit {\n\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * The field's form control\n   */\n  @Input() formControl: FormControl;\n\n  /**\n   * Field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Field placeholder\n   */\n  @Input() errors: {[key: string]: string};\n\n  /**\n   * Wheter a disable switch should be available\n   */\n  @Input() disableSwitch: boolean = false;\n\n  /**\n   * Whether the field is required\n   */\n  get required(): boolean {\n    return formControlIsRequired(this.formControl);\n  }\n\n  ngOnInit() {\n    this.disabled$.next(this.formControl.disabled);\n  }\n\n  /**\n   * Get error message\n   */\n  getErrorMessage(): string {\n    return getControlErrorMessage(this.formControl, this.errors);\n  }\n\n  onDisableSwitchClick() {\n    this.toggleDisabled();\n  }\n\n  private toggleDisabled() {\n    const disabled = !this.disabled$.value;\n    if (disabled === true) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n    this.disabled$.next(disabled);\n  }\n\n}\n","<mat-form-field>\n  <textarea\n    matInput\n    [required]=\"required\"\n    [placeholder]=\"placeholder\"\n    [formControl]=\"formControl\">\n  </textarea>\n  <mat-icon\n    *ngIf=\"disableSwitch === true\"\n    class=\"igo-form-disable-switch\"\n    [svgIcon]=\"(disabled$ | async) === true ? 'checkbox-blank-outline' : 'checkbox-marked-outline'\"\n    (click)=\"onDisableSwitchClick()\"\n    matPrefix>\n  </mat-icon>\n  <mat-error *ngIf=\"formControl.errors\">{{getErrorMessage() | translate}}</mat-error>\n</mat-form-field>\n","import {\n  Input,\n  Component,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\nimport type { FormControl } from '@angular/forms';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { formControlIsRequired, getControlErrorMessage } from '../shared/form.utils';\nimport { IgoFormFieldComponent } from '../shared/form-field-component';\n\n/**\n * This component renders a textarea field\n */\n@IgoFormFieldComponent('textarea')\n@Component({\n  selector: 'igo-form-field-textarea',\n  templateUrl: './form-field-textarea.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldTextareaComponent implements OnInit {\n\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * The field's form control\n   */\n  @Input() formControl: FormControl;\n\n  /**\n   * Field placeholder\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Field placeholder\n   */\n  @Input() errors: {[key: string]: string};\n\n  /**\n   * Wheter a disable switch should be available\n   */\n  @Input() disableSwitch: boolean = false;\n\n  /**\n   * Whether the field is required\n   */\n  get required(): boolean {\n    return formControlIsRequired(this.formControl);\n  }\n\n  ngOnInit() {\n    this.disabled$.next(this.formControl.disabled);\n  }\n\n  /**\n   * Get error message\n   */\n  getErrorMessage(): string {\n    return getControlErrorMessage(this.formControl, this.errors);\n  }\n\n  onDisableSwitchClick() {\n    this.toggleDisabled();\n  }\n\n  private toggleDisabled() {\n    const disabled = !this.disabled$.value;\n    if (disabled === true) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n    this.disabled$.next(disabled);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoDynamicOutletModule } from '../../dynamic-component/dynamic-outlet/dynamic-outlet.module';\n\nimport { FormFieldComponent } from './form-field.component';\nimport { FormFieldSelectComponent } from './form-field-select.component';\nimport { FormFieldTextComponent } from './form-field-text.component';\nimport { FormFieldTextareaComponent } from './form-field-textarea.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    IgoLanguageModule,\n    IgoDynamicOutletModule\n  ],\n  exports: [\n    FormFieldComponent,\n    FormFieldSelectComponent,\n    FormFieldTextComponent,\n    FormFieldTextareaComponent\n  ],\n  declarations: [\n    FormFieldComponent,\n    FormFieldSelectComponent,\n    FormFieldTextComponent,\n    FormFieldTextareaComponent\n  ]\n})\nexport class IgoFormFieldModule {}\n","<div\n  *ngIf=\"group && group.fields.length > 0\"\n  class=\"igo-form-group-fields\">\n  <div\n    *ngFor=\"let field of group.fields\"\n    class=\"igo-form-field-wrapper\"\n    [ngClass]=\"getFieldNgClass(field)\">\n    <igo-form-field [field]=\"field\"></igo-form-field>\n  </div>\n</div>\n\n<div class=\"igo-form-group-extra-content\">\n  <ng-content></ng-content>\n</div>\n\n<mat-error *ngIf=\"formControl.errors\">{{getErrorMessage() | translate}}</mat-error>\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { getControlErrorMessage } from '../shared/form.utils';\nimport { FormField, FormFieldGroup } from '../shared/form.interfaces';\n\n/**\n * A configurable form, optionnally bound to an entity\n * (for example in case of un update). Submitting that form\n * emits an event with the form data but no other operation is performed.\n */\n@Component({\n  selector: 'igo-form-group',\n  templateUrl: './form-group.component.html',\n  styleUrls: ['./form-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormGroupComponent {\n\n  /**\n   * Form field group\n   */\n  @Input() group: FormFieldGroup;\n\n  /**\n   * Field placeholder\n   */\n  @Input() errors: {[key: string]: string};\n\n  /**\n   * Form group control\n   */\n  get formControl(): FormGroup { return this.group.control; }\n\n  constructor() {}\n\n  /**\n   * Return the number of columns a field should occupy.\n   * The maximum allowed is 2, even if the field config says more.\n   * @param field Field\n   * @returns Number of columns\n   * @internal\n   */\n  getFieldColSpan(field: FormField): number {\n    let colSpan = 2;\n    const options = field.options || {};\n    if (options.cols && options.cols > 0) {\n      colSpan = Math.min(options.cols, 2);\n    }\n\n    return colSpan;\n  }\n\n  /**\n   * Return the number of columns a field should occupy.\n   * The maximum allowed is 2, even if the field config says more.\n   * @param field Field\n   * @returns Number of columns\n   * @internal\n   */\n  getFieldNgClass(field: FormField): {[key: string]: boolean} {\n    const colspan = this.getFieldColSpan(field);\n    return {[`igo-form-field-colspan-${colspan}`]: true};\n  }\n\n  /**\n   * Get error message\n   */\n  getErrorMessage(): string {\n    const options = this.group.options || {};\n    return getControlErrorMessage(this.formControl, options.errors || {});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { IgoFormFieldModule } from '../form-field/form-field.module';\nimport { FormGroupComponent } from './form-group.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    IgoLanguageModule,\n    IgoFormFieldModule\n  ],\n  exports: [\n    FormGroupComponent\n  ],\n  declarations: [\n    FormGroupComponent\n  ]\n})\nexport class IgoFormGroupModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoFormFormModule } from './form/form.module';\nimport { IgoFormGroupModule } from './form-group/form-group.module';\nimport { IgoFormFieldModule } from './form-field/form-field.module';\nimport { FormService } from './shared/form.service';\nimport { FormFieldService } from './shared/form-field.service';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoFormGroupModule,\n    IgoFormFieldModule\n  ],\n  exports: [\n    IgoFormFormModule,\n    IgoFormGroupModule,\n    IgoFormFieldModule\n  ],\n  declarations: [],\n  providers: [\n    FormService,\n    FormFieldService\n  ]\n})\nexport class IgoFormModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'igo-home-button',\n  templateUrl: './home-button.component.html',\n  styleUrls: ['./home-button.component.scss']\n})\nexport class HomeButtonComponent {\n\n  @Output() unselectButton = new EventEmitter<any>();\n\n  constructor() {}\n\n  onUnselectButtonClick() {\n    this.unselectButton.emit();\n  }\n}\n","<button\n    id=\"homeButton\"\n    mat-icon-button\n    tooltip-position=\"below\"\n    matTooltipShowDelay=\"500\"\n    [matTooltip]=\"'igo.context.sidenav.mainMenu' | translate\"\n    (click)=\"onUnselectButtonClick()\">\n    <mat-icon svgIcon=\"home\"></mat-icon>\n</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HomeButtonComponent } from './home-button.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    IgoLanguageModule\n  ],\n  exports: [HomeButtonComponent],\n  declarations: [HomeButtonComponent],\n  providers: []\n})\nexport class IgoHomeButtonModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { EntitySelectorComponent } from './entity-selector.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule\n  ],\n  exports: [EntitySelectorComponent],\n  declarations: [EntitySelectorComponent]\n})\nexport class IgoEntitySelectorModule {}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[igoStopDropPropagation]'\n})\nexport class StopDropPropagationDirective {\n  @HostListener('drop', ['$event'])\n  public onDrop(event: any): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { StopDropPropagationDirective } from './stop-drop-propagation.directive';\nimport { StopPropagationDirective } from './stop-propagation.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [StopDropPropagationDirective, StopPropagationDirective],\n  exports: [StopDropPropagationDirective, StopPropagationDirective]\n})\nexport class IgoStopPropagationModule {\n  static forRoot(): ModuleWithProviders<IgoStopPropagationModule> {\n    return {\n      ngModule: IgoStopPropagationModule,\n      providers: []\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EntityTablePaginatorComponent } from './entity-table-paginator.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    MatPaginatorModule,\n  ],\n  exports: [\n    EntityTablePaginatorComponent\n  ],\n  declarations: [\n    EntityTablePaginatorComponent,\n  ]\n})\nexport class IgoEntityTablePaginatorModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SecureImagePipe } from './secure-image.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [SecureImagePipe],\n  exports: [SecureImagePipe]\n})\nexport class IgoImageModule {\n  static forRoot(): ModuleWithProviders<IgoImageModule> {\n    return {\n      ngModule: IgoImageModule,\n      providers: []\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { IgoStopPropagationModule } from '../../stop-propagation/stop-propagation.module';\nimport { IgoCustomHtmlModule } from '../../custom-html/custom-html.module';\nimport { EntityTableRowDirective } from './entity-table-row.directive';\nimport { EntityTableComponent } from './entity-table.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { IgoEntityTablePaginatorModule } from '../entity-table-paginator/entity-table-paginator.module';\nimport { IgoImageModule } from '../../image/image.module';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatSortModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    IgoStopPropagationModule,\n    IgoCustomHtmlModule,\n    IgoEntityTablePaginatorModule,\n    IgoImageModule,\n    IgoLanguageModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatTooltipModule\n  ],\n  exports: [\n    EntityTableComponent\n  ],\n  declarations: [\n    EntityTableComponent,\n    EntityTableRowDirective\n  ]\n})\nexport class IgoEntityTableModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoEntitySelectorModule } from './entity-selector/entity-selector.module';\nimport { IgoEntityTableModule } from './entity-table/entity-table.module';\nimport { IgoEntityTablePaginatorModule } from './entity-table-paginator/entity-table-paginator.module';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IgoEntitySelectorModule,\n    IgoEntityTableModule,\n    IgoEntityTablePaginatorModule\n  ],\n  declarations: []\n})\nexport class IgoEntityModule {}\n","import { catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { InteractiveTourOptions } from './interactive-tour.interface';\nimport { ConfigService } from '@igo2/core';\n\n@Injectable()\nexport class InteractiveTourLoader {\n  private jsonURL: string;\n  private allToursOptions;\n\n  constructor(private http: HttpClient, private configService: ConfigService) {\n    this.jsonURL = this.getPathToConfigFile();\n  }\n\n   public loadConfigTour() {\n      this.getJSON()\n        .subscribe(\n          (data) => {\n            this.allToursOptions = data;\n          },\n          (err) => {\n            throw new Error(`Problem with Interactive tour configuration file: interactiveTour.json not find. Check if the file and is path is set correctly.`);\n          }\n        );\n   }\n\n  public getPathToConfigFile(): string {\n    return (\n      this.configService.getConfig('interactiveTour.pathToConfigFile') ||\n      './config/interactiveTour.json'\n    );\n  }\n\n  public getJSON(): Observable<any> {\n    return this.http.get(this.jsonURL).pipe(\n      catchError((e) => {\n        e.error.caught = true;\n        throw e;\n      })\n    );\n  }\n\n  public getTourOptionData(toolName): InteractiveTourOptions {\n    if (this.allToursOptions === undefined) {\n      return undefined;\n    }\n    let nameInConfigFile = toolName;\n    nameInConfigFile = nameInConfigFile.replace(/\\s/g, '');\n    return this.allToursOptions[nameInConfigFile];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ShepherdService } from 'angular-shepherd';\n\nimport { ConfigService, MediaService, LanguageService } from '@igo2/core';\nimport { InteractiveTourLoader } from './interactive-tour.loader';\nimport {\n  InteractiveTourOptions,\n  InteractiveTourStep,\n  InteractiveTourAction\n} from './interactive-tour.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InteractiveTourService {\n  private previousStep: InteractiveTourStep;\n  private nextIndex = 1;\n\n  constructor(\n    private configService: ConfigService,\n    private mediaService: MediaService,\n    private languageService: LanguageService,\n    private interactiveTourLoader: InteractiveTourLoader,\n    private shepherdService: ShepherdService\n  ) {\n    if (this.isAppHaveTour()) {\n      this.interactiveTourLoader.loadConfigTour();\n    }\n  }\n\n  public isAppHaveTour() {\n    const haveTour = this.configService.getConfig('interactiveTour.activateInteractiveTour');\n    if (haveTour === undefined) {\n      return true;\n    } else {\n      return haveTour;\n    }\n  }\n\n  public isToolHaveTourConfig(toolName: string): boolean {\n    const checkTourActiveOptions = this.interactiveTourLoader.getTourOptionData(\n      toolName\n    );\n    if (checkTourActiveOptions === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  public disabledTourButton(toolName: string): boolean {\n    const stepConfig: InteractiveTourOptions = this.interactiveTourLoader.getTourOptionData(\n      toolName\n    );\n\n    if (stepConfig?.conditions) {\n      for (const condition of stepConfig?.conditions) {\n        if (document.querySelector(condition) === null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public isMobile(): boolean {\n    return this.mediaService.isMobile();\n  }\n\n  public isTourDisplayInMobile(): boolean {\n    const showInMobile = this.configService.getConfig(\n      'interactiveTour.tourInMobile'\n    );\n    if (showInMobile === undefined) {\n      return true;\n    }\n    return this.configService.getConfig('interactiveTour.tourInMobile');\n  }\n\n  private getButtons(buttonKind?: 'first' | 'last' | 'noBackButton') {\n    if (buttonKind === 'noBackButton') {\n      return [\n        {\n          classes: 'shepherd-button-primary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.nextButton'\n          ),\n          type: 'next'\n        }\n      ];\n    }\n    if (buttonKind === 'first') {\n      return [\n        {\n          classes: 'shepherd-button-secondary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.exitButton'\n          ),\n          type: 'cancel'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.nextButton'\n          ),\n          type: 'next'\n        }\n      ];\n    }\n\n    if (buttonKind === 'last') {\n      return [\n        {\n          classes: 'shepherd-button-secondary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.backButton'\n          ),\n          type: 'back'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: this.languageService.translate.instant(\n            'igo.common.interactiveTour.exitButton'\n          ),\n          type: 'cancel'\n        }\n      ];\n    }\n\n    return [\n      {\n        classes: 'shepherd-button-secondary',\n        text: this.languageService.translate.instant(\n          'igo.common.interactiveTour.backButton'\n        ),\n        type: 'back'\n      },\n      {\n        classes: 'shepherd-button-primary',\n        text: this.languageService.translate.instant(\n          'igo.common.interactiveTour.nextButton'\n        ),\n        type: 'next'\n      }\n    ];\n  }\n\n  private getAction(actionName: string) {\n    const action = {\n      click: 'click'\n    };\n    return action[actionName.toLowerCase()];\n  }\n\n  private addProgress() {\n    const self = this as any;\n    let nbTry = 0;\n    const maxTry = 21;\n    const checkExist = setInterval(() => {\n      if (self.getCurrentStep()) {\n        if (self.getCurrentStep().options.attachTo.element && !document.querySelector(self.getCurrentStep().options.attachTo.element)) {\n          self.cancel();\n          clearInterval(checkExist);\n          return;\n        } else {\n          const currentStepElement = self.getCurrentStep().getElement();\n          if (currentStepElement) {\n            const shepherdList = currentStepElement.querySelectorAll('.shepherd-content, .shepherd-text');\n            shepherdList.forEach(element => {\n              element.classList.add('mat-typography');\n            });\n          }\n          const header = currentStepElement\n            ? currentStepElement.querySelector('.shepherd-header')\n            : undefined;\n\n          nbTry++;\n          if (header || nbTry > maxTry) {\n            clearInterval(checkExist);\n          }\n\n          if (header) {\n            const stepsArray = self.steps;\n            const progress = document.createElement('span');\n            progress.className = 'shepherd-progress';\n            progress.innerText = `${\n              stepsArray.indexOf(self.getCurrentStep()) + 1\n            }/${stepsArray.length}`;\n            header.insertBefore(\n              progress,\n              currentStepElement.querySelector('.shepherd-cancel-icon')\n            );\n          }\n        }\n      }\n    }, 100);\n  }\n\n  private checkNext(index, tour, service) {\n    if (tour.getCurrentStep()) {\n      if (tour.getCurrentStep().options.attachTo.element && document.querySelector(tour.getCurrentStep().options.attachTo.element)) {\n        tour.complete();\n        return;\n      }\n\n      if (index.index === tour.steps.length - 1) {\n        tour.complete();\n        return;\n      }\n\n      tour.steps.splice(index.index, 1);\n      const nextStep = tour.steps[index.index];\n      if (nextStep.options.attachTo.element && !document.querySelector(nextStep.options.attachTo.element)) {\n        service.checkNext(index, tour, service);\n      } else {\n        tour._setupModal();\n        tour.show(nextStep.id);\n      }\n    }\n  }\n\n  private executeAction(\n    step: InteractiveTourStep,\n    actionConfig: InteractiveTourAction\n  ) {\n    if (!actionConfig) {\n      return;\n    }\n\n    if (\n      actionConfig.condition &&\n      ((actionConfig.condition.charAt(0) === '!' &&\n        document.querySelector(actionConfig.condition.slice(1))) ||\n        (actionConfig.condition.charAt(0) !== '!' &&\n          !document.querySelector(actionConfig.condition)))\n    ) {\n      return;\n    }\n\n    const element: HTMLElement = document.querySelector(\n      actionConfig.element || step.element\n    ) as HTMLElement;\n    const action = this.getAction(actionConfig.action);\n    if (element && action) {\n      element[action]();\n    }\n  }\n\n  private executeActionPromise(\n    step: InteractiveTourStep,\n    actionConfig: InteractiveTourAction\n  ) {\n    return new Promise<void>((resolve) => {\n      this.executeAction(step, actionConfig);\n      if (!actionConfig || !actionConfig.waitFor) {\n        resolve();\n        return;\n      }\n      let nbTry = 0;\n      const maxTry = actionConfig.maxWait ? actionConfig.maxWait / 100 : 20;\n      const checkExist = setInterval(() => {\n        nbTry++;\n        if (nbTry > maxTry || document.querySelector(actionConfig.waitFor)) {\n          clearInterval(checkExist);\n          resolve();\n        }\n      }, 100);\n    });\n  }\n\n  private getShepherdSteps(stepConfig: InteractiveTourOptions) {\n    const shepherdSteps = [];\n\n    let i = 0;\n    for (const step of stepConfig.steps) {\n      shepherdSteps.push({\n        attachTo: {\n          element: step.element,\n          on: step.position || stepConfig.position\n        },\n        popperOptions: {\n          modifiers: [{ name: 'offset', options: { offset: [0, 15] } }]\n        },\n        beforeShowPromise: () => {\n          return Promise.all([\n            this.executeActionPromise(\n              this.previousStep,\n              this.previousStep ? this.previousStep.beforeChange : undefined\n            ),\n            this.executeActionPromise(step, step.beforeShow)\n          ]);\n        },\n        buttons: this.getButtons(\n          i === 0\n            ? 'first'\n            : i + 1 === stepConfig.steps.length\n            ? 'last'\n            : stepConfig.steps[i].noBackButton\n            ? 'noBackButton'\n            : undefined\n        ),\n        classes: step.class,\n        highlightClass: step.highlightClass,\n        scrollTo: step.scrollToElement || stepConfig.scrollToElement || true,\n        canClickTarget: step.disableInteraction\n          ? !step.disableInteraction\n          : undefined,\n        title: this.languageService.translate.instant(\n          step.title || stepConfig.title\n        ),\n        text: [this.languageService.translate.instant(step.text)],\n        when: {\n          show: () => {\n            this.executeAction(step, step.onShow);\n          },\n          hide: () => {\n            this.previousStep = step;\n            this.executeAction(step, step.onHide);\n          }\n        }\n      });\n      i++;\n    }\n\n    return shepherdSteps;\n  }\n\n  public startTour(toolName: string) {\n    const stepConfig: InteractiveTourOptions = this.interactiveTourLoader.getTourOptionData(\n      toolName\n    );\n\n    this.shepherdService.defaultStepOptions = {\n      classes: stepConfig.class,\n      highlightClass: stepConfig.highlightClass,\n      canClickTarget: stepConfig.disableInteraction\n        ? !stepConfig.disableInteraction\n        : true,\n      cancelIcon: {\n        enabled: true\n      }\n    };\n\n    const shepherdSteps = this.getShepherdSteps(stepConfig);\n\n    this.shepherdService.modal = true;\n    this.shepherdService.confirmCancel = false;\n    this.shepherdService.addSteps(shepherdSteps);\n\n    this.shepherdService.tourObject.on('show', this.addProgress);\n    this.shepherdService.tourObject.on('cancel', (index) => {\n      this.checkNext(index, this.shepherdService.tourObject, this);\n    });\n\n    this.shepherdService.start();\n  }\n}\n","import { EntityRecord, EntityStore } from '../../entity';\nimport { Tool, ToolboxOptions } from './tool.interface';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n/**\n * Service where all available tools and their component are registered.\n */\nexport class Toolbox {\n  /**\n   * Observable of the active tool\n   */\n  activeTool$: BehaviorSubject<Tool> = new BehaviorSubject(undefined);\n\n  /**\n   * Ordered list of tool names to display in a toolbar\n   */\n  toolbar$: BehaviorSubject<string[]> = new BehaviorSubject([]);\n\n  /**\n   * Observable of the active tool\n   */\n  private activeTool$$: Subscription;\n\n  /**\n   * Active tool history. Useful for activating the previous tool.\n   */\n  private activeToolHistory: string[] = [];\n\n  /**\n   * Tool store\n   */\n  private store = new EntityStore<Tool>([], {\n    getKey: (tool: Tool) => tool.name\n  });\n\n  get tools$(): BehaviorSubject<Tool[]> {\n    return this.store.entities$;\n  }\n\n  constructor(private options: ToolboxOptions = {}) {\n    this.setToolbar(options.toolbar);\n    this.initStore();\n  }\n\n  /**\n   * Destroy the toolbox\n   */\n  destroy() {\n    this.activeTool$$.unsubscribe();\n    this.store.destroy();\n  }\n\n  /**\n   * Return a tool\n   * @param name Tool name\n   * @returns tool Tool\n   */\n  getTool(name: string): Tool {\n    return this.store.get(name);\n  }\n\n  /**\n   * Return all tools\n   * @returns Array of tools\n   */\n  getTools(): Tool[] {\n    return this.store.all();\n  }\n\n  /**\n   * Set tool configurations\n   * @param tools Tools\n   */\n  setTools(tools: Tool[]) {\n    this.store.load(tools);\n  }\n\n  /**\n   * Get toolbar\n   * @returns Toolbar value\n   */\n  getToolbar(): string[] {\n    return this.toolbar$.getValue();\n  }\n\n  /**\n   * Set toolbar\n   * @param toolbar A list of tool names\n   */\n  setToolbar(toolbar: string[]) {\n    this.toolbar$.next(toolbar || []);\n  }\n\n  /**\n   * Activate a tool (and deactivate other tools)\n   * @param name Tool name\n   * @param options Tool options\n   */\n  activateTool(name: string, options: { [key: string]: any } = {}) {\n    const tool = this.getTool(name);\n    if (tool === undefined) {\n      return;\n    }\n\n    this.store.state.update(tool, { active: true, options }, true);\n  }\n\n  /**\n   * Activate the previous tool, if any\n   */\n  activatePreviousTool() {\n    if (this.activeToolHistory.length <= 1) {\n      this.deactivateTool();\n      return;\n    }\n    const [previous, current] = this.activeToolHistory.splice(-2, 2);\n    this.activateTool(previous);\n  }\n\n  /**\n   * Activate the tool below, if any\n   */\n  /* activateBelowTool() {\n    const arrayTools = this.getToolbar();\n    const index = arrayTools.findIndex(t => t === this.activeTool$.getValue().name);\n    if (arrayTools[index + 1] !== undefined) {\n      this.deactivateTool();\n      const below = arrayTools[index + 1];\n      this.activateTool(below);\n    } else {\n      this.deactivateTool();\n      const below = arrayTools[0];\n      this.activateTool(below);\n    }\n  } */\n\n  /**\n   * Activate the tool above, if any\n   */\n  /* activateAboveTool() {\n    const arrayTools = this.getToolbar();\n    const index = arrayTools.findIndex(t => t === this.activeTool$.getValue().name);\n    if (arrayTools[index - 1] !== undefined) {\n      this.deactivateTool();\n      const above = arrayTools[index - 1];\n      this.activateTool(above);\n    } else {\n      this.deactivateTool();\n      const above = arrayTools[arrayTools.length - 1];\n      this.activateTool(above);\n    }\n  } */\n\n  /**\n   * Deactivate the active tool\n   */\n  deactivateTool() {\n    this.clearActiveToolHistory();\n    this.store.state.updateAll({ active: false });\n  }\n\n  /**\n   * Initialize the tool store and start observing the active tool\n   */\n  private initStore() {\n    this.store = new EntityStore<Tool>([], {\n      getKey: (entity: Tool) => entity.name\n    });\n\n    this.activeTool$$ = this.store.stateView\n      .firstBy$((record: EntityRecord<Tool>) => record.state.active === true)\n      .subscribe((record: EntityRecord<Tool>) => {\n        if (record === undefined) {\n          this.setActiveTool(undefined);\n          return;\n        }\n\n        const tool = record.entity;\n        const options = Object.assign(\n          {},\n          tool.options || {},\n          record.state.options || {}\n        );\n        this.setActiveTool(Object.assign({}, tool, { options }));\n      });\n  }\n\n  /**\n   * Set the active tool and update the tool history\n   * @param tool Tool\n   */\n  private setActiveTool(tool: Tool | undefined) {\n    this.activeTool$.next(tool);\n    if (tool === undefined) {\n      this.clearActiveToolHistory();\n    } else {\n      this.activeToolHistory = this.activeToolHistory\n        .filter((name: string) => name !== tool.name)\n        .concat([tool.name]);\n    }\n  }\n\n  /**\n   * Clear the tool history\n   */\n  private clearActiveToolHistory() {\n    this.activeToolHistory = [];\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Tool } from './tool.interface';\nimport { Toolbox } from './toolbox';\n\n/**\n * Service where runtime tool configurations are registered\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolService {\n  static tools: { [key: string]: Tool } = {};\n\n  /**\n   * Toolbox that holds main tools\n   */\n  public toolbox: Toolbox = new Toolbox();\n\n  static register(tool: Tool) {\n    ToolService.tools[tool.name] = tool;\n  }\n\n  constructor() {\n    this.toolbox.setTools(this.getTools());\n  }\n\n  /**\n   * Return a tool\n   * @param name Tool name\n   * @returns tool Tool\n   */\n  getTool(name: string): Tool {\n    return ToolService.tools[name];\n  }\n\n  /**\n   * Return all tools\n   * @returns tTols\n   */\n  getTools(): Tool[] {\n    return Object.values(ToolService.tools);\n  }\n}\n","<button *ngIf=\"showTourButton\"\n  (click) = \"startInteractiveTour()\"\n  [ngClass]=\"getClass()\"\n  mat-raised-button\n  tooltip-position=\"below\"\n  matTooltipShowDelay=\"500\"\n  [disabled]=disabledTourButton>\n  <span class=\"interactive-tour-button-title\">{{'igo.common.interactiveTour.buttonTitle' | translate}} {{(discoverTitleInLocale$ | async) | translate}}</span>\n  <mat-icon\n    svgIcon=\"presentation-play\"\n    [matTooltip]=\"disabledTourButton ?\n    ('igo.common.interactiveTour.disaledTooltipTourToolButton' | translate) :\n    ('igo.common.interactiveTour.tooltipTourToolButton' | translate)\">\n  </mat-icon>\n</button>\n","import { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { InteractiveTourService } from './interactive-tour.service';\nimport { ToolService } from '../tool/shared/tool.service';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'igo-interactive-tour',\n  templateUrl: './interactive-tour.component.html',\n  styleUrls: ['./interactive-tour.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class InteractiveTourComponent {\n  /**\n   * Toolbox that holds main tools\n   */\n  @Input() tourToStart: string = '';\n  @Input() styleButton: string;\n  @Input() discoverTitleInLocale$: Observable<string> = of('IGO');\n\n  getClass() {\n    return {\n      'tour-button-tool-icon': this.styleButton === 'icon',\n      'tour-button-tool': this.styleButton === 'raised'\n    };\n  }\n\n  get toolbox() {\n    return this.toolService.toolbox;\n  }\n\n  getTourToStart() {\n    if (this.tourToStart) {\n      return this.tourToStart;\n    } else {\n      return this.activeToolName;\n    }\n  }\n\n  get activeToolName() {\n    if (this.toolbox) {\n      if (this.isActiveTool) {\n        return this.toolbox.activeTool$.getValue().name;\n      } else {\n        return 'global';\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  get isActiveTool(): boolean {\n    if (this.toolbox) {\n      return this.toolbox.activeTool$.getValue() !== undefined;\n    } else {\n      return undefined;\n    }\n  }\n\n  get isToolHaveTour(): boolean {\n    if (this.activeToolName === 'about' && !this.tourToStart) {\n      return false;\n    }\n    return this.interactiveTourService.isToolHaveTourConfig(\n      this.getTourToStart()\n    );\n  }\n\n  get showTourButton(): boolean {\n    // 2 conditions to show: have Tour on tool in Config file and if we are in mobile displayInMobile= true\n    let haveTour: boolean;\n    haveTour = this.isToolHaveTour;\n    if (haveTour === false) {\n      return false;\n    }\n\n    let inMobileAndShow: boolean;\n    if (this.interactiveTourService.isMobile()) {\n      inMobileAndShow = this.isTourDisplayInMobile;\n      if (inMobileAndShow === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get isTourDisplayInMobile(): boolean {\n    return this.interactiveTourService.isTourDisplayInMobile();\n  }\n\n  get disabledTourButton(): boolean {\n    return this.interactiveTourService.disabledTourButton(this.activeToolName);\n  }\n\n  constructor(\n    private interactiveTourService: InteractiveTourService,\n    private toolService: ToolService\n  ) {}\n\n  startInteractiveTour() {\n    const tour = this.getTourToStart();\n    if (tour) {\n      this.interactiveTourService.startTour(tour);\n    } else {\n      return;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { InteractiveTourService } from './interactive-tour.service';\nimport { InteractiveTourComponent } from './interactive-tour.component';\nimport { InteractiveTourLoader } from './interactive-tour.loader';\n\n@NgModule({\n  declarations: [InteractiveTourComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    IgoLanguageModule\n  ],\n  providers: [InteractiveTourService, InteractiveTourLoader],\n  exports: [InteractiveTourComponent]\n})\nexport class IgoInteractiveTourModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keyvalue'\n})\nexport class KeyValuePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    const keyValues = [];\n    Object.getOwnPropertyNames(value).forEach((key: string) =>\n      keyValues.push({ key, value: value[key] })\n    );\n\n    return keyValues;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { KeyValuePipe } from './keyvalue.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [KeyValuePipe],\n  exports: [KeyValuePipe]\n})\nexport class IgoKeyValueModule {\n  static forRoot(): ModuleWithProviders<IgoKeyValueModule> {\n    return {\n      ngModule: IgoKeyValueModule,\n      providers: []\n    };\n  }\n}\n","<h1 mat-dialog-title class=\"mat-typography\">{{ title }}</h1>\n\n<div mat-dialog-content class=\"mat-typography\">\n  <ng-container *ngTemplateOutlet=\"loopObject;context:{ obj: data }\"></ng-container>\n\n  <ng-template #loopObject let-obj='obj' let-baseKey='baseKey'>\n    <ng-container *ngFor=\"let property of obj | keyvalue\">\n      <ng-container *ngIf=\"ignoreKeys.indexOf(getKey(baseKey, property.key)) === -1\">\n\n        <ng-container *ngIf=\"isObject(property.value); else notObject\">\n          <ng-container *ngTemplateOutlet=\"loopObject;context:{ obj: property.value, baseKey: getKey(baseKey, property.key) }\"></ng-container>\n        </ng-container>\n\n        <ng-template #notObject>\n          <p><span><b>{{getKey(baseKey, property.key)}}</b> : </span><span class=\"propertyValue\" [innerHtml]=\"property.value\"></span></p>\n        </ng-template>\n\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button color=\"primary\"\n          (click)=\"dialogRef.close(false)\">\n    OK\n  </button>\n</div>\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'igo-json-dialog',\n  templateUrl: './json-dialog.component.html'\n})\nexport class JsonDialogComponent {\n  public title: string;\n  public data: any;\n  public ignoreKeys: string[];\n\n  constructor(public dialogRef: MatDialogRef<JsonDialogComponent>) {}\n\n  isObject(val) {\n    return typeof val === 'object' && !Array.isArray(val);\n  }\n\n  getKey(baseKey, key) {\n    return (baseKey ? baseKey + '.' : '') + key;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Observable } from 'rxjs';\n\nimport { JsonDialogComponent } from './json-dialog.component';\n\n@Injectable()\nexport class JsonDialogService {\n  constructor(private dialog: MatDialog) {}\n\n  public open(title: any, data, ignoreKeys?: string[]): Observable<any> {\n    const dialogRef = this.dialog.open(JsonDialogComponent, {\n      disableClose: false\n    });\n    dialogRef.componentInstance.data = data;\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.ignoreKeys = ignoreKeys;\n\n    return dialogRef.afterClosed();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { IgoKeyValueModule } from '../keyvalue/keyvalue.module';\n\nimport { JsonDialogComponent } from './json-dialog.component';\nimport { JsonDialogService } from './json-dialog.service';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatDialogModule, IgoKeyValueModule],\n  exports: [JsonDialogComponent],\n  declarations: [JsonDialogComponent],\n  providers: [JsonDialogService]\n})\nexport class IgoJsonDialogModule {\n  static forRoot(): ModuleWithProviders<IgoJsonDialogModule> {\n    return {\n      ngModule: IgoJsonDialogModule\n    };\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  ElementRef,\n  Renderer2,\n  HostListener,\n  EventEmitter\n} from '@angular/core';\n\n@Directive({\n  selector: '[igoListItem]'\n})\nexport class ListItemDirective {\n\n  static focusedCls = 'igo-list-item-focused';\n  static selectedCls = 'igo-list-item-selected';\n  static disabledCls = 'igo-list-item-disabled';\n\n  @Input()\n  get color() {\n    return this._color;\n  }\n  set color(value: string) {\n    this._color = value;\n  }\n  private _color = 'primary';\n\n  @Input()\n  get focused() {\n    return this._focused;\n  }\n  set focused(value: boolean) {\n    if (value === this._focused) {\n      return;\n    }\n    if (this.disabled) {\n      return;\n    }\n\n    value ? this.beforeFocus.emit(this) : this.beforeUnfocus.emit(this);\n\n    this._focused = value;\n    if (this.selected !== true) {\n      this.toggleFocusedClass();\n    }\n\n    value ? this.focus.emit(this) : this.unfocus.emit(this);\n  }\n  private _focused = false;\n\n  @Input()\n  get selected() {\n    return this._selected;\n  }\n  set selected(value: boolean) {\n    if (value === this._selected) {\n      return;\n    }\n    if (this.disabled) {\n      return;\n    }\n\n    value ? this.beforeSelect.emit(this) : this.beforeUnselect.emit(this);\n\n    this._selected = value;\n    this._focused = value;\n    this.toggleSelectedClass();\n\n    value ? this.select.emit(this) : this.unselect.emit(this);\n  }\n  private _selected = false;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    if (value === this._disabled) {\n      return;\n    }\n\n    if (value === true) {\n      this.selected = false;\n    }\n\n    value ? this.beforeDisable.emit(this) : this.beforeEnable.emit(this);\n\n    this._disabled = value;\n    this.toggleDisabledClass();\n\n    value ? this.disable.emit(this) : this.enable.emit(this);\n  }\n  private _disabled = false;\n\n  @Output() beforeSelect = new EventEmitter<ListItemDirective>();\n  @Output() beforeFocus = new EventEmitter<ListItemDirective>();\n  @Output() beforeUnselect = new EventEmitter<ListItemDirective>();\n  @Output() beforeUnfocus = new EventEmitter<ListItemDirective>();\n  @Output() beforeDisable = new EventEmitter<ListItemDirective>();\n  @Output() beforeEnable = new EventEmitter<ListItemDirective>();\n  @Output() focus = new EventEmitter<ListItemDirective>();\n  @Output() unfocus = new EventEmitter<ListItemDirective>();\n  @Output() select = new EventEmitter<ListItemDirective>();\n  @Output() unselect = new EventEmitter<ListItemDirective>();\n  @Output() disable = new EventEmitter<ListItemDirective>();\n  @Output() enable = new EventEmitter<ListItemDirective>();\n\n  @HostListener('click')\n  onClick() {\n    this.selected = true;\n  }\n\n  constructor(public renderer: Renderer2, public el: ElementRef) {}\n\n  getOffsetTop(): number {\n    const padding = 5;\n\n    return this.el.nativeElement.offsetTop - padding;\n  }\n\n  private toggleFocusedClass() {\n    if (this.focused) {\n      this.addCls(ListItemDirective.focusedCls);\n    } else {\n      this.removeCls(ListItemDirective.focusedCls);\n    }\n  }\n\n  private toggleSelectedClass() {\n    if (this.selected) {\n      this.addCls(ListItemDirective.selectedCls);\n      this.removeCls(ListItemDirective.focusedCls);\n    } else {\n      this.removeCls(ListItemDirective.selectedCls);\n    }\n  }\n\n  private toggleDisabledClass() {\n    if (this.disabled) {\n      this.addCls(ListItemDirective.disabledCls);\n    } else {\n      this.removeCls(ListItemDirective.disabledCls);\n    }\n  }\n\n  private addCls(cls: string) {\n    this.renderer.addClass(this.el.nativeElement, cls);\n  }\n\n  private removeCls(cls: string) {\n    this.renderer.removeClass(this.el.nativeElement, cls);\n  }\n}\n","import {\n  Component,\n  AfterViewInit,\n  OnInit,\n  OnDestroy,\n  Input,\n  ContentChildren,\n  HostListener,\n  ElementRef\n} from '@angular/core';\nimport type { QueryList } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { ListItemDirective } from './list-item.directive';\n\n@Component({\n  selector: 'igo-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements AfterViewInit, OnInit, OnDestroy {\n  @Input()\n  get navigation() {\n    return this._navigation;\n  }\n  set navigation(value: boolean) {\n    this._navigation = value;\n  }\n  private _navigation = true;\n\n  @Input()\n  get selection() {\n    return this._selection;\n  }\n  set selection(value: boolean) {\n    this._selection = value;\n  }\n  private _selection = true;\n\n  get selectedItem() {\n    return this._selectedItem;\n  }\n  set selectedItem(value: ListItemDirective) {\n    this.focusedItem = value;\n    this._selectedItem = value;\n  }\n  private _selectedItem: ListItemDirective;\n\n  get focusedItem() {\n    return this._focusedItem;\n  }\n  set focusedItem(value: ListItemDirective) {\n    this._focusedItem = value;\n  }\n  private _focusedItem: ListItemDirective;\n\n  private navigationEnabled: boolean;\n  private listItems$$: Subscription;\n  private subscriptions: Subscription[] = [];\n\n  @ContentChildren(ListItemDirective, { descendants: true })\n  listItems: QueryList<ListItemDirective>;\n\n  @HostListener('document:keydown', ['$event'])\n  @HostListener('document:enter', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // It would be nice to be able to unsubscribe to the event\n    // completely but until ES7 this won't be possible because\n    // document events are not observables\n    if (this.navigationEnabled) {\n      if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n        event.preventDefault();\n        this.navigate(event.key);\n      } else if (event.key === 'Enter') {\n        this.select(this.focusedItem);\n      }\n    }\n  }\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.enableNavigation();\n  }\n\n  ngAfterViewInit() {\n    if (this.listItems.length) {\n      this.init();\n    }\n\n    this.listItems$$ = this.listItems.changes.subscribe(\n      (items: ListItemDirective[]) => this.init()\n    );\n  }\n\n  ngOnDestroy() {\n    this.listItems$$.unsubscribe();\n  }\n\n  focus(item?: ListItemDirective) {\n    if (!this.selection) {\n      return;\n    }\n\n    this.unfocus();\n\n    // We need to make this check because dynamic\n    // lists such as in the search results list may fail\n    if (item !== undefined) {\n      item.focused = true;\n    }\n  }\n\n  unfocus() {\n    if (this.focusedItem !== undefined) {\n      this.focusedItem.focused = false;\n    }\n\n    this.focusedItem = undefined;\n  }\n\n  focusNext() {\n    const items = this.listItems.toArray();\n    let item;\n    const igoList = this.el.nativeElement;\n    let disabled = true;\n    let index = this.getFocusedIndex();\n    if (index === undefined) {\n      index = -1;\n    }\n\n    while (disabled && index < items.length - 1) {\n      index += 1;\n      item = items[index];\n      disabled = item.disabled;\n    }\n\n    if (item !== undefined) {\n      this.focus(item);\n    }\n\n    if (!items[index + 1]) {\n      igoList.scrollTop = igoList.scrollHeight - igoList.clientHeight;\n      return;\n    }\n\n    if (item !== undefined && !this.isScrolledIntoView(item.el.nativeElement)) {\n      igoList.scrollTop =\n        item.el.nativeElement.offsetTop +\n        item.el.nativeElement.children[0].offsetHeight -\n        igoList.clientHeight;\n    }\n  }\n\n  focusPrevious() {\n    const items = this.listItems.toArray();\n    let item: ListItemDirective;\n    const igoList = this.el.nativeElement;\n    let disabled = true;\n    let index = this.getFocusedIndex();\n\n    while (disabled && index > 0) {\n      index -= 1;\n      item = items[index];\n      disabled = item.disabled;\n    }\n\n    if (item !== undefined) {\n      this.focus(item);\n    }\n\n    if (!items[index - 1]) {\n      igoList.scrollTop = 0;\n      return;\n    }\n\n    if (item !== undefined && !this.isScrolledIntoView(item.el.nativeElement)) {\n      const padding = 3;\n      igoList.scrollTop = item.el.nativeElement.offsetTop - padding;\n    }\n  }\n\n  select(item?: ListItemDirective) {\n    if (!this.selection) {\n      return;\n    }\n\n    this.unselect();\n\n    if (item !== undefined) {\n      item.selected = true;\n    }\n  }\n\n  unselect() {\n    this.unfocus();\n\n    if (this.selectedItem !== undefined) {\n      this.selectedItem.selected = false;\n    }\n\n    this.selectedItem = undefined;\n  }\n\n  enableNavigation() {\n    if (this.navigation) {\n      this.navigationEnabled = true;\n    }\n  }\n\n  disableNavigation() {\n    this.navigationEnabled = false;\n  }\n\n  scrollToItem(item: ListItemDirective) {\n    this.el.nativeElement.scrollTop = item.getOffsetTop();\n  }\n\n  isScrolledIntoView(elem) {\n    const docViewTop =\n      this.el.nativeElement.scrollTop + this.el.nativeElement.offsetTop;\n    const docViewBottom = docViewTop + this.el.nativeElement.clientHeight;\n\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.children[0].offsetHeight;\n    return elemBottom <= docViewBottom && elemTop >= docViewTop;\n  }\n\n  private init() {\n    this.subscribe();\n\n    this.selectedItem = this.findSelectedItem();\n    this.focusedItem = this.findFocusedItem();\n\n    this.enableNavigation();\n  }\n\n  private subscribe() {\n    this.unsubscribe();\n\n    this.listItems.toArray().forEach(item => {\n      this.subscriptions.push(\n        item.beforeSelect.subscribe((item2: ListItemDirective) =>\n          this.handleItemBeforeSelect(item2)\n        )\n      );\n\n      this.subscriptions.push(\n        item.select.subscribe((item2: ListItemDirective) =>\n          this.handleItemSelect(item2)\n        )\n      );\n\n      this.subscriptions.push(\n        item.beforeFocus.subscribe((item2: ListItemDirective) =>\n          this.handleItemBeforeFocus(item2)\n        )\n      );\n\n      this.subscriptions.push(\n        item.focus.subscribe((item2: ListItemDirective) =>\n          this.handleItemFocus(item2)\n        )\n      );\n    }, this);\n  }\n\n  private unsubscribe() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  private handleItemBeforeFocus(item: ListItemDirective) {\n    if (item !== this.focusedItem) {\n      this.unfocus();\n    }\n  }\n\n  private handleItemFocus(item: ListItemDirective) {\n    this.focusedItem = item;\n  }\n\n  private handleItemBeforeSelect(item: ListItemDirective) {\n    if (item !== this.focusedItem) {\n      this.unselect();\n    }\n  }\n\n  private handleItemSelect(item: ListItemDirective) {\n    this.selectedItem = item;\n  }\n\n  private findSelectedItem() {\n    return this.listItems.toArray().find(item => item.selected);\n  }\n\n  private findFocusedItem() {\n    return this.listItems.toArray().find(item => item.focused);\n  }\n\n  private getFocusedIndex() {\n    return this.listItems\n      .toArray()\n      .findIndex(item => item === this.focusedItem);\n  }\n\n  private navigate(key: string) {\n    switch (key) {\n      case 'ArrowUp':\n        this.focusPrevious();\n        break;\n      case 'ArrowDown':\n        this.focusNext();\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<mat-list\n  igoClickout\n  [ngClass]=\"{'selectable': selection}\"\n  (clickout)=\"disableNavigation()\"\n  (click)=\"enableNavigation()\">\n  <ng-content></ng-content>\n</mat-list>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { IgoClickoutModule } from '../clickout/clickout.module';\n\nimport { ListItemDirective } from './list-item.directive';\nimport { ListComponent } from './list.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatListModule, IgoClickoutModule],\n  declarations: [ListItemDirective, ListComponent],\n  exports: [ListItemDirective, ListComponent]\n})\nexport class IgoListModule {\n  static forRoot(): ModuleWithProviders<IgoListModule> {\n    return {\n      ngModule: IgoListModule,\n      providers: []\n    };\n  }\n}\n","<div *ngIf=\"withHeader\" class=\"igo-panel-header mat-typography\" title=\"\">\n  <h3>\n    <ng-content select=\"[panelLeftButton]\"></ng-content>\n    <div class=\"igo-panel-title\">\n      {{ title }}\n      <ng-content select=\"[panelHeader]\"></ng-content>\n    </div>\n    <ng-content select=\"[panelRightButton]\"></ng-content>\n  </h3>\n</div>\n<div class=\"igo-panel-content\" title=\"\">\n  <ng-content></ng-content>\n</div>\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  HostBinding\n} from '@angular/core';\n\n@Component({\n  selector: 'igo-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PanelComponent {\n  @Input()\n  get title() {\n    return this._title;\n  }\n  set title(value: string) {\n    this._title = value;\n  }\n  private _title: string;\n\n  @Input()\n  @HostBinding('class.igo-panel-with-header')\n  get withHeader(): boolean {\n    return this._withHeader;\n  }\n  set withHeader(value: boolean) {\n    this._withHeader = value;\n  }\n  private _withHeader = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PanelComponent } from './panel.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [PanelComponent],\n  declarations: [PanelComponent]\n})\nexport class IgoPanelModule {}\n","import { Directive, Self, HostListener, Renderer2 } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n/**\n * <igoSidenavShim> directive.\n *\n * This directive prevents a material sidenav with mode=\"side\"\n * from focusing an element after it's closed\n */\n@Directive({\n  selector: '[igoSidenavShim]'\n})\nexport class SidenavShimDirective {\n  private focusedElement: HTMLElement;\n  private blurElement: HTMLElement;\n\n  @HostListener('open', ['$event'])\n  onOpen() {\n    this.focusedElement = document.activeElement as HTMLElement;\n  }\n\n  @HostListener('close-start', ['$event'])\n  onCloseStart() {\n    const focusedElement = document.activeElement as HTMLElement;\n    if (focusedElement !== this.focusedElement) {\n      this.blurElement = this.focusedElement;\n    } else {\n      this.blurElement = undefined;\n    }\n  }\n\n  @HostListener('close', ['$event'])\n  onClose() {\n    if (this.blurElement) {\n      this.renderer.selectRootElement(this.blurElement).blur();\n    }\n\n    this.blurElement = undefined;\n    this.focusedElement = undefined;\n  }\n\n  constructor(@Self() component: MatSidenav, private renderer: Renderer2) {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SidenavShimDirective } from './sidenav-shim.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [SidenavShimDirective],\n  exports: [SidenavShimDirective]\n})\nexport class IgoSidenavModule {\n  static forRoot(): ModuleWithProviders<IgoSidenavModule> {\n    return {\n      ngModule: IgoSidenavModule,\n      providers: []\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'igo-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent {\n\n  public shown$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  @Input()\n  set shown(value: boolean) { this.shown$.next(value); }\n  get shown(): boolean { return this.shown$.value; }\n\n  constructor() {}\n\n  show() {\n    this.shown = true;\n  }\n\n  hide() {\n    this.shown = false;\n  }\n}\n","<div\n  [ngClass]=\"{'igo-spinner-container': true, 'igo-spinner-shown': (shown$ | async)}\">\n  <div class=\"igo-spinner-background\"></div>\n  <mat-progress-spinner diameter=\"40\" mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { ActivityService } from '@igo2/core';\nimport { SpinnerComponent } from './spinner.component';\n\n/**\n * A directive to bind a SpinnerComponent to the activity service.\n * The activity service tracks any HTTP request and this directive\n * will display the spinner it's attached to when the activity counter\n * is greater than 0.\n */\n@Directive({\n  selector: '[igoSpinnerActivity]'\n})\nexport class SpinnerActivityDirective implements OnInit, OnDestroy {\n  /**\n   * Subscription to the activity service counter\n   */\n  private counter$$: Subscription;\n\n  constructor(\n    @Self() private spinner: SpinnerComponent,\n    private activityService: ActivityService\n  ) {}\n\n  /**\n   * Subscribe to the activity service counter and display the spinner\n   * when it's is greater than 0.\n   * @internal\n   */\n  ngOnInit() {\n    this.counter$$ = this.activityService.counter$\n      .pipe(debounceTime(50))\n      .subscribe((count: number) => {\n        count > 0 ? this.spinner.show() : this.spinner.hide();\n      });\n  }\n\n  /**\n   * Unsubcribe to the activity service counter.\n   * @internal\n   */\n  ngOnDestroy() {\n    this.counter$$.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerActivityDirective } from './spinner-activity.directive';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerActivityDirective, SpinnerComponent],\n  exports: [SpinnerActivityDirective, SpinnerComponent]\n})\nexport class IgoSpinnerModule {}\n","import { DataSource } from '@angular/cdk/table';\nimport { MatSort } from '@angular/material/sort';\n\nimport { Observable, BehaviorSubject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ObjectUtils } from '@igo2/utils';\n\nimport { TableDatabase, TableModel } from './index';\n\nexport class TableDataSource extends DataSource<any> {\n  get filter(): string {\n    return this._filterChange.value;\n  }\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n  private _filterChange = new BehaviorSubject('');\n\n  constructor(\n    private _database: TableDatabase,\n    private _model: TableModel,\n    private _sort: MatSort\n  ) {\n    super();\n  }\n\n  // Connect function called by the table to retrieve one stream containing\n  // the data to render.\n  connect(): Observable<any[]> {\n    if (!this._database) {\n      return merge([]);\n    }\n    const displayDataChanges = [\n      this._database.dataChange,\n      this._filterChange,\n      this._sort.sortChange\n    ];\n\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        return this.getFilteredData(this._database.data);\n      }),\n      map(data => {\n        return this.getSortedData(data);\n      })\n    );\n  }\n\n  disconnect() {}\n\n  getFilteredData(data): any[] {\n    if (!this.filter) {\n      return data;\n    }\n    return data.slice().filter((item: any) => {\n      const searchStr: string = this._model.columns\n        .filter(c => c.filterable)\n        .map(c => ObjectUtils.resolve(item, c.name))\n        .join(' ')\n        .toLowerCase();\n\n      return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n    });\n  }\n\n  getSortedData(data): any[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const propertyA: number | string = ObjectUtils.resolve(\n        a,\n        this._sort.active\n      );\n      const propertyB: number | string = ObjectUtils.resolve(\n        b,\n        this._sort.active\n      );\n\n      return ObjectUtils.naturalCompare(\n        propertyB,\n        propertyA,\n        this._sort.direction\n      );\n    });\n  }\n}\n","export enum TableActionColor {\n  primary,\n  accent,\n  warn\n}\n","<div class='table-box'>\n  <div class='table-header' *ngIf=\"hasFilterInput\">\n    <mat-form-field floatPlaceholder='never'>\n      <input matInput #filter [placeholder]=\"'igo.common.table.filter' | translate\">\n    </mat-form-field>\n  </div>\n\n  <div class='table-container'>\n    <table mat-table #table [dataSource]='dataSource' matSort>\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"selectionCheckbox\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container [matColumnDef]='column.name' *ngFor='let column of model.columns'>\n        <ng-container *ngIf='column.sortable'>\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.title}} </th>\n        </ng-container>\n\n        <ng-container *ngIf='!column.sortable'>\n          <th mat-header-cell *matHeaderCellDef> {{column.title}} </th>\n        </ng-container>\n\n        <ng-container *ngIf=\"!column.html; else cellHTML\">\n          <td mat-cell *matCellDef='let row' class=\"mat-cell-text\"\n            [ngClass]=\"model.cellClassFunc ? model.cellClassFunc(row, column) : {}\">\n            {{getValue(row, column.name)}}\n          </td>\n        </ng-container>\n\n        <ng-template #cellHTML>\n          <td mat-cell *matCellDef='let row' class=\"mat-cell-text\"\n            [ngClass]=\"model.cellClassFunc ? model.cellClassFunc(row, column) : {}\"\n            [innerHTML]=\"getValue(row, column.name)\">\n          </td>\n        </ng-template>\n      </ng-container>\n\n      <!-- Action Column -->\n      <ng-container matColumnDef='action'>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef='let row'>\n          <button *ngFor='let action of model.actions'\n          mat-mini-fab\n          [color]='getActionColor(action.color)'\n          (click)='handleClickAction($event, action, row)'>\n            <mat-icon svgIcon=\"{{action.icon}}\"></mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef='displayedColumns;'></tr>\n      <tr mat-row\n        *matRowDef='let row; columns: displayedColumns;'\n        [ngClass]=\"model.rowClassFunc ? model.rowClassFunc(row) : {}\"\n        (click)=\"selection.toggle(row)\">\n      </tr>\n\n    </table>\n  </div>\n\n</div>\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  Input,\n  Output,\n  OnChanges,\n  OnInit,\n  AfterViewInit,\n  EventEmitter\n} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { fromEvent } from 'rxjs';\n\nimport { ObjectUtils } from '@igo2/utils';\n\nimport { TableModel } from './table-model.interface';\nimport { TableDatabase } from './table-database';\nimport { TableDataSource } from './table-datasource';\nimport { TableActionColor } from './table-action-color.enum';\n\n@Component({\n  selector: 'igo-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnChanges, OnInit, AfterViewInit {\n  @Input()\n  get database(): TableDatabase {\n    return this._database;\n  }\n  set database(value: TableDatabase) {\n    this._database = value;\n  }\n  private _database: TableDatabase;\n\n  @Input()\n  get model(): TableModel {\n    return this._model;\n  }\n  set model(value: TableModel) {\n    this._model = value;\n  }\n  private _model: TableModel;\n\n  @Input()\n  get hasFilterInput(): boolean {\n    return this._hasFIlterInput;\n  }\n  set hasFilterInput(value: boolean) {\n    this._hasFIlterInput = value;\n  }\n  private _hasFIlterInput = true;\n\n  public displayedColumns;\n  public dataSource: TableDataSource | null;\n  public selection = new SelectionModel<any>(true, []);\n\n  @Output()\n  select = new EventEmitter<{\n    added: any[];\n    removed: any[];\n    source: SelectionModel<any>;\n  }>();\n\n  @ViewChild('filter') filter: ElementRef;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit() {\n    this.dataSource = new TableDataSource(this.database, this.model, this.sort);\n\n    if (this.model) {\n      this.displayedColumns = this.model.columns\n        .filter(c => c.displayed !== false)\n        .map(c => c.name);\n\n      if (this.model.selectionCheckbox) {\n        this.displayedColumns.unshift('selectionCheckbox');\n      }\n      if (this.model.actions && this.model.actions.length) {\n        this.displayedColumns.push('action');\n      }\n    }\n\n    this.selection.changed.subscribe(e => this.select.emit(e));\n  }\n\n  ngAfterViewInit() {\n    if (this.filter) {\n      fromEvent(this.filter.nativeElement, 'keyup')\n        .pipe(\n          debounceTime(150),\n          distinctUntilChanged()\n        )\n        .subscribe(() => {\n          if (!this.dataSource) {\n            return;\n          }\n          this.dataSource.filter = this.filter.nativeElement.value;\n        });\n    }\n  }\n\n  ngOnChanges(change) {\n    if (change.database) {\n      this.dataSource = new TableDataSource(\n        this.database,\n        this.model,\n        this.sort\n      );\n      this.selection.clear();\n    }\n  }\n\n  getActionColor(colorId: number): string {\n    return TableActionColor[colorId];\n  }\n\n  getValue(row, key) {\n    return ObjectUtils.resolve(row, key);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.database.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.database.data.forEach(row => this.selection.select(row));\n  }\n\n  handleClickAction(event, action, row) {\n    event.stopPropagation();\n    action.click(row);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { TableComponent } from './table.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CdkTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSortModule,\n    MatCheckboxModule,\n    IgoLanguageModule\n  ],\n  declarations: [TableComponent],\n  exports: [TableComponent]\n})\nexport class IgoTableModule {\n  static forRoot(): ModuleWithProviders<IgoTableModule> {\n    return {\n      ngModule: IgoTableModule,\n      providers: []\n    };\n  }\n}\n","import { EntityStore } from '../../entity';\nimport { Action } from './action.interfaces';\n\n/**\n * The class is a specialized version of an EntityStore that stores\n * actions.\n */\nexport class ActionStore extends EntityStore<Action> {\n\n}\n","export enum ToolboxColor {\n  White = 'white',\n  Grey = 'grey',\n  Primary = 'primary'\n}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function toolSlideInOut(\n  speed = '300ms',\n  type = 'ease-in-out'\n): AnimationTriggerMetadata {\n  return trigger('toolSlideInOut', [\n    state(\n      'enter',\n      style({\n        transform: 'translate3d(0, 0, 0)'\n      })\n    ),\n    transition('void => enter', animate(speed + ' ' + type))\n  ]);\n}\n","<igo-actionbar\n  *ngIf=\"(toolbar$ | async).length > 0\"\n  [store]=\"actionStore\"\n  [withIcon]=\"true\"\n  [withTitle]=\"toolbarWithTitle$ | async\"\n  [withTooltip]=\"(toolbarWithTitle$ | async) === false\"\n  [scrollActive]=\"toolbarWithTitle$ | async\"\n  [horizontal]=\"false\">\n</igo-actionbar>\n\n<div\n  *ngIf=\"activeTool$ | async as tool\"\n  class=\"igo-tool-container\"\n  [ngClass]=\"{'igo-tool-container-with-toolbar': !actionStore.empty, 'igo-tool-container-with-animation': animate}\"\n  [@toolSlideInOut]=\"animation$ | async\"\n  (@toolSlideInOut.start)=\"onAnimationStart()\"\n  (@toolSlideInOut.done)=\"onAnimationComplete()\">\n\n  <igo-dynamic-outlet\n    [component]=\"tool.component\"\n    [inputs]=\"getToolInputs(tool)\">\n  </igo-dynamic-outlet>\n\n</div>\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { Subscription, BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Action, ActionStore } from '../../action';\nimport { Tool } from '../shared/tool.interface';\nimport { ToolboxColor } from '../shared/toolbox.enums';\nimport { Toolbox } from '../shared/toolbox';\nimport { toolSlideInOut } from './toolbox.animation';\n\n@Component({\n  selector: 'igo-toolbox',\n  templateUrl: 'toolbox.component.html',\n  styleUrls: ['toolbox.component.scss'],\n  animations: [toolSlideInOut()],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolboxComponent implements OnInit, OnDestroy {\n  /**\n   * Observable of the active tool\n   */\n  activeTool$: BehaviorSubject<Tool> = new BehaviorSubject(undefined);\n\n  /**\n   * Store of actions that toggle tools\n   */\n  actionStore: ActionStore = new ActionStore([]);\n\n  /**\n   * Observable of he anmation state\n   */\n  animation$: BehaviorSubject<string> = new BehaviorSubject('none');\n\n  /**\n   * Observable of the toolbar\n   */\n  toolbar$: BehaviorSubject<string[]> = new BehaviorSubject([]);\n\n  /**\n   * Whether the Toolbar should display actions' titles\n   */\n  toolbarWithTitle$: Observable<boolean> = this.activeTool$.pipe(\n    map((tool: Tool | undefined) => tool === undefined)\n  );\n\n  /**\n   * Subscription to the active tool\n   */\n  private activeTool$$: Subscription;\n\n  /**\n   * Subscription to the toolbar\n   */\n  private toolbar$$: Subscription;\n\n  /**\n   * Observable of the ongoing animation. This is useful when\n   * multiple animations are triggered at once i.e. when the user clicks\n   * too fast on different actions\n   */\n  private animating$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Subscription to the ongoing animation\n   */\n  private animating$$: Subscription;\n\n  /**\n   * Toolbox\n   */\n  @Input() toolbox: Toolbox;\n\n  /**\n   * Whether the toolbox should animate the first tool entering\n   */\n  @Input() animate: boolean = false;\n\n  /**\n   * Color of Toolbox\n   */\n  @Input() color: ToolboxColor = ToolboxColor.White;\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.color-grey')\n  get classColorGrey() {\n    return this.color === ToolboxColor.Grey;\n  }\n\n  /**\n   * @ignore\n   */\n  @HostBinding('class.color-primary')\n  get classColorPrimary() {\n    return this.color === ToolboxColor.Primary;\n  }\n\n  /**\n   * Initialize the toolbar and subscribe to the active tool\n   * @internal\n   */\n  ngOnInit() {\n    this.toolbar$$ = this.toolbox.toolbar$.subscribe((toolbar: string[]) =>\n      this.onToolbarChange(toolbar)\n    );\n    this.activeTool$$ = this.toolbox.activeTool$.subscribe((tool: Tool) =>\n      this.onActiveToolChange(tool)\n    );\n  }\n\n  /**\n   * Unsubscribe to the active tool and destroy the action store\n   * @internal\n   */\n  ngOnDestroy() {\n    this.toolbar$$.unsubscribe();\n    this.activeTool$$.unsubscribe();\n    this.actionStore.destroy();\n  }\n\n  /**\n   * Track the starting animation\n   * @internal\n   */\n  onAnimationStart() {\n    this.animating$.next(true);\n  }\n\n  /**\n   * Untrack the completed animation\n   * @internal\n   */\n  onAnimationComplete() {\n    this.animating$.next(false);\n  }\n\n  /**\n   * Return a tool's inputs\n   * @param tool Tool\n   * @returns Tool inputs\n   * @internal\n   */\n  getToolInputs(tool: Tool): { [key: string]: any } {\n    return tool.options || {};\n  }\n\n  /**\n   * Initialize an action store\n   * @param toolbar Toolbar\n   */\n  private onToolbarChange(toolbar: string[]) {\n    this.setToolbar(toolbar);\n  }\n\n  /**\n   * Activate a tool and trigger an animation or not\n   * @param tool Tool to activate\n   */\n  private onActiveToolChange(tool: Tool) {\n    if (!this.animate) {\n      this.setActiveTool(tool);\n      return;\n    }\n    this.onAnimate(() => this.setActiveTool(tool));\n  }\n\n  /**\n   * Set the active tool\n   * @param tool Tool to activate\n   */\n  private setActiveTool(tool: Tool | undefined) {\n    if (tool === undefined) {\n      this.actionStore.state.updateAll({ active: false });\n    } else {\n      const action = this.actionStore.get(tool.name);\n      if (action !== undefined) {\n        this.actionStore.state.update(action, { active: true }, true);\n      }\n    }\n\n    this.activeTool$.next(tool);\n    if (this.animate) {\n      this.animation$.next('enter');\n    }\n  }\n\n  /**\n   * Initialize the toolbar\n   */\n  private setToolbar(toolbar: string[]) {\n    const actions = toolbar.reduce((acc: Action[], toolName: string) => {\n      const tool = this.toolbox.getTool(toolName);\n      if (tool === undefined) {\n        return acc;\n      }\n\n      acc.push({\n        id: tool.name,\n        title: tool.title,\n        icon: tool.icon,\n        // iconImage: tool.iconImage,\n        tooltip: tool.tooltip,\n        args: [tool, this.toolbox],\n        handler: (_tool: Tool, _toolbox: Toolbox) => {\n          _toolbox.activateTool(_tool.name);\n        },\n        ngClass: (_tool: Tool, _toolbox: Toolbox) => {\n          return this.toolbox.activeTool$.pipe(\n            map((activeTool: Tool) => {\n              let toolActivated = false;\n              if (activeTool !== undefined && _tool.name === activeTool.name) {\n                toolActivated = true;\n              }\n\n              let childrenToolActivated = false;\n              if (\n                activeTool !== undefined &&\n                _tool.name === activeTool.parent\n              ) {\n                childrenToolActivated = true;\n              }\n\n              return {\n                'tool-activated': toolActivated,\n                'children-tool-activated': childrenToolActivated\n              };\n            })\n          );\n        }\n      });\n      return acc;\n    }, []);\n    this.actionStore.load(actions);\n    this.toolbar$.next(toolbar);\n  }\n\n  /**\n   * Observe the ongoing animation and ignore any incoming animation\n   * while one is still ongoing.\n   * @param callback Callback to execute when the animation completes\n   */\n  private onAnimate(callback: () => void) {\n    this.unAnimate();\n    this.animating$$ = this.animating$.subscribe((animation: boolean) => {\n      if (!animation) {\n        callback.call(this);\n        this.unAnimate();\n      }\n    });\n  }\n\n  /**\n   * Stop observing an animation when it's complete\n   */\n  private unAnimate() {\n    if (this.animating$$) {\n      this.animating$$.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoActionModule } from '../../action/action.module';\nimport {\n    IgoDynamicComponentModule\n} from '../../dynamic-component/dynamic-component.module';\n\nimport { ToolboxComponent } from './toolbox.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoActionModule,\n    IgoDynamicComponentModule\n  ],\n  exports: [\n    ToolboxComponent\n  ],\n  declarations: [\n    ToolboxComponent\n  ]\n})\nexport class IgoToolboxModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToolService } from './shared/tool.service';\nimport { IgoToolboxModule } from './toolbox/toolbox.module';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IgoToolboxModule\n  ],\n  declarations: []\n})\nexport class IgoToolModule {\n  static forRoot(): ModuleWithProviders<IgoToolModule> {\n    return {\n      ngModule: IgoToolModule,\n      providers: [\n        ToolService\n      ]\n    };\n  }\n}\n","<igo-dynamic-outlet\n  *ngIf=\"widget\"\n  [component]=\"widget\"\n  [inputs]=\"inputs\"\n  [subscribers]=\"getEffectiveSubscribers()\">\n</igo-dynamic-outlet>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\n\nimport { DynamicComponent } from '../../dynamic-component';\n\nimport { WidgetComponent } from '../shared/widget.interfaces';\n\n/**\n * This component dynamically renders a widget. It also subscribes\n * to the widget's 'cancel' and 'complete' events and destroys it\n * when any of those event is emitted.\n */\n@Component({\n  selector: 'igo-widget-outlet',\n  templateUrl: './widget-outlet.component.html',\n  styleUrls: ['./widget-outlet.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WidgetOutletComponent implements OnDestroy {\n\n  /**\n   * Widget subscribers to 'cancel' and 'complete'\n   * @internal\n   */\n  private baseSubscribers = {\n    cancel: (event: any) => this.onCancel(event),\n    complete: (event: any) => this.onComplete(event)\n  };\n\n  /**\n   * Widget\n   */\n  @Input() widget: DynamicComponent<WidgetComponent>;\n\n  /**\n   * Widget inputs\n   */\n  @Input() inputs: {[key: string]: any};\n\n  /**\n   * Widget subscribers\n   */\n  @Input() subscribers: {[key: string]: (event: any) => void} = {};\n\n  /**\n   * Event emitted when the widget emits 'complete'\n   */\n  @Output() complete = new EventEmitter<any>();\n\n  /**\n   * Event emitted when the widget emits 'cancel'\n   */\n  @Output() cancel = new EventEmitter<any>();\n\n  constructor() {}\n\n  /**\n   * Destroy the current widget and all it's inner subscriptions\n   * @internal\n   */\n  ngOnDestroy() {\n    this.destroyWidget();\n  }\n\n  /**\n   * Get the effective subscribers. That means a combination of the base\n   * subscribers and any subscriber given as input.\n   * @returns Combined subscribers\n   * @internal\n   */\n  getEffectiveSubscribers(): {[key: string]: (event: any) => void} {\n    const subscribers = Object.assign({}, this.subscribers);\n\n    // Base subscribers\n    Object.keys(this.baseSubscribers).forEach((key: string) => {\n      const subscriber = subscribers[key];\n      const baseSubscriber = this.baseSubscribers[key];\n      if (subscriber !== undefined) {\n        subscribers[key] = (event: any) => {\n          subscriber(event);\n          baseSubscriber(event);\n        };\n      } else {\n        subscribers[key] = baseSubscriber;\n      }\n    });\n\n    return subscribers;\n  }\n\n  /**\n   * When the widget emits 'cancel', propagate that event and destroy\n   * the widget\n   */\n  private onCancel(event: any) {\n    this.cancel.emit(event);\n    this.destroyWidget();\n  }\n\n  /**\n   * When the widget emits 'complete', propagate that event and destroy\n   * the widget\n   */\n  private onComplete(event: any) {\n    this.complete.emit(event);\n    this.destroyWidget();\n  }\n\n  /**\n   * Destroy the current widget\n   */\n  private destroyWidget() {\n    if (this.widget !== undefined) {\n      this.widget.destroy();\n    }\n    this.widget = undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  IgoDynamicComponentModule\n} from '../../dynamic-component/dynamic-component.module';\n\nimport { WidgetOutletComponent } from './widget-outlet.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoDynamicComponentModule\n  ],\n  exports: [\n    WidgetOutletComponent\n  ],\n  declarations: [\n    WidgetOutletComponent\n  ]\n})\nexport class IgoWidgetOutletModule {}\n","import { Injectable } from '@angular/core';\n\nimport { DynamicComponentService } from '../../dynamic-component/shared/dynamic-component.service';\n\nimport { Widget } from './widget';\nimport { WidgetComponent } from './widget.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetService {\n\n  constructor(private dynamicComponentService: DynamicComponentService) {}\n\n  create(widgetCls: any): Widget {\n    return this.dynamicComponentService.create(widgetCls as WidgetComponent);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoWidgetOutletModule } from './widget-outlet/widget-outlet.module';\nimport { WidgetService } from './shared/widget.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoWidgetOutletModule\n  ],\n  exports: [\n    IgoWidgetOutletModule\n  ],\n  declarations: [],\n  providers: [\n    WidgetService\n  ]\n})\nexport class IgoWidgetModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { getEntityTitle } from '../../entity';\nimport { Workspace } from '../shared/workspace';\nimport { WorkspaceStore } from '../shared/store';\n\n/**\n * Drop list that activates the selected workspace emit an event.\n */\n@Component({\n  selector: 'igo-workspace-selector',\n  templateUrl: './workspace-selector.component.html',\n  styleUrls: ['./workspace-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkspaceSelectorComponent {\n\n  /**\n   * Store that holds the available workspaces.\n   */\n  @Input() store: WorkspaceStore;\n\n  /**\n   * Wheither the selector must be disabled or not.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * Event emitted when an workspace is selected or unselected\n   */\n  @Output() selectedChange = new EventEmitter<{\n    selected: boolean;\n    value: Workspace;\n  }>();\n\n  /**\n   * @internal\n   */\n  getWorkspaceTitle(workspace: Workspace): string {\n    return getEntityTitle(workspace);\n  }\n\n  /**\n   * When an workspace is manually selected, select it into the\n   * store and emit an event.\n   * @internal\n   * @param event The selection change event\n   */\n  onSelectedChange(event: {value: Workspace}) {\n    const workspace = event.value;\n    this.store.activateWorkspace(workspace);\n    this.selectedChange.emit({selected: true, value: workspace});\n  }\n\n}\n","<igo-entity-selector\n  [store]=\"store\"\n  [multi]=\"false\"\n  [titleAccessor]=\"getWorkspaceTitle\"\n  [disabled]=\"disabled\"\n  (selectedChange)=\"onSelectedChange($event)\">\n</igo-entity-selector>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoEntitySelectorModule } from '../../entity/entity-selector/entity-selector.module';\nimport { WorkspaceSelectorComponent } from './workspace-selector.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoEntitySelectorModule\n  ],\n  exports: [\n    WorkspaceSelectorComponent\n  ],\n  declarations: [\n    WorkspaceSelectorComponent\n  ]\n})\nexport class IgoWorkspaceSelectorModule {}\n","<ng-container *ngIf=\"widget$ | async as widget\">\n  <igo-widget-outlet\n    [widget]=\"widget\"\n    [inputs]=\"widgetInputs$ | async\"\n    [subscribers]=\"widgetSubscribers$ | async\"\n    (cancel)=\"onWidgetCancel(widget)\"\n    (complete)=\"onWidgetComplete(widget)\">\n  </igo-widget-outlet>\n</ng-container>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Widget } from '../../widget';\nimport { Workspace } from '../shared/workspace';\n\n/**\n * This component dynamically render an Workspace's active widget.\n * It also deactivate that widget whenever the widget's component\n * emit the 'cancel' or 'complete' event.\n */\n@Component({\n  selector: 'igo-workspace-widget-outlet',\n  templateUrl: './workspace-widget-outlet.component.html',\n  styleUrls: ['./workspace-widget-outlet.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkspaceWidgetOutletComponent {\n\n  /**\n   * Workspace\n   */\n  @Input() workspace: Workspace;\n\n  /**\n   * Event emitted when a widget is deactivate which happens\n   * when the widget's component emits the 'cancel' or 'complete' event.\n   */\n  @Output() deactivateWidget = new EventEmitter<Widget>();\n\n  /**\n   * Observable of the workspace's active widget\n   * @internal\n   */\n  get widget$(): BehaviorSubject<Widget> { return this.workspace.widget$; }\n\n  /**\n   * Observable of the workspace's widget inputs\n   * @internal\n   */\n  get widgetInputs$(): BehaviorSubject<{[key: string]: any}> {\n    return this.workspace.widgetInputs$;\n  }\n\n  /**\n   * Observable of the workspace's widget inputs\n   * @internal\n   */\n  get widgetSubscribers$(): BehaviorSubject<{[key: string]: (event: any) => void}> {\n    return this.workspace.widgetSubscribers$;\n  }\n\n  constructor() {}\n\n  /**\n   * When a widget's component emit the 'cancel' event,\n   * deactivate that widget and emit the 'deactivateWidget' event.\n   * @param widget Widget\n   * @internal\n   */\n  onWidgetCancel(widget: Widget) {\n    this.workspace.deactivateWidget();\n    this.deactivateWidget.emit(widget);\n  }\n\n  /**\n   * When a widget's component emit the 'cancel' event,\n   * deactivate that widget and emit the 'deactivateWidget' event.\n   * @param widget Widget\n   * @internal\n   */\n  onWidgetComplete(widget: Widget) {\n    this.workspace.deactivateWidget();\n    this.deactivateWidget.emit(widget);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoWidgetOutletModule } from '../../widget/widget-outlet/widget-outlet.module';\n\nimport { WorkspaceWidgetOutletComponent } from './workspace-widget-outlet.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoWidgetOutletModule\n  ],\n  exports: [\n    WorkspaceWidgetOutletComponent\n  ],\n  declarations: [\n    WorkspaceWidgetOutletComponent\n  ]\n})\nexport class IgoWorkspaceWidgetOutletModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoWorkspaceSelectorModule } from './workspace-selector/workspace-selector.module';\nimport { IgoWorkspaceWidgetOutletModule } from './workspace-widget-outlet/workspace-widget-outlet.module';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IgoWorkspaceSelectorModule,\n    IgoWorkspaceWidgetOutletModule\n  ],\n  declarations: []\n})\nexport class IgoWorkspaceModule {}\n","import { BehaviorSubject } from 'rxjs';\n\nexport class TableDatabase {\n  /** Stream that emits whenever the data has been modified. */\n  dataChange: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  get data(): any[] {\n    return this.dataChange.value;\n  }\n\n  constructor(data?) {\n    if (data) {\n      this.dataChange.next(data);\n    }\n  }\n\n  set(data) {\n    this.dataChange.next(data);\n  }\n\n  add(item) {\n    const copiedData = this.data.slice();\n    copiedData.push(item);\n    this.set(copiedData);\n  }\n\n  remove(item) {\n    const copiedData = this.data.slice();\n    const index = copiedData.indexOf(item);\n    copiedData.splice(index, 1);\n    this.set(copiedData);\n  }\n}\n","import { Tool } from './tool.interface';\nimport { ToolService } from './tool.service';\n\nexport function ToolComponent(tool: Partial<Tool>): (cls: any) => any {\n  return (compType: any) => {\n    ToolService.register(Object.assign({}, tool, {\n      component: compType\n    } as Tool));\n  };\n}\n","import { DynamicComponent } from '../../dynamic-component/shared/dynamic-component';\nimport { WidgetComponent } from './widget.interfaces';\n\nexport class Widget extends DynamicComponent<WidgetComponent> {}\n","import { EntityStore } from '../../entity';\nimport { Workspace } from './workspace';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * The class is a specialized version of an EntityStore that stores\n * workspaces.\n */\nexport class WorkspaceStore extends EntityStore<Workspace> {\n\n  activeWorkspace$: BehaviorSubject<Workspace> = new BehaviorSubject(undefined);\n\n  /**\n   * Activate the an workspace workspace and deactivate the one currently active\n   * @param workspace Workspace\n   */\n  activateWorkspace(workspace: Workspace) {\n    const active = this.activeWorkspace$.value;\n    if (active !== undefined) {\n      active.deactivate();\n    }\n\n    this.deactivateWorkspace();\n    if (workspace !== undefined) {\n      this.state.update(workspace, {active: true, selected: true}, true);\n      this.activeWorkspace$.next(workspace);\n      workspace.activate();\n    }\n  }\n\n  /**\n   * Deactivate the current workspace\n   * @param workspace Workspace\n   */\n  deactivateWorkspace() {\n    const active = this.activeWorkspace$.value;\n    if (active !== undefined) {\n      active.deactivate();\n      this.activeWorkspace$.next(undefined);\n    }\n  }\n\n}\n","import { Subscription, BehaviorSubject, Subject } from 'rxjs';\n\nimport { ActionStore } from '../../action';\nimport { Widget } from '../../widget';\nimport { EntityStore } from '../../entity';\n\nimport { WorkspaceOptions } from './workspace.interfaces';\n\n/**\n * This class is responsible of managing the relations between\n * entities and the actions that consume them. It also defines an\n * entity table template that may be used by an entity table component.\n */\nexport class Workspace<E extends object = object> {\n\n  /**\n   * Observable of the selected widget\n   */\n  readonly widget$ = new BehaviorSubject<Widget>(undefined);\n\n  /**\n   * Observable of the selected widget's inputs\n   */\n  readonly widgetInputs$ = new BehaviorSubject<{[key: string]: any}>({});\n\n  /**\n   * Observable of the selected widget's subscribers\n   */\n  readonly widgetSubscribers$ = new BehaviorSubject<{[key: string]: (event: any) => void}>({});\n\n  /**\n   * Subscription to the selected entity\n   */\n  private entities$$: Subscription;\n\n  /**\n   * State change that trigger an update of the actions availability\n   */\n  private change: Subject<void> = new Subject();\n\n  /**\n   * Subscription to state changes\n   */\n  private change$: Subscription;\n\n  /**\n   * Workspace id\n   */\n  get id(): string { return this.options.id; }\n\n  /**\n   * Workspace title\n   */\n  get title(): string { return this.options.title; }\n\n  /**\n   * Workspace title\n   */\n  get meta(): {[key: string]: any} { return this.options.meta || {}; }\n\n  /**\n   * Entities store\n   */\n  get entityStore(): EntityStore<E> { return this.options.entityStore as EntityStore<E>; }\n\n  /**\n   * Actions store (some actions activate a widget)\n   */\n  get actionStore(): ActionStore { return this.options.actionStore; }\n\n  /**\n   * Selected widget\n   */\n  get widget(): Widget { return this.widget$.value; }\n\n  /**\n   * Whether a widget is selected\n   */\n  get hasWidget(): boolean { return this.widget !== undefined; }\n\n  constructor(protected options: WorkspaceOptions) {}\n\n  /**\n   * Whether this strategy is active\n   * @internal\n   */\n  get active(): boolean { return this.active$.value; }\n  readonly active$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  /**\n   * Activate the workspace. By doing that, the workspace will observe\n   * the selected entity (from the store) and update the actions availability.\n   * For example, some actions require an entity to be selected.\n   */\n  activate() {\n    if (this.active === true) {\n      this.deactivate();\n    }\n    this.active$.next(true);\n\n    if (this.entityStore !== undefined) {\n      this.entities$$ = this.entityStore.stateView.all$()\n        .subscribe(() => this.onStateChange());\n    }\n\n    this.change.next();\n  }\n\n  /**\n   * Deactivate the workspace. Unsubcribe to the selected entity.\n   */\n  deactivate() {\n    this.active$.next(false);\n    this.deactivateWidget();\n\n    if (this.entities$$ !== undefined) {\n      this.entities$$.unsubscribe();\n    }\n    if (this.change$ !== undefined) {\n      this.change$.unsubscribe();\n    }\n  }\n\n  /**\n   * Activate a widget. In itself, activating a widget doesn't render it but,\n   * if an WorkspaceWidgetOutlet component is bound to this workspace, the widget will\n   * show up.\n   * @param widget Widget\n   * @param inputs Inputs the widget will receive\n   */\n  activateWidget(\n    widget: Widget,\n    inputs: {[key: string]: any} = {},\n    subscribers: {[key: string]: (event: any) => void} = {}\n  ) {\n    this.widget$.next(widget);\n    this.widgetInputs$.next(inputs);\n    this.widgetSubscribers$.next(subscribers);\n    this.change.next();\n  }\n\n  /**\n   * Deactivate a widget.\n   */\n  deactivateWidget() {\n    this.widget$.next(undefined);\n    this.change.next();\n  }\n\n  /**\n   * When the state changes, update the actions availability.\n   */\n  private onStateChange() {\n    this.change.next();\n  }\n\n}\n","/*\n * Public API Surface of common\n */\n\nexport * from './lib/action/action.module';\nexport * from './lib/action/actionbar/actionbar.module';\nexport * from './lib/backdrop/backdrop.module';\nexport * from './lib/badge-icon/badge-icon.module';\nexport * from './lib/clickout/clickout.module';\nexport * from './lib/clone/clone.module';\nexport * from './lib/collapsible/collapsible.module';\nexport * from './lib/confirm-dialog/confirm-dialog.module';\nexport * from './lib/context-menu/context-menu.module';\nexport * from './lib/custom-html/custom-html.module';\nexport * from './lib/drag-drop/drag-drop.module';\nexport * from './lib/dynamic-component/dynamic-component.module';\nexport * from './lib/dynamic-component/dynamic-outlet/dynamic-outlet.module';\nexport * from './lib/flexible/flexible.module';\nexport * from './lib/form/form.module';\nexport * from './lib/form/form/form.module';\nexport * from './lib/home-button/home-button.module';\nexport * from './lib/form/form-field/form-field.module';\nexport * from './lib/form/form-group/form-group.module';\nexport * from './lib/entity/entity.module';\nexport * from './lib/entity/entity-selector/entity-selector.module';\nexport * from './lib/entity/entity-table/entity-table.module';\nexport * from './lib/entity/entity-table-paginator/entity-table-paginator.module';\nexport * from './lib/image/image.module';\nexport * from './lib/interactive-tour/interactive-tour.module';\nexport * from './lib/json-dialog/json-dialog.module';\nexport * from './lib/keyvalue/keyvalue.module';\nexport * from './lib/list/list.module';\nexport * from './lib/panel/panel.module';\nexport * from './lib/sidenav/sidenav.module';\nexport * from './lib/spinner/spinner.module';\nexport * from './lib/stop-propagation/stop-propagation.module';\nexport * from './lib/table/table.module';\nexport * from './lib/tool/tool.module';\nexport * from './lib/tool/toolbox/toolbox.module';\nexport * from './lib/widget/widget.module';\nexport * from './lib/widget/widget-outlet/widget-outlet.module';\nexport * from './lib/workspace/workspace.module';\nexport * from './lib/workspace/workspace-selector/workspace-selector.module';\nexport * from './lib/workspace/workspace-widget-outlet/workspace-widget-outlet.module';\n\nexport * from './lib/action';\nexport * from './lib/backdrop';\nexport * from './lib/badge-icon';\nexport * from './lib/clickout';\nexport * from './lib/clone';\nexport * from './lib/collapsible';\nexport * from './lib/confirm-dialog';\nexport * from './lib/context-menu';\nexport * from './lib/custom-html';\nexport * from './lib/drag-drop';\nexport * from './lib/dynamic-component';\nexport * from './lib/form';\nexport * from './lib/home-button';\nexport * from './lib/entity';\nexport * from './lib/flexible';\nexport * from './lib/image';\nexport * from './lib/interactive-tour';\nexport * from './lib/json-dialog';\nexport * from './lib/keyvalue';\nexport * from './lib/list';\nexport * from './lib/panel';\nexport * from './lib/sidenav';\nexport * from './lib/spinner';\nexport * from './lib/stop-propagation';\nexport * from './lib/table';\nexport * from './lib/tool';\nexport * from './lib/widget';\nexport * from './lib/workspace';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}