import { AfterViewInit, OnInit, OnDestroy, ElementRef } from '@angular/core';
import type { QueryList } from '@angular/core';
import { ListItemDirective } from './list-item.directive';
import * as i0 from "@angular/core";
export declare class ListComponent implements AfterViewInit, OnInit, OnDestroy {
    private el;
    get navigation(): boolean;
    set navigation(value: boolean);
    private _navigation;
    get selection(): boolean;
    set selection(value: boolean);
    private _selection;
    get selectedItem(): ListItemDirective;
    set selectedItem(value: ListItemDirective);
    private _selectedItem;
    get focusedItem(): ListItemDirective;
    set focusedItem(value: ListItemDirective);
    private _focusedItem;
    private navigationEnabled;
    private listItems$$;
    private subscriptions;
    listItems: QueryList<ListItemDirective>;
    handleKeyboardEvent(event: KeyboardEvent): void;
    constructor(el: ElementRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    focus(item?: ListItemDirective): void;
    unfocus(): void;
    focusNext(): void;
    focusPrevious(): void;
    select(item?: ListItemDirective): void;
    unselect(): void;
    enableNavigation(): void;
    disableNavigation(): void;
    scrollToItem(item: ListItemDirective): void;
    isScrolledIntoView(elem: any): boolean;
    private init;
    private subscribe;
    private unsubscribe;
    private handleItemBeforeFocus;
    private handleItemFocus;
    private handleItemBeforeSelect;
    private handleItemSelect;
    private findSelectedItem;
    private findFocusedItem;
    private getFocusedIndex;
    private navigate;
    static ɵfac: i0.ɵɵFactoryDeclaration<ListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ListComponent, "igo-list", never, { "navigation": "navigation"; "selection": "selection"; }, {}, ["listItems"], ["*"]>;
}
