import olSourceVector from 'ol/source/Vector';
import * as olformat from 'ol/format';
import { DataSource } from './datasource';
export class FeatureDataSource extends DataSource {
    createOlSource() {
        const sourceOptions = {
            format: this.getSourceFormatFromOptions(this.options)
        };
        return new olSourceVector(Object.assign(sourceOptions, this.options));
    }
    getSourceFormatFromOptions(options) {
        if (options.format) {
            return options.format;
        }
        let olFormatCls;
        const formatType = options.formatType;
        if (!formatType) {
            olFormatCls = olformat.GeoJSON;
        }
        else {
            olFormatCls = olformat[formatType];
            if (olFormatCls === undefined) {
                throw new Error('Invalid vector source format ${formatType}.');
            }
        }
        const formatOptions = options.formatOptions;
        let format;
        if (formatOptions) {
            format = new olFormatCls(formatOptions);
        }
        else {
            format = new olFormatCls();
        }
        return format;
    }
    onUnwatch() { }
    get queryTitle() {
        return this.options.queryTitle
            ? this.options.queryTitle
            : 'title';
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS1kYXRhc291cmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvZ2VvL3NyYy9saWIvZGF0YXNvdXJjZS9zaGFyZWQvZGF0YXNvdXJjZXMvZmVhdHVyZS1kYXRhc291cmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sY0FBYyxNQUFNLGtCQUFrQixDQUFDO0FBQzlDLE9BQU8sS0FBSyxRQUFRLE1BQU0sV0FBVyxDQUFDO0FBR3RDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFHMUMsTUFBTSxPQUFPLGlCQUFrQixTQUFRLFVBQVU7SUFHckMsY0FBYztRQUN0QixNQUFNLGFBQWEsR0FBRztZQUNwQixNQUFNLEVBQUUsSUFBSSxDQUFDLDBCQUEwQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7U0FDdEQsQ0FBQztRQUVGLE9BQU8sSUFBSSxjQUFjLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVTLDBCQUEwQixDQUFDLE9BQWlDO1FBQ3BFLElBQUksT0FBTyxDQUFDLE1BQU0sRUFBRTtZQUNsQixPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUM7U0FDdkI7UUFDRCxJQUFJLFdBQVcsQ0FBQztRQUNoQixNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDZixXQUFXLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQztTQUNoQzthQUFNO1lBQ0wsV0FBVyxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNuQyxJQUFJLFdBQVcsS0FBSyxTQUFTLEVBQUU7Z0JBQzdCLE1BQU0sSUFBSSxLQUFLLENBQUMsNkNBQTZDLENBQUMsQ0FBQzthQUNoRTtTQUNGO1FBRUQsTUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUM1QyxJQUFJLE1BQU0sQ0FBQztRQUNYLElBQUksYUFBYSxFQUFFO1lBQ2pCLE1BQU0sR0FBRyxJQUFJLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUN6QzthQUFNO1lBQ0wsTUFBTSxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7U0FDNUI7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRU0sU0FBUyxLQUFJLENBQUM7SUFFckIsSUFBSSxVQUFVO1FBQ1osT0FBUSxJQUFJLENBQUMsT0FBZSxDQUFDLFVBQVU7WUFDckMsQ0FBQyxDQUFFLElBQUksQ0FBQyxPQUFlLENBQUMsVUFBVTtZQUNsQyxDQUFDLENBQUMsT0FBTyxDQUFDO0lBQ2QsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG9sU291cmNlVmVjdG9yIGZyb20gJ29sL3NvdXJjZS9WZWN0b3InO1xuaW1wb3J0ICogYXMgb2xmb3JtYXQgZnJvbSAnb2wvZm9ybWF0JztcbmltcG9ydCB0eXBlIHsgZGVmYXVsdCBhcyBPbEdlb21ldHJ5IH0gZnJvbSAnb2wvZ2VvbS9HZW9tZXRyeSc7XG5cbmltcG9ydCB7IERhdGFTb3VyY2UgfSBmcm9tICcuL2RhdGFzb3VyY2UnO1xuaW1wb3J0IHsgRmVhdHVyZURhdGFTb3VyY2VPcHRpb25zIH0gZnJvbSAnLi9mZWF0dXJlLWRhdGFzb3VyY2UuaW50ZXJmYWNlJztcblxuZXhwb3J0IGNsYXNzIEZlYXR1cmVEYXRhU291cmNlIGV4dGVuZHMgRGF0YVNvdXJjZSB7XG4gIHB1YmxpYyBvcHRpb25zOiBGZWF0dXJlRGF0YVNvdXJjZU9wdGlvbnM7XG4gIHB1YmxpYyBvbDogb2xTb3VyY2VWZWN0b3I8T2xHZW9tZXRyeT47XG4gIHByb3RlY3RlZCBjcmVhdGVPbFNvdXJjZSgpOiBvbFNvdXJjZVZlY3RvcjxPbEdlb21ldHJ5PiB7XG4gICAgY29uc3Qgc291cmNlT3B0aW9ucyA9IHtcbiAgICAgIGZvcm1hdDogdGhpcy5nZXRTb3VyY2VGb3JtYXRGcm9tT3B0aW9ucyh0aGlzLm9wdGlvbnMpXG4gICAgfTtcblxuICAgIHJldHVybiBuZXcgb2xTb3VyY2VWZWN0b3IoT2JqZWN0LmFzc2lnbihzb3VyY2VPcHRpb25zLCB0aGlzLm9wdGlvbnMpKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXRTb3VyY2VGb3JtYXRGcm9tT3B0aW9ucyhvcHRpb25zOiBGZWF0dXJlRGF0YVNvdXJjZU9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5mb3JtYXQpIHtcbiAgICAgIHJldHVybiBvcHRpb25zLmZvcm1hdDtcbiAgICB9XG4gICAgbGV0IG9sRm9ybWF0Q2xzO1xuICAgIGNvbnN0IGZvcm1hdFR5cGUgPSBvcHRpb25zLmZvcm1hdFR5cGU7XG4gICAgaWYgKCFmb3JtYXRUeXBlKSB7XG4gICAgICBvbEZvcm1hdENscyA9IG9sZm9ybWF0Lkdlb0pTT047XG4gICAgfSBlbHNlIHtcbiAgICAgIG9sRm9ybWF0Q2xzID0gb2xmb3JtYXRbZm9ybWF0VHlwZV07XG4gICAgICBpZiAob2xGb3JtYXRDbHMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdmVjdG9yIHNvdXJjZSBmb3JtYXQgJHtmb3JtYXRUeXBlfS4nKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBmb3JtYXRPcHRpb25zID0gb3B0aW9ucy5mb3JtYXRPcHRpb25zO1xuICAgIGxldCBmb3JtYXQ7XG4gICAgaWYgKGZvcm1hdE9wdGlvbnMpIHtcbiAgICAgIGZvcm1hdCA9IG5ldyBvbEZvcm1hdENscyhmb3JtYXRPcHRpb25zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9ybWF0ID0gbmV3IG9sRm9ybWF0Q2xzKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZvcm1hdDtcbiAgfVxuXG4gIHB1YmxpYyBvblVud2F0Y2goKSB7fVxuXG4gIGdldCBxdWVyeVRpdGxlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICh0aGlzLm9wdGlvbnMgYXMgYW55KS5xdWVyeVRpdGxlXG4gICAgICA/ICh0aGlzLm9wdGlvbnMgYXMgYW55KS5xdWVyeVRpdGxlXG4gICAgICA6ICd0aXRsZSc7XG4gIH1cbn1cbiJdfQ==