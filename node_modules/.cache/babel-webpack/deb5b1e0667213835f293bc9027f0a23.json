{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/TileQueue\n */\n\n\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nvar TileQueue = function (_super) {\n  __extends(TileQueue, _super);\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n\n\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n    var _this = _super.call(this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function (element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function (element) {\n      return (\n        /** @type {import(\"./Tile.js\").default} */\n        element[0].getKey()\n      );\n    }) || this;\n    /** @private */\n\n\n    _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n\n    _this.tileChangeCallback_ = tileChangeCallback;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.tilesLoading_ = 0;\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n\n    _this.tilesLoadingKeys_ = {};\n    return _this;\n  }\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n\n\n  TileQueue.prototype.enqueue = function (element) {\n    var added = _super.prototype.enqueue.call(this, element);\n\n    if (added) {\n      var tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n\n    return added;\n  };\n  /**\n   * @return {number} Number of tiles loading.\n   */\n\n\n  TileQueue.prototype.getTilesLoading = function () {\n    return this.tilesLoading_;\n  };\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n\n\n  TileQueue.prototype.handleTileChange = function (event) {\n    var tile = event.target;\n    var state = tile.getState();\n\n    if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      var tileKey = tile.getKey();\n\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n\n      this.tileChangeCallback_();\n    }\n  };\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n\n\n  TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var state, tile, tileKey;\n\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads && this.getCount() > 0) {\n      tile = this.dequeue()[0];\n      tileKey = tile.getKey();\n      state = tile.getState();\n\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue);\n\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\n\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  } // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n\n\n  var center = frameState.viewState.center;\n  var deltaX = tileCenter[0] - center[0];\n  var deltaY = tileCenter[1] - center[1];\n  return 65536 * Math.log(tileResolution) + Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n}","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/TileQueue.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","EventType","PriorityQueue","DROP","TileState","TileQueue","_super","tilePriorityFunction","tileChangeCallback","_this","element","apply","getKey","boundHandleTileChange_","handleTileChange","bind","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","tile","addEventListener","CHANGE","getTilesLoading","event","target","state","getState","LOADED","ERROR","EMPTY","removeEventListener","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","IDLE","load","getTilePriority","frameState","tileSourceKey","tileCenter","tileResolution","wantedTiles","center","viewState","deltaX","deltaY","Math","log","sqrt"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (state === TileState.LOADED ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n"]},"metadata":{},"sourceType":"module"}