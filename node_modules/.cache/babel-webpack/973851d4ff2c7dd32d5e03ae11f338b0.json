{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/KML\n */\n\n\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, parse, parseNode, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { extend, includes } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readBoolean, readDecimal, readString, writeBooleanTextNode, writeCDATASection, writeDecimalTextNode, writeStringTextNode } from './xsd.js';\nimport { toRadians } from '../math.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\n\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\n\nvar NAMESPACE_URIS = [null, 'http://earth.google.com/kml/2.0', 'http://earth.google.com/kml/2.1', 'http://earth.google.com/kml/2.2', 'http://www.opengis.net/kml/2.2'];\n/**\n * @const\n * @type {string}\n */\n\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' + 'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\n\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n  'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n  'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n  'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n  'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n  'Style': makeObjectPropertySetter(readStyle),\n  'StyleMap': placemarkStyleMapParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n  'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n  'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\n\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\n\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\n\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\n\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\n\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\n\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\n\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\n\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\n\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\n\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\n\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\n\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\n\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\n\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\n\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\n\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\n\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\n\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n  DEFAULT_IMAGE_STYLE_SRC = 'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\n\n\nvar TEXTAREA;\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\n\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\n\n\nvar KML = function (_super) {\n  __extends(KML, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function KML(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n\n\n    _this.dataProjection = getProjection('EPSG:4326');\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n\n    _this.defaultStyle_ = options.defaultStyle ? options.defaultStyle : DEFAULT_STYLE_ARRAY;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.extractStyles_ = options.extractStyles !== undefined ? options.extractStyles : true;\n    /**\n     * @type {boolean}\n     */\n\n    _this.writeStyles_ = options.writeStyles !== undefined ? options.writeStyles : true;\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n\n    _this.sharedStyles_ = {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.showPointNames_ = options.showPointNames !== undefined ? options.showPointNames : true;\n    /**\n     * @type {null|string}\n     */\n\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n    /**\n     * @type {IconUrlFunction}\n     */\n\n    _this.iconUrlFunction_ = options.iconUrlFunction ? options.iconUrlFunction : defaultIconUrlFunction;\n    _this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n    return _this;\n  }\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n\n\n  KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n    // FIXME use scope somehow\n    var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n\n\n  KML.prototype.readPlacemark_ = function (node, objectStack) {\n    var object = pushParseAndPop({\n      'geometry': null\n    }, PLACEMARK_PARSERS, node, objectStack, this);\n\n    if (!object) {\n      return undefined;\n    }\n\n    var feature = new Feature();\n    var id = node.getAttribute('id');\n\n    if (id !== null) {\n      feature.setId(id);\n    }\n\n    var options = objectStack[0];\n    var geometry = object['geometry'];\n\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      var style = object['Style'];\n      var styleUrl = object['styleUrl'];\n      var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n\n    delete object['Style']; // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n    return feature;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n\n\n  KML.prototype.readSharedStyle_ = function (node, objectStack) {\n    var id = node.getAttribute('id');\n\n    if (id !== null) {\n      var style = readStyle.call(this, node, objectStack);\n\n      if (style) {\n        var styleUri = void 0;\n        var baseURI = node.baseURI;\n\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n\n        if (baseURI) {\n          var url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n\n\n  KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n    var id = node.getAttribute('id');\n\n    if (id === null) {\n      return;\n    }\n\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n\n    if (!styleMapValue) {\n      return;\n    }\n\n    var styleUri;\n    var baseURI = node.baseURI;\n\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n\n    if (baseURI) {\n      var url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n\n    this.sharedStyles_[styleUri] = styleMapValue;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n\n\n  KML.prototype.readFeatureFromNode = function (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n\n    var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n\n    var features;\n    var localName = node.localName;\n\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var fs = this.readFeaturesFromNode(n, opt_options);\n\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n\n      return features;\n    } else {\n      return [];\n    }\n  };\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n\n\n  KML.prototype.readName = function (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(source);\n    } else {\n      return this.readNameFromNode(source);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n\n\n  KML.prototype.readNameFromDocument = function (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        var name_1 = this.readNameFromNode(n);\n\n        if (name_1) {\n          return name_1;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n\n\n  KML.prototype.readNameFromNode = function (node) {\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var localName = n.localName;\n\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'Placemark' || localName == 'kml')) {\n        var name_2 = this.readNameFromNode(n);\n\n        if (name_2) {\n          return name_2;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n\n\n  KML.prototype.readNetworkLinks = function (source) {\n    var networkLinks = [];\n\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(source));\n    } else {\n      extend(networkLinks, this.readNetworkLinksFromNode(source));\n    }\n\n    return networkLinks;\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n\n\n  KML.prototype.readNetworkLinksFromDocument = function (doc) {\n    var networkLinks = [];\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n\n    return networkLinks;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n\n\n  KML.prototype.readNetworkLinksFromNode = function (node) {\n    var networkLinks = [];\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'NetworkLink') {\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var localName = n.localName;\n\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n\n    return networkLinks;\n  };\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n\n\n  KML.prototype.readRegion = function (source) {\n    var regions = [];\n\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(source));\n    } else {\n      extend(regions, this.readRegionFromNode(source));\n    }\n\n    return regions;\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n\n\n  KML.prototype.readRegionFromDocument = function (doc) {\n    var regions = [];\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n\n    return regions;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n\n\n  KML.prototype.readRegionFromNode = function (node) {\n    var regions = [];\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var localName = n.localName;\n\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n\n    return regions;\n  };\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n\n\n  KML.prototype.writeFeaturesNode = function (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    var\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    context = {\n      node: kml\n    };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n\n    var properties = {};\n\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n    return kml;\n  };\n\n  return KML;\n}(XMLFeature);\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\n\n\nfunction createNameStyleFunction(foundStyle, name) {\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  var imageStyle = foundStyle.getImage();\n\n  if (imageStyle) {\n    var imageSize = imageStyle.getSize();\n\n    if (imageSize && imageSize.length == 2) {\n      var imageScale = imageStyle.getScaleArray();\n      var anchor = imageStyle.getAnchor(); // Offset the label to be centered to the right of the icon,\n      // if there is one.\n\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n\n  var textStyle = foundStyle.getText();\n\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n  var nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle\n  });\n  return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\n\n\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      var drawName = showPointNames;\n      var name = '';\n      var multiGeometryPoints = [];\n\n      if (drawName) {\n        var geometry = feature.getGeometry();\n\n        if (geometry) {\n          var type = geometry.getType();\n\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry.getGeometriesArrayRecursive().filter(function (geometry) {\n              var type = geometry.getType();\n              return type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n            });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName = type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = feature.get('name');\n        drawName = drawName && !!name; // convert any html character codes\n\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      var featureStyle = defaultStyle;\n\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n\n      if (drawName) {\n        var nameStyle = createNameStyleFunction(featureStyle[0], name);\n\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          var baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n\n        return nameStyle;\n      }\n\n      return featureStyle;\n    }\n  );\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\n\n\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\n\n\nfunction readColor(node) {\n  var s = getAllTextContent(node, false); // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n\n  if (m) {\n    var hexColor = m[1];\n    return [parseInt(hexColor.substr(6, 2), 16), parseInt(hexColor.substr(4, 2), 16), parseInt(hexColor.substr(2, 2), 16), parseInt(hexColor.substr(0, 2), 16) / 255];\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\n\n\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = []; // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n\n  s = s.replace(/\\s*,\\s*/g, ',');\n  var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  var m;\n\n  while (m = re.exec(s)) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n\n  if (s !== '') {\n    return undefined;\n  }\n\n  return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\n\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\n\n\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  var s = getAllTextContent(node, false).trim().replace(/^(?!.*#)/, '#');\n  var baseURI = node.baseURI;\n\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\n\n\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\n\n\nfunction readScale(node) {\n  return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\n\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  var src;\n  var href = IconObject['href'];\n\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = object['hotSpot'];\n\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (/pushpin/.test(src)) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (/arrow-reverse/.test(src)) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (/paddle/.test(src)) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  var offset;\n  var x = IconObject['x'];\n  var y = IconObject['y'];\n\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = IconObject['w'];\n  var h = IconObject['h'];\n\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = object['heading'];\n\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = object['scale'];\n  var color = object['color'];\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    var imageStyle_1 = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color\n    });\n    var imageScale_1 = imageStyle_1.getScaleArray()[0];\n    var imageSize = imageStyle_1.getSize();\n\n    if (imageSize === null) {\n      var imageState = imageStyle_1.getImageState();\n\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        var listener_1 = function () {\n          var imageState = imageStyle_1.getImageState();\n\n          if (!(imageState === ImageState.IDLE || imageState === ImageState.LOADING)) {\n            var imageSize_1 = imageStyle_1.getSize();\n\n            if (imageSize_1 && imageSize_1.length == 2) {\n              var resizeScale = scaleForSize(imageSize_1);\n              imageStyle_1.setScale(imageScale_1 * resizeScale);\n            }\n\n            imageStyle_1.unlistenImageChange(listener_1);\n          }\n        };\n\n        imageStyle_1.listenImageChange(listener_1);\n\n        if (imageState === ImageState.IDLE) {\n          imageStyle_1.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      var resizeScale = scaleForSize(imageSize);\n      imageStyle_1.setScale(imageScale_1 * resizeScale);\n    }\n\n    styleObject['imageStyle'] = imageStyle_1;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color: 'color' in object ? object['color'] : DEFAULT_COLOR\n    }),\n    scale: object['scale']\n  });\n  styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color: 'color' in object ? object['color'] : DEFAULT_COLOR,\n    width: 'width' in object ? object['width'] : 1\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color: 'color' in object ? object['color'] : DEFAULT_COLOR\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = object['fill'];\n\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n\n  var outline = object['outline'];\n\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\n\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject = objectStack[objectStack.length - 1];\n  var coordinates = gxTrackObject.coordinates;\n  var s = getAllTextContent(node, false);\n  var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\n\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n\n  if (!lineStrings) {\n    return undefined;\n  }\n\n  return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\n\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop({\n    coordinates: [],\n    whens: []\n  }, GX_TRACK_PARSERS, node, objectStack);\n\n  if (!gxTrackObject) {\n    return undefined;\n  }\n\n  var flatCoordinates = [];\n  var coordinates = gxTrackObject.coordinates;\n  var whens = gxTrackObject.whens;\n\n  for (var i = 0, ii = Math.min(coordinates.length, whens.length); i < ii; ++i) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(coordinates[i][0], coordinates[i][1], coordinates[i][2], whens[i]);\n    }\n  }\n\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'x': makeObjectPropertySetter(readDecimal),\n  'y': makeObjectPropertySetter(readDecimal),\n  'w': makeObjectPropertySetter(readDecimal),\n  'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\n\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\n\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\n\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\n\n\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\n\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n\n  if (!geometries) {\n    return null;\n  }\n\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n\n  if (homogeneous) {\n    var layout = void 0;\n    var flatCoordinates = void 0;\n\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n\n      for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n\n  return multiGeometry;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\n\n\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\n\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\n\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n\n  if (!styleObject) {\n    return null;\n  }\n\n  var fillStyle = 'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE;\n  var fill = styleObject['fill'];\n\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n\n  var imageStyle;\n\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n\n  var textStyle = 'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE;\n  var strokeStyle = 'strokeStyle' in styleObject ? styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE;\n  var outline = styleObject['outline'];\n\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [new Style({\n      geometry: function (feature) {\n        var geometry = feature.getGeometry();\n        var type = geometry.getType();\n\n        if (type === GeometryType.GEOMETRY_COLLECTION) {\n          var collection = geometry;\n          return new GeometryCollection(collection.getGeometriesArrayRecursive().filter(function (geometry) {\n            var type = geometry.getType();\n            return type !== GeometryType.POLYGON && type !== GeometryType.MULTI_POLYGON;\n          }));\n        } else if (type !== GeometryType.POLYGON && type !== GeometryType.MULTI_POLYGON) {\n          return geometry;\n        }\n      },\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined // FIXME\n\n    }), new Style({\n      geometry: function (feature) {\n        var geometry = feature.getGeometry();\n        var type = geometry.getType();\n\n        if (type === GeometryType.GEOMETRY_COLLECTION) {\n          var collection = geometry;\n          return new GeometryCollection(collection.getGeometriesArrayRecursive().filter(function (geometry) {\n            var type = geometry.getType();\n            return type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON;\n          }));\n        } else if (type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON) {\n          return geometry;\n        }\n      },\n      fill: fillStyle,\n      stroke: null,\n      zIndex: undefined // FIXME\n\n    })];\n  }\n\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n\n  })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\n\n\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject = objectStack[objectStack.length - 1];\n\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      }\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n\n  delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n\n  if (!pairObject) {\n    return;\n  }\n\n  var key = pairObject['key'];\n\n  if (key && key == 'normal') {\n    var styleUrl = pairObject['styleUrl'];\n\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n\n    var style = pairObject['Style'];\n\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n\n  if (!styleMapValue) {\n    return;\n  }\n\n  var placemarkObject = objectStack[objectStack.length - 1];\n\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject = objectStack[objectStack.length - 1];\n    featureObject[name] = data;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var regionObject = objectStack[objectStack.length - 1];\n  var extent = [parseFloat(object['west']), parseFloat(object['south']), parseFloat(object['east']), parseFloat(object['north'])];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var lodObject = objectStack[objectStack.length - 1];\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction innerBoundaryIsParser(node, objectStack) {\n  var innerBoundaryFlatLinearRings = pushParseAndPop([], INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    var flatLinearRings = objectStack[objectStack.length - 1];\n    flatLinearRings.push.apply(flatLinearRings, innerBoundaryFlatLinearRings);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n\n  if (flatLinearRing) {\n    var flatLinearRings = objectStack[objectStack.length - 1];\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction whenParser(node, objectStack) {\n  var gxTrackObject = objectStack[objectStack.length - 1];\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\n\n\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n\n  for (var i = 0; i < 4; ++i) {\n    var hex = Math.floor(abgr[i]).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n\n  writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var layout = context['layout'];\n  var stride = context['stride'];\n  var dimension;\n\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var ii = coordinates.length;\n  var text = '';\n\n  if (ii > 0) {\n    text += coordinates[0];\n\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n\n      for (var d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n\n  writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\n\n\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\n\n\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\n\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\n\n\nfunction writeDocument(node, features, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\n\n\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{\n      name: names[i],\n      value: values[i]\n    }], objectStack);\n  }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'x': makeChildAppender(writeDecimalTextNode),\n  'y': makeChildAppender(writeDecimalTextNode),\n  'w': makeChildAppender(writeDecimalTextNode),\n  'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\n\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeIcon(node, icon, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['scale', 'heading', 'Icon', 'color', 'hotSpot']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeIconStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var\n  /** @type {Object<string, any>} */\n  properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n\n    var origin_1 = style.getOrigin(); // top-left\n\n    if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n      iconProperties['x'] = origin_1[0];\n      iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var\n      /** @type {Vec2} */\n      hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n  var scale = style.getScaleArray()[0];\n  var imageSize = size;\n\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n\n  if (imageSize.length == 2) {\n    var resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var color = style.getColor();\n\n  if (color) {\n    properties['color'] = color;\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'scale']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeLabelStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {};\n  var fill = style.getFill();\n\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n\n  var scale = style.getScale();\n\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeLineStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\n\n\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\n\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    value.getType()]);\n  }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\n\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {\n    node: node\n  };\n  var type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n\n  var geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n\n  var factory;\n\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */\n    geometry.getGeometriesArrayRecursive().forEach(function (geometry) {\n      var type = geometry.getType();\n\n      if (type === GeometryType.MULTI_POINT) {\n        geometries = geometries.concat(\n        /** @type {MultiPoint} */\n        geometry.getPoints());\n      } else if (type === GeometryType.MULTI_LINE_STRING) {\n        geometries = geometries.concat(\n        /** @type {MultiLineString} */\n        geometry.getLineStrings());\n      } else if (type === GeometryType.MULTI_POLYGON) {\n        geometries = geometries.concat(\n        /** @type {MultiPolygon} */\n        geometry.getPolygons());\n      } else if (type === GeometryType.POINT || type === GeometryType.LINE_STRING || type === GeometryType.POLYGON) {\n        geometries.push(geometry);\n      } else {\n        assert(false, 39); // Unknown geometry type\n      }\n    });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries =\n    /** @type {MultiPoint} */\n    geometry.getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries =\n    /** @type {MultiLineString} */\n    geometry.getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries =\n    /** @type {MultiPolygon} */\n    geometry.getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n\n  pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'open', 'visibility', 'address', 'phoneNumber', 'description', 'styleUrl', 'Style']);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\n\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\n\nfunction writePlacemark(node, feature, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  }; // set id\n\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  } // serialize properties (properties unknown to KML are not serialized)\n\n\n  var properties = feature.getProperties(); // don't export these to ExtendedData\n\n  var filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1\n  };\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function (v) {\n    return !filter[v];\n  });\n  var styleFunction = feature.getStyleFunction();\n\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n\n    if (styles) {\n      var styleArray = Array.isArray(styles) ? styles : [styles];\n      var pointStyles = styleArray;\n\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          var geometry = style.getGeometryFunction()(feature);\n\n          if (geometry) {\n            var type = geometry.getType();\n\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return (\n                /** @type {GeometryCollection} */\n                geometry.getGeometriesArrayRecursive().filter(function (geometry) {\n                  var type = geometry.getType();\n                  return type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n                }).length\n              );\n            }\n\n            return type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        });\n      }\n\n      if (this.writeStyles_) {\n        var lineStyles = styleArray;\n        var polyStyles = styleArray;\n\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            var geometry = style.getGeometryFunction()(feature);\n\n            if (geometry) {\n              var type = geometry.getType();\n\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return (\n                  /** @type {GeometryCollection} */\n                  geometry.getGeometriesArrayRecursive().filter(function (geometry) {\n                    var type = geometry.getType();\n                    return type === GeometryType.LINE_STRING || type === GeometryType.MULTI_LINE_STRING;\n                  }).length\n                );\n              }\n\n              return type === GeometryType.LINE_STRING || type === GeometryType.MULTI_LINE_STRING;\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            var geometry = style.getGeometryFunction()(feature);\n\n            if (geometry) {\n              var type = geometry.getType();\n\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return (\n                  /** @type {GeometryCollection} */\n                  geometry.getGeometriesArrayRecursive().filter(function (geometry) {\n                    var type = geometry.getType();\n                    return type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON;\n                  }).length\n                );\n              }\n\n              return type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON;\n            }\n          });\n        }\n\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles\n        };\n      }\n\n      if (pointStyles.length && properties['name'] === undefined) {\n        var textStyle = pointStyles[0].getText();\n\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {\n      names: keys,\n      values: sequence\n    };\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  } // serialize geometry\n\n\n  var options = objectStack[0];\n  var geometry = feature.getGeometry();\n\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['extrude', 'tessellate', 'altitudeMode', 'coordinates']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride(); // serialize properties (properties unknown to KML are not serialized)\n\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'fill', 'outline']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  }; // inner rings\n\n  pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack); // outer ring\n\n  pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\n\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePolyStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var fill = style.getFill();\n  var stroke = style.getStroke();\n  var properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\n\n\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\n\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeStyle(node, styles, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {};\n\n  if (styles.pointStyles.length) {\n    var textStyle = styles.pointStyles[0].getText();\n\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n\n    var imageStyle = styles.pointStyles[0].getImage();\n\n    if (imageStyle && typeof\n    /** @type {?} */\n    imageStyle.getSrc === 'function') {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n\n  if (styles.lineStyles.length) {\n    var strokeStyle = styles.lineStyles[0].getStroke();\n\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n\n  if (styles.polyStyles.length) {\n    var strokeStyle = styles.polyStyles[0].getStroke();\n\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\n\n\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/format/KML.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Feature","Fill","GeometryCollection","GeometryLayout","GeometryType","Icon","IconAnchorUnits","IconOrigin","ImageState","LineString","MultiLineString","MultiPoint","MultiPolygon","Point","Polygon","Stroke","Style","Text","XMLFeature","OBJECT_PROPERTY_NODE_FACTORY","XML_SCHEMA_INSTANCE_URI","createElementNS","getAllTextContent","isDocument","makeArrayExtender","makeArrayPusher","makeChildAppender","makeObjectPropertySetter","makeReplacer","makeSequence","makeSimpleNodeFactory","makeStructureNS","parse","parseNode","pushParseAndPop","pushSerializeAndPop","asArray","assert","extend","includes","get","getProjection","readBoolean","readDecimal","readString","writeBooleanTextNode","writeCDATASection","writeDecimalTextNode","writeStringTextNode","toRadians","transformGeometryWithOptions","GX_NAMESPACE_URIS","NAMESPACE_URIS","SCHEMA_LOCATION","ICON_ANCHOR_UNITS_MAP","FRACTION","PIXELS","PLACEMARK_PARSERS","extendedDataParser","regionParser","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","placemarkStyleMapParser","readStyleURL","readGxMultiTrack","readGxTrack","NETWORK_LINK_PARSERS","linkParser","LINK_PARSERS","readURI","REGION_PARSERS","latLonAltBoxParser","lodParser","KML_SEQUENCE","KML_SERIALIZERS","writeDocument","writePlacemark","DEFAULT_COLOR","DEFAULT_FILL_STYLE","getDefaultFillStyle","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_STYLE","getDefaultImageStyle","DEFAULT_NO_IMAGE_STYLE","DEFAULT_STROKE_STYLE","getDefaultStrokeStyle","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","getDefaultTextStyle","DEFAULT_STYLE","getDefaultStyle","DEFAULT_STYLE_ARRAY","getDefaultStyleArray","scaleForSize","size","Math","min","createStyleDefaults","color","anchor","anchorOrigin","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","rotation","scale","src","width","font","fill","stroke","image","text","zIndex","TEXTAREA","defaultIconUrlFunction","href","KML","_super","opt_options","_this","options","dataProjection","defaultStyle_","defaultStyle","extractStyles_","extractStyles","undefined","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","crossOrigin_","iconUrlFunction_","iconUrlFunction","supportedMediaTypes","readDocumentOrFolder_","node","objectStack","parsersNS","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","features","object","feature","id","getAttribute","setId","geometry","setGeometry","style","styleUrl","styleFunction","createFeatureStyleFunction","setStyle","setProperties","styleUri","baseURI","window","location","url","URL","styleMapValue","readStyleMapValue","readFeatureFromNode","namespaceURI","getReadOptions","readFeaturesFromNode","localName","n","firstElementChild","nextElementSibling","fs","readName","source","doc","readNameFromDocument","readNameFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","push","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeFeaturesNode","adaptOptions","kml","xmlnsUri","setAttributeNS","context","properties","length","orderedKeys","values","createNameStyleFunction","foundStyle","name","textOffset","textAlign","imageStyle","getImage","imageSize","getSize","imageScale","getScaleArray","getAnchor","textStyle","getText","clone","setFont","getFont","setScale","getScale","setFill","getFill","setStroke","getStroke","setText","setOffsetX","setOffsetY","setTextAlign","nameStyle","sharedStyles","resolution","drawName","multiGeometryPoints","getGeometry","type","getType","GEOMETRY_COLLECTION","getGeometriesArrayRecursive","filter","POINT","MULTI_POINT","search","document","createElement","innerHTML","value","featureStyle","findStyle","baseStyle","concat","slice","styleValue","isArray","readColor","s","m","exec","hexColor","parseInt","substr","readFlatCoordinates","flatCoordinates","replace","re","x","parseFloat","y","z","trim","readVec2","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale","STYLE_MAP_PARSERS","pairDataParser","ICON_STYLE_PARSERS","readIcon","iconStyleParser","styleObject","IconObject","drawIcon","keys","hotSpot","test","offset","w","h","heading","imageStyle_1","offsetOrigin","imageScale_1","imageState","getImageState","IDLE","LOADING","listener_1","imageSize_1","resizeScale","unlistenImageChange","listenImageChange","load","LABEL_STYLE_PARSERS","labelStyleParser","LINE_STYLE_PARSERS","lineStyleParser","strokeStyle","POLY_STYLE_PARSERS","polyStyleParser","fillStyle","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","gxCoordParser","gxTrackObject","coordinates","GX_MULTITRACK_GEOMETRY_PARSERS","lineStrings","GX_TRACK_PARSERS","whenParser","whens","i","ii","XYZM","ICON_PARSERS","iconObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","lineString","XYZ","polygon","MULTI_GEOMETRY_PARSERS","geometries","multiGeometry","homogeneous","layout","point","getLayout","getFlatCoordinates","setCommonGeometryProperties","LINE_STRING","POLYGON","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIsParser","outerBoundaryIsParser","flatLinearRings","ends","STYLE_PARSERS","collection","MULTI_POLYGON","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","set","DATA_PARSERS","dataParser","featureObject","displayName","toString","EXTENDED_DATA_PARSERS","schemaDataParser","PAIR_PARSERS","pairObject","key","placemarkObject","SCHEMA_DATA_PARSERS","simpleDataParser","data","LAT_LON_ALT_BOX_PARSERS","regionObject","extent","LOD_PARSERS","lodObject","INNER_BOUNDARY_IS_PARSERS","innerBoundaryFlatLinearRings","apply","OUTER_BOUNDARY_IS_PARSERS","flatLinearRing","when","Date","isNaN","writeColorTextNode","rgba","opacity","abgr","hex","floor","join","writeCoordinatesTextNode","stride","dimension","XY","XYM","EXTENDEDDATA_NODE_SERIALIZERS","writeDataNode","writeDataNodeValue","writeDataNodeName","pair","setAttribute","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","opt_nodeName","parentNode","DATA_NODE_FACTORY","writeExtendedData","namesAndValues","names","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","writeIcon","icon","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","writeVec2","writeScaleTextNode","writeIconStyle","getSrc","iconImageSize","getImageSize","iconProperties","origin_1","getOrigin","getRotation","getColor","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","writeLabelStyle","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","writeLineStyle","Number","getWidth","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","forEach","getPoints","MULTI_LINE_STRING","getLineStrings","getPolygons","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","linearRing","PLACEMARK_SERIALIZERS","writeStyle","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","getId","getProperties","getGeometryName","sort","v","getStyleFunction","styles","styleArray","pointStyles","getGeometryFunction","lineStyles","polyStyles","sequence","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","getStride","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","linearRings","getLinearRings","outerRing","shift","POLY_STYLE_SERIALIZERS","writePolyStyle","round","STYLE_SEQUENCE","STYLE_SERIALIZERS","vec2"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, parse, parseNode, pushParseAndPop, pushSerializeAndPop, } from '../xml.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { extend, includes } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readBoolean, readDecimal, readString, writeBooleanTextNode, writeCDATASection, writeDecimalTextNode, writeStringTextNode, } from './xsd.js';\nimport { toRadians } from '../math.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} [origin] Origin.\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2',\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS,\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser,\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n    return 32 / Math.min(size[0], size[1]);\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR,\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC,\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1,\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2,\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8,\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0,\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\nvar TEXTAREA;\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n    return href;\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle\n            ? options.defaultStyle\n            : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ =\n            options.extractStyles !== undefined ? options.extractStyles : true;\n        /**\n         * @type {boolean}\n         */\n        _this.writeStyles_ =\n            options.writeStyles !== undefined ? options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ =\n            options.showPointNames !== undefined ? options.showPointNames : true;\n        /**\n         * @type {null|string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        /**\n         * @type {IconUrlFunction}\n         */\n        _this.iconUrlFunction_ = options.iconUrlFunction\n            ? options.iconUrlFunction\n            : defaultIconUrlFunction;\n        _this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this),\n        });\n        /** @type {Array<Feature>} */\n        // @ts-ignore\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack, this);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle.call(this, node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [\n            this.getReadOptions(node, opt_options),\n        ]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @return {Node} Node.\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n            node: kml,\n        };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    var imageStyle = foundStyle.getImage();\n    if (imageStyle) {\n        var imageSize = imageStyle.getSize();\n        if (imageSize && imageSize.length == 2) {\n            var imageScale = imageStyle.getScaleArray();\n            var anchor = imageStyle.getAnchor();\n            // Offset the label to be centered to the right of the icon,\n            // if there is one.\n            textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n            textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n            textAlign = 'left';\n        }\n    }\n    var textStyle = foundStyle.getText();\n    if (textStyle) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        textStyle = textStyle.clone();\n        textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        image: imageStyle,\n        text: textStyle,\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        var name = '';\n        var multiGeometryPoints = [];\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var type = geometry.getType();\n                if (type === GeometryType.GEOMETRY_COLLECTION) {\n                    multiGeometryPoints = geometry\n                        .getGeometriesArrayRecursive()\n                        .filter(function (geometry) {\n                        var type = geometry.getType();\n                        return (type === GeometryType.POINT ||\n                            type === GeometryType.MULTI_POINT);\n                    });\n                    drawName = multiGeometryPoints.length > 0;\n                }\n                else {\n                    drawName =\n                        type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n                }\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n            // convert any html character codes\n            if (drawName && name.search(/&[^&]+;/) > -1) {\n                if (!TEXTAREA) {\n                    TEXTAREA = document.createElement('textarea');\n                }\n                TEXTAREA.innerHTML = name;\n                name = TEXTAREA.value;\n            }\n        }\n        var featureStyle = defaultStyle;\n        if (style) {\n            featureStyle = style;\n        }\n        else if (styleUrl) {\n            featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        }\n        if (drawName) {\n            var nameStyle = createNameStyleFunction(featureStyle[0], name);\n            if (multiGeometryPoints.length > 0) {\n                // in multigeometries restrict the name style to points and create a\n                // style without image or text for geometries requiring fill or stroke\n                // including any polygon specific style if there is one\n                nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n                var baseStyle = new Style({\n                    geometry: featureStyle[0].getGeometry(),\n                    image: null,\n                    fill: featureStyle[0].getFill(),\n                    stroke: featureStyle[0].getStroke(),\n                    text: null,\n                });\n                return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n            }\n            return nameStyle;\n        }\n        return featureStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255,\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    s = s.replace(/\\s*,\\s*/g, ',');\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n    // KML files in the wild occasionally forget the leading\n    // `#` on styleUrlsdefined in the same document.\n    var s = getAllTextContent(node, false)\n        .trim()\n        .replace(/^(?!.*#)/, '#');\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin,\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'color': makeObjectPropertySetter(readColor),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n        if (/pushpin/.test(src)) {\n            anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n        else if (/arrow-reverse/.test(src)) {\n            anchor = [54, 42];\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n        else if (/paddle/.test(src)) {\n            anchor = [32, 1];\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    var color = /** @type {Array<number>|undefined} */ (object['color']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        var imageStyle_1 = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: this.crossOrigin_,\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: this.iconUrlFunction_(src),\n            color: color,\n        });\n        var imageScale_1 = imageStyle_1.getScaleArray()[0];\n        var imageSize = imageStyle_1.getSize();\n        if (imageSize === null) {\n            var imageState = imageStyle_1.getImageState();\n            if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n                var listener_1 = function () {\n                    var imageState = imageStyle_1.getImageState();\n                    if (!(imageState === ImageState.IDLE ||\n                        imageState === ImageState.LOADING)) {\n                        var imageSize_1 = imageStyle_1.getSize();\n                        if (imageSize_1 && imageSize_1.length == 2) {\n                            var resizeScale = scaleForSize(imageSize_1);\n                            imageStyle_1.setScale(imageScale_1 * resizeScale);\n                        }\n                        imageStyle_1.unlistenImageChange(listener_1);\n                    }\n                };\n                imageStyle_1.listenImageChange(listener_1);\n                if (imageState === ImageState.IDLE) {\n                    imageStyle_1.load();\n                }\n            }\n        }\n        else if (imageSize.length == 2) {\n            var resizeScale = scaleForSize(imageSize);\n            imageStyle_1.setScale(imageScale_1 * resizeScale);\n        }\n        styleObject['imageStyle'] = imageStyle_1;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: \n            /** @type {import(\"../color.js\").Color} */\n            ('color' in object ? object['color'] : DEFAULT_COLOR),\n        }),\n        scale: /** @type {number|undefined} */ (object['scale']),\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var coordinates = gxTrackObject.coordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        coordinates.push([x, y, z]);\n    }\n    else {\n        coordinates.push([]);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser,\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        coordinates: [],\n        whens: [],\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = [];\n    var coordinates = gxTrackObject.coordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(coordinates.length, whens.length); i < ii; ++i) {\n        if (coordinates[i].length == 3) {\n            flatCoordinates.push(coordinates[i][0], coordinates[i][1], coordinates[i][2], whens[i]);\n        }\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n            flatCoordinates.length,\n        ]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = \n    /** @type {Fill} */\n    ('fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = \n    /** @type {Text} */\n    ('textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = \n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        // if the polystyle specifies no outline two styles are needed,\n        // one for non-polygon geometries where linestrings require a stroke\n        // and one for polygons where there should be no stroke\n        return [\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        var collection = \n                        /** @type {import(\"../geom/GeometryCollection\").default} */ (geometry);\n                        return new GeometryCollection(collection\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type !== GeometryType.POLYGON &&\n                                type !== GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type !== GeometryType.POLYGON &&\n                        type !== GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                image: imageStyle,\n                stroke: strokeStyle,\n                text: textStyle,\n                zIndex: undefined, // FIXME\n            }),\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        var collection = \n                        /** @type {import(\"../geom/GeometryCollection\").default} */ (geometry);\n                        return new GeometryCollection(collection\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type === GeometryType.POLYGON ||\n                        type === GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                stroke: null,\n                zIndex: undefined, // FIXME\n            }),\n        ];\n    }\n    return [\n        new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined, // FIXME\n        }),\n    ];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = false;\n    hasTessellate = false;\n    hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name && featureObject.displayName) {\n        featureObject[name] = {\n            value: featureObject.value,\n            displayName: featureObject.displayName,\n            toString: function () {\n                return featureObject.value;\n            },\n        };\n    }\n    else if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north']),\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n    // allows multiple, so we parse multiple here too.\n    'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    var innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]), INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (innerBoundaryFlatLinearRings.length > 0) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings.push.apply(flatLinearRings, innerBoundaryFlatLinearRings);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = rgba.length == 4 ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName),\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale',\n    'heading',\n    'Icon',\n    'color',\n    'hotSpot',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'color': makeChildAppender(writeColorTextNode),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var /** @type {Object<string, any>} */ properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src,\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS,\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScaleArray()[0];\n    var imageSize = size;\n    if (imageSize === null) {\n        imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n        var resizeScale = scaleForSize(imageSize);\n        scale = scale / resizeScale;\n    }\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var color = style.getColor();\n    if (color) {\n        properties['color'] = color;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'scale',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': Number(style.getWidth()) || 1,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry',\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries = [];\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type === GeometryType.GEOMETRY_COLLECTION) {\n        /** @type {GeometryCollection} */ (geometry)\n            .getGeometriesArrayRecursive()\n            .forEach(function (geometry) {\n            var type = geometry.getType();\n            if (type === GeometryType.MULTI_POINT) {\n                geometries = geometries.concat(\n                /** @type {MultiPoint} */ (geometry).getPoints());\n            }\n            else if (type === GeometryType.MULTI_LINE_STRING) {\n                geometries = geometries.concat(\n                /** @type {MultiLineString} */ (geometry).getLineStrings());\n            }\n            else if (type === GeometryType.MULTI_POLYGON) {\n                geometries = geometries.concat(\n                /** @type {MultiPolygon} */ (geometry).getPolygons());\n            }\n            else if (type === GeometryType.POINT ||\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.POLYGON) {\n                geometries.push(geometry);\n            }\n            else {\n                assert(false, 39); // Unknown geometry type\n            }\n        });\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_LINE_STRING) {\n        geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POLYGON) {\n        geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name',\n    'open',\n    'visibility',\n    'address',\n    'phoneNumber',\n    'description',\n    'styleUrl',\n    'Style',\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = {\n        'address': 1,\n        'description': 1,\n        'name': 1,\n        'open': 1,\n        'phoneNumber': 1,\n        'styleUrl': 1,\n        'visibility': 1,\n    };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {})\n        .sort()\n        .filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var styleArray = Array.isArray(styles) ? styles : [styles];\n            var pointStyles = styleArray;\n            if (feature.getGeometry()) {\n                pointStyles = styleArray.filter(function (style) {\n                    var geometry = style.getGeometryFunction()(feature);\n                    if (geometry) {\n                        var type = geometry.getType();\n                        if (type === GeometryType.GEOMETRY_COLLECTION) {\n                            return /** @type {GeometryCollection} */ (geometry)\n                                .getGeometriesArrayRecursive()\n                                .filter(function (geometry) {\n                                var type = geometry.getType();\n                                return (type === GeometryType.POINT ||\n                                    type === GeometryType.MULTI_POINT);\n                            }).length;\n                        }\n                        return (type === GeometryType.POINT || type === GeometryType.MULTI_POINT);\n                    }\n                });\n            }\n            if (this.writeStyles_) {\n                var lineStyles = styleArray;\n                var polyStyles = styleArray;\n                if (feature.getGeometry()) {\n                    lineStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.LINE_STRING ||\n                                        type === GeometryType.MULTI_LINE_STRING);\n                                }).length;\n                            }\n                            return (type === GeometryType.LINE_STRING ||\n                                type === GeometryType.MULTI_LINE_STRING);\n                        }\n                    });\n                    polyStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.POLYGON ||\n                                        type === GeometryType.MULTI_POLYGON);\n                                }).length;\n                            }\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }\n                    });\n                }\n                properties['Style'] = {\n                    pointStyles: pointStyles,\n                    lineStyles: lineStyles,\n                    polyStyles: polyStyles,\n                };\n            }\n            if (pointStyles.length && properties['name'] === undefined) {\n                var textStyle = pointStyles[0].getText();\n                if (textStyle) {\n                    properties['name'] = textStyle.getText();\n                }\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude',\n    'tessellate',\n    'altitudeMode',\n    'coordinates',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'fill',\n    'outline',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'fill': makeChildAppender(writeBooleanTextNode),\n    'outline': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var fill = style.getFill();\n    var stroke = style.getStroke();\n    var properties = {\n        'color': fill ? fill.getColor() : undefined,\n        'fill': fill ? undefined : false,\n        'outline': stroke ? undefined : false,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle',\n    'LabelStyle',\n    'LineStyle',\n    'PolyStyle',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle),\n});\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    if (styles.pointStyles.length) {\n        var textStyle = styles.pointStyles[0].getText();\n        if (textStyle) {\n            properties['LabelStyle'] = textStyle;\n        }\n        var imageStyle = styles.pointStyles[0].getImage();\n        if (imageStyle &&\n            typeof ( /** @type {?} */(imageStyle).getSrc) === 'function') {\n            properties['IconStyle'] = imageStyle;\n        }\n    }\n    if (styles.lineStyles.length) {\n        var strokeStyle = styles.lineStyles[0].getStroke();\n        if (strokeStyle) {\n            properties['LineStyle'] = strokeStyle;\n        }\n    }\n    if (styles.polyStyles.length) {\n        var strokeStyle = styles.polyStyles[0].getStroke();\n        if (strokeStyle && !properties['LineStyle']) {\n            properties['LineStyle'] = strokeStyle;\n        }\n        properties['PolyStyle'] = styles.polyStyles[0];\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n"]},"metadata":{},"sourceType":"module"}