{"ast":null,"code":"import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nlet MatCardContent = /*#__PURE__*/(() => {\n  class MatCardContent {}\n\n  MatCardContent.ɵfac = function MatCardContent_Factory(t) {\n    return new (t || MatCardContent)();\n  };\n\n  MatCardContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardContent,\n    selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]],\n    hostAttrs: [1, \"mat-card-content\"]\n  });\n  return MatCardContent;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nlet MatCardTitle = /*#__PURE__*/(() => {\n  class MatCardTitle {}\n\n  MatCardTitle.ɵfac = function MatCardTitle_Factory(t) {\n    return new (t || MatCardTitle)();\n  };\n\n  MatCardTitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardTitle,\n    selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n    hostAttrs: [1, \"mat-card-title\"]\n  });\n  return MatCardTitle;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nlet MatCardSubtitle = /*#__PURE__*/(() => {\n  class MatCardSubtitle {}\n\n  MatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) {\n    return new (t || MatCardSubtitle)();\n  };\n\n  MatCardSubtitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardSubtitle,\n    selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n    hostAttrs: [1, \"mat-card-subtitle\"]\n  });\n  return MatCardSubtitle;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nlet MatCardActions = /*#__PURE__*/(() => {\n  class MatCardActions {\n    constructor() {\n      /** Position of the actions inside the card. */\n      this.align = 'start';\n    }\n\n  }\n\n  MatCardActions.ɵfac = function MatCardActions_Factory(t) {\n    return new (t || MatCardActions)();\n  };\n\n  MatCardActions.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardActions,\n    selectors: [[\"mat-card-actions\"]],\n    hostAttrs: [1, \"mat-card-actions\"],\n    hostVars: 2,\n    hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\"\n    },\n    exportAs: [\"matCardActions\"]\n  });\n  return MatCardActions;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nlet MatCardFooter = /*#__PURE__*/(() => {\n  class MatCardFooter {}\n\n  MatCardFooter.ɵfac = function MatCardFooter_Factory(t) {\n    return new (t || MatCardFooter)();\n  };\n\n  MatCardFooter.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardFooter,\n    selectors: [[\"mat-card-footer\"]],\n    hostAttrs: [1, \"mat-card-footer\"]\n  });\n  return MatCardFooter;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardImage = /*#__PURE__*/(() => {\n  class MatCardImage {}\n\n  MatCardImage.ɵfac = function MatCardImage_Factory(t) {\n    return new (t || MatCardImage)();\n  };\n\n  MatCardImage.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardImage,\n    selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n    hostAttrs: [1, \"mat-card-image\"]\n  });\n  return MatCardImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardSmImage = /*#__PURE__*/(() => {\n  class MatCardSmImage {}\n\n  MatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) {\n    return new (t || MatCardSmImage)();\n  };\n\n  MatCardSmImage.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardSmImage,\n    selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n    hostAttrs: [1, \"mat-card-sm-image\"]\n  });\n  return MatCardSmImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardMdImage = /*#__PURE__*/(() => {\n  class MatCardMdImage {}\n\n  MatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) {\n    return new (t || MatCardMdImage)();\n  };\n\n  MatCardMdImage.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardMdImage,\n    selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n    hostAttrs: [1, \"mat-card-md-image\"]\n  });\n  return MatCardMdImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardLgImage = /*#__PURE__*/(() => {\n  class MatCardLgImage {}\n\n  MatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) {\n    return new (t || MatCardLgImage)();\n  };\n\n  MatCardLgImage.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardLgImage,\n    selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n    hostAttrs: [1, \"mat-card-lg-image\"]\n  });\n  return MatCardLgImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardXlImage = /*#__PURE__*/(() => {\n  class MatCardXlImage {}\n\n  MatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) {\n    return new (t || MatCardXlImage)();\n  };\n\n  MatCardXlImage.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardXlImage,\n    selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n    hostAttrs: [1, \"mat-card-xl-image\"]\n  });\n  return MatCardXlImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardAvatar = /*#__PURE__*/(() => {\n  class MatCardAvatar {}\n\n  MatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) {\n    return new (t || MatCardAvatar)();\n  };\n\n  MatCardAvatar.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatCardAvatar,\n    selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n    hostAttrs: [1, \"mat-card-avatar\"]\n  });\n  return MatCardAvatar;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n\n\nlet MatCard = /*#__PURE__*/(() => {\n  class MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n      this._animationMode = _animationMode;\n    }\n\n  }\n\n  MatCard.ɵfac = function MatCard_Factory(t) {\n    return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatCard.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatCard,\n    selectors: [[\"mat-card\"]],\n    hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"],\n    hostVars: 2,\n    hostBindings: function MatCard_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      }\n    },\n    exportAs: [\"matCard\"],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 0,\n    template: function MatCard_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n      }\n    },\n    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatCard;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n\n\nlet MatCardHeader = /*#__PURE__*/(() => {\n  class MatCardHeader {}\n\n  MatCardHeader.ɵfac = function MatCardHeader_Factory(t) {\n    return new (t || MatCardHeader)();\n  };\n\n  MatCardHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatCardHeader,\n    selectors: [[\"mat-card-header\"]],\n    hostAttrs: [1, \"mat-card-header\"],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"mat-card-header-text\"]],\n    template: function MatCardHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatCardHeader;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n\n\nlet MatCardTitleGroup = /*#__PURE__*/(() => {\n  class MatCardTitleGroup {}\n\n  MatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) {\n    return new (t || MatCardTitleGroup)();\n  };\n\n  MatCardTitleGroup.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatCardTitleGroup,\n    selectors: [[\"mat-card-title-group\"]],\n    hostAttrs: [1, \"mat-card-title-group\"],\n    ngContentSelectors: _c5,\n    decls: 4,\n    vars: 0,\n    template: function MatCardTitleGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatCardTitleGroup;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet MatCardModule = /*#__PURE__*/(() => {\n  class MatCardModule {}\n\n  MatCardModule.ɵfac = function MatCardModule_Factory(t) {\n    return new (t || MatCardModule)();\n  };\n\n  MatCardModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatCardModule\n  });\n  MatCardModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[MatCommonModule], MatCommonModule]\n  });\n  return MatCardModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, {\n    declarations: function () {\n      return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar];\n    },\n    imports: function () {\n      return [MatCommonModule];\n    },\n    exports: function () {\n      return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/@angular/material/fesm2015/card.js"],"names":["Directive","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","NgModule","ANIMATION_MODULE_TYPE","MatCommonModule","ɵngcc0","_c0","_c1","_c2","_c3","_c4","_c5","MatCardContent","ɵfac","MatCardContent_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","ngDevMode","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","constructor","align","MatCardActions_Factory","hostVars","hostBindings","MatCardActions_HostBindings","rf","ctx","ɵɵclassProp","inputs","exportAs","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","MatCard_HostBindings","ngContentSelectors","decls","vars","template","MatCard_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","ɵɵelementStart","ɵɵelementEnd","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,SAA3B,EAAsCC,iBAAtC,EAAyDC,uBAAzD,EAAkFC,QAAlF,EAA4FC,MAA5F,EAAoGC,QAApG,QAAoH,eAApH;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,MAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,iBAAD,CAAD,CAAN,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,iBAAN,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAD,EAA2D,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,mBAAD,CAArB,EAA4C,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA5C,EAAwE,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxE,EAAuG,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAvG,EAAiI,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAjI,CAA3D,EAA0N,GAA1N,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,oCAAD,EAAuC,2HAAvC,EAAoK,GAApK,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,mBAAD,CAArB,EAA4C,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA5C,EAAwE,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxE,EAAuG,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAvG,EAAiI,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAjI,CAAD,EAAgK,CAAC,CAAC,KAAD,CAAD,CAAhK,EAA2K,GAA3K,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,2HAAD,EAA8H,KAA9H,EAAqI,GAArI,CAAZ;IACMC,c;AAAN,QAAMA,cAAN,CAAqB;;AAErBA,EAAAA,cAAc,CAACC,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAIH,cAAV,GAAP;AAAqC,GAAhG;;AACAA,EAAAA,cAAc,CAACI,IAAf,GAAsB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAEN,cAAR;AAAwBO,IAAAA,SAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,EAAuB,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAvB,EAAqD,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArD,CAAnC;AAAqHC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ;AAAhI,GAAzB,CAApC;SAHMR,c;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOS,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAMO,CANtB;AAOA;AACA;AACA;AACA;;;IACMC,Y;AAAN,QAAMA,YAAN,CAAmB;;AAEnBA,EAAAA,YAAY,CAACT,IAAb,GAAoB,SAASU,oBAAT,CAA8BR,CAA9B,EAAiC;AAAE,WAAO,KAAKA,CAAC,IAAIO,YAAV,GAAP;AAAmC,GAA1F;;AACAA,EAAAA,YAAY,CAACN,IAAb,GAAoB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAEI,YAAR;AAAsBH,IAAAA,SAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArB,EAAiD,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAjD,CAAjC;AAA6GC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAAxH,GAAzB,CAAlC;SAHME,Y;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOD,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAQO,CARtB;AASA;AACA;AACA;AACA;;;IACMG,e;AAAN,QAAMA,eAAN,CAAsB;;AAEtBA,EAAAA,eAAe,CAACX,IAAhB,GAAuB,SAASY,uBAAT,CAAiCV,CAAjC,EAAoC;AAAE,WAAO,KAAKA,CAAC,IAAIS,eAAV,GAAP;AAAsC,GAAnG;;AACAA,EAAAA,eAAe,CAACR,IAAhB,GAAuB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAEM,eAAR;AAAyBL,IAAAA,SAAS,EAAE,CAAC,CAAC,mBAAD,CAAD,EAAwB,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxB,EAAuD,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAvD,CAApC;AAAyHC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAApI,GAAzB,CAArC;SAHMI,e;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOH,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAQO,CARtB;AASA;AACA;AACA;AACA;;;IACMK,c;AAAN,QAAMA,cAAN,CAAqB;AACjBC,IAAAA,WAAW,GAAG;AACV;AACA,WAAKC,KAAL,GAAa,OAAb;AACH;;AAJgB;;AAMrBF,EAAAA,cAAc,CAACb,IAAf,GAAsB,SAASgB,sBAAT,CAAgCd,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAIW,cAAV,GAAP;AAAqC,GAAhG;;AACAA,EAAAA,cAAc,CAACV,IAAf,GAAsB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAEQ,cAAR;AAAwBP,IAAAA,SAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAAnC;AAA2DC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAAtE;AAA+FU,IAAAA,QAAQ,EAAE,CAAzG;AAA4GC,IAAAA,YAAY,EAAE,SAASC,2BAAT,CAAqCC,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3O5B,QAAAA,MAAM,CAAC8B,WAAP,CAAmB,4BAAnB,EAAiDD,GAAG,CAACN,KAAJ,KAAc,KAA/D;AACH;AAAE,KAFsD;AAEpDQ,IAAAA,MAAM,EAAE;AAAER,MAAAA,KAAK,EAAE;AAAT,KAF4C;AAExBS,IAAAA,QAAQ,EAAE,CAAC,gBAAD;AAFc,GAAzB,CAApC;SAPMX,c;;;AAaN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOL,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAYC,CAZhB;AAaA;AACA;AACA;AACA;;;IACMiB,a;AAAN,QAAMA,aAAN,CAAoB;;AAEpBA,EAAAA,aAAa,CAACzB,IAAd,GAAqB,SAAS0B,qBAAT,CAA+BxB,CAA/B,EAAkC;AAAE,WAAO,KAAKA,CAAC,IAAIuB,aAAV,GAAP;AAAoC,GAA7F;;AACAA,EAAAA,aAAa,CAACtB,IAAd,GAAqB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAEoB,aAAR;AAAuBnB,IAAAA,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyDC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAApE,GAAzB,CAAnC;SAHMkB,a;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOjB,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAMO,CANtB;AAOA;AACA;AACA;AACA;;;IACMmB,Y;AAAN,QAAMA,YAAN,CAAmB;;AAEnBA,EAAAA,YAAY,CAAC3B,IAAb,GAAoB,SAAS4B,oBAAT,CAA8B1B,CAA9B,EAAiC;AAAE,WAAO,KAAKA,CAAC,IAAIyB,YAAV,GAAP;AAAmC,GAA1F;;AACAA,EAAAA,YAAY,CAACxB,IAAb,GAAoB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAEsB,YAAR;AAAsBrB,IAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAAD,EAA6B,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAA7B,CAAjC;AAAyFC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAApG,GAAzB,CAAlC;SAHMoB,Y;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOnB,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAMO,CANtB;AAOA;AACA;AACA;AACA;;;IACMqB,c;AAAN,QAAMA,cAAN,CAAqB;;AAErBA,EAAAA,cAAc,CAAC7B,IAAf,GAAsB,SAAS8B,sBAAT,CAAgC5B,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAI2B,cAAV,GAAP;AAAqC,GAAhG;;AACAA,EAAAA,cAAc,CAAC1B,IAAf,GAAsB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAEwB,cAAR;AAAwBvB,IAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAhC,CAAnC;AAAmGC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA9G,GAAzB,CAApC;SAHMsB,c;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOrB,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAMO,CANtB;AAOA;AACA;AACA;AACA;;;IACMuB,c;AAAN,QAAMA,cAAN,CAAqB;;AAErBA,EAAAA,cAAc,CAAC/B,IAAf,GAAsB,SAASgC,sBAAT,CAAgC9B,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAI6B,cAAV,GAAP;AAAqC,GAAhG;;AACAA,EAAAA,cAAc,CAAC5B,IAAf,GAAsB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAE0B,cAAR;AAAwBzB,IAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAhC,CAAnC;AAAoGC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA/G,GAAzB,CAApC;SAHMwB,c;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOvB,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAMO,CANtB;AAOA;AACA;AACA;AACA;;;IACMyB,c;AAAN,QAAMA,cAAN,CAAqB;;AAErBA,EAAAA,cAAc,CAACjC,IAAf,GAAsB,SAASkC,sBAAT,CAAgChC,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAI+B,cAAV,GAAP;AAAqC,GAAhG;;AACAA,EAAAA,cAAc,CAAC9B,IAAf,GAAsB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAE4B,cAAR;AAAwB3B,IAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAhC,CAAnC;AAAmGC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA9G,GAAzB,CAApC;SAHM0B,c;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOzB,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAMO,CANtB;AAOA;AACA;AACA;AACA;;;IACM2B,c;AAAN,QAAMA,cAAN,CAAqB;;AAErBA,EAAAA,cAAc,CAACnC,IAAf,GAAsB,SAASoC,sBAAT,CAAgClC,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAIiC,cAAV,GAAP;AAAqC,GAAhG;;AACAA,EAAAA,cAAc,CAAChC,IAAf,GAAsB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAE8B,cAAR;AAAwB7B,IAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAhC,CAAnC;AAAoGC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA/G,GAAzB,CAApC;SAHM4B,c;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAO3B,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAMO,CANtB;AAOA;AACA;AACA;AACA;;;IACM6B,a;AAAN,QAAMA,aAAN,CAAoB;;AAEpBA,EAAAA,aAAa,CAACrC,IAAd,GAAqB,SAASsC,qBAAT,CAA+BpC,CAA/B,EAAkC;AAAE,WAAO,KAAKA,CAAC,IAAImC,aAAV,GAAP;AAAoC,GAA7F;;AACAA,EAAAA,aAAa,CAAClC,IAAd,GAAqB,aAAcX,MAAM,CAACY,iBAAP,CAAyB;AAAEC,IAAAA,IAAI,EAAEgC,aAAR;AAAuB/B,IAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAlC;AAA4FC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAAvG,GAAzB,CAAnC;SAHM8B,a;;;AAIN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAO7B,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAMO,CANtB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACM+B,O;AAAN,QAAMA,OAAN,CAAc;AACV;AACAzB,IAAAA,WAAW,CAAC0B,cAAD,EAAiB;AACxB,WAAKA,cAAL,GAAsBA,cAAtB;AACH;;AAJS;;AAMdD,EAAAA,OAAO,CAACvC,IAAR,GAAe,SAASyC,eAAT,CAAyBvC,CAAzB,EAA4B;AAAE,WAAO,KAAKA,CAAC,IAAIqC,OAAV,EAAmB/C,MAAM,CAACkD,iBAAP,CAAyBpD,qBAAzB,EAAgD,CAAhD,CAAnB,CAAP;AAAgF,GAA7H;;AACAiD,EAAAA,OAAO,CAACI,IAAR,GAAe,aAAcnD,MAAM,CAACoD,iBAAP,CAAyB;AAAEvC,IAAAA,IAAI,EAAEkC,OAAR;AAAiBjC,IAAAA,SAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,EAAgB,qBAAhB,CAAvD;AAA+FU,IAAAA,QAAQ,EAAE,CAAzG;AAA4GC,IAAAA,YAAY,EAAE,SAAS2B,oBAAT,CAA8BzB,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC7N5B,QAAAA,MAAM,CAAC8B,WAAP,CAAmB,yBAAnB,EAA8CD,GAAG,CAACmB,cAAJ,KAAuB,gBAArE;AACH;AAAE,KAF+C;AAE7ChB,IAAAA,QAAQ,EAAE,CAAC,SAAD,CAFmC;AAEtBsB,IAAAA,kBAAkB,EAAEpD,GAFE;AAEGqD,IAAAA,KAAK,EAAE,CAFV;AAEaC,IAAAA,IAAI,EAAE,CAFnB;AAEsBC,IAAAA,QAAQ,EAAE,SAASC,gBAAT,CAA0B9B,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC/H5B,QAAAA,MAAM,CAAC2D,eAAP,CAAuB1D,GAAvB;AACAD,QAAAA,MAAM,CAAC4D,YAAP,CAAoB,CAApB;AACA5D,QAAAA,MAAM,CAAC4D,YAAP,CAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,KAN+C;AAM7CC,IAAAA,MAAM,EAAE,CAAC,wuFAAD,CANqC;AAMusFC,IAAAA,aAAa,EAAE,CANttF;AAMytFC,IAAAA,eAAe,EAAE;AAN1uF,GAAzB,CAA7B;SAPMhB,O;;;AAiBN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAO/B,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAmBe,CAnB9B;AAoBA;AACA;AACA;AACA;AACA;;;IACMgD,a;AAAN,QAAMA,aAAN,CAAoB;;AAEpBA,EAAAA,aAAa,CAACxD,IAAd,GAAqB,SAASyD,qBAAT,CAA+BvD,CAA/B,EAAkC;AAAE,WAAO,KAAKA,CAAC,IAAIsD,aAAV,GAAP;AAAoC,GAA7F;;AACAA,EAAAA,aAAa,CAACb,IAAd,GAAqB,aAAcnD,MAAM,CAACoD,iBAAP,CAAyB;AAAEvC,IAAAA,IAAI,EAAEmD,aAAR;AAAuBlD,IAAAA,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyDC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,CAApE;AAA4FuC,IAAAA,kBAAkB,EAAElD,GAAhH;AAAqHmD,IAAAA,KAAK,EAAE,CAA5H;AAA+HC,IAAAA,IAAI,EAAE,CAArI;AAAwIU,IAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,sBAAJ,CAAD,CAAhJ;AAA+KT,IAAAA,QAAQ,EAAE,SAASU,sBAAT,CAAgCvC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACpS5B,QAAAA,MAAM,CAAC2D,eAAP,CAAuBxD,GAAvB;AACAH,QAAAA,MAAM,CAAC4D,YAAP,CAAoB,CAApB;AACA5D,QAAAA,MAAM,CAACoE,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACApE,QAAAA,MAAM,CAAC4D,YAAP,CAAoB,CAApB,EAAuB,CAAvB;AACA5D,QAAAA,MAAM,CAACqE,YAAP;AACArE,QAAAA,MAAM,CAAC4D,YAAP,CAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,KAPqD;AAOnDE,IAAAA,aAAa,EAAE,CAPoC;AAOjCC,IAAAA,eAAe,EAAE;AAPgB,GAAzB,CAAnC;SAHMC,a;;;AAWN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOhD,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AASO,CATtB;AAUA;AACA;AACA;AACA;AACA;;;IACMsD,iB;AAAN,QAAMA,iBAAN,CAAwB;;AAExBA,EAAAA,iBAAiB,CAAC9D,IAAlB,GAAyB,SAAS+D,yBAAT,CAAmC7D,CAAnC,EAAsC;AAAE,WAAO,KAAKA,CAAC,IAAI4D,iBAAV,GAAP;AAAwC,GAAzG;;AACAA,EAAAA,iBAAiB,CAACnB,IAAlB,GAAyB,aAAcnD,MAAM,CAACoD,iBAAP,CAAyB;AAAEvC,IAAAA,IAAI,EAAEyD,iBAAR;AAA2BxD,IAAAA,SAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAtC;AAAkEC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ,CAA7E;AAA0GuC,IAAAA,kBAAkB,EAAEhD,GAA9H;AAAmIiD,IAAAA,KAAK,EAAE,CAA1I;AAA6IC,IAAAA,IAAI,EAAE,CAAnJ;AAAsJC,IAAAA,QAAQ,EAAE,SAASe,0BAAT,CAAoC5C,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACnR5B,QAAAA,MAAM,CAAC2D,eAAP,CAAuBtD,GAAvB;AACAL,QAAAA,MAAM,CAACoE,cAAP,CAAsB,CAAtB,EAAyB,KAAzB;AACApE,QAAAA,MAAM,CAAC4D,YAAP,CAAoB,CAApB;AACA5D,QAAAA,MAAM,CAACqE,YAAP;AACArE,QAAAA,MAAM,CAAC4D,YAAP,CAAoB,CAApB,EAAuB,CAAvB;AACA5D,QAAAA,MAAM,CAAC4D,YAAP,CAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,KAPyD;AAOvDE,IAAAA,aAAa,EAAE,CAPwC;AAOrCC,IAAAA,eAAe,EAAE;AAPoB,GAAzB,CAAvC;SAHMO,iB;;;AAWN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOtD,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AASO,CATtB;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMyD,a;AAAN,QAAMA,aAAN,CAAoB;;AAEpBA,EAAAA,aAAa,CAACjE,IAAd,GAAqB,SAASkE,qBAAT,CAA+BhE,CAA/B,EAAkC;AAAE,WAAO,KAAKA,CAAC,IAAI+D,aAAV,GAAP;AAAoC,GAA7F;;AACAA,EAAAA,aAAa,CAACE,IAAd,GAAqB,aAAc3E,MAAM,CAAC4E,gBAAP,CAAwB;AAAE/D,IAAAA,IAAI,EAAE4D;AAAR,GAAxB,CAAnC;AACAA,EAAAA,aAAa,CAACI,IAAd,GAAqB,aAAc7E,MAAM,CAAC8E,gBAAP,CAAwB;AAAEC,IAAAA,OAAO,EAAE,CAAC,CAAChF,eAAD,CAAD,EAAoBA,eAApB;AAAX,GAAxB,CAAnC;SAJM0E,a;;;AAKN;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOzD,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AA2BO,CA3BtB;;AA4BA;AAAA,CAAC,YAAY;AAAE,GAAC,OAAOgE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDhF,MAAM,CAACiF,kBAAP,CAA0BR,aAA1B,EAAyC;AAAES,IAAAA,YAAY,EAAE,YAAY;AAAE,aAAO,CAACnC,OAAD,EAAUiB,aAAV,EAAyBM,iBAAzB,EAA4C/D,cAA5C,EAA4DU,YAA5D,EAA0EE,eAA1E,EAA2FE,cAA3F,EAA2GY,aAA3G,EAA0HI,cAA1H,EAA0IE,cAA1I,EAA0JE,cAA1J,EAA0KN,YAA1K,EAAwLQ,cAAxL,EAAwME,aAAxM,CAAP;AAAgO,KAA9P;AAAgQkC,IAAAA,OAAO,EAAE,YAAY;AAAE,aAAO,CAAChF,eAAD,CAAP;AAA2B,KAAlT;AAAoToF,IAAAA,OAAO,EAAE,YAAY;AAAE,aAAO,CAACpC,OAAD,EAAUiB,aAAV,EAAyBM,iBAAzB,EAA4C/D,cAA5C,EAA4DU,YAA5D,EAA0EE,eAA1E,EAA2FE,cAA3F,EAA2GY,aAA3G,EAA0HI,cAA1H,EAA0IE,cAA1I,EAA0JE,cAA1J,EAA0KN,YAA1K,EAAwLQ,cAAxL,EAAwME,aAAxM,EAAuN9C,eAAvN,CAAP;AAAiP;AAA5jB,GAAzC,CAAnD;AAA8pB,CAA7qB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASgD,OAAT,EAAkB1B,cAAlB,EAAkCwB,aAAlC,EAAiDtC,cAAjD,EAAiE0B,aAAjE,EAAgF+B,aAAhF,EAA+F7B,YAA/F,EAA6GM,cAA7G,EAA6HF,cAA7H,EAA6IkC,aAA7I,EAA4JpC,cAA5J,EAA4KlB,eAA5K,EAA6LF,YAA7L,EAA2MqD,iBAA3M,EAA8N3B,cAA9N","sourcesContent":["import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵfac = function MatCardModule_Factory(t) { return new (t || MatCardModule)(); };\nMatCardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n"]},"metadata":{},"sourceType":"module"}