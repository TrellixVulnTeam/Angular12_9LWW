{"ast":null,"code":"/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\n\nimport { BrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.js';\nimport { BrowserCacheLocation } from '../utils/BrowserConstants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar BrowserStorage = function () {\n  function BrowserStorage(cacheLocation) {\n    this.validateWindowStorage(cacheLocation);\n    this.windowStorage = window[cacheLocation];\n  }\n\n  BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\n    if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n\n    var storageSupported = !!window[cacheLocation];\n\n    if (!storageSupported) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n  };\n\n  BrowserStorage.prototype.getItem = function (key) {\n    return this.windowStorage.getItem(key);\n  };\n\n  BrowserStorage.prototype.setItem = function (key, value) {\n    this.windowStorage.setItem(key, value);\n  };\n\n  BrowserStorage.prototype.removeItem = function (key) {\n    this.windowStorage.removeItem(key);\n  };\n\n  BrowserStorage.prototype.getKeys = function () {\n    return Object.keys(this.windowStorage);\n  };\n\n  BrowserStorage.prototype.containsKey = function (key) {\n    return this.windowStorage.hasOwnProperty(key);\n  };\n\n  return BrowserStorage;\n}();\n\nexport { BrowserStorage };","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/@azure/msal-browser/dist/cache/BrowserStorage.js"],"names":["BrowserConfigurationAuthError","BrowserCacheLocation","BrowserStorage","cacheLocation","validateWindowStorage","windowStorage","window","prototype","LocalStorage","SessionStorage","createStorageNotSupportedError","storageSupported","getItem","key","setItem","value","removeItem","getKeys","Object","keys","containsKey","hasOwnProperty"],"mappings":"AAAA;AACA;;AACA,SAASA,6BAAT,QAA8C,2CAA9C;AACA,SAASC,oBAAT,QAAqC,8BAArC;AAEA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAkB,YAAY;AAC5C,WAASA,cAAT,CAAwBC,aAAxB,EAAuC;AACnC,SAAKC,qBAAL,CAA2BD,aAA3B;AACA,SAAKE,aAAL,GAAqBC,MAAM,CAACH,aAAD,CAA3B;AACH;;AACDD,EAAAA,cAAc,CAACK,SAAf,CAAyBH,qBAAzB,GAAiD,UAAUD,aAAV,EAAyB;AACtE,QAAIA,aAAa,KAAKF,oBAAoB,CAACO,YAAvC,IAAuDL,aAAa,KAAKF,oBAAoB,CAACQ,cAAlG,EAAkH;AAC9G,YAAMT,6BAA6B,CAACU,8BAA9B,CAA6DP,aAA7D,CAAN;AACH;;AACD,QAAIQ,gBAAgB,GAAG,CAAC,CAACL,MAAM,CAACH,aAAD,CAA/B;;AACA,QAAI,CAACQ,gBAAL,EAAuB;AACnB,YAAMX,6BAA6B,CAACU,8BAA9B,CAA6DP,aAA7D,CAAN;AACH;AACJ,GARD;;AASAD,EAAAA,cAAc,CAACK,SAAf,CAAyBK,OAAzB,GAAmC,UAAUC,GAAV,EAAe;AAC9C,WAAO,KAAKR,aAAL,CAAmBO,OAAnB,CAA2BC,GAA3B,CAAP;AACH,GAFD;;AAGAX,EAAAA,cAAc,CAACK,SAAf,CAAyBO,OAAzB,GAAmC,UAAUD,GAAV,EAAeE,KAAf,EAAsB;AACrD,SAAKV,aAAL,CAAmBS,OAAnB,CAA2BD,GAA3B,EAAgCE,KAAhC;AACH,GAFD;;AAGAb,EAAAA,cAAc,CAACK,SAAf,CAAyBS,UAAzB,GAAsC,UAAUH,GAAV,EAAe;AACjD,SAAKR,aAAL,CAAmBW,UAAnB,CAA8BH,GAA9B;AACH,GAFD;;AAGAX,EAAAA,cAAc,CAACK,SAAf,CAAyBU,OAAzB,GAAmC,YAAY;AAC3C,WAAOC,MAAM,CAACC,IAAP,CAAY,KAAKd,aAAjB,CAAP;AACH,GAFD;;AAGAH,EAAAA,cAAc,CAACK,SAAf,CAAyBa,WAAzB,GAAuC,UAAUP,GAAV,EAAe;AAClD,WAAO,KAAKR,aAAL,CAAmBgB,cAAnB,CAAkCR,GAAlC,CAAP;AACH,GAFD;;AAGA,SAAOX,cAAP;AACH,CA9BmC,EAApC;;AAgCA,SAASA,cAAT","sourcesContent":["/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\nimport { BrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.js';\nimport { BrowserCacheLocation } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar BrowserStorage = /** @class */ (function () {\r\n    function BrowserStorage(cacheLocation) {\r\n        this.validateWindowStorage(cacheLocation);\r\n        this.windowStorage = window[cacheLocation];\r\n    }\r\n    BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\r\n        if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        var storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    };\r\n    BrowserStorage.prototype.getItem = function (key) {\r\n        return this.windowStorage.getItem(key);\r\n    };\r\n    BrowserStorage.prototype.setItem = function (key, value) {\r\n        this.windowStorage.setItem(key, value);\r\n    };\r\n    BrowserStorage.prototype.removeItem = function (key) {\r\n        this.windowStorage.removeItem(key);\r\n    };\r\n    BrowserStorage.prototype.getKeys = function () {\r\n        return Object.keys(this.windowStorage);\r\n    };\r\n    BrowserStorage.prototype.containsKey = function (key) {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    };\r\n    return BrowserStorage;\r\n}());\n\nexport { BrowserStorage };\n"]},"metadata":{},"sourceType":"module"}