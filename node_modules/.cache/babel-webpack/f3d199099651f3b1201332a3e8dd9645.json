{"ast":null,"code":"import { IStorageStrategy } from './IStorageStrategy';\nexport class InMemoryStorageStrategy extends IStorageStrategy {\n  constructor() {\n    super(...arguments);\n    this.cachePairs = [];\n  }\n\n  add(cachePair, cacheKey, ctx) {\n    this.cachePairs.push(cachePair);\n  }\n\n  addMany(cachePairs) {\n    this.cachePairs = cachePairs;\n  }\n\n  updateAtIndex(index, entity) {\n    const updatee = this.cachePairs[index];\n    Object.assign(updatee, entity);\n  }\n\n  update(index, entity) {\n    const updatee = this.cachePairs[index];\n    Object.assign(updatee, entity);\n  }\n\n  getAll() {\n    return this.cachePairs;\n  }\n\n  removeAtIndex(index) {\n    this.cachePairs.splice(index, 1);\n  }\n\n  remove(index) {\n    this.cachePairs.splice(index, 1);\n  }\n\n  removeAll() {\n    this.cachePairs.length = 0;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ts-cacheable/dist/esm2015/common/InMemoryStorageStrategy.js"],"names":["IStorageStrategy","InMemoryStorageStrategy","constructor","arguments","cachePairs","add","cachePair","cacheKey","ctx","push","addMany","updateAtIndex","index","entity","updatee","Object","assign","update","getAll","removeAtIndex","splice","remove","removeAll","length"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,OAAO,MAAMC,uBAAN,SAAsCD,gBAAtC,CAAuD;AAC1DE,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACH;;AACDC,EAAAA,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,GAAtB,EAA2B;AAC1B,SAAKJ,UAAL,CAAgBK,IAAhB,CAAqBH,SAArB;AACH;;AAEDI,EAAAA,OAAO,CAACN,UAAD,EAAa;AAChB,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AAEDO,EAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,UAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBQ,KAAhB,CAAhB;AACAG,IAAAA,MAAM,CAACC,MAAP,CAAcF,OAAd,EAAuBD,MAAvB;AACH;;AACDI,EAAAA,MAAM,CAACL,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBQ,KAAhB,CAAhB;AACAG,IAAAA,MAAM,CAACC,MAAP,CAAcF,OAAd,EAAuBD,MAAvB;AACH;;AACDK,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKd,UAAZ;AACH;;AAEDe,EAAAA,aAAa,CAACP,KAAD,EAAQ;AACjB,SAAKR,UAAL,CAAgBgB,MAAhB,CAAuBR,KAAvB,EAA8B,CAA9B;AACH;;AACDS,EAAAA,MAAM,CAACT,KAAD,EAAQ;AACV,SAAKR,UAAL,CAAgBgB,MAAhB,CAAuBR,KAAvB,EAA8B,CAA9B;AACH;;AACDU,EAAAA,SAAS,GAAG;AACR,SAAKlB,UAAL,CAAgBmB,MAAhB,GAAyB,CAAzB;AACH;;AAjCyD","sourcesContent":["import { IStorageStrategy } from './IStorageStrategy';\nexport class InMemoryStorageStrategy extends IStorageStrategy {\n    constructor() {\n        super(...arguments);\n        this.cachePairs = [];\n    }\n    add(cachePair, cacheKey, ctx) {\n        this.cachePairs.push(cachePair);\n    }\n    ;\n    addMany(cachePairs) {\n        this.cachePairs = cachePairs;\n    }\n    ;\n    updateAtIndex(index, entity) {\n        const updatee = this.cachePairs[index];\n        Object.assign(updatee, entity);\n    }\n    update(index, entity) {\n        const updatee = this.cachePairs[index];\n        Object.assign(updatee, entity);\n    }\n    getAll() {\n        return this.cachePairs;\n    }\n    ;\n    removeAtIndex(index) {\n        this.cachePairs.splice(index, 1);\n    }\n    remove(index) {\n        this.cachePairs.splice(index, 1);\n    }\n    removeAll() {\n        this.cachePairs.length = 0;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}