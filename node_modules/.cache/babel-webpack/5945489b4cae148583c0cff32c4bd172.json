{"ast":null,"code":"/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\n\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { StringUtils, Constants, UrlString } from '@azure/msal-common';\nimport { InteractionHandler } from './InteractionHandler.js';\nimport { BrowserConstants } from '../utils/BrowserConstants.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from '../config/Configuration.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar SilentHandler = function (_super) {\n  __extends(SilentHandler, _super);\n\n  function SilentHandler(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger, navigateFrameWait) {\n    var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, browserRequestLogger) || this;\n\n    _this.navigateFrameWait = navigateFrameWait;\n    return _this;\n  }\n  /**\r\n   * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n   * @param urlNavigate\r\n   * @param userRequestScopes\r\n   */\n\n\n  SilentHandler.prototype.initiateAuthRequest = function (requestUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (StringUtils.isEmpty(requestUrl)) {\n              // Throw error if request URL is empty.\n              this.browserRequestLogger.info(\"Navigate url is empty\");\n              throw BrowserAuthError.createEmptyNavigationUriError();\n            }\n\n            if (!this.navigateFrameWait) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.loadFrame(requestUrl)];\n\n          case 1:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = this.loadFrameSync(requestUrl);\n            _b.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            , _a];\n        }\n      });\n    });\n  };\n  /**\r\n   * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n   * @param iframe\r\n   * @param timeout\r\n   */\n\n\n  SilentHandler.prototype.monitorIframeForHash = function (iframe, timeout) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n        _this.browserRequestLogger.warning(\"system.loadFrameTimeout or system.iframeHashTimeout set to lower (\" + timeout + \"ms) than the default (\" + DEFAULT_IFRAME_TIMEOUT_MS + \"ms). This may result in timeouts.\");\n      }\n      /*\r\n       * Polling for iframes can be purely timing based,\r\n       * since we don't need to account for interaction.\r\n       */\n\n\n      var nowMark = window.performance.now();\n      var timeoutMark = nowMark + timeout;\n      var intervalId = setInterval(function () {\n        if (window.performance.now() > timeoutMark) {\n          _this.removeHiddenIframe(iframe);\n\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createMonitorIframeTimeoutError());\n          return;\n        }\n\n        var href = Constants.EMPTY_STRING;\n        var contentWindow = iframe.contentWindow;\n\n        try {\n          /*\r\n           * Will throw if cross origin,\r\n           * which should be caught and ignored\r\n           * since we need the interval to keep running while on STS UI.\r\n           */\n          href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\n        } catch (e) {}\n\n        if (StringUtils.isEmpty(href)) {\n          return;\n        }\n\n        var contentHash = contentWindow ? contentWindow.location.hash : Constants.EMPTY_STRING;\n\n        if (UrlString.hashContainsKnownProperties(contentHash)) {\n          // Success case\n          _this.removeHiddenIframe(iframe);\n\n          clearInterval(intervalId);\n          resolve(contentHash);\n          return;\n        }\n      }, BrowserConstants.POLL_INTERVAL_MS);\n    });\n  };\n  /**\r\n   * @hidden\r\n   * Loads iframe with authorization endpoint URL\r\n   * @ignore\r\n   */\n\n\n  SilentHandler.prototype.loadFrame = function (urlNavigate) {\n    /*\r\n     * This trick overcomes iframe navigation in IE\r\n     * IE does not load the page consistently in iframe\r\n     */\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var frameHandle = _this.createHiddenIframe();\n\n      setTimeout(function () {\n        if (!frameHandle) {\n          reject(\"Unable to load iframe\");\n          return;\n        }\n\n        frameHandle.src = urlNavigate;\n        resolve(frameHandle);\n      }, _this.navigateFrameWait);\n    });\n  };\n  /**\r\n   * @hidden\r\n   * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n   * @param urlNavigate\r\n   * @param frameName\r\n   * @param logger\r\n   */\n\n\n  SilentHandler.prototype.loadFrameSync = function (urlNavigate) {\n    var frameHandle = this.createHiddenIframe();\n    frameHandle.src = urlNavigate;\n    return frameHandle;\n  };\n  /**\r\n   * @hidden\r\n   * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n   * @ignore\r\n   */\n\n\n  SilentHandler.prototype.createHiddenIframe = function () {\n    var authFrame = document.createElement(\"iframe\");\n    authFrame.style.visibility = \"hidden\";\n    authFrame.style.position = \"absolute\";\n    authFrame.style.width = authFrame.style.height = \"0\";\n    authFrame.style.border = \"0\";\n    authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n    document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n    return authFrame;\n  };\n  /**\r\n   * @hidden\r\n   * Removes a hidden iframe from the page.\r\n   * @ignore\r\n   */\n\n\n  SilentHandler.prototype.removeHiddenIframe = function (iframe) {\n    if (document.body === iframe.parentNode) {\n      document.body.removeChild(iframe);\n    }\n  };\n\n  return SilentHandler;\n}(InteractionHandler);\n\nexport { SilentHandler };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.js"],"names":["__extends","__awaiter","__generator","StringUtils","Constants","UrlString","InteractionHandler","BrowserConstants","BrowserAuthError","DEFAULT_IFRAME_TIMEOUT_MS","SilentHandler","_super","authCodeModule","storageImpl","authCodeRequest","browserRequestLogger","navigateFrameWait","_this","call","prototype","initiateAuthRequest","requestUrl","_a","_b","label","isEmpty","info","createEmptyNavigationUriError","loadFrame","sent","loadFrameSync","monitorIframeForHash","iframe","timeout","Promise","resolve","reject","warning","nowMark","window","performance","now","timeoutMark","intervalId","setInterval","removeHiddenIframe","clearInterval","createMonitorIframeTimeoutError","href","EMPTY_STRING","contentWindow","location","e","contentHash","hash","hashContainsKnownProperties","POLL_INTERVAL_MS","urlNavigate","frameHandle","createHiddenIframe","setTimeout","src","authFrame","document","createElement","style","visibility","position","width","height","border","setAttribute","getElementsByTagName","appendChild","body","parentNode","removeChild"],"mappings":"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","sourcesContent":["/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { StringUtils, Constants, UrlString } from '@azure/msal-common';\nimport { InteractionHandler } from './InteractionHandler.js';\nimport { BrowserConstants } from '../utils/BrowserConstants.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from '../config/Configuration.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SilentHandler = /** @class */ (function (_super) {\r\n    __extends(SilentHandler, _super);\r\n    function SilentHandler(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger, navigateFrameWait) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, browserRequestLogger) || this;\r\n        _this.navigateFrameWait = navigateFrameWait;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n     * @param urlNavigate\r\n     * @param userRequestScopes\r\n     */\r\n    SilentHandler.prototype.initiateAuthRequest = function (requestUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (StringUtils.isEmpty(requestUrl)) {\r\n                            // Throw error if request URL is empty.\r\n                            this.browserRequestLogger.info(\"Navigate url is empty\");\r\n                            throw BrowserAuthError.createEmptyNavigationUriError();\r\n                        }\r\n                        if (!this.navigateFrameWait) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.loadFrame(requestUrl)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        _a = this.loadFrameSync(requestUrl);\r\n                        _b.label = 3;\r\n                    case 3: return [2 /*return*/, _a];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param iframe\r\n     * @param timeout\r\n     */\r\n    SilentHandler.prototype.monitorIframeForHash = function (iframe, timeout) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\r\n                _this.browserRequestLogger.warning(\"system.loadFrameTimeout or system.iframeHashTimeout set to lower (\" + timeout + \"ms) than the default (\" + DEFAULT_IFRAME_TIMEOUT_MS + \"ms). This may result in timeouts.\");\r\n            }\r\n            /*\r\n             * Polling for iframes can be purely timing based,\r\n             * since we don't need to account for interaction.\r\n             */\r\n            var nowMark = window.performance.now();\r\n            var timeoutMark = nowMark + timeout;\r\n            var intervalId = setInterval(function () {\r\n                if (window.performance.now() > timeoutMark) {\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorIframeTimeoutError());\r\n                    return;\r\n                }\r\n                var href = Constants.EMPTY_STRING;\r\n                var contentWindow = iframe.contentWindow;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\r\n                }\r\n                catch (e) { }\r\n                if (StringUtils.isEmpty(href)) {\r\n                    return;\r\n                }\r\n                var contentHash = contentWindow ? contentWindow.location.hash : Constants.EMPTY_STRING;\r\n                if (UrlString.hashContainsKnownProperties(contentHash)) {\r\n                    // Success case\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.loadFrame = function (urlNavigate) {\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var frameHandle = _this.createHiddenIframe();\r\n            setTimeout(function () {\r\n                if (!frameHandle) {\r\n                    reject(\"Unable to load iframe\");\r\n                    return;\r\n                }\r\n                frameHandle.src = urlNavigate;\r\n                resolve(frameHandle);\r\n            }, _this.navigateFrameWait);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    SilentHandler.prototype.loadFrameSync = function (urlNavigate) {\r\n        var frameHandle = this.createHiddenIframe();\r\n        frameHandle.src = urlNavigate;\r\n        return frameHandle;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.createHiddenIframe = function () {\r\n        var authFrame = document.createElement(\"iframe\");\r\n        authFrame.style.visibility = \"hidden\";\r\n        authFrame.style.position = \"absolute\";\r\n        authFrame.style.width = authFrame.style.height = \"0\";\r\n        authFrame.style.border = \"0\";\r\n        authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\r\n        return authFrame;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.removeHiddenIframe = function (iframe) {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    };\r\n    return SilentHandler;\r\n}(InteractionHandler));\n\nexport { SilentHandler };\n"]},"metadata":{},"sourceType":"module"}