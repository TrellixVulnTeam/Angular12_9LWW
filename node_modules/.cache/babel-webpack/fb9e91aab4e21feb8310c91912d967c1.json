{"ast":null,"code":"/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { StringUtils, AuthError } from '@azure/msal-common';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\nvar BrowserAuthErrorMessage = {\n  pkceNotGenerated: {\n    code: \"pkce_not_created\",\n    desc: \"The PKCE code challenge and verifier could not be generated.\"\n  },\n  cryptoDoesNotExist: {\n    code: \"crypto_nonexistent\",\n    desc: \"The crypto object or function is not available.\"\n  },\n  httpMethodNotImplementedError: {\n    code: \"http_method_not_implemented\",\n    desc: \"The HTTP method given has not been implemented in this library.\"\n  },\n  emptyNavigateUriError: {\n    code: \"empty_navigate_uri\",\n    desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n  },\n  hashEmptyError: {\n    code: \"hash_empty_error\",\n    desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash.\"\n  },\n  hashDoesNotContainStateError: {\n    code: \"no_state_in_hash\",\n    desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\n  },\n  hashDoesNotContainKnownPropertiesError: {\n    code: \"hash_does_not_contain_known_properties\",\n    desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.\"\n  },\n  unableToParseStateError: {\n    code: \"unable_to_parse_state\",\n    desc: \"Unable to parse state. Please verify that the request originated from msal.\"\n  },\n  stateInteractionTypeMismatchError: {\n    code: \"state_interaction_type_mismatch\",\n    desc: \"Hash contains state but the interaction type does not match the caller.\"\n  },\n  interactionInProgress: {\n    code: \"interaction_in_progress\",\n    desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  popUpWindowError: {\n    code: \"popup_window_error\",\n    desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n  },\n  emptyWindowError: {\n    code: \"empty_window_error\",\n    desc: \"window.open returned null or undefined window object.\"\n  },\n  userCancelledError: {\n    code: \"user_cancelled\",\n    desc: \"User cancelled the flow.\"\n  },\n  monitorPopupTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  monitorIframeTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  redirectInIframeError: {\n    code: \"redirect_in_iframe\",\n    desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n  },\n  blockTokenRequestsInHiddenIframeError: {\n    code: \"block_iframe_reload\",\n    desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  blockAcquireTokenInPopupsError: {\n    code: \"block_nested_popups\",\n    desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\n  },\n  iframeClosedPrematurelyError: {\n    code: \"iframe_closed_prematurely\",\n    desc: \"The iframe being monitored was closed prematurely.\"\n  },\n  silentSSOInsufficientInfoError: {\n    code: \"silent_sso_error\",\n    desc: \"Silent SSO could not be completed - insufficient information was provided. Please provide either a loginHint or sid.\"\n  },\n  noAccountError: {\n    code: \"no_account_error\",\n    desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\n  },\n  silentPromptValueError: {\n    code: \"silent_prompt_value_error\",\n    desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\n  },\n  noTokenRequestCacheError: {\n    code: \"no_token_request_cache_error\",\n    desc: \"No token request in found in cache.\"\n  },\n  unableToParseTokenRequestCacheError: {\n    code: \"unable_to_parse_token_request_cache_error\",\n    desc: \"The cached token request could not be parsed.\"\n  },\n  noCachedAuthorityError: {\n    code: \"no_cached_authority_error\",\n    desc: \"No cached authority found.\"\n  },\n  authRequestNotSet: {\n    code: \"auth_request_not_set_error\",\n    desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\n  },\n  invalidCacheType: {\n    code: \"invalid_cache_type\",\n    desc: \"Invalid cache type\"\n  },\n  notInBrowserEnvironment: {\n    code: \"non_browser_environment\",\n    desc: \"Login and token requests are not supported in non-browser environments.\"\n  },\n  databaseNotOpen: {\n    code: \"database_not_open\",\n    desc: \"Database is not open!\"\n  },\n  noNetworkConnectivity: {\n    code: \"no_network_connectivity\",\n    desc: \"No network connectivity. Check your internet connection.\"\n  },\n  postRequestFailed: {\n    code: \"post_request_failed\",\n    desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\n  },\n  getRequestFailed: {\n    code: \"get_request_failed\",\n    desc: \"Network request failed. Please check the network trace to determine root cause.\"\n  },\n  failedToParseNetworkResponse: {\n    code: \"failed_to_parse_response\",\n    desc: \"Failed to parse network response. Check network trace.\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\n\nvar BrowserAuthError = function (_super) {\n  __extends(BrowserAuthError, _super);\n\n  function BrowserAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    Object.setPrototypeOf(_this, BrowserAuthError.prototype);\n    _this.name = \"BrowserAuthError\";\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when PKCE is not implemented.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when the crypto object is unavailable.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n   * @param method\r\n   */\n\n\n  BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\n  };\n  /**\r\n   * Creates an error thrown when the navigation URI is empty.\r\n   */\n\n\n  BrowserAuthError.createEmptyNavigationUriError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   * @param hashValue\r\n   */\n\n\n  BrowserAuthError.createEmptyHashError = function (hashValue) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   */\n\n\n  BrowserAuthError.createHashDoesNotContainStateError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value does not contain known properties\r\n   */\n\n\n  BrowserAuthError.createHashDoesNotContainKnownPropertiesError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   */\n\n\n  BrowserAuthError.createUnableToParseStateError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\r\n   */\n\n\n  BrowserAuthError.createStateInteractionTypeMismatchError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n   */\n\n\n  BrowserAuthError.createInteractionInProgressError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n  };\n  /**\r\n   * Creates an error thrown when the popup window could not be opened.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createPopupWindowError = function (errDetail) {\n    var errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\n    errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\n    return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\n  };\n  /**\r\n   * Creates an error thrown when window.open returns an empty window object.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createEmptyWindowCreatedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the user closes a popup.\r\n   */\n\n\n  BrowserAuthError.createUserCancelledError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorPopupFromHash times out for a given popup.\r\n   */\n\n\n  BrowserAuthError.createMonitorPopupTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code, BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\r\n   */\n\n\n  BrowserAuthError.createMonitorIframeTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code, BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when navigateWindow is called inside an iframe.\r\n   * @param windowParentCheck\r\n   */\n\n\n  BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\n  };\n  /**\r\n   * Creates an error thrown when an auth reload is done inside an iframe.\r\n   */\n\n\n  BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a popup attempts to call an acquireToken API\r\n   * @returns\r\n   */\n\n\n  BrowserAuthError.createBlockAcquireTokenInPopupsError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code, BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n  };\n  /**\r\n   * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n   */\n\n\n  BrowserAuthError.createIframeClosedPrematurelyError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the login_hint, sid or account object is not provided in the ssoSilent API.\r\n   */\n\n\n  BrowserAuthError.createSilentSSOInsufficientInfoError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentSSOInsufficientInfoError.code, BrowserAuthErrorMessage.silentSSOInsufficientInfoError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\r\n   */\n\n\n  BrowserAuthError.createNoAccountError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n   */\n\n\n  BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\n  };\n  /**\r\n   * Creates an error thrown when the cached token request could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createUnableToParseTokenRequestCacheError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code, BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the token request could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createNoTokenRequestCacheError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code, BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n  };\n  /**\r\n   * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\r\n   */\n\n\n  BrowserAuthError.createAuthRequestNotSetError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code, BrowserAuthErrorMessage.authRequestNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the authority could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createNoCachedAuthorityError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code, BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n  };\n  /**\r\n   * Creates an error thrown if cache type is invalid.\r\n   */\n\n\n  BrowserAuthError.createInvalidCacheTypeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, \"\" + BrowserAuthErrorMessage.invalidCacheType.desc);\n  };\n  /**\r\n   * Create an error thrown when login and token requests are made from a non-browser environment\r\n   */\n\n\n  BrowserAuthError.createNonBrowserEnvironmentError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n  };\n  /**\r\n   * Create an error thrown when indexDB database is not open\r\n   */\n\n\n  BrowserAuthError.createDatabaseNotOpenError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n  };\n  /**\r\n   * Create an error thrown when token fetch fails due to no internet\r\n   */\n\n\n  BrowserAuthError.createNoNetworkConnectivityError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n  };\n  /**\r\n   * Create an error thrown when token fetch fails due to reasons other than internet connectivity\r\n   */\n\n\n  BrowserAuthError.createPostRequestFailedError = function (errorDesc, endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, BrowserAuthErrorMessage.postRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when get request fails due to reasons other than internet connectivity\r\n   */\n\n\n  BrowserAuthError.createGetRequestFailedError = function (errorDesc, endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, BrowserAuthErrorMessage.getRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when network client fails to parse network response\r\n   */\n\n\n  BrowserAuthError.createFailedToParseNetworkResponseError = function (endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, BrowserAuthErrorMessage.failedToParseNetworkResponse.desc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n\n  return BrowserAuthError;\n}(AuthError);\n\nexport { BrowserAuthError, BrowserAuthErrorMessage };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@azure/msal-browser/dist/error/BrowserAuthError.js"],"names":["__extends","StringUtils","AuthError","BrowserAuthErrorMessage","pkceNotGenerated","code","desc","cryptoDoesNotExist","httpMethodNotImplementedError","emptyNavigateUriError","hashEmptyError","hashDoesNotContainStateError","hashDoesNotContainKnownPropertiesError","unableToParseStateError","stateInteractionTypeMismatchError","interactionInProgress","popUpWindowError","emptyWindowError","userCancelledError","monitorPopupTimeoutError","monitorIframeTimeoutError","redirectInIframeError","blockTokenRequestsInHiddenIframeError","blockAcquireTokenInPopupsError","iframeClosedPrematurelyError","silentSSOInsufficientInfoError","noAccountError","silentPromptValueError","noTokenRequestCacheError","unableToParseTokenRequestCacheError","noCachedAuthorityError","authRequestNotSet","invalidCacheType","notInBrowserEnvironment","databaseNotOpen","noNetworkConnectivity","postRequestFailed","getRequestFailed","failedToParseNetworkResponse","BrowserAuthError","_super","errorCode","errorMessage","_this","call","Object","setPrototypeOf","prototype","name","createPkceNotGeneratedError","errDetail","createCryptoNotAvailableError","createHttpMethodNotImplementedError","method","createEmptyNavigationUriError","createEmptyHashError","hashValue","createHashDoesNotContainStateError","createHashDoesNotContainKnownPropertiesError","createUnableToParseStateError","createStateInteractionTypeMismatchError","createInteractionInProgressError","createPopupWindowError","isEmpty","createEmptyWindowCreatedError","createUserCancelledError","createMonitorPopupTimeoutError","createMonitorIframeTimeoutError","createRedirectInIframeError","windowParentCheck","createBlockReloadInHiddenIframeError","createBlockAcquireTokenInPopupsError","createIframeClosedPrematurelyError","createSilentSSOInsufficientInfoError","createNoAccountError","createSilentPromptValueError","givenPrompt","createUnableToParseTokenRequestCacheError","createNoTokenRequestCacheError","createAuthRequestNotSetError","createNoCachedAuthorityError","createInvalidCacheTypeError","createNonBrowserEnvironmentError","createDatabaseNotOpenError","createNoNetworkConnectivityError","createPostRequestFailedError","errorDesc","endpoint","split","createGetRequestFailedError","createFailedToParseNetworkResponseError"],"mappings":"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","sourcesContent":["/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { StringUtils, AuthError } from '@azure/msal-common';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar BrowserAuthErrorMessage = {\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash.\"\r\n    },\r\n    hashDoesNotContainStateError: {\r\n        code: \"no_state_in_hash\",\r\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\r\n    },\r\n    hashDoesNotContainKnownPropertiesError: {\r\n        code: \"hash_does_not_contain_known_properties\",\r\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.\"\r\n    },\r\n    unableToParseStateError: {\r\n        code: \"unable_to_parse_state\",\r\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\"\r\n    },\r\n    stateInteractionTypeMismatchError: {\r\n        code: \"state_interaction_type_mismatch\",\r\n        desc: \"Hash contains state but the interaction type does not match the caller.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorPopupTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    monitorIframeTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\r\n    },\r\n    blockAcquireTokenInPopupsError: {\r\n        code: \"block_nested_popups\",\r\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentSSOInsufficientInfoError: {\r\n        code: \"silent_sso_error\",\r\n        desc: \"Silent SSO could not be completed - insufficient information was provided. Please provide either a loginHint or sid.\"\r\n    },\r\n    noAccountError: {\r\n        code: \"no_account_error\",\r\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\r\n    },\r\n    noTokenRequestCacheError: {\r\n        code: \"no_token_request_cache_error\",\r\n        desc: \"No token request in found in cache.\"\r\n    },\r\n    unableToParseTokenRequestCacheError: {\r\n        code: \"unable_to_parse_token_request_cache_error\",\r\n        desc: \"The cached token request could not be parsed.\"\r\n    },\r\n    noCachedAuthorityError: {\r\n        code: \"no_cached_authority_error\",\r\n        desc: \"No cached authority found.\"\r\n    },\r\n    authRequestNotSet: {\r\n        code: \"auth_request_not_set_error\",\r\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    notInBrowserEnvironment: {\r\n        code: \"non_browser_environment\",\r\n        desc: \"Login and token requests are not supported in non-browser environments.\"\r\n    },\r\n    databaseNotOpen: {\r\n        code: \"database_not_open\",\r\n        desc: \"Database is not open!\"\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: \"no_network_connectivity\",\r\n        desc: \"No network connectivity. Check your internet connection.\"\r\n    },\r\n    postRequestFailed: {\r\n        code: \"post_request_failed\",\r\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\r\n    },\r\n    getRequestFailed: {\r\n        code: \"get_request_failed\",\r\n        desc: \"Network request failed. Please check the network trace to determine root cause.\"\r\n    },\r\n    failedToParseNetworkResponse: {\r\n        code: \"failed_to_parse_response\",\r\n        desc: \"Failed to parse network response. Check network trace.\"\r\n    }\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nvar BrowserAuthError = /** @class */ (function (_super) {\r\n    __extends(BrowserAuthError, _super);\r\n    function BrowserAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, BrowserAuthError.prototype);\r\n        _this.name = \"BrowserAuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method\r\n     */\r\n    BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    BrowserAuthError.createEmptyNavigationUriError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue\r\n     */\r\n    BrowserAuthError.createEmptyHashError = function (hashValue) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     */\r\n    BrowserAuthError.createHashDoesNotContainStateError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash string value does not contain known properties\r\n     */\r\n    BrowserAuthError.createHashDoesNotContainKnownPropertiesError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     */\r\n    BrowserAuthError.createUnableToParseStateError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\r\n     */\r\n    BrowserAuthError.createStateInteractionTypeMismatchError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    BrowserAuthError.createInteractionInProgressError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createPopupWindowError = function (errDetail) {\r\n        var errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    };\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createEmptyWindowCreatedError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    BrowserAuthError.createUserCancelledError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\r\n     */\r\n    BrowserAuthError.createMonitorPopupTimeoutError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code, BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\r\n     */\r\n    BrowserAuthError.createMonitorIframeTimeoutError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code, BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe.\r\n     * @param windowParentCheck\r\n     */\r\n    BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a popup attempts to call an acquireToken API\r\n     * @returns\r\n     */\r\n    BrowserAuthError.createBlockAcquireTokenInPopupsError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code, BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    BrowserAuthError.createIframeClosedPrematurelyError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the login_hint, sid or account object is not provided in the ssoSilent API.\r\n     */\r\n    BrowserAuthError.createSilentSSOInsufficientInfoError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentSSOInsufficientInfoError.code, BrowserAuthErrorMessage.silentSSOInsufficientInfoError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\r\n     */\r\n    BrowserAuthError.createNoAccountError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\r\n     */\r\n    BrowserAuthError.createUnableToParseTokenRequestCacheError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code, BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     */\r\n    BrowserAuthError.createNoTokenRequestCacheError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code, BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\r\n     */\r\n    BrowserAuthError.createAuthRequestNotSetError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code, BrowserAuthErrorMessage.authRequestNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authority could not be retrieved from the cache\r\n     */\r\n    BrowserAuthError.createNoCachedAuthorityError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code, BrowserAuthErrorMessage.noCachedAuthorityError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown if cache type is invalid.\r\n     */\r\n    BrowserAuthError.createInvalidCacheTypeError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, \"\" + BrowserAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    /**\r\n     * Create an error thrown when login and token requests are made from a non-browser environment\r\n     */\r\n    BrowserAuthError.createNonBrowserEnvironmentError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\r\n    };\r\n    /**\r\n     * Create an error thrown when indexDB database is not open\r\n     */\r\n    BrowserAuthError.createDatabaseNotOpenError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\r\n    };\r\n    /**\r\n     * Create an error thrown when token fetch fails due to no internet\r\n     */\r\n    BrowserAuthError.createNoNetworkConnectivityError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\r\n    };\r\n    /**\r\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\r\n     */\r\n    BrowserAuthError.createPostRequestFailedError = function (errorDesc, endpoint) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, BrowserAuthErrorMessage.postRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\r\n    };\r\n    /**\r\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\r\n     */\r\n    BrowserAuthError.createGetRequestFailedError = function (errorDesc, endpoint) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, BrowserAuthErrorMessage.getRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\r\n    };\r\n    /**\r\n     * Create an error thrown when network client fails to parse network response\r\n     */\r\n    BrowserAuthError.createFailedToParseNetworkResponseError = function (endpoint) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, BrowserAuthErrorMessage.failedToParseNetworkResponse.desc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\r\n    };\r\n    return BrowserAuthError;\r\n}(AuthError));\n\nexport { BrowserAuthError, BrowserAuthErrorMessage };\n"]},"metadata":{},"sourceType":"module"}