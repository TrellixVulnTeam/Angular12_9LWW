{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { NgModule, Injectable, Component, Input, CUSTOM_ELEMENTS_SCHEMA, ChangeDetectionStrategy, Inject, ViewChild, Directive, Self, HostListener } from '@angular/core';\nimport * as i1 from '@igo2/context';\nimport { IgoContextModule, IgoContextImportExportModule } from '@igo2/context';\nimport { __decorate } from 'tslib';\nimport * as i4 from '@igo2/common';\nimport { ToolComponent, EntityStore, EntityStoreFilterCustomFuncStrategy, EntityStoreFilterSelectionStrategy, WorkspaceStore, IgoSpinnerModule, getEntityTitle, FlexibleComponent, IgoFlexibleModule, IgoPanelModule, IgoCustomHtmlModule, IgoInteractiveTourModule } from '@igo2/common';\nimport { BehaviorSubject, Subject, combineLatest, ReplaySubject, forkJoin, of } from 'rxjs';\nimport * as i1$1 from '@igo2/geo';\nimport { IgoMap, IgoCatalogLibraryModule, IgoCatalogBrowserModule, StopsStore, StopsFeatureStore, RoutesFeatureStore, StepFeatureStore, IgoDirectionsModule, FeatureStore, IgoDrawingToolModule, FeatureStoreSelectionStrategy, FeatureMotion, mapExtentStrategyActiveToolTip, noElementSelected, OgcFilterWidget, WfsWorkspace, FeatureWorkspace, EditionWorkspace, IgoImportExportModule, LayerListControlsEnum, sourceCanSearch, VectorLayer, zoneMtm, zoneUtm, formatScale, computeProjectionsConstraints, IgoLayerModule, IgoMetadataModule, IgoDownloadModule, IgoFilterModule, IgoMeasurerModule, IgoPrintModule, IgoSearchModule, FEATURE, getCommonVectorStyle, featureToOl, computeOlFeaturesExtent, featuresAreOutOfView, featuresAreTooDeepInView, featureFromOl, getCommonVectorSelectedStyle, moveToOlFeatures, IgoFeatureModule, IgoFeatureDetailsModule, SpatialFilterItemType, MeasureLengthUnit, SpatialFilterType, createOverlayMarkerStyle, IgoQueryModule } from '@igo2/geo';\nimport * as i4$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { take, skipWhile, map, debounceTime, takeUntil, tap, skip } from 'rxjs/operators';\nimport * as i2 from '@igo2/auth';\nimport * as i2$1 from '@igo2/core';\nimport { StorageScope, StorageServiceEventEnum, IgoLanguageModule } from '@igo2/core';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i4$2 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i6 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i8 from '@ngx-translate/core';\nimport * as i5 from '@angular/material/tabs';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport * as i7 from '@angular/material/list';\nimport { MatListModule } from '@angular/material/list';\nimport * as i10 from '@angular/material/slide-toggle';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport * as i6$2 from '@angular/material/menu';\nimport { MatMenuModule } from '@angular/material/menu';\nimport * as i8$1 from '@angular/material/core';\nimport { MatOptionModule } from '@angular/material/core';\nimport * as i3$1 from '@angular/forms';\nimport { Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i6$1 from '@angular/material/form-field';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i7$1 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i9 from '@angular/material/divider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { Clipboard } from '@igo2/utils';\nimport * as olproj from 'ol/proj';\nimport * as i10$1 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport * as i12 from '@angular/material/badge';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olFeature from 'ol/Feature';\nimport olPoint from 'ol/geom/Point';\nimport pointOnFeature from '@turf/point-on-feature';\nimport * as olstyle from 'ol/style';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3$2 from '@angular/common/http';\nlet IgoAppAnalyticsModule = /*#__PURE__*/(() => {\n  class IgoAppAnalyticsModule {}\n\n  IgoAppAnalyticsModule.ɵfac = function IgoAppAnalyticsModule_Factory(t) {\n    return new (t || IgoAppAnalyticsModule)();\n  };\n\n  IgoAppAnalyticsModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppAnalyticsModule\n  });\n  IgoAppAnalyticsModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return IgoAppAnalyticsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ImportExportType = /*#__PURE__*/(() => {\n  (function (ImportExportType) {\n    ImportExportType[\"layer\"] = \"layer\";\n    ImportExportType[\"context\"] = \"context\";\n  })(ImportExportType || (ImportExportType = {}));\n\n  return ImportExportType;\n})();\nvar ImportExportMode = /*#__PURE__*/(() => {\n  (function (ImportExportMode) {\n    ImportExportMode[\"import\"] = \"import\";\n    ImportExportMode[\"export\"] = \"export\";\n  })(ImportExportMode || (ImportExportMode = {}));\n\n  return ImportExportMode;\n})();\n\n/**\r\n * Service that holds the state of the importExport module\r\n */\nlet ImportExportState = /*#__PURE__*/(() => {\n  class ImportExportState {\n    constructor() {\n      this.importExportType$ = new BehaviorSubject(ImportExportType.layer);\n      this.selectedMode$ = new BehaviorSubject(ImportExportMode.import);\n      this.exportOptions$ = new BehaviorSubject(undefined);\n    }\n\n    setImportExportType(type) {\n      this.importExportType$.next(type);\n    }\n\n    setMode(mode) {\n      this.selectedMode$.next(mode);\n    }\n\n    setsExportOptions(exportOptions) {\n      this.exportOptions$.next(exportOptions);\n    }\n\n  }\n\n  ImportExportState.ɵfac = function ImportExportState_Factory(t) {\n    return new (t || ImportExportState)();\n  };\n\n  ImportExportState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImportExportState,\n    factory: ImportExportState.ɵfac,\n    providedIn: 'root'\n  });\n  return ImportExportState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Service that holds the state of the search module\r\n */\n\n\nlet ToolState = /*#__PURE__*/(() => {\n  class ToolState {\n    constructor(toolService, importExportState) {\n      this.toolService = toolService;\n      this.importExportState = importExportState;\n      this.openSidenav$ = new BehaviorSubject(undefined);\n    }\n\n    get toolbox() {\n      return this.toolService.toolbox;\n    }\n\n    toolToActivateFromOptions(toolToActivate) {\n      if (!toolToActivate) {\n        return;\n      }\n\n      if (toolToActivate.tool === 'importExport') {\n        let exportOptions = this.importExportState.exportOptions$.value;\n\n        if (!exportOptions) {\n          exportOptions = {\n            layers: toolToActivate.options.layers,\n            featureInMapExtent: toolToActivate.options.featureInMapExtent\n          };\n        } else {\n          exportOptions.layers = toolToActivate.options.layers;\n          exportOptions.featureInMapExtent = toolToActivate.options.featureInMapExtent;\n        }\n\n        this.importExportState.setsExportOptions(exportOptions);\n        this.importExportState.setMode(ImportExportMode.export);\n      }\n\n      if (this.toolbox.getTool(toolToActivate.tool)) {\n        this.toolbox.activateTool(toolToActivate.tool);\n        this.openSidenav$.next(true);\n      }\n    }\n\n  }\n\n  ToolState.ɵfac = function ToolState_Factory(t) {\n    return new (t || ToolState)(i0.ɵɵinject(i4.ToolService), i0.ɵɵinject(ImportExportState));\n  };\n\n  ToolState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ToolState,\n    factory: ToolState.ɵfac,\n    providedIn: 'root'\n  });\n  return ToolState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ContextEditorToolComponent = /*#__PURE__*/(() => {\n  let ContextEditorToolComponent = class ContextEditorToolComponent {\n    constructor(toolState) {\n      this.toolState = toolState;\n    }\n\n    submitSuccessed() {\n      this.toolState.toolbox.activatePreviousTool();\n    }\n\n  };\n\n  ContextEditorToolComponent.ɵfac = function ContextEditorToolComponent_Factory(t) {\n    return new (t || ContextEditorToolComponent)(i0.ɵɵdirectiveInject(ToolState));\n  };\n\n  ContextEditorToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextEditorToolComponent,\n    selectors: [[\"igo-context-editor-tool\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"igoContextEditBinding\", \"\", 3, \"submitSuccessed\"]],\n    template: function ContextEditorToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"igo-context-edit\", 0);\n        i0.ɵɵlistener(\"submitSuccessed\", function ContextEditorToolComponent_Template_igo_context_edit_submitSuccessed_0_listener() {\n          return ctx.submitSuccessed();\n        });\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i1.ContextEditComponent, i1.ContextEditBindingDirective],\n    encapsulation: 2\n  });\n  ContextEditorToolComponent = __decorate([ToolComponent({\n    name: 'contextEditor',\n    title: 'igo.integration.tools.contexts',\n    icon: 'star',\n    parent: 'contextManager'\n  })], ContextEditorToolComponent);\n  return ContextEditorToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // import { BehaviorSubject } from 'rxjs';\n\n/**\r\n * Service that holds the state of the map module\r\n */\n\n\nlet MapState = /*#__PURE__*/(() => {\n  class MapState {\n    constructor(mapService, projectionService // Don't remove this or it'll never be injected\n    ) {\n      this.mapService = mapService;\n      this.projectionService = projectionService;\n      this._map = new IgoMap({\n        controls: {\n          scaleLine: true,\n          attribution: {\n            collapsed: true\n          }\n        }\n      });\n      this.mapService.setMap(this.map);\n    } // public mapCenter$ = new BehaviorSubject<boolean>(false);\n\n\n    get showAllLegendsValue() {\n      return this._legendToolShowAll;\n    }\n\n    set showAllLegendsValue(value) {\n      this._legendToolShowAll = value;\n    }\n    /**\r\n     * Active map\r\n     */\n\n\n    get map() {\n      return this._map;\n    }\n\n  }\n\n  MapState.ɵfac = function MapState_Factory(t) {\n    return new (t || MapState)(i0.ɵɵinject(i1$1.MapService), i0.ɵɵinject(i1$1.ProjectionService));\n  };\n\n  MapState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MapState,\n    factory: MapState.ɵfac,\n    providedIn: 'root'\n  });\n  return MapState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ContextManagerToolComponent = /*#__PURE__*/(() => {\n  let ContextManagerToolComponent = class ContextManagerToolComponent {\n    constructor(toolState, mapState) {\n      this.toolState = toolState;\n      this.mapState = mapState;\n      this.toolToOpenOnContextChange = 'mapTools';\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    editContext() {\n      this.toolState.toolbox.activateTool('contextEditor');\n    }\n\n    managePermissions() {\n      this.toolState.toolbox.activateTool('contextPermissionManager');\n    }\n\n  };\n\n  ContextManagerToolComponent.ɵfac = function ContextManagerToolComponent_Factory(t) {\n    return new (t || ContextManagerToolComponent)(i0.ɵɵdirectiveInject(ToolState), i0.ɵɵdirectiveInject(MapState));\n  };\n\n  ContextManagerToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextManagerToolComponent,\n    selectors: [[\"igo-context-manager-tool\"]],\n    inputs: {\n      toolToOpenOnContextChange: \"toolToOpenOnContextChange\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"igoContextListBinding\", \"\", 3, \"map\", \"edit\", \"managePermissions\"]],\n    template: function ContextManagerToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"igo-context-list\", 0);\n        i0.ɵɵlistener(\"edit\", function ContextManagerToolComponent_Template_igo_context_list_edit_0_listener() {\n          return ctx.editContext();\n        })(\"managePermissions\", function ContextManagerToolComponent_Template_igo_context_list_managePermissions_0_listener() {\n          return ctx.managePermissions();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"map\", ctx.map);\n      }\n    },\n    directives: [i1.ContextListComponent, i1.ContextListBindingDirective],\n    encapsulation: 2\n  });\n  ContextManagerToolComponent = __decorate([ToolComponent({\n    name: 'contextManager',\n    title: 'igo.integration.tools.contexts',\n    icon: 'star'\n  })], ContextManagerToolComponent);\n  return ContextManagerToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ContextPermissionManagerToolComponent = /*#__PURE__*/(() => {\n  let ContextPermissionManagerToolComponent = class ContextPermissionManagerToolComponent {};\n\n  ContextPermissionManagerToolComponent.ɵfac = function ContextPermissionManagerToolComponent_Factory(t) {\n    return new (t || ContextPermissionManagerToolComponent)();\n  };\n\n  ContextPermissionManagerToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextPermissionManagerToolComponent,\n    selectors: [[\"igo-context-permission-manager-tool\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"igoContextPermissionsBinding\", \"\"]],\n    template: function ContextPermissionManagerToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-context-permissions\", 0);\n      }\n    },\n    directives: [i1.ContextPermissionsComponent, i1.ContextPermissionsBindingDirective],\n    encapsulation: 2\n  });\n  ContextPermissionManagerToolComponent = __decorate([ToolComponent({\n    name: 'contextPermissionManager',\n    title: 'igo.integration.tools.contexts',\n    icon: 'star',\n    parent: 'contextManager'\n  })], ContextPermissionManagerToolComponent);\n  return ContextPermissionManagerToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Service that holds the state of layer list tool values\r\n */\n\n\nlet LayerListToolState = /*#__PURE__*/(() => {\n  class LayerListToolState {\n    constructor() {\n      this.keyword$ = new BehaviorSubject('');\n      this.sortAlpha$ = new BehaviorSubject(undefined);\n      this.onlyVisible$ = new BehaviorSubject(undefined);\n      this.selectedTab$ = new BehaviorSubject(undefined);\n    }\n\n    setKeyword(keyword) {\n      this.keyword$.next(keyword);\n    }\n\n    setSortAlpha(sort) {\n      this.sortAlpha$.next(sort);\n    }\n\n    setOnlyVisible(onlyVisible) {\n      this.onlyVisible$.next(onlyVisible);\n    }\n\n    setSelectedTab(tab) {\n      this.selectedTab$.next(tab);\n    }\n\n    getLayerListControls() {\n      return {\n        keyword: this.keyword$.value,\n        onlyVisible: this.onlyVisible$.value,\n        sortAlpha: this.sortAlpha$.value\n      };\n    }\n\n  }\n\n  LayerListToolState.ɵfac = function LayerListToolState_Factory(t) {\n    return new (t || LayerListToolState)();\n  };\n\n  LayerListToolState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LayerListToolState,\n    factory: LayerListToolState.ɵfac,\n    providedIn: 'root'\n  });\n  return LayerListToolState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ContextShareToolComponent = /*#__PURE__*/(() => {\n  let ContextShareToolComponent = class ContextShareToolComponent {\n    constructor(mapState, layerListToolState) {\n      this.mapState = mapState;\n      this.layerListToolState = layerListToolState;\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get layerListControls() {\n      return this.layerListToolState.getLayerListControls();\n    }\n\n  };\n\n  ContextShareToolComponent.ɵfac = function ContextShareToolComponent_Factory(t) {\n    return new (t || ContextShareToolComponent)(i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(LayerListToolState));\n  };\n\n  ContextShareToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextShareToolComponent,\n    selectors: [[\"igo-context-share-tool\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"map\"]],\n    template: function ContextShareToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-share-map\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"map\", ctx.map);\n      }\n    },\n    directives: [i1.ShareMapComponent],\n    encapsulation: 2\n  });\n  ContextShareToolComponent = __decorate([ToolComponent({\n    name: 'shareMap',\n    title: 'igo.integration.tools.shareMap',\n    icon: 'share-variant'\n  })], ContextShareToolComponent);\n  return ContextShareToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppContextModule = /*#__PURE__*/(() => {\n  class IgoAppContextModule {}\n\n  IgoAppContextModule.ɵfac = function IgoAppContextModule_Factory(t) {\n    return new (t || IgoAppContextModule)();\n  };\n\n  IgoAppContextModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppContextModule\n  });\n  IgoAppContextModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoContextModule]]\n  });\n  return IgoAppContextModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppContextModule, {\n    declarations: [ContextEditorToolComponent, ContextManagerToolComponent, ContextPermissionManagerToolComponent, ContextShareToolComponent],\n    imports: [IgoContextModule],\n    exports: [ContextEditorToolComponent, ContextManagerToolComponent, ContextPermissionManagerToolComponent, ContextShareToolComponent]\n  });\n})();\n/**\r\n * Service that holds the state of the catalog module\r\n */\n\n\nlet CatalogState = /*#__PURE__*/(() => {\n  class CatalogState {\n    constructor(authService) {\n      /**\r\n       * Catalog -> Catalog items store mapping\r\n       */\n      this.catalogItemsStores = new Map();\n      this._catalogStore = new EntityStore([]);\n      authService.authenticate$.subscribe(() => {\n        this.clearCatalogItemsStores();\n      });\n    }\n    /**\r\n     * Store that contains all the catalogs\r\n     */\n\n\n    get catalogStore() {\n      return this._catalogStore;\n    }\n    /**\r\n     * Get a catalog's items store\r\n     * @param catalog Catalog\r\n     * @returns Store that contains the catalog items\r\n     */\n\n\n    getCatalogItemsStore(catalog) {\n      return this.catalogItemsStores.get(catalog.id);\n    }\n    /**\r\n     * Bind a catalog items store to a catalog\r\n     * @param catalog Catalog\r\n     * @param store Catalog items store\r\n     */\n\n\n    setCatalogItemsStore(catalog, store) {\n      this.catalogItemsStores.set(catalog.id, store);\n    }\n    /**\r\n     * Clear all catalog items stores\r\n     */\n\n\n    clearCatalogItemsStores() {\n      this.catalogItemsStores.clear();\n    }\n\n  }\n\n  CatalogState.ɵfac = function CatalogState_Factory(t) {\n    return new (t || CatalogState)(i0.ɵɵinject(i2.AuthService));\n  };\n\n  CatalogState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CatalogState,\n    factory: CatalogState.ɵfac,\n    providedIn: 'root'\n  });\n  return CatalogState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Tool to browse the list of available catalogs.\r\n */\n\n\nlet CatalogLibraryToolComponent = /*#__PURE__*/(() => {\n  let CatalogLibraryToolComponent = class CatalogLibraryToolComponent {\n    constructor(catalogService, catalogState, toolState, storageService) {\n      this.catalogService = catalogService;\n      this.catalogState = catalogState;\n      this.toolState = toolState;\n      this.storageService = storageService;\n      /**\r\n       * Determine if the form to add a catalog is allowed\r\n       */\n\n      this.addCatalogAllowed = false;\n      /**\r\n       * List of predefined catalogs\r\n       */\n\n      this.predefinedCatalogs = [];\n    }\n    /**\r\n     * Store that contains the catalogs\r\n     * @internal\r\n     */\n\n\n    get store() {\n      return this.catalogState.catalogStore;\n    }\n    /**\r\n     * @internal\r\n     */\n\n\n    ngOnInit() {\n      if (this.store.count === 0) {\n        this.loadCatalogs();\n      }\n    }\n    /**\r\n     * When the selected catalog changes, toggle the the CatalogBrowser tool.\r\n     * @internal\r\n     * @param event Select event\r\n     */\n\n\n    onCatalogSelectChange(event) {\n      if (event.selected === false) {\n        return;\n      }\n\n      this.toolState.toolbox.activateTool('catalogBrowser');\n    }\n    /**\r\n     * Get all the available catalogs from the CatalogService and\r\n     * load them into the store.\r\n     */\n\n\n    loadCatalogs() {\n      this.catalogService.loadCatalogs().pipe(take(1)).subscribe(catalogs => {\n        this.store.clear();\n        this.store.load(catalogs.concat(this.storageService.get('addedCatalogs') || []));\n      });\n    }\n\n  };\n\n  CatalogLibraryToolComponent.ɵfac = function CatalogLibraryToolComponent_Factory(t) {\n    return new (t || CatalogLibraryToolComponent)(i0.ɵɵdirectiveInject(i1$1.CatalogService), i0.ɵɵdirectiveInject(CatalogState), i0.ɵɵdirectiveInject(ToolState), i0.ɵɵdirectiveInject(i2$1.StorageService));\n  };\n\n  CatalogLibraryToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CatalogLibraryToolComponent,\n    selectors: [[\"igo-catalog-library-tool\"]],\n    inputs: {\n      addCatalogAllowed: \"addCatalogAllowed\",\n      predefinedCatalogs: \"predefinedCatalogs\"\n    },\n    decls: 1,\n    vars: 3,\n    consts: [[3, \"predefinedCatalogs\", \"addCatalogAllowed\", \"store\", \"catalogSelectChange\"]],\n    template: function CatalogLibraryToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"igo-catalog-library\", 0);\n        i0.ɵɵlistener(\"catalogSelectChange\", function CatalogLibraryToolComponent_Template_igo_catalog_library_catalogSelectChange_0_listener($event) {\n          return ctx.onCatalogSelectChange($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"predefinedCatalogs\", ctx.predefinedCatalogs)(\"addCatalogAllowed\", ctx.addCatalogAllowed)(\"store\", ctx.store);\n      }\n    },\n    directives: [i1$1.CatalogLibaryComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  CatalogLibraryToolComponent = __decorate([ToolComponent({\n    name: 'catalog',\n    title: 'igo.integration.tools.catalog',\n    icon: 'layers-plus'\n  })], CatalogLibraryToolComponent);\n  return CatalogLibraryToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @ignore\r\n */\n\n\nlet IgoAppCatalogLibraryToolModule = /*#__PURE__*/(() => {\n  class IgoAppCatalogLibraryToolModule {}\n\n  IgoAppCatalogLibraryToolModule.ɵfac = function IgoAppCatalogLibraryToolModule_Factory(t) {\n    return new (t || IgoAppCatalogLibraryToolModule)();\n  };\n\n  IgoAppCatalogLibraryToolModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppCatalogLibraryToolModule\n  });\n  IgoAppCatalogLibraryToolModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, IgoCatalogLibraryModule]]\n  });\n  return IgoAppCatalogLibraryToolModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppCatalogLibraryToolModule, {\n    declarations: [CatalogLibraryToolComponent],\n    imports: [CommonModule, IgoCatalogLibraryModule],\n    exports: [CatalogLibraryToolComponent]\n  });\n})();\n\nfunction CatalogBrowserToolComponent_igo_catalog_browser_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-catalog-browser\", 1);\n  }\n\n  if (rf & 2) {\n    const store_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"catalog\", ctx_r0.catalog)(\"store\", store_r1)(\"map\", ctx_r0.map)(\"toggleCollapsedGroup\", ctx_r0.toggleCollapsedGroup);\n  }\n}\n/**\r\n * Tool to browse a catalog's groups and layers and display them to a map.\r\n */\n\n\nlet CatalogBrowserToolComponent = /*#__PURE__*/(() => {\n  let CatalogBrowserToolComponent = class CatalogBrowserToolComponent {\n    constructor(catalogService, catalogState, mapState, authService) {\n      this.catalogService = catalogService;\n      this.catalogState = catalogState;\n      this.mapState = mapState;\n      this.authService = authService;\n      /**\r\n       * Store that contains the catalog items\r\n       * @internal\r\n       */\n\n      this.store$ = new BehaviorSubject(undefined);\n      /**\r\n       * Whether a group can be toggled when it's collapsed\r\n       */\n\n      this.toggleCollapsedGroup = true;\n    }\n    /**\r\n     * Map to add layers to\r\n     * @internal\r\n     */\n\n\n    get map() {\n      return this.mapState.map;\n    }\n    /**\r\n     * @internal\r\n     */\n\n\n    ngOnInit() {\n      const catalogStore = this.catalogState.catalogStore;\n      this.catalog$$ = catalogStore.stateView.firstBy$(record => record.state.selected === true).subscribe(record => {\n        if (record && record.entity) {\n          const catalog = record.entity;\n          this.catalog = catalog;\n        }\n      });\n      this.authenticate$$ = this.authService.authenticate$.subscribe(() => {\n        this.loadCatalogItems(this.catalog);\n      });\n    }\n    /**\r\n     * @internal\r\n     */\n\n\n    ngOnDestroy() {\n      this.catalog$$.unsubscribe();\n      this.authenticate$$.unsubscribe();\n    }\n    /**\r\n     * Get the selected catalog's items from the CatalogService and\r\n     * load them into the store.\r\n     * @param catalog Selected catalog\r\n     */\n\n\n    loadCatalogItems(catalog) {\n      let store = this.catalogState.getCatalogItemsStore(catalog);\n\n      if (store !== undefined) {\n        this.store$.next(store);\n        return;\n      }\n\n      store = new EntityStore([]);\n      this.catalogState.setCatalogItemsStore(catalog, store);\n      this.catalogService.loadCatalogItems(catalog).pipe(take(1)).subscribe(items => {\n        store.load(items);\n        this.store$.next(store);\n      });\n    }\n\n  };\n\n  CatalogBrowserToolComponent.ɵfac = function CatalogBrowserToolComponent_Factory(t) {\n    return new (t || CatalogBrowserToolComponent)(i0.ɵɵdirectiveInject(i1$1.CatalogService), i0.ɵɵdirectiveInject(CatalogState), i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  CatalogBrowserToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CatalogBrowserToolComponent,\n    selectors: [[\"igo-catalog-browser-tool\"]],\n    inputs: {\n      toggleCollapsedGroup: \"toggleCollapsedGroup\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"catalog\", \"store\", \"map\", \"toggleCollapsedGroup\", 4, \"ngIf\"], [3, \"catalog\", \"store\", \"map\", \"toggleCollapsedGroup\"]],\n    template: function CatalogBrowserToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CatalogBrowserToolComponent_igo_catalog_browser_0_Template, 1, 4, \"igo-catalog-browser\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.store$));\n      }\n    },\n    directives: [i4$1.NgIf, i1$1.CatalogBrowserComponent],\n    pipes: [i4$1.AsyncPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  CatalogBrowserToolComponent = __decorate([ToolComponent({\n    name: 'catalogBrowser',\n    title: 'igo.integration.tools.catalog',\n    icon: 'photo-browser',\n    parent: 'catalog'\n  })], CatalogBrowserToolComponent);\n  return CatalogBrowserToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @ignore\r\n */\n\n\nlet IgoAppCatalogBrowserToolModule = /*#__PURE__*/(() => {\n  class IgoAppCatalogBrowserToolModule {}\n\n  IgoAppCatalogBrowserToolModule.ɵfac = function IgoAppCatalogBrowserToolModule_Factory(t) {\n    return new (t || IgoAppCatalogBrowserToolModule)();\n  };\n\n  IgoAppCatalogBrowserToolModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppCatalogBrowserToolModule\n  });\n  IgoAppCatalogBrowserToolModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, IgoCatalogBrowserModule]]\n  });\n  return IgoAppCatalogBrowserToolModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppCatalogBrowserToolModule, {\n    declarations: [CatalogBrowserToolComponent],\n    imports: [CommonModule, IgoCatalogBrowserModule],\n    exports: [CatalogBrowserToolComponent]\n  });\n})();\n\nlet IgoAppCatalogModule = /*#__PURE__*/(() => {\n  class IgoAppCatalogModule {}\n\n  IgoAppCatalogModule.ɵfac = function IgoAppCatalogModule_Factory(t) {\n    return new (t || IgoAppCatalogModule)();\n  };\n\n  IgoAppCatalogModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppCatalogModule\n  });\n  IgoAppCatalogModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[], IgoAppCatalogLibraryToolModule, IgoAppCatalogBrowserToolModule]\n  });\n  return IgoAppCatalogModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppCatalogModule, {\n    exports: [IgoAppCatalogLibraryToolModule, IgoAppCatalogBrowserToolModule]\n  });\n})();\n/**\r\n * Service that holds the state of the direction module\r\n */\n\n\nlet DirectionState = /*#__PURE__*/(() => {\n  class DirectionState {\n    constructor(mapState) {\n      this.mapState = mapState;\n      this.zoomToActiveRoute$ = new Subject();\n      /**\r\n       * Store that holds the stop\r\n       */\n\n      this.stopsStore = new StopsStore([]);\n      /**\r\n       * Store that holds the driving stops as feature\r\n       */\n\n      this.stopsFeatureStore = new StopsFeatureStore([], {\n        map: this.mapState.map\n      });\n      /**\r\n       * Store that holds the driving route as feature\r\n       */\n\n      this.routesFeatureStore = new RoutesFeatureStore([], {\n        map: this.mapState.map\n      });\n      this.stepFeatureStore = new StepFeatureStore([], {\n        map: this.mapState.map\n      });\n      this.debounceTime = 200;\n      this.mapState.map.ol.once('rendercomplete', () => {\n        this.stopsFeatureStore.empty$.subscribe(empty => {\n          var _a;\n\n          if ((_a = this.stopsFeatureStore.layer) === null || _a === void 0 ? void 0 : _a.options) {\n            this.stopsFeatureStore.layer.options.showInLayerList = !empty;\n          }\n        });\n        this.routesFeatureStore.empty$.subscribe(empty => {\n          var _a;\n\n          if ((_a = this.routesFeatureStore.layer) === null || _a === void 0 ? void 0 : _a.options) {\n            this.routesFeatureStore.layer.options.showInLayerList = !empty;\n          }\n        });\n      });\n      this.mapState.map.layers$.subscribe(() => {\n        if (!this.mapState.map.getLayerById('igo-direction-stops-layer')) {\n          this.stopsStore.deleteMany(this.stopsStore.all());\n          this.stopsFeatureStore.deleteMany(this.stopsFeatureStore.all()); // not necessary\n        }\n\n        if (!this.mapState.map.getLayerById('igo-direction-route-layer')) {\n          this.routesFeatureStore.deleteMany(this.routesFeatureStore.all());\n        }\n      });\n    }\n\n  }\n\n  DirectionState.ɵfac = function DirectionState_Factory(t) {\n    return new (t || DirectionState)(i0.ɵɵinject(MapState));\n  };\n\n  DirectionState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DirectionState,\n    factory: DirectionState.ɵfac,\n    providedIn: 'root'\n  });\n  return DirectionState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Service that holds the state of the context module\r\n */\n\n\nlet ContextState = /*#__PURE__*/(() => {\n  class ContextState {\n    constructor(contextService, toolService, toolState, languageService) {\n      this.contextService = contextService;\n      this.toolService = toolService;\n      this.toolState = toolState;\n      this.languageService = languageService;\n      /**\r\n       * Observable of the active context\r\n       */\n\n      this.context$ = new BehaviorSubject(undefined);\n      this.contextService.context$.subscribe(context => {\n        this.onContextChange(context);\n      });\n      this.contextService.toolsChanged$.subscribe(context => {\n        this.updateTools(context);\n      });\n    }\n    /**\r\n     * Set the active context\r\n     * @param context Detailed context\r\n     */\n\n\n    setContext(context) {\n      this.updateTools(context);\n      this.context$.next(context);\n    }\n    /**\r\n     * Update the tool state with the context's tools\r\n     * @param context Detailed context\r\n     */\n\n\n    updateTools(context) {\n      const toolbox = this.toolState.toolbox;\n      const tools = [];\n      const contextTools = context.tools || [];\n      contextTools.forEach(contextTool => {\n        const baseTool = this.toolService.getTool(contextTool.name);\n\n        if (baseTool === undefined) {\n          return;\n        }\n\n        const options = Object.assign({}, baseTool.options || {}, contextTool.options || {});\n        const tool = Object.assign({}, baseTool, contextTool, {\n          options\n        });\n        tools.push(tool);\n      });\n      tools.forEach(tool => {\n        if (tool.parent) {\n          const parentIndex = tools.findIndex(el => el.name === tool.parent);\n\n          if (parentIndex !== -1) {\n            tools[parentIndex].children = [];\n            tools[parentIndex].children.push(tool.name);\n          }\n        }\n      });\n      toolbox.setTools(tools);\n      toolbox.setToolbar(context.toolbar || []); // TODO: This is a patch so the context service can work without\n      // injecting the ToolState or without being completely refactored\n\n      this.contextService.setTools([].concat(tools));\n      this.contextService.setToolbar(context.toolbar || []);\n    }\n    /**\r\n     * Set a new context and update the tool state\r\n     * @param context Detailed context\r\n     */\n\n\n    onContextChange(context) {\n      if (context === undefined) {\n        return;\n      }\n\n      this.setContext(context);\n    }\n\n  }\n\n  ContextState.ɵfac = function ContextState_Factory(t) {\n    return new (t || ContextState)(i0.ɵɵinject(i1.ContextService), i0.ɵɵinject(i4.ToolService), i0.ɵɵinject(ToolState), i0.ɵɵinject(i2$1.LanguageService));\n  };\n\n  ContextState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContextState,\n    factory: ContextState.ɵfac,\n    providedIn: 'root'\n  });\n  return ContextState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DirectionsToolComponent = /*#__PURE__*/(() => {\n  let DirectionsToolComponent = class DirectionsToolComponent {\n    constructor(directionState, mapState, languageService, messageService, storageService, contextState, authService) {\n      this.directionState = directionState;\n      this.mapState = mapState;\n      this.languageService = languageService;\n      this.messageService = messageService;\n      this.storageService = storageService;\n      this.contextState = contextState;\n      this.authService = authService;\n    }\n    /**\r\n     * stops\r\n     * @internal\r\n     */\n\n\n    get stopsStore() {\n      return this.directionState.stopsStore;\n    }\n\n    get debounceTime() {\n      return this.directionState.debounceTime;\n    }\n    /**\r\n     * stops\r\n     * @internal\r\n     */\n\n\n    get stopsFeatureStore() {\n      return this.directionState.stopsFeatureStore;\n    }\n    /**\r\n     * routes\r\n     * @internal\r\n     */\n\n\n    get routesFeatureStore() {\n      return this.directionState.routesFeatureStore;\n    }\n    /**\r\n     * step store\r\n     * @internal\r\n     */\n\n\n    get stepFeatureStore() {\n      return this.directionState.stepFeatureStore;\n    }\n    /**\r\n     * step store\r\n     * @internal\r\n     */\n\n\n    get zoomToActiveRoute$() {\n      return this.directionState.zoomToActiveRoute$;\n    }\n    /**\r\n     * Map to measure on\r\n     * @internal\r\n     */\n\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    ngOnInit() {\n      const warningShown = this.storageService.get('direction.warning.shown');\n\n      if (!warningShown) {\n        const translate = this.languageService.translate;\n        const title = translate.instant('igo.integration.directions.warning.title');\n        const msg = translate.instant('igo.integration.directions.warning.message');\n        this.messageService.info(msg, title, {\n          timeOut: 20000\n        });\n        this.storageService.set('direction.warning.shown', true, StorageScope.SESSION);\n      }\n\n      this.contextState.context$.subscribe(c => {\n        if (!this.authService.authenticated) {\n          this.currentContextUri = c.uri;\n        }\n      });\n    }\n\n  };\n\n  DirectionsToolComponent.ɵfac = function DirectionsToolComponent_Factory(t) {\n    return new (t || DirectionsToolComponent)(i0.ɵɵdirectiveInject(DirectionState), i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(i2$1.LanguageService), i0.ɵɵdirectiveInject(i2$1.MessageService), i0.ɵɵdirectiveInject(i2$1.StorageService), i0.ɵɵdirectiveInject(ContextState), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  DirectionsToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DirectionsToolComponent,\n    selectors: [[\"igo-directions-tool\"]],\n    decls: 1,\n    vars: 7,\n    consts: [[3, \"contextUri\", \"debounceTime\", \"stopsStore\", \"stopsFeatureStore\", \"stepFeatureStore\", \"routesFeatureStore\", \"zoomToActiveRoute$\"]],\n    template: function DirectionsToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-directions\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"contextUri\", ctx.currentContextUri)(\"debounceTime\", ctx.debounceTime)(\"stopsStore\", ctx.stopsStore)(\"stopsFeatureStore\", ctx.stopsFeatureStore)(\"stepFeatureStore\", ctx.stepFeatureStore)(\"routesFeatureStore\", ctx.routesFeatureStore)(\"zoomToActiveRoute$\", ctx.zoomToActiveRoute$);\n      }\n    },\n    directives: [i1$1.DirectionsComponent],\n    encapsulation: 2\n  });\n  DirectionsToolComponent = __decorate([ToolComponent({\n    name: 'directions',\n    title: 'igo.integration.tools.directions',\n    icon: 'directions'\n  })], DirectionsToolComponent);\n  return DirectionsToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppDirectionsModule = /*#__PURE__*/(() => {\n  class IgoAppDirectionsModule {\n    static forRoot() {\n      return {\n        ngModule: IgoAppDirectionsModule,\n        providers: []\n      };\n    }\n\n  }\n\n  IgoAppDirectionsModule.ɵfac = function IgoAppDirectionsModule_Factory(t) {\n    return new (t || IgoAppDirectionsModule)();\n  };\n\n  IgoAppDirectionsModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppDirectionsModule\n  });\n  IgoAppDirectionsModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoDirectionsModule]]\n  });\n  return IgoAppDirectionsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppDirectionsModule, {\n    declarations: [DirectionsToolComponent],\n    imports: [IgoDirectionsModule],\n    exports: [DirectionsToolComponent]\n  });\n})();\n/**\r\n * Service that holds the state of the measure module\r\n */\n\n\nlet DrawState = /*#__PURE__*/(() => {\n  class DrawState {\n    constructor(mapState) {\n      this.mapState = mapState;\n      /**\r\n       * Store that holds the measures\r\n       */\n\n      this.store = new FeatureStore([], {\n        map: this.mapState.map\n      });\n      this.mapState.map.layers$.subscribe(() => {\n        if (!this.mapState.map.getLayerById('igo-draw-layer')) {\n          this.store.deleteMany(this.store.all());\n        }\n      });\n    }\n\n  }\n\n  DrawState.ɵfac = function DrawState_Factory(t) {\n    return new (t || DrawState)(i0.ɵɵinject(MapState));\n  };\n\n  DrawState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DrawState,\n    factory: DrawState.ɵfac,\n    providedIn: 'root'\n  });\n  return DrawState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Tool to measure lengths and areas\r\n */\n\n\nlet DrawingToolComponent = /*#__PURE__*/(() => {\n  let DrawingToolComponent = class DrawingToolComponent {\n    constructor(drawState, mapState) {\n      this.drawState = drawState;\n      this.mapState = mapState;\n    }\n    /**\r\n     * Map to measure on\r\n     * @internal\r\n     */\n\n\n    get store() {\n      return this.drawState.store;\n    }\n    /**\r\n     * Map to measure on\r\n     * @internal\r\n     */\n\n\n    get map() {\n      return this.mapState.map;\n    }\n\n  };\n\n  DrawingToolComponent.ɵfac = function DrawingToolComponent_Factory(t) {\n    return new (t || DrawingToolComponent)(i0.ɵɵdirectiveInject(DrawState), i0.ɵɵdirectiveInject(MapState));\n  };\n\n  DrawingToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DrawingToolComponent,\n    selectors: [[\"igo-drawing-tool\"]],\n    decls: 1,\n    vars: 2,\n    consts: [[3, \"store\", \"map\"]],\n    template: function DrawingToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-draw\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"store\", ctx.store)(\"map\", ctx.map);\n      }\n    },\n    directives: [i1$1.DrawComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  DrawingToolComponent = __decorate([ToolComponent({\n    name: 'draw',\n    title: 'igo.integration.tools.draw',\n    icon: 'draw'\n  })], DrawingToolComponent);\n  return DrawingToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppDrawModule = /*#__PURE__*/(() => {\n  class IgoAppDrawModule {}\n\n  IgoAppDrawModule.ɵfac = function IgoAppDrawModule_Factory(t) {\n    return new (t || IgoAppDrawModule)();\n  };\n\n  IgoAppDrawModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppDrawModule\n  });\n  IgoAppDrawModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoDrawingToolModule]]\n  });\n  return IgoAppDrawModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppDrawModule, {\n    declarations: [DrawingToolComponent],\n    imports: [IgoDrawingToolModule],\n    exports: [DrawingToolComponent]\n  });\n})();\n\nfunction handleZoomAuto(workspace, storageService) {\n  const zoomStrategy = workspace.entityStore.getStrategyOfType(FeatureStoreSelectionStrategy);\n  zoomStrategy.setMotion(storageService.get('zoomAuto') ? FeatureMotion.Default : FeatureMotion.None);\n}\n/**\r\n * Service that holds the state of storage service\r\n */\n\n\nlet StorageState = /*#__PURE__*/(() => {\n  class StorageState {\n    constructor(igoStorageService) {\n      this.igoStorageService = igoStorageService;\n    }\n\n    get storageService() {\n      return this.igoStorageService;\n    }\n\n  }\n\n  StorageState.ɵfac = function StorageState_Factory(t) {\n    return new (t || StorageState)(i0.ɵɵinject(i2$1.StorageService));\n  };\n\n  StorageState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageState,\n    factory: StorageState.ɵfac,\n    providedIn: 'root'\n  });\n  return StorageState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FeatureActionsService = /*#__PURE__*/(() => {\n  class FeatureActionsService {\n    constructor(storageState, languageService, toolState, mediaService) {\n      this.storageState = storageState;\n      this.languageService = languageService;\n      this.toolState = toolState;\n      this.mediaService = mediaService;\n      this.maximize$ = new BehaviorSubject(this.storageService.get('workspaceMaximize'));\n      this.zoomAuto$ = new BehaviorSubject(false);\n    }\n\n    get storageService() {\n      return this.storageState.storageService;\n    }\n\n    get zoomAuto() {\n      return this.storageService.get('zoomAuto');\n    }\n\n    ngOnDestroy() {\n      if (this.storageChange$$) {\n        this.storageChange$$.unsubscribe();\n      }\n    }\n\n    loadActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$) {\n      const actions = this.buildActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$);\n      workspace.actionStore.load(actions);\n    }\n\n    buildActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$) {\n      this.zoomAuto$.next(this.zoomAuto);\n      this.storageChange$$ = this.storageService.storageChange$.pipe(skipWhile(storageChange => storageChange.key !== 'zoomAuto' || storageChange.event === StorageServiceEventEnum.CLEARED)).subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n      return [{\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set('zoomAuto', !this.storageService.get('zoomAuto'));\n        }\n      }, {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      }, {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.tooltip',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      }, {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: ws => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), {\n            selected: false\n          });\n        },\n        args: [workspace],\n        availability: ws => noElementSelected(ws)\n      }, {\n        id: 'featureDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: ws => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          const layersWithSelection = filterSelectionStrategy.active ? [ws.layer.id] : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: {\n              layers: [ws.layer.id],\n              featureInMapExtent: filterStrategy.active,\n              layersWithSelection\n            }\n          });\n        },\n        args: [workspace]\n      }, {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant('igo.integration.workspace.maximizeTooltip'),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map(v => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        }\n      }, {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant('igo.integration.workspace.standardExtent'),\n        tooltip: this.languageService.translate.instant('igo.integration.workspace.standardExtentTooltip'),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map(v => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }];\n    }\n\n  }\n\n  FeatureActionsService.ɵfac = function FeatureActionsService_Factory(t) {\n    return new (t || FeatureActionsService)(i0.ɵɵinject(StorageState), i0.ɵɵinject(i2$1.LanguageService), i0.ɵɵinject(ToolState), i0.ɵɵinject(i2$1.MediaService));\n  };\n\n  FeatureActionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FeatureActionsService,\n    factory: FeatureActionsService.ɵfac,\n    providedIn: 'root'\n  });\n  return FeatureActionsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet WfsActionsService = /*#__PURE__*/(() => {\n  class WfsActionsService {\n    constructor(ogcFilterWidget, storageState, languageService, mediaService, toolState) {\n      this.ogcFilterWidget = ogcFilterWidget;\n      this.storageState = storageState;\n      this.languageService = languageService;\n      this.mediaService = mediaService;\n      this.toolState = toolState;\n      this.maximize$ = new BehaviorSubject(this.storageService.get('workspaceMaximize'));\n      this.selectOnlyCheckCondition$ = new BehaviorSubject(false); // rowsInMapExtentCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n      this.zoomAuto$ = new BehaviorSubject(false);\n    }\n\n    get storageService() {\n      return this.storageState.storageService;\n    }\n\n    get zoomAuto() {\n      return this.storageService.get('zoomAuto');\n    }\n\n    ngOnDestroy() {\n      if (this.storageChange$$) {\n        this.storageChange$$.unsubscribe();\n      }\n    }\n\n    loadActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$) {\n      const actions = this.buildActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$);\n      workspace.actionStore.load(actions);\n    }\n\n    buildActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$) {\n      var _a, _b;\n\n      this.zoomAuto$.next(this.zoomAuto);\n      this.storageChange$$ = this.storageService.storageChange$.pipe(skipWhile(storageChange => (storageChange === null || storageChange === void 0 ? void 0 : storageChange.key) !== 'zoomAuto' || (storageChange === null || storageChange === void 0 ? void 0 : storageChange.event) === StorageServiceEventEnum.CLEARED)).subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n      const actions = [{\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set('zoomAuto', !this.storageService.get('zoomAuto'));\n        }\n      }, {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      }, {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.title',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      }, {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: ws => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), {\n            selected: false\n          });\n        },\n        args: [workspace],\n        availability: ws => noElementSelected(ws)\n      }, {\n        id: 'wfsDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: ws => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          const layersWithSelection = filterSelectionStrategy.active ? [ws.layer.id] : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: {\n              layers: [ws.layer.id],\n              featureInMapExtent: filterStrategy.active,\n              layersWithSelection\n            }\n          });\n        },\n        args: [workspace]\n      }, {\n        id: 'ogcFilter',\n        icon: 'filter',\n        title: 'igo.integration.workspace.ogcFilter.title',\n        tooltip: 'igo.integration.workspace.ogcFilter.tooltip',\n        handler: (widget, ws) => {\n          ws.activateWidget(widget, {\n            map: ws.map,\n            layer: ws.layer\n          });\n        },\n        args: [this.ogcFilterWidget, workspace]\n      }, {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant('igo.integration.workspace.maximizeTooltip'),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map(v => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        }\n      }, {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant('igo.integration.workspace.standardExtent'),\n        tooltip: this.languageService.translate.instant('igo.integration.workspace.standardExtentTooltip'),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map(v => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }];\n      return ((_b = (_a = workspace.layer.dataSource.ogcFilters$) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.enabled) ? actions : actions.filter(action => action.id !== 'ogcFilter');\n    }\n\n  }\n\n  WfsActionsService.ɵfac = function WfsActionsService_Factory(t) {\n    return new (t || WfsActionsService)(i0.ɵɵinject(OgcFilterWidget), i0.ɵɵinject(StorageState), i0.ɵɵinject(i2$1.LanguageService), i0.ɵɵinject(i2$1.MediaService), i0.ɵɵinject(ToolState));\n  };\n\n  WfsActionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WfsActionsService,\n    factory: WfsActionsService.ɵfac,\n    providedIn: 'root'\n  });\n  return WfsActionsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet EditionActionsService = /*#__PURE__*/(() => {\n  class EditionActionsService {\n    constructor(ogcFilterWidget, storageState, languageService, mediaService, toolState) {\n      this.ogcFilterWidget = ogcFilterWidget;\n      this.storageState = storageState;\n      this.languageService = languageService;\n      this.mediaService = mediaService;\n      this.toolState = toolState;\n      this.maximize$ = new BehaviorSubject(this.storageService.get('workspaceMaximize'));\n      this.zoomAuto$ = new BehaviorSubject(false);\n    }\n\n    get storageService() {\n      return this.storageState.storageService;\n    }\n\n    get zoomAuto() {\n      return this.storageService.get('zoomAuto');\n    }\n\n    ngOnDestroy() {\n      if (this.storageChange$$) {\n        this.storageChange$$.unsubscribe();\n      }\n    }\n\n    loadActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$) {\n      const actions = this.buildActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$);\n      workspace.actionStore.load(actions);\n    }\n\n    buildActions(workspace, rowsInMapExtentCheckCondition$, selectOnlyCheckCondition$) {\n      var _a, _b;\n\n      this.zoomAuto$.next(this.zoomAuto);\n      this.storageChange$$ = this.storageService.storageChange$.pipe(skipWhile(storageChange => (storageChange === null || storageChange === void 0 ? void 0 : storageChange.key) !== 'zoomAuto' || (storageChange === null || storageChange === void 0 ? void 0 : storageChange.event) === StorageServiceEventEnum.CLEARED)).subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n      const actions = [{\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set('zoomAuto', !this.storageService.get('zoomAuto'));\n        }\n      }, {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      }, {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.title',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      }, {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: ws => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), {\n            selected: false\n          });\n        },\n        args: [workspace],\n        availability: ws => noElementSelected(ws)\n      }, {\n        id: 'wfsDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: ws => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          const layersWithSelection = filterSelectionStrategy.active ? [ws.layer.id] : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: {\n              layers: [ws.layer.id],\n              featureInMapExtent: filterStrategy.active,\n              layersWithSelection\n            }\n          });\n        },\n        args: [workspace]\n      }, {\n        id: 'ogcFilter',\n        icon: 'filter',\n        title: 'igo.integration.workspace.ogcFilter.title',\n        tooltip: 'igo.integration.workspace.ogcFilter.tooltip',\n        handler: (widget, ws) => {\n          ws.activateWidget(widget, {\n            map: ws.map,\n            layer: ws.layer\n          });\n        },\n        args: [this.ogcFilterWidget, workspace]\n      }, {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant('igo.integration.workspace.maximizeTooltip'),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map(v => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        }\n      }, {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant('igo.integration.workspace.standardExtent'),\n        tooltip: this.languageService.translate.instant('igo.integration.workspace.standardExtentTooltip'),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map(v => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }];\n      return ((_b = (_a = workspace.layer.dataSource.ogcFilters$) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.enabled) ? actions : actions.filter(action => action.id !== 'ogcFilter');\n    }\n\n  }\n\n  EditionActionsService.ɵfac = function EditionActionsService_Factory(t) {\n    return new (t || EditionActionsService)(i0.ɵɵinject(OgcFilterWidget), i0.ɵɵinject(StorageState), i0.ɵɵinject(i2$1.LanguageService), i0.ɵɵinject(i2$1.MediaService), i0.ɵɵinject(ToolState));\n  };\n\n  EditionActionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EditionActionsService,\n    factory: EditionActionsService.ɵfac,\n    providedIn: 'root'\n  });\n  return EditionActionsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Service that holds the state of the workspace module\r\n */\n\n\nlet WorkspaceState = /*#__PURE__*/(() => {\n  class WorkspaceState {\n    constructor(featureActionsService, wfsActionsService, editionActionsService, storageService) {\n      this.featureActionsService = featureActionsService;\n      this.wfsActionsService = wfsActionsService;\n      this.editionActionsService = editionActionsService;\n      this.storageService = storageService;\n      this.workspacePanelExpanded = false;\n      this.workspaceEnabled$ = new BehaviorSubject(false);\n      this.rowsInMapExtentCheckCondition$ = new BehaviorSubject(true);\n      this.selectOnlyCheckCondition$ = new BehaviorSubject(false);\n      this.workspaceMaximize$ = new BehaviorSubject(this.storageService.get('workspaceMaximize'));\n      this.actionMaximize$$ = [];\n      /** Active widget observable. Only one may be active for all available workspaces */\n\n      this.activeWorkspaceWidget$ = new BehaviorSubject(undefined);\n      /**\r\n       * Observable of the active workspace\r\n       */\n\n      this.workspace$ = new BehaviorSubject(undefined);\n      this.initWorkspaces();\n    }\n    /**\r\n     * Store that holds all the available workspaces\r\n     */\n\n\n    get store() {\n      return this._store;\n    }\n    /**\r\n     * Initialize the workspace store. Each time a workspace is activated,\r\n     * subscribe to it's active widget. Tracking the active widget is useful\r\n     * to make sure only one widget is active at a time.\r\n     */\n\n\n    initWorkspaces() {\n      this._store = new WorkspaceStore([]);\n\n      this._store.stateView.firstBy$(record => record.state.active === true).subscribe(record => {\n        const workspace = record ? record.entity : undefined;\n        this.workspace$.next(workspace);\n      });\n\n      this._store.stateView.all$().subscribe(workspaces => {\n        workspaces.map(wks => {\n          if (wks.entity.actionStore.empty) {\n            if (wks.entity instanceof WfsWorkspace) {\n              this.wfsActionsService.loadActions(wks.entity, this.rowsInMapExtentCheckCondition$, this.selectOnlyCheckCondition$);\n            } else if (wks.entity instanceof FeatureWorkspace) {\n              this.featureActionsService.loadActions(wks.entity, this.rowsInMapExtentCheckCondition$, this.selectOnlyCheckCondition$);\n            } else if (wks.entity instanceof EditionWorkspace) {\n              this.editionActionsService.loadActions(wks.entity, this.rowsInMapExtentCheckCondition$, this.selectOnlyCheckCondition$);\n            }\n          }\n        });\n      });\n\n      this.actionMaximize$$.push(this.featureActionsService.maximize$.subscribe(maximized => {\n        this.setWorkspaceIsMaximized(maximized);\n      }));\n      this.actionMaximize$$.push(this.wfsActionsService.maximize$.subscribe(maximized => {\n        this.setWorkspaceIsMaximized(maximized);\n      }));\n      this.actionMaximize$$.push(this.editionActionsService.maximize$.subscribe(maximized => {\n        this.setWorkspaceIsMaximized(maximized);\n      }));\n      this.activeWorkspace$$ = this.workspace$.subscribe(workspace => {\n        if (this.activeWorkspaceWidget$$ !== undefined) {\n          this.activeWorkspaceWidget$$.unsubscribe();\n          this.activeWorkspaceWidget$$ = undefined;\n        }\n\n        if (workspace !== undefined) {\n          this.activeWorkspaceWidget$$ = workspace.widget$.subscribe(widget => this.activeWorkspaceWidget$.next(widget));\n        }\n      });\n      this.rowsInMapExtentCheckCondition$$ = this.rowsInMapExtentCheckCondition$.subscribe(rowsInMapExtent => {\n        this._store.stateView.all().map(wks => {\n          if (!wks.entity.actionStore.empty) {\n            const filterStrategy = wks.entity.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n\n            if (filterStrategy) {\n              if (rowsInMapExtent) {\n                filterStrategy.activate();\n              } else {\n                filterStrategy.deactivate();\n              }\n            }\n          }\n        });\n      });\n      this.selectOnlyCheckCondition$$ = this.selectOnlyCheckCondition$.subscribe(selectOnly => {\n        this._store.stateView.all().map(wks => {\n          if (!wks.entity.actionStore.empty) {\n            const filterStrategy = wks.entity.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n\n            if (filterStrategy) {\n              if (selectOnly) {\n                filterStrategy.activate();\n              } else {\n                filterStrategy.deactivate();\n              }\n            }\n          }\n        });\n      });\n    }\n\n    setWorkspaceIsMaximized(maximized) {\n      this.storageService.set('workspaceMaximize', maximized);\n      this.workspaceMaximize$.next(maximized);\n    }\n\n    setActiveWorkspaceById(id) {\n      const wksFromId = this.store.all().find(workspace => workspace.id === id);\n\n      if (wksFromId) {\n        this.store.activateWorkspace(wksFromId);\n      }\n    }\n\n    setActiveWorkspaceByTitle(title) {\n      const wksFromTitle = this.store.all().find(workspace => workspace.title === title);\n\n      if (wksFromTitle) {\n        this.store.activateWorkspace(wksFromTitle);\n      }\n    }\n    /**\r\n     * Teardown all the workspaces\r\n     * @internal\r\n     */\n\n\n    ngOnDestroy() {\n      this.teardownWorkspaces();\n      this.actionMaximize$$.map(a => a.unsubscribe());\n\n      if (this.rowsInMapExtentCheckCondition$$) {\n        this.selectOnlyCheckCondition$$.unsubscribe();\n      }\n\n      if (this.selectOnlyCheckCondition$$) {\n        this.selectOnlyCheckCondition$$.unsubscribe();\n      }\n    }\n    /**\r\n     * Teardown the workspace store and any subscribers\r\n     */\n\n\n    teardownWorkspaces() {\n      this.store.clear();\n\n      if (this.activeWorkspaceWidget$$ !== undefined) {\n        this.activeWorkspaceWidget$$.unsubscribe();\n      }\n\n      if (this.activeWorkspace$$ !== undefined) {\n        this.activeWorkspace$$.unsubscribe();\n      }\n    }\n\n  }\n\n  WorkspaceState.ɵfac = function WorkspaceState_Factory(t) {\n    return new (t || WorkspaceState)(i0.ɵɵinject(FeatureActionsService), i0.ɵɵinject(WfsActionsService), i0.ɵɵinject(EditionActionsService), i0.ɵɵinject(i2$1.StorageService));\n  };\n\n  WorkspaceState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorkspaceState,\n    factory: WorkspaceState.ɵfac,\n    providedIn: 'root'\n  });\n  return WorkspaceState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction WorkspaceButtonComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function WorkspaceButtonComponent_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.activateWorkspace();\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"igo.integration.workspace.toggleWorkspace\"))(\"color\", ctx_r0.color);\n  }\n}\n\nlet WorkspaceButtonComponent = /*#__PURE__*/(() => {\n  class WorkspaceButtonComponent {\n    constructor(workspaceState) {\n      this.workspaceState = workspaceState;\n      this.hasWorkspace$ = new BehaviorSubject(false);\n      this.layer$ = new BehaviorSubject(undefined);\n      this.color = 'primary';\n    }\n\n    set layer(value) {\n      this._layer = value;\n      this.layer$.next(this._layer);\n    }\n\n    get layer() {\n      return this._layer;\n    }\n\n    ngOnInit() {\n      this.hasWorkspace$$ = combineLatest([this.workspaceState.workspaceEnabled$, this.layer$]).subscribe(bunch => {\n        var _a, _b;\n\n        return this.hasWorkspace$.next(bunch[0] && ((_b = (_a = bunch[1]) === null || _a === void 0 ? void 0 : _a.options.workspace) === null || _b === void 0 ? void 0 : _b.enabled));\n      });\n    }\n\n    ngOnDestroy() {\n      this.hasWorkspace$$.unsubscribe();\n    }\n\n    activateWorkspace() {\n      if (this.workspaceState.workspace$.value && this.workspaceState.workspace$.value.layer.id === this.layer.id && this.workspaceState.workspacePanelExpanded) {\n        this.workspaceState.workspacePanelExpanded = false;\n      } else {\n        this.workspaceState.workspacePanelExpanded = true;\n        this.workspaceState.setActiveWorkspaceById(this.layer.id);\n      }\n    }\n\n  }\n\n  WorkspaceButtonComponent.ɵfac = function WorkspaceButtonComponent_Factory(t) {\n    return new (t || WorkspaceButtonComponent)(i0.ɵɵdirectiveInject(WorkspaceState));\n  };\n\n  WorkspaceButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkspaceButtonComponent,\n    selectors: [[\"igo-workspace-button\"]],\n    inputs: {\n      layer: \"layer\",\n      color: \"color\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[\"mat-icon-button\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"color\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"color\", \"click\"], [\"svgIcon\", \"table\"]],\n    template: function WorkspaceButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, WorkspaceButtonComponent_button_0_Template, 3, 4, \"button\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.hasWorkspace$));\n      }\n    },\n    directives: [i4$1.NgIf, i3.MatButton, i4$2.MatTooltip, i6.MatIcon],\n    pipes: [i4$1.AsyncPipe, i8.TranslatePipe],\n    styles: [\"\"],\n    changeDetection: 0\n  });\n  return WorkspaceButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppWorkspaceModule = /*#__PURE__*/(() => {\n  class IgoAppWorkspaceModule {}\n\n  IgoAppWorkspaceModule.ɵfac = function IgoAppWorkspaceModule_Factory(t) {\n    return new (t || IgoAppWorkspaceModule)();\n  };\n\n  IgoAppWorkspaceModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppWorkspaceModule\n  });\n  IgoAppWorkspaceModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatIconModule, MatButtonModule, MatTooltipModule, IgoLanguageModule]]\n  });\n  return IgoAppWorkspaceModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppWorkspaceModule, {\n    declarations: [WorkspaceButtonComponent],\n    imports: [CommonModule, MatIconModule, MatButtonModule, MatTooltipModule, IgoLanguageModule],\n    exports: [WorkspaceButtonComponent]\n  });\n})();\n\nfunction ImportExportToolComponent_mat_tab_group_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-tab-group\");\n    i0.ɵɵelementStart(1, \"mat-tab\", 3);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"igo-import-export\", 4);\n    i0.ɵɵlistener(\"selectMode\", function ImportExportToolComponent_mat_tab_group_0_Template_igo_import_export_selectMode_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.modeChanged($event);\n    })(\"exportOptionsChange\", function ImportExportToolComponent_mat_tab_group_0_Template_igo_import_export_exportOptionsChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.exportOptionsChange($event);\n    });\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-tab\", 3);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelement(7, \"igo-context-import-export\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(2, 9, \"igo.integration.importExportTool.importExportData\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"map\", ctx_r0.map)(\"selectFirstProj\", ctx_r0.selectFirstProj)(\"projectionsLimitations\", ctx_r0.projectionsLimitations)(\"store\", ctx_r0.workspaceStore)(\"selectedMode\", i0.ɵɵpipeBind1(4, 11, ctx_r0.importExportState.selectedMode$))(\"exportOptions$\", ctx_r0.importExportState.exportOptions$);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(6, 13, \"igo.integration.importExportTool.importExportContext\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"map\", ctx_r0.map);\n  }\n}\n\nfunction ImportExportToolComponent_igo_import_export_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-import-export\", 6);\n    i0.ɵɵlistener(\"selectMode\", function ImportExportToolComponent_igo_import_export_1_Template_igo_import_export_selectMode_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.modeChanged($event);\n    })(\"exportOptionsChange\", function ImportExportToolComponent_igo_import_export_1_Template_igo_import_export_exportOptionsChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.exportOptionsChange($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"map\", ctx_r1.map)(\"store\", ctx_r1.workspaceStore)(\"selectedMode\", i0.ɵɵpipeBind1(1, 4, ctx_r1.importExportState.selectedMode$))(\"exportOptions$\", ctx_r1.importExportState.exportOptions$);\n  }\n}\n\nfunction ImportExportToolComponent_igo_context_import_export_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-context-import-export\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"map\", ctx_r2.map);\n  }\n}\n\nlet ImportExportToolComponent = /*#__PURE__*/(() => {\n  let ImportExportToolComponent = class ImportExportToolComponent {\n    constructor(mapState, importExportState, workspaceState) {\n      this.mapState = mapState;\n      this.importExportState = importExportState;\n      this.workspaceState = workspaceState;\n      this.selectFirstProj = false;\n      this.importExportType = ImportExportType.layer;\n      this.importExportShowBothType = true;\n    }\n    /**\r\n     * Map to measure on\r\n     * @internal\r\n     */\n\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get workspaceStore() {\n      return this.workspaceState.store;\n    }\n\n    ngOnInit() {\n      this.selectType();\n      this.selectMode();\n    }\n\n    selectType() {\n      if (this.importExportType) {\n        this.importExportState.importExportType$.next(this.importExportType);\n      }\n\n      const userSelectedType = this.importExportState.importExportType$.value;\n\n      if (userSelectedType !== undefined) {\n        this.importExportState.setImportExportType(userSelectedType);\n      } else {\n        this.importExportState.setImportExportType(ImportExportType.layer);\n      }\n    }\n\n    selectMode() {\n      const userSelectedMode = this.importExportState.selectedMode$.value;\n\n      if (userSelectedMode !== undefined) {\n        this.importExportState.setMode(userSelectedMode);\n      } else {\n        this.importExportState.setMode(ImportExportMode.import);\n      }\n    }\n\n    modeChanged(mode) {\n      this.importExportState.setMode(mode);\n    }\n\n    exportOptionsChange(exportOptions) {\n      this.importExportState.setsExportOptions(exportOptions);\n    }\n\n    importExportTypeChange(event) {\n      this.importExportType = event.value;\n    }\n\n  };\n\n  ImportExportToolComponent.ɵfac = function ImportExportToolComponent_Factory(t) {\n    return new (t || ImportExportToolComponent)(i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(ImportExportState), i0.ɵɵdirectiveInject(WorkspaceState));\n  };\n\n  ImportExportToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImportExportToolComponent,\n    selectors: [[\"igo-import-export-tool\"]],\n    inputs: {\n      projectionsLimitations: \"projectionsLimitations\",\n      selectFirstProj: \"selectFirstProj\",\n      importExportType: \"importExportType\",\n      importExportShowBothType: \"importExportShowBothType\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [3, \"map\", \"store\", \"selectedMode\", \"exportOptions$\", \"selectMode\", \"exportOptionsChange\", 4, \"ngIf\"], [3, \"map\", 4, \"ngIf\"], [3, \"label\"], [3, \"map\", \"selectFirstProj\", \"projectionsLimitations\", \"store\", \"selectedMode\", \"exportOptions$\", \"selectMode\", \"exportOptionsChange\"], [3, \"map\"], [3, \"map\", \"store\", \"selectedMode\", \"exportOptions$\", \"selectMode\", \"exportOptionsChange\"]],\n    template: function ImportExportToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ImportExportToolComponent_mat_tab_group_0_Template, 8, 15, \"mat-tab-group\", 0);\n        i0.ɵɵtemplate(1, ImportExportToolComponent_igo_import_export_1_Template, 2, 6, \"igo-import-export\", 1);\n        i0.ɵɵtemplate(2, ImportExportToolComponent_igo_context_import_export_2_Template, 1, 1, \"igo-context-import-export\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.importExportShowBothType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.importExportShowBothType && ctx.importExportType === \"layer\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.importExportShowBothType && ctx.importExportType === \"context\");\n      }\n    },\n    directives: [i4$1.NgIf, i5.MatTabGroup, i5.MatTab, i1$1.ImportExportComponent, i1.ContextImportExportComponent],\n    pipes: [i8.TranslatePipe, i4$1.AsyncPipe],\n    styles: [\"mat-form-field[_ngcontent-%COMP%]{width:100%}\"],\n    changeDetection: 0\n  });\n  ImportExportToolComponent = __decorate([ToolComponent({\n    name: 'importExport',\n    title: 'igo.integration.tools.importExport',\n    icon: 'file-move'\n  })], ImportExportToolComponent);\n  return ImportExportToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppImportExportModule = /*#__PURE__*/(() => {\n  class IgoAppImportExportModule {\n    static forRoot() {\n      return {\n        ngModule: IgoAppImportExportModule,\n        providers: []\n      };\n    }\n\n  }\n\n  IgoAppImportExportModule.ɵfac = function IgoAppImportExportModule_Factory(t) {\n    return new (t || IgoAppImportExportModule)();\n  };\n\n  IgoAppImportExportModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppImportExportModule\n  });\n  IgoAppImportExportModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoImportExportModule, IgoContextImportExportModule, CommonModule, IgoLanguageModule, MatButtonToggleModule, MatTabsModule]]\n  });\n  return IgoAppImportExportModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppImportExportModule, {\n    declarations: [ImportExportToolComponent],\n    imports: [IgoImportExportModule, IgoContextImportExportModule, CommonModule, IgoLanguageModule, MatButtonToggleModule, MatTabsModule],\n    exports: [ImportExportToolComponent]\n  });\n})();\n\nfunction MapDetailsToolComponent_igo_layer_list_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelement(0, \"igo-workspace-button\", 4);\n    i0.ɵɵelementStart(1, \"igo-export-button\", 5);\n    i0.ɵɵlistener(\"click\", function MapDetailsToolComponent_igo_layer_list_0_ng_template_1_Template_igo_export_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const layer_r5 = restoredCtx.layer;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.activateExport(layer_r5);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"igo-ogc-filter-button\", 6);\n    i0.ɵɵelement(3, \"igo-time-filter-button\", 6);\n    i0.ɵɵelement(4, \"igo-track-feature-button\", 7);\n    i0.ɵɵelement(5, \"igo-metadata-button\", 4);\n  }\n\n  if (rf & 2) {\n    const layer_r5 = ctx.layer;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"layer\", layer_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"layer\", layer_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"header\", ctx_r4.ogcButton)(\"layer\", layer_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"header\", ctx_r4.timeButton)(\"layer\", layer_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"trackFeature\", true)(\"layer\", layer_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"layer\", layer_r5);\n  }\n}\n\nfunction MapDetailsToolComponent_igo_layer_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"igo-layer-list\", 2);\n    i0.ɵɵtemplate(1, MapDetailsToolComponent_igo_layer_list_0_ng_template_1_Template, 6, 9, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"map\", ctx_r0.map)(\"excludeBaseLayers\", ctx_r0.excludeBaseLayers)(\"layerFilterAndSortOptions\", ctx_r0.layerFilterAndSortOptions)(\"expandLegendOfVisibleLayers\", ctx_r0.expandLegendOfVisibleLayers)(\"toggleLegendOnVisibilityChange\", ctx_r0.toggleLegendOnVisibilityChange)(\"updateLegendOnResolutionChange\", ctx_r0.updateLegendOnResolutionChange)(\"queryBadge\", ctx_r0.queryBadge);\n  }\n}\n\nfunction MapDetailsToolComponent_ng_template_2_mat_list_0_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"igo.integration.mapTool.customize\"), \"\");\n  }\n}\n\nfunction MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 11);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 12);\n    i0.ɵɵelement(3, \"path\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 14);\n    i0.ɵɵlistener(\"click\", function MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_5_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return ctx_r13.searchEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.search-tool\"), \" \");\n  }\n}\n\nfunction MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 11);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 12);\n    i0.ɵɵelement(3, \"path\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 16);\n    i0.ɵɵlistener(\"click\", function MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_6_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return ctx_r15.catalogEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.catalog-tool\"), \" \");\n  }\n}\n\nfunction MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 11);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 12);\n    i0.ɵɵelement(3, \"path\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 18);\n    i0.ɵɵlistener(\"click\", function MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_7_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return ctx_r17.contextEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.context-tool\"), \" \");\n  }\n}\n\nfunction MapDetailsToolComponent_ng_template_2_mat_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list\");\n    i0.ɵɵelementStart(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MapDetailsToolComponent_ng_template_2_mat_list_0_p_4_Template, 3, 3, \"p\", 10);\n    i0.ɵɵtemplate(5, MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_5_Template, 7, 3, \"mat-list-item\", 8);\n    i0.ɵɵtemplate(6, MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_6_Template, 7, 3, \"mat-list-item\", 8);\n    i0.ɵɵtemplate(7, MapDetailsToolComponent_ng_template_2_mat_list_0_mat_list_item_7_Template, 7, 3, \"mat-list-item\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 5, \"igo.integration.mapTool.empty\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.layerAdditionAllowed && (ctx_r8.searchToolInToolbar || ctx_r8.catalogToolInToolbar || ctx_r8.contextToolInToolbar));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.layerAdditionAllowed && ctx_r8.searchToolInToolbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.layerAdditionAllowed && ctx_r8.catalogToolInToolbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.layerAdditionAllowed && ctx_r8.contextToolInToolbar);\n  }\n}\n\nfunction MapDetailsToolComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MapDetailsToolComponent_ng_template_2_mat_list_0_Template, 8, 7, \"mat-list\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.delayedShowEmptyMapContent);\n  }\n}\n\nlet MapDetailsToolComponent = /*#__PURE__*/(() => {\n  let MapDetailsToolComponent = class MapDetailsToolComponent {\n    constructor(mapState, toolState, searchSourceService, cdRef, importExportState) {\n      this.mapState = mapState;\n      this.toolState = toolState;\n      this.searchSourceService = searchSourceService;\n      this.cdRef = cdRef;\n      this.importExportState = importExportState;\n      this.delayedShowEmptyMapContent = false;\n      this.toggleLegendOnVisibilityChange = false;\n      this.expandLegendOfVisibleLayers = false;\n      this.updateLegendOnResolutionChange = false;\n      this.ogcButton = true;\n      this.timeButton = true;\n      this.layerListControls = {};\n      this.queryBadge = false;\n      this.layerAdditionAllowed = true;\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get layers$() {\n      return this.map.layers$.pipe(map(layers => layers.filter(layer => layer.showInLayerList !== false && (!this.excludeBaseLayers || !layer.baseLayer))));\n    }\n\n    get excludeBaseLayers() {\n      return this.layerListControls.excludeBaseLayers || false;\n    }\n\n    get layerFilterAndSortOptions() {\n      const filterSortOptions = Object.assign({\n        showToolbar: LayerListControlsEnum.default\n      }, this.layerListControls);\n\n      switch (this.layerListControls.showToolbar) {\n        case LayerListControlsEnum.always:\n          filterSortOptions.showToolbar = LayerListControlsEnum.always;\n          break;\n\n        case LayerListControlsEnum.never:\n          filterSortOptions.showToolbar = LayerListControlsEnum.never;\n          break;\n\n        default:\n          break;\n      }\n\n      return filterSortOptions;\n    }\n\n    get searchToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 && this.searchSourceService.getSources().filter(sourceCanSearch).filter(s => s.available && s.getType() === 'Layer').length > 0;\n    }\n\n    get catalogToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n    }\n\n    get contextToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n    }\n\n    ngOnInit() {\n      // prevent message to be shown too quickly. Waiting for layers\n      setTimeout(() => {\n        this.delayedShowEmptyMapContent = true;\n        this.cdRef.detectChanges();\n      }, 250);\n    }\n\n    searchEmit() {\n      this.toolState.toolbox.activateTool('searchResults');\n    }\n\n    catalogEmit() {\n      this.toolState.toolbox.activateTool('catalog');\n    }\n\n    contextEmit() {\n      this.toolState.toolbox.activateTool('contextManager');\n    }\n\n    activateExport(layer) {\n      var _a;\n\n      let id = layer.id;\n\n      if ((_a = layer.options.workspace) === null || _a === void 0 ? void 0 : _a.workspaceId) {\n        id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n      }\n\n      this.importExportState.setsExportOptions({\n        layers: [id]\n      });\n      this.importExportState.setMode(ImportExportMode.export);\n      this.toolState.toolbox.activateTool('importExport');\n    }\n\n  };\n\n  MapDetailsToolComponent.ɵfac = function MapDetailsToolComponent_Factory(t) {\n    return new (t || MapDetailsToolComponent)(i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(ToolState), i0.ɵɵdirectiveInject(i1$1.SearchSourceService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(ImportExportState));\n  };\n\n  MapDetailsToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapDetailsToolComponent,\n    selectors: [[\"igo-map-details-tool\"]],\n    inputs: {\n      toggleLegendOnVisibilityChange: \"toggleLegendOnVisibilityChange\",\n      expandLegendOfVisibleLayers: \"expandLegendOfVisibleLayers\",\n      updateLegendOnResolutionChange: \"updateLegendOnResolutionChange\",\n      ogcButton: \"ogcButton\",\n      timeButton: \"timeButton\",\n      layerListControls: \"layerListControls\",\n      queryBadge: \"queryBadge\",\n      layerAdditionAllowed: \"layerAdditionAllowed\"\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[\"class\", \"mapDetailsList\", \"igoLayerListBinding\", \"\", \"floatLabel\", \"never\", 3, \"map\", \"excludeBaseLayers\", \"layerFilterAndSortOptions\", \"expandLegendOfVisibleLayers\", \"toggleLegendOnVisibilityChange\", \"updateLegendOnResolutionChange\", \"queryBadge\", 4, \"ngIf\", \"ngIfElse\"], [\"empty\", \"\"], [\"igoLayerListBinding\", \"\", \"floatLabel\", \"never\", 1, \"mapDetailsList\", 3, \"map\", \"excludeBaseLayers\", \"layerFilterAndSortOptions\", \"expandLegendOfVisibleLayers\", \"toggleLegendOnVisibilityChange\", \"updateLegendOnResolutionChange\", \"queryBadge\"], [\"igoLayerItemToolbar\", \"\"], [3, \"layer\"], [3, \"layer\", \"click\"], [3, \"header\", \"layer\"], [3, \"trackFeature\", \"layer\"], [4, \"ngIf\"], [1, \"map-empty\", \"mat-typography\"], [\"class\", \"map-empty mat-typography\", 4, \"ngIf\"], [\"mat-list-icon\", \"\"], [\"viewBox\", \"0 0 24 24\", \"fit\", \"\", \"height\", \"100%\", \"width\", \"100%\", \"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\"], [\"d\", \"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\"], [\"matLine\", \"\", 1, \"search-tool\", \"mat-typography\", 3, \"click\"], [\"d\", \"M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z\"], [\"matLine\", \"\", 1, \"catalog-tool\", \"mat-typography\", 3, \"click\"], [\"d\", \"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\"], [\"matLine\", \"\", 1, \"context-tool\", \"mat-typography\", 3, \"click\"]],\n    template: function MapDetailsToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MapDetailsToolComponent_igo_layer_list_0_Template, 3, 7, \"igo-layer-list\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵtemplate(2, MapDetailsToolComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.layers$).length)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i4$1.NgIf, i1$1.LayerListComponent, i1$1.LayerListBindingDirective, WorkspaceButtonComponent, i1$1.ExportButtonComponent, i1$1.OgcFilterButtonComponent, i1$1.TimeFilterButtonComponent, i1$1.TrackFeatureButtonComponent, i1$1.MetadataButtonComponent, i7.MatList, i7.MatListItem, i6.MatIcon, i7.MatListIconCssMatStyler, i8$1.MatLine],\n    pipes: [i4$1.AsyncPipe, i8.TranslatePipe],\n    styles: [\".map-empty[_ngcontent-%COMP%], .search-tool[_ngcontent-%COMP%], .catalog-tool[_ngcontent-%COMP%], .context-tool[_ngcontent-%COMP%]{margin:10px}.map-empty[_ngcontent-%COMP%]{text-align:justify}.search-tool[_ngcontent-%COMP%], .catalog-tool[_ngcontent-%COMP%], .context-tool[_ngcontent-%COMP%]{cursor:pointer}mat-list[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-weight:bold}mat-list-item[_ngcontent-%COMP%]     .mat-list-text{font-size:smaller}mat-list.mat-list-base[_ngcontent-%COMP%]   mat-list-item.mat-list-item[_ngcontent-%COMP%]     div.mat-list-item-content div.mat-list-text{padding-left:5px}.mapDetailsList[_ngcontent-%COMP%]{overflow:hidden}\"]\n  });\n  MapDetailsToolComponent = __decorate([ToolComponent({\n    name: 'mapDetails',\n    title: 'igo.integration.tools.map',\n    icon: 'map'\n  })], MapDetailsToolComponent);\n  return MapDetailsToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction MapToolComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelement(0, \"igo-workspace-button\", 4);\n    i0.ɵɵelementStart(1, \"igo-export-button\", 5);\n    i0.ɵɵlistener(\"click\", function MapToolComponent_ng_template_4_Template_igo_export_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const layer_r2 = restoredCtx.layer;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.activateExport(layer_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"igo-ogc-filter-button\", 6);\n    i0.ɵɵelement(3, \"igo-time-filter-button\", 6);\n    i0.ɵɵelement(4, \"igo-track-feature-button\", 7);\n    i0.ɵɵelement(5, \"igo-metadata-button\", 4);\n  }\n\n  if (rf & 2) {\n    const layer_r2 = ctx.layer;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"layer\", layer_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"layer\", layer_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"header\", ctx_r1.ogcButton)(\"layer\", layer_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"header\", ctx_r1.timeButton)(\"layer\", layer_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"trackFeature\", true)(\"layer\", layer_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"layer\", layer_r2);\n  }\n}\n/**\r\n * Tool to browse a map's layers or to choose a different map\r\n */\n\n\nlet MapToolComponent = /*#__PURE__*/(() => {\n  let MapToolComponent = class MapToolComponent {\n    constructor(mapState, toolState, importExportState) {\n      this.mapState = mapState;\n      this.toolState = toolState;\n      this.importExportState = importExportState;\n      this.toggleLegendOnVisibilityChange = false;\n      this.expandLegendOfVisibleLayers = false;\n      this.updateLegendOnResolutionChange = false;\n      this.ogcButton = true;\n      this.timeButton = true;\n      this.layerListControls = {};\n      this.queryBadge = false;\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get excludeBaseLayers() {\n      return this.layerListControls.excludeBaseLayers || false;\n    }\n\n    get layerFilterAndSortOptions() {\n      const filterSortOptions = Object.assign({\n        showToolbar: LayerListControlsEnum.default\n      }, this.layerListControls);\n\n      switch (this.layerListControls.showToolbar) {\n        case LayerListControlsEnum.always:\n          filterSortOptions.showToolbar = LayerListControlsEnum.always;\n          break;\n\n        case LayerListControlsEnum.never:\n          filterSortOptions.showToolbar = LayerListControlsEnum.never;\n          break;\n\n        default:\n          break;\n      }\n\n      return filterSortOptions;\n    }\n\n    activateExport(layer) {\n      var _a;\n\n      let id = layer.id;\n\n      if ((_a = layer.options.workspace) === null || _a === void 0 ? void 0 : _a.workspaceId) {\n        id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n      }\n\n      this.importExportState.setsExportOptions({\n        layers: [id]\n      });\n      this.importExportState.setMode(ImportExportMode.export);\n      this.toolState.toolbox.activateTool('importExport');\n    }\n\n  };\n\n  MapToolComponent.ɵfac = function MapToolComponent_Factory(t) {\n    return new (t || MapToolComponent)(i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(ToolState), i0.ɵɵdirectiveInject(ImportExportState));\n  };\n\n  MapToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapToolComponent,\n    selectors: [[\"igo-map-tool\"]],\n    inputs: {\n      toggleLegendOnVisibilityChange: \"toggleLegendOnVisibilityChange\",\n      expandLegendOfVisibleLayers: \"expandLegendOfVisibleLayers\",\n      updateLegendOnResolutionChange: \"updateLegendOnResolutionChange\",\n      ogcButton: \"ogcButton\",\n      timeButton: \"timeButton\",\n      layerListControls: \"layerListControls\",\n      queryBadge: \"queryBadge\"\n    },\n    decls: 9,\n    vars: 14,\n    consts: [[3, \"label\"], [\"igoLayerListBinding\", \"\", 3, \"map\", \"excludeBaseLayers\", \"layerFilterAndSortOptions\", \"expandLegendOfVisibleLayers\", \"toggleLegendOnVisibilityChange\", \"updateLegendOnResolutionChange\", \"floatLabel\", \"queryBadge\"], [\"igoLayerItemToolbar\", \"\"], [\"igoContextListBinding\", \"\"], [3, \"layer\"], [3, \"layer\", \"click\"], [3, \"header\", \"layer\"], [3, \"trackFeature\", \"layer\"]],\n    template: function MapToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tab-group\");\n        i0.ɵɵelementStart(1, \"mat-tab\", 0);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementStart(3, \"igo-layer-list\", 1);\n        i0.ɵɵtemplate(4, MapToolComponent_ng_template_4_Template, 6, 9, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-tab\", 0);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelement(8, \"igo-context-list\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(2, 10, \"igo.integration.tools.map\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"map\", ctx.map)(\"excludeBaseLayers\", ctx.excludeBaseLayers)(\"layerFilterAndSortOptions\", ctx.layerFilterAndSortOptions)(\"expandLegendOfVisibleLayers\", ctx.expandLegendOfVisibleLayers)(\"toggleLegendOnVisibilityChange\", ctx.toggleLegendOnVisibilityChange)(\"updateLegendOnResolutionChange\", ctx.updateLegendOnResolutionChange)(\"floatLabel\", false)(\"queryBadge\", ctx.queryBadge);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(7, 12, \"igo.integration.tools.contexts\"));\n      }\n    },\n    directives: [i5.MatTabGroup, i5.MatTab, i1$1.LayerListComponent, i1$1.LayerListBindingDirective, i1.ContextListComponent, i1.ContextListBindingDirective, WorkspaceButtonComponent, i1$1.ExportButtonComponent, i1$1.OgcFilterButtonComponent, i1$1.TimeFilterButtonComponent, i1$1.TrackFeatureButtonComponent, i1$1.MetadataButtonComponent],\n    pipes: [i8.TranslatePipe],\n    styles: [\"mat-tab-group[_ngcontent-%COMP%], mat-tab-group[_ngcontent-%COMP%]     .mat-tab-body-wrapper{height:100%;overflow:hidden}[_nghost-%COMP%]     .mat-tab-body-content{overflow:hidden}\"],\n    changeDetection: 0\n  });\n  MapToolComponent = __decorate([ToolComponent({\n    name: 'map',\n    title: 'igo.integration.tools.map',\n    icon: 'map'\n  })], MapToolComponent);\n  return MapToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst _c0$1 = [\"tabGroup\"];\n\nfunction MapToolsComponent_igo_layer_list_5_ng_template_1_igo_time_filter_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-time-filter-button\", 14);\n    i0.ɵɵlistener(\"click\", function MapToolsComponent_igo_layer_list_5_ng_template_1_igo_time_filter_button_2_Template_igo_time_filter_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return ctx_r13.activateTimeFilter();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const layer_r9 = i0.ɵɵnextContext().layer;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"header\", ctx_r10.timeButton)(\"layer\", layer_r9);\n  }\n}\n\nfunction MapToolsComponent_igo_layer_list_5_ng_template_1_igo_ogc_filter_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-ogc-filter-button\", 14);\n    i0.ɵɵlistener(\"click\", function MapToolsComponent_igo_layer_list_5_ng_template_1_igo_ogc_filter_button_3_Template_igo_ogc_filter_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(3);\n      return ctx_r16.activateOgcFilter();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const layer_r9 = i0.ɵɵnextContext().layer;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"header\", ctx_r11.ogcButton)(\"layer\", layer_r9);\n  }\n}\n\nfunction MapToolsComponent_igo_layer_list_5_ng_template_1_igo_export_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-export-button\", 15);\n    i0.ɵɵlistener(\"click\", function MapToolsComponent_igo_layer_list_5_ng_template_1_igo_export_button_4_Template_igo_export_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const layer_r9 = i0.ɵɵnextContext().layer;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.activateExport(layer_r9);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const layer_r9 = i0.ɵɵnextContext().layer;\n    i0.ɵɵproperty(\"layer\", layer_r9);\n  }\n}\n\nfunction MapToolsComponent_igo_layer_list_5_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-metadata-button\", 10);\n    i0.ɵɵelement(1, \"igo-track-feature-button\", 11);\n    i0.ɵɵtemplate(2, MapToolsComponent_igo_layer_list_5_ng_template_1_igo_time_filter_button_2_Template, 1, 2, \"igo-time-filter-button\", 12);\n    i0.ɵɵtemplate(3, MapToolsComponent_igo_layer_list_5_ng_template_1_igo_ogc_filter_button_3_Template, 1, 2, \"igo-ogc-filter-button\", 12);\n    i0.ɵɵtemplate(4, MapToolsComponent_igo_layer_list_5_ng_template_1_igo_export_button_4_Template, 1, 1, \"igo-export-button\", 13);\n    i0.ɵɵelement(5, \"igo-workspace-button\", 10);\n  }\n\n  if (rf & 2) {\n    const layer_r9 = ctx.layer;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"layer\", layer_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"trackFeature\", true)(\"layer\", layer_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isTimeFilterButton(layer_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isOGCFilterButton(layer_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isExportButton(layer_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"layer\", layer_r9);\n  }\n}\n\nfunction MapToolsComponent_igo_layer_list_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-layer-list\", 8);\n    i0.ɵɵlistener(\"appliedFilterAndSort\", function MapToolsComponent_igo_layer_list_5_Template_igo_layer_list_appliedFilterAndSort_0_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.onLayerListChange($event);\n    });\n    i0.ɵɵtemplate(1, MapToolsComponent_igo_layer_list_5_ng_template_1_Template, 6, 7, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"excludeBaseLayers\", ctx_r1.excludeBaseLayers)(\"layerFilterAndSortOptions\", ctx_r1.layerFilterAndSortOptions)(\"expandLegendOfVisibleLayers\", ctx_r1.expandLegendOfVisibleLayers)(\"toggleLegendOnVisibilityChange\", ctx_r1.toggleLegendOnVisibilityChange)(\"updateLegendOnResolutionChange\", ctx_r1.updateLegendOnResolutionChange)(\"floatLabel\", false)(\"queryBadge\", ctx_r1.queryBadge)(\"map\", ctx_r1.map);\n  }\n}\n\nfunction MapToolsComponent_igo_layer_legend_list_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-layer-legend-list\", 16);\n    i0.ɵɵlistener(\"allLegendsShown\", function MapToolsComponent_igo_layer_legend_list_9_Template_igo_layer_legend_list_allLegendsShown_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.onShowAllLegends($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"allowShowAllLegends\", ctx_r2.allowShowAllLegends)(\"showAllLegendsValue\", i0.ɵɵpipeBind1(1, 4, ctx_r2.showAllLegendsValue$))(\"excludeBaseLayers\", ctx_r2.excludeBaseLayers)(\"updateLegendOnResolutionChange\", ctx_r2.updateLegendOnResolutionChange);\n  }\n}\n\nfunction MapToolsComponent_10_ng_template_0_Template(rf, ctx) {}\n\nfunction MapToolsComponent_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MapToolsComponent_10_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nfunction MapToolsComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r4.visibleLayers$).length ? i0.ɵɵpipeBind1(3, 3, \"igo.integration.mapTool.noLayersInRange\") : i0.ɵɵpipeBind1(4, 5, \"igo.integration.mapTool.noLayersVisible\"), \" \");\n  }\n}\n\nfunction MapToolsComponent_ng_template_15_mat_list_0_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"igo.integration.mapTool.customize\"), \"\");\n  }\n}\n\nfunction MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 19);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 20);\n    i0.ɵɵelement(3, \"path\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 22);\n    i0.ɵɵlistener(\"click\", function MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_5_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext(3);\n      return ctx_r33.searchEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.search-tool\"), \" \");\n  }\n}\n\nfunction MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 19);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 20);\n    i0.ɵɵelement(3, \"path\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 24);\n    i0.ɵɵlistener(\"click\", function MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_6_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext(3);\n      return ctx_r35.catalogEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.catalog-tool\"), \" \");\n  }\n}\n\nfunction MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 19);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 20);\n    i0.ɵɵelement(3, \"path\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 26);\n    i0.ɵɵlistener(\"click\", function MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_7_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext(3);\n      return ctx_r37.contextEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.context-tool\"), \" \");\n  }\n}\n\nfunction MapToolsComponent_ng_template_15_mat_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list\");\n    i0.ɵɵelementStart(1, \"p\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MapToolsComponent_ng_template_15_mat_list_0_p_4_Template, 3, 3, \"p\", 6);\n    i0.ɵɵtemplate(5, MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_5_Template, 7, 3, \"mat-list-item\", 18);\n    i0.ɵɵtemplate(6, MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_6_Template, 7, 3, \"mat-list-item\", 18);\n    i0.ɵɵtemplate(7, MapToolsComponent_ng_template_15_mat_list_0_mat_list_item_7_Template, 7, 3, \"mat-list-item\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 5, \"igo.integration.mapTool.empty\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.layerAdditionAllowed && (ctx_r28.searchToolInToolbar || ctx_r28.catalogToolInToolbar || ctx_r28.contextToolInToolbar));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.layerAdditionAllowed && ctx_r28.searchToolInToolbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.layerAdditionAllowed && ctx_r28.catalogToolInToolbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.layerAdditionAllowed && ctx_r28.contextToolInToolbar);\n  }\n}\n\nfunction MapToolsComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MapToolsComponent_ng_template_15_mat_list_0_Template, 8, 7, \"mat-list\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.delayedShowEmptyMapContent);\n  }\n}\n/**\r\n * Tool to browse a map's layers or to choose a different map\r\n */\n\n\nlet MapToolsComponent = /*#__PURE__*/(() => {\n  let MapToolsComponent = class MapToolsComponent {\n    constructor(layerListToolState, toolState, mapState, searchSourceService, importExportState) {\n      this.layerListToolState = layerListToolState;\n      this.toolState = toolState;\n      this.mapState = mapState;\n      this.searchSourceService = searchSourceService;\n      this.importExportState = importExportState;\n      this.layers$ = new BehaviorSubject([]);\n      this.showAllLegendsValue$ = new BehaviorSubject(false);\n      this.delayedShowEmptyMapContent = false;\n      this.allowShowAllLegends = false;\n      this.showAllLegendsValue = false;\n      this.toggleLegendOnVisibilityChange = false;\n      this.expandLegendOfVisibleLayers = false;\n      this.updateLegendOnResolutionChange = false;\n      this.ogcButton = true;\n      this.timeButton = true;\n      this.layerAdditionAllowed = true;\n      this._layerListControls = {};\n      this.queryBadge = false;\n    }\n\n    get layerListControls() {\n      return this._layerListControls;\n    }\n\n    set layerListControls(value) {\n      const stateOptions = this.layerListToolState.getLayerListControls();\n      const stateKeyword = stateOptions.keyword;\n      const stateOnlyVisible = stateOptions.onlyVisible;\n      const stateSortAlpha = stateOptions.sortAlpha;\n      value.keyword = stateKeyword !== '' ? stateKeyword : value.keyword;\n      value.onlyVisible = stateOnlyVisible !== undefined ? stateOnlyVisible : value.onlyVisible;\n      value.sortAlpha = stateSortAlpha !== undefined ? stateSortAlpha : value.sortAlpha;\n      value.onlyVisible = value.onlyVisible === undefined ? false : value.onlyVisible;\n      value.sortAlpha = value.sortAlpha === undefined ? false : value.sortAlpha;\n      this._layerListControls = value;\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get visibleOrInRangeLayers$() {\n      return this.layers$.pipe(map(layers => layers.filter(layer => layer.visible$.value && layer.isInResolutionsRange$.value)));\n    }\n\n    get visibleLayers$() {\n      return this.layers$.pipe(map(layers => layers.filter(layer => layer.visible$.value)));\n    }\n\n    get excludeBaseLayers() {\n      return this.layerListControls.excludeBaseLayers || false;\n    }\n\n    get layerFilterAndSortOptions() {\n      const filterSortOptions = Object.assign({\n        showToolbar: LayerListControlsEnum.default\n      }, this.layerListControls);\n\n      switch (this.layerListControls.showToolbar) {\n        case LayerListControlsEnum.always:\n          filterSortOptions.showToolbar = LayerListControlsEnum.always;\n          break;\n\n        case LayerListControlsEnum.never:\n          filterSortOptions.showToolbar = LayerListControlsEnum.never;\n          break;\n\n        default:\n          break;\n      }\n\n      return filterSortOptions;\n    }\n\n    get searchToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 && this.searchSourceService.getSources().filter(sourceCanSearch).filter(s => s.available && s.getType() === 'Layer').length > 0;\n    }\n\n    get catalogToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n    }\n\n    get contextToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n    }\n\n    ngOnInit() {\n      this.selectedTab();\n      this.resolution$$ = combineLatest([this.map.layers$, this.map.viewController.resolution$]).pipe(debounceTime(10)).subscribe(bunch => {\n        this.layers$.next(bunch[0].filter(layer => layer.showInLayerList !== false && (!this.excludeBaseLayers || !layer.baseLayer)));\n      });\n\n      if (this.allowShowAllLegends) {\n        this.mapState.showAllLegendsValue = this.mapState.showAllLegendsValue !== undefined ? this.mapState.showAllLegendsValue : this.showAllLegendsValue || false;\n        this.showAllLegendsValue$.next(this.mapState.showAllLegendsValue);\n      } else {\n        this.showAllLegendsValue$.next(false);\n      } // prevent message to be shown too quickly. Waiting for layers\n\n\n      setTimeout(() => this.delayedShowEmptyMapContent = true, 250);\n    }\n\n    ngOnDestroy() {\n      this.resolution$$.unsubscribe();\n\n      if (this.visibleOrInRangeLayers$$) {\n        this.visibleOrInRangeLayers$$.unsubscribe();\n      }\n    }\n\n    onShowAllLegends(event) {\n      this.mapState.showAllLegendsValue = event;\n      this.showAllLegendsValue$.next(event);\n    }\n\n    selectedTab() {\n      const userSelectedTab = this.layerListToolState.selectedTab$.value;\n\n      if (userSelectedTab !== undefined) {\n        this.layerListToolState.setSelectedTab(userSelectedTab);\n      } else {\n        if (this.selectedTabAtOpening === 'legend') {\n          this.layerListToolState.setSelectedTab(1);\n        } else {\n          this.layerListToolState.setSelectedTab(0);\n        }\n      }\n    }\n\n    tabChanged(tab) {\n      this.layerListToolState.setSelectedTab(tab.index);\n      this.layers$.next(this.map.layers.filter(layer => layer.showInLayerList !== false && (!this.excludeBaseLayers || !layer.baseLayer)));\n    }\n\n    onLayerListChange(appliedFilters) {\n      this.layerListToolState.setKeyword(appliedFilters.keyword);\n      this.layerListToolState.setSortAlpha(appliedFilters.sortAlpha);\n      this.layerListToolState.setOnlyVisible(appliedFilters.onlyVisible);\n    }\n\n    showAllLegend() {\n      if (this.layers$.getValue().length === 0) {\n        return false;\n      } else if (this.layers$.getValue().length !== 0 && this.allowShowAllLegends === false) {\n        let visibleOrInRangeLayers;\n        this.visibleOrInRangeLayers$$ = this.visibleOrInRangeLayers$.subscribe(value => {\n          value.length === 0 ? visibleOrInRangeLayers = false : visibleOrInRangeLayers = true;\n        });\n\n        if (visibleOrInRangeLayers === false) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    activateExport(layer) {\n      var _a;\n\n      let id = layer.id;\n\n      if ((_a = layer.options.workspace) === null || _a === void 0 ? void 0 : _a.workspaceId) {\n        id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n      }\n\n      this.importExportState.setsExportOptions({\n        layers: [id]\n      });\n      this.importExportState.setMode(ImportExportMode.export);\n      this.toolState.toolbox.activateTool('importExport');\n    }\n\n    activateTimeFilter() {\n      this.toolState.toolbox.activateTool('activeTimeFilter');\n    }\n\n    activateOgcFilter() {\n      this.toolState.toolbox.activateTool('activeOgcFilter');\n    }\n\n    searchEmit() {\n      this.toolState.toolbox.activateTool('searchResults');\n    }\n\n    catalogEmit() {\n      this.toolState.toolbox.activateTool('catalog');\n    }\n\n    contextEmit() {\n      this.toolState.toolbox.activateTool('contextManager');\n    }\n\n    isTimeFilterButton(layer) {\n      const options = layer.dataSource.options;\n      return this.timeButton && options.timeFilterable && options.timeFilter;\n    }\n\n    isOGCFilterButton(layer) {\n      const options = layer.dataSource.options;\n      return this.ogcButton && options.ogcFilters && options.ogcFilters.enabled && (options.ogcFilters.pushButtons || options.ogcFilters.checkboxes || options.ogcFilters.radioButtons || options.ogcFilters.select || options.ogcFilters.editable);\n    }\n\n    isExportButton(layer) {\n      var _a, _b;\n\n      if (layer instanceof VectorLayer && layer.exportable === true || layer.dataSource.options.download && layer.dataSource.options.download.url || ((_a = layer.options.workspace) === null || _a === void 0 ? void 0 : _a.enabled) && ((_b = layer.options.workspace) === null || _b === void 0 ? void 0 : _b.workspaceId) !== layer.id) {\n        return true;\n      }\n\n      return false;\n    }\n\n  };\n\n  MapToolsComponent.ɵfac = function MapToolsComponent_Factory(t) {\n    return new (t || MapToolsComponent)(i0.ɵɵdirectiveInject(LayerListToolState), i0.ɵɵdirectiveInject(ToolState), i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(i1$1.SearchSourceService), i0.ɵɵdirectiveInject(ImportExportState));\n  };\n\n  MapToolsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapToolsComponent,\n    selectors: [[\"igo-map-tools\"]],\n    viewQuery: function MapToolsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$1, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabGroup = _t.first);\n      }\n    },\n    inputs: {\n      allowShowAllLegends: \"allowShowAllLegends\",\n      showAllLegendsValue: \"showAllLegendsValue\",\n      toggleLegendOnVisibilityChange: \"toggleLegendOnVisibilityChange\",\n      expandLegendOfVisibleLayers: \"expandLegendOfVisibleLayers\",\n      updateLegendOnResolutionChange: \"updateLegendOnResolutionChange\",\n      selectedTabAtOpening: \"selectedTabAtOpening\",\n      ogcButton: \"ogcButton\",\n      timeButton: \"timeButton\",\n      layerAdditionAllowed: \"layerAdditionAllowed\",\n      layerListControls: \"layerListControls\",\n      queryBadge: \"queryBadge\"\n    },\n    decls: 17,\n    vars: 23,\n    consts: [[3, \"selectedIndex\", \"selectedTabChange\"], [\"tabGroup\", \"\"], [3, \"label\"], [\"igoLayerListBinding\", \"\", 3, \"excludeBaseLayers\", \"layerFilterAndSortOptions\", \"expandLegendOfVisibleLayers\", \"toggleLegendOnVisibilityChange\", \"updateLegendOnResolutionChange\", \"floatLabel\", \"queryBadge\", \"map\", \"appliedFilterAndSort\", 4, \"ngIf\", \"ngIfElse\"], [\"igoLayerLegendListBinding\", \"\", 3, \"allowShowAllLegends\", \"showAllLegendsValue\", \"excludeBaseLayers\", \"updateLegendOnResolutionChange\", \"allLegendsShown\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"map-empty mat-typography\", 4, \"ngIf\"], [\"emptyLayers\", \"\"], [\"igoLayerListBinding\", \"\", 3, \"excludeBaseLayers\", \"layerFilterAndSortOptions\", \"expandLegendOfVisibleLayers\", \"toggleLegendOnVisibilityChange\", \"updateLegendOnResolutionChange\", \"floatLabel\", \"queryBadge\", \"map\", \"appliedFilterAndSort\"], [\"igoLayerItemToolbar\", \"\"], [3, \"layer\"], [3, \"trackFeature\", \"layer\"], [3, \"header\", \"layer\", \"click\", 4, \"ngIf\"], [3, \"layer\", \"click\", 4, \"ngIf\"], [3, \"header\", \"layer\", \"click\"], [3, \"layer\", \"click\"], [\"igoLayerLegendListBinding\", \"\", 3, \"allowShowAllLegends\", \"showAllLegendsValue\", \"excludeBaseLayers\", \"updateLegendOnResolutionChange\", \"allLegendsShown\"], [1, \"map-empty\", \"mat-typography\"], [4, \"ngIf\"], [\"mat-list-icon\", \"\"], [\"viewBox\", \"0 0 24 24\", \"fit\", \"\", \"height\", \"100%\", \"width\", \"100%\", \"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\"], [\"d\", \"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\"], [\"matLine\", \"\", 1, \"search-tool\", \"mat-typography\", 3, \"click\"], [\"d\", \"M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z\"], [\"matLine\", \"\", 1, \"catalog-tool\", \"mat-typography\", 3, \"click\"], [\"d\", \"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\"], [\"matLine\", \"\", 1, \"context-tool\", \"mat-typography\", 3, \"click\"]],\n    template: function MapToolsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tab-group\", 0, 1);\n        i0.ɵɵlistener(\"selectedTabChange\", function MapToolsComponent_Template_mat_tab_group_selectedTabChange_0_listener($event) {\n          return ctx.tabChanged($event);\n        });\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementStart(3, \"mat-tab\", 2);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵtemplate(5, MapToolsComponent_igo_layer_list_5_Template, 3, 8, \"igo-layer-list\", 3);\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-tab\", 2);\n        i0.ɵɵpipe(8, \"translate\");\n        i0.ɵɵtemplate(9, MapToolsComponent_igo_layer_legend_list_9_Template, 2, 6, \"igo-layer-legend-list\", 4);\n        i0.ɵɵtemplate(10, MapToolsComponent_10_Template, 1, 0, undefined, 5);\n        i0.ɵɵpipe(11, \"async\");\n        i0.ɵɵtemplate(12, MapToolsComponent_p_12_Template, 5, 7, \"p\", 6);\n        i0.ɵɵpipe(13, \"async\");\n        i0.ɵɵpipe(14, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, MapToolsComponent_ng_template_15_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r5 = i0.ɵɵreference(16);\n\n        i0.ɵɵproperty(\"selectedIndex\", i0.ɵɵpipeBind1(2, 9, ctx.layerListToolState.selectedTab$));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(4, 11, \"igo.integration.tools.layers\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(6, 13, ctx.layers$).length !== 0)(\"ngIfElse\", _r5);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(8, 15, \"igo.integration.tools.legend\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showAllLegend());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(11, 17, ctx.layers$).length !== 0)(\"ngIfElse\", _r5);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.allowShowAllLegends && i0.ɵɵpipeBind1(13, 19, ctx.layers$).length !== 0 && i0.ɵɵpipeBind1(14, 21, ctx.visibleOrInRangeLayers$).length === 0);\n      }\n    },\n    directives: [i5.MatTabGroup, i5.MatTab, i4$1.NgIf, i1$1.LayerListComponent, i1$1.LayerListBindingDirective, i1$1.MetadataButtonComponent, i1$1.TrackFeatureButtonComponent, WorkspaceButtonComponent, i1$1.TimeFilterButtonComponent, i1$1.OgcFilterButtonComponent, i1$1.ExportButtonComponent, i1$1.LayerLegendListComponent, i1$1.LayerLegendListBindingDirective, i7.MatList, i7.MatListItem, i6.MatIcon, i7.MatListIconCssMatStyler, i8$1.MatLine],\n    pipes: [i4$1.AsyncPipe, i8.TranslatePipe],\n    styles: [\".map-empty[_ngcontent-%COMP%], .search-tool[_ngcontent-%COMP%], .catalog-tool[_ngcontent-%COMP%], .context-tool[_ngcontent-%COMP%]{margin:10px}.map-empty[_ngcontent-%COMP%]{text-align:justify}.search-tool[_ngcontent-%COMP%], .catalog-tool[_ngcontent-%COMP%], .context-tool[_ngcontent-%COMP%]{cursor:pointer}mat-list[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-weight:bold}mat-list-item[_ngcontent-%COMP%]     .mat-list-text{font-size:smaller}mat-list.mat-list-base[_ngcontent-%COMP%]   mat-list-item.mat-list-item[_ngcontent-%COMP%]     div.mat-list-item-content div.mat-list-text{padding-left:5px}mat-tab-group[_ngcontent-%COMP%], mat-tab-group[_ngcontent-%COMP%]     .mat-tab-body-wrapper{height:100%;overflow:hidden}[_nghost-%COMP%]     .mat-tab-body-content{overflow:hidden}\"],\n    changeDetection: 0\n  });\n  MapToolsComponent = __decorate([ToolComponent({\n    name: 'mapTools',\n    title: 'igo.integration.tools.map',\n    icon: 'map'\n  })], MapToolsComponent);\n  return MapToolsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction MapLegendToolComponent_igo_layer_legend_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-layer-legend-list\", 4);\n    i0.ɵɵlistener(\"allLegendsShown\", function MapLegendToolComponent_igo_layer_legend_list_0_Template_igo_layer_legend_list_allLegendsShown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onShowAllLegends($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"excludeBaseLayers\", ctx_r0.excludeBaseLayers)(\"allowShowAllLegends\", ctx_r0.allowShowAllLegends)(\"updateLegendOnResolutionChange\", ctx_r0.updateLegendOnResolutionChange)(\"showAllLegendsValue\", i0.ɵɵpipeBind1(1, 4, ctx_r0.showAllLegendsValue$));\n  }\n}\n\nfunction MapLegendToolComponent_1_ng_template_0_Template(rf, ctx) {}\n\nfunction MapLegendToolComponent_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MapLegendToolComponent_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nfunction MapLegendToolComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r2.visibleLayers$).length ? i0.ɵɵpipeBind1(3, 3, \"igo.integration.mapTool.noLayersInRange\") : i0.ɵɵpipeBind1(4, 5, \"igo.integration.mapTool.noLayersVisible\"), \"\\n\");\n  }\n}\n\nfunction MapLegendToolComponent_ng_template_6_mat_list_0_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"igo.integration.mapTool.customize\"), \"\");\n  }\n}\n\nfunction MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 7);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 8);\n    i0.ɵɵelement(3, \"path\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 10);\n    i0.ɵɵlistener(\"click\", function MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_5_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return ctx_r13.searchEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.search-tool\"), \" \");\n  }\n}\n\nfunction MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 7);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 8);\n    i0.ɵɵelement(3, \"path\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 12);\n    i0.ɵɵlistener(\"click\", function MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_6_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return ctx_r15.catalogEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.catalog-tool\"), \" \");\n  }\n}\n\nfunction MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 7);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 8);\n    i0.ɵɵelement(3, \"path\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"h4\", 14);\n    i0.ɵɵlistener(\"click\", function MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_7_Template_h4_click_4_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return ctx_r17.contextEmit();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 1, \"igo.integration.mapTool.context-tool\"), \" \");\n  }\n}\n\nfunction MapLegendToolComponent_ng_template_6_mat_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list\");\n    i0.ɵɵelementStart(1, \"p\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MapLegendToolComponent_ng_template_6_mat_list_0_p_4_Template, 3, 3, \"p\", 2);\n    i0.ɵɵtemplate(5, MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_5_Template, 7, 3, \"mat-list-item\", 6);\n    i0.ɵɵtemplate(6, MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_6_Template, 7, 3, \"mat-list-item\", 6);\n    i0.ɵɵtemplate(7, MapLegendToolComponent_ng_template_6_mat_list_0_mat_list_item_7_Template, 7, 3, \"mat-list-item\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 5, \"igo.integration.mapTool.empty\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.layerAdditionAllowed && (ctx_r8.searchToolInToolbar || ctx_r8.catalogToolInToolbar || ctx_r8.contextToolInToolbar));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.layerAdditionAllowed && ctx_r8.searchToolInToolbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.layerAdditionAllowed && ctx_r8.catalogToolInToolbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.layerAdditionAllowed && ctx_r8.contextToolInToolbar);\n  }\n}\n\nfunction MapLegendToolComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MapLegendToolComponent_ng_template_6_mat_list_0_Template, 8, 7, \"mat-list\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.delayedShowEmptyMapContent);\n  }\n}\n\nlet MapLegendToolComponent = /*#__PURE__*/(() => {\n  let MapLegendToolComponent = class MapLegendToolComponent {\n    constructor(mapState, toolState, searchSourceService, cdRef) {\n      this.mapState = mapState;\n      this.toolState = toolState;\n      this.searchSourceService = searchSourceService;\n      this.cdRef = cdRef;\n      this.delayedShowEmptyMapContent = false;\n      this.layers$ = new BehaviorSubject([]);\n      this.showAllLegendsValue$ = new BehaviorSubject(false);\n      this.change$ = new ReplaySubject(1);\n      this.updateLegendOnResolutionChange = false;\n      this.layerAdditionAllowed = true;\n      this.allowShowAllLegends = false;\n      this.showAllLegendsValue = false;\n      this.layerListControls = {};\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get visibleOrInRangeLayers$() {\n      return this.layers$.pipe(map(layers => layers.filter(layer => layer.visible$.value && layer.isInResolutionsRange$.value)));\n    }\n\n    get visibleLayers$() {\n      return this.layers$.pipe(map(layers => layers.filter(layer => layer.visible$.value)));\n    }\n\n    get excludeBaseLayers() {\n      return this.layerListControls.excludeBaseLayers || false;\n    }\n\n    get searchToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 && this.searchSourceService.getSources().filter(sourceCanSearch).filter(s => s.available && s.getType() === 'Layer').length > 0;\n    }\n\n    get catalogToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n    }\n\n    get contextToolInToolbar() {\n      return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n    }\n\n    ngOnInit() {\n      this.resolution$$ = combineLatest([this.map.layers$, this.map.viewController.resolution$]).pipe(debounceTime(10)).subscribe(bunch => {\n        this.layers$.next(bunch[0].filter(layer => layer.showInLayerList !== false && (!this.excludeBaseLayers || !layer.baseLayer)));\n      });\n\n      if (this.allowShowAllLegends) {\n        this.mapState.showAllLegendsValue = this.mapState.showAllLegendsValue !== undefined ? this.mapState.showAllLegendsValue : this.showAllLegendsValue || false;\n        this.showAllLegendsValue$.next(this.mapState.showAllLegendsValue);\n      } else {\n        this.showAllLegendsValue$.next(false);\n      } // prevent message to be shown too quickly. Waiting for layers\n\n\n      setTimeout(() => {\n        this.delayedShowEmptyMapContent = true;\n        this.cdRef.detectChanges();\n      }, 250);\n    }\n\n    onShowAllLegends(event) {\n      this.mapState.showAllLegendsValue = event;\n      this.showAllLegendsValue$.next(event);\n    }\n\n    showAllLegend() {\n      if (this.layers$.getValue().length === 0) {\n        return false;\n      } else if (this.layers$.getValue().length !== 0 && this.allowShowAllLegends === false) {\n        let visibleOrInRangeLayers;\n        this.visibleOrInRangeLayers$$ = this.visibleOrInRangeLayers$.subscribe(value => {\n          value.length === 0 ? visibleOrInRangeLayers = false : visibleOrInRangeLayers = true;\n        });\n\n        if (visibleOrInRangeLayers === false) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    ngOnDestroy() {\n      this.resolution$$.unsubscribe();\n\n      if (this.visibleOrInRangeLayers$$) {\n        this.visibleOrInRangeLayers$$.unsubscribe();\n      }\n    }\n\n    searchEmit() {\n      this.toolState.toolbox.activateTool('searchResults');\n    }\n\n    catalogEmit() {\n      this.toolState.toolbox.activateTool('catalog');\n    }\n\n    contextEmit() {\n      this.toolState.toolbox.activateTool('contextManager');\n    }\n\n  };\n\n  MapLegendToolComponent.ɵfac = function MapLegendToolComponent_Factory(t) {\n    return new (t || MapLegendToolComponent)(i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(ToolState), i0.ɵɵdirectiveInject(i1$1.SearchSourceService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  MapLegendToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapLegendToolComponent,\n    selectors: [[\"igo-map-legend-tool\"]],\n    inputs: {\n      updateLegendOnResolutionChange: \"updateLegendOnResolutionChange\",\n      layerAdditionAllowed: \"layerAdditionAllowed\",\n      allowShowAllLegends: \"allowShowAllLegends\",\n      showAllLegendsValue: \"showAllLegendsValue\",\n      layerListControls: \"layerListControls\"\n    },\n    decls: 8,\n    vars: 10,\n    consts: [[\"igoLayerLegendListBinding\", \"\", 3, \"excludeBaseLayers\", \"allowShowAllLegends\", \"updateLegendOnResolutionChange\", \"showAllLegendsValue\", \"allLegendsShown\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"map-empty mat-typography\", 4, \"ngIf\"], [\"emptyLayers\", \"\"], [\"igoLayerLegendListBinding\", \"\", 3, \"excludeBaseLayers\", \"allowShowAllLegends\", \"updateLegendOnResolutionChange\", \"showAllLegendsValue\", \"allLegendsShown\"], [1, \"map-empty\", \"mat-typography\"], [4, \"ngIf\"], [\"mat-list-icon\", \"\"], [\"viewBox\", \"0 0 24 24\", \"fit\", \"\", \"height\", \"100%\", \"width\", \"100%\", \"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\"], [\"d\", \"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\"], [\"matLine\", \"\", 1, \"search-tool\", \"mat-typography\", 3, \"click\"], [\"d\", \"M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z\"], [\"matLine\", \"\", 1, \"catalog-tool\", \"mat-typography\", 3, \"click\"], [\"d\", \"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\"], [\"matLine\", \"\", 1, \"context-tool\", \"mat-typography\", 3, \"click\"]],\n    template: function MapLegendToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MapLegendToolComponent_igo_layer_legend_list_0_Template, 2, 6, \"igo-layer-legend-list\", 0);\n        i0.ɵɵtemplate(1, MapLegendToolComponent_1_Template, 1, 0, undefined, 1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵtemplate(3, MapLegendToolComponent_p_3_Template, 5, 7, \"p\", 2);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵtemplate(6, MapLegendToolComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(7);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.showAllLegend());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 4, ctx.layers$).length !== 0)(\"ngIfElse\", _r3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.allowShowAllLegends && i0.ɵɵpipeBind1(4, 6, ctx.layers$).length !== 0 && i0.ɵɵpipeBind1(5, 8, ctx.visibleOrInRangeLayers$).length === 0);\n      }\n    },\n    directives: [i4$1.NgIf, i1$1.LayerLegendListComponent, i1$1.LayerLegendListBindingDirective, i7.MatList, i7.MatListItem, i6.MatIcon, i7.MatListIconCssMatStyler, i8$1.MatLine],\n    pipes: [i4$1.AsyncPipe, i8.TranslatePipe],\n    styles: [\".map-empty[_ngcontent-%COMP%], .search-tool[_ngcontent-%COMP%], .catalog-tool[_ngcontent-%COMP%], .context-tool[_ngcontent-%COMP%]{margin:10px}.map-empty[_ngcontent-%COMP%]{text-align:justify}.search-tool[_ngcontent-%COMP%], .catalog-tool[_ngcontent-%COMP%], .context-tool[_ngcontent-%COMP%]{cursor:pointer}mat-list[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-weight:bold}mat-list-item[_ngcontent-%COMP%]     .mat-list-text{font-size:smaller}mat-list.mat-list-base[_ngcontent-%COMP%]   mat-list-item.mat-list-item[_ngcontent-%COMP%]     div.mat-list-item-content div.mat-list-text{padding-left:5px}\"]\n  });\n  MapLegendToolComponent = __decorate([ToolComponent({\n    name: 'mapLegend',\n    title: 'igo.integration.tools.legend',\n    icon: 'format-list-bulleted-type'\n  })], MapLegendToolComponent);\n  return MapLegendToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction AdvancedSwipeComponent_div_0_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵlistener(\"click\", function AdvancedSwipeComponent_div_0_mat_option_12_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      i0.ɵɵnextContext();\n\n      const _r3 = i0.ɵɵreference(8);\n\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.applyNewLayers(_r3);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const layer_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", layer_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(layer_r5.title);\n  }\n}\n\nfunction AdvancedSwipeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"form\", 3);\n    i0.ɵɵelementStart(2, \"mat-form-field\");\n    i0.ɵɵelementStart(3, \"mat-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-select\", 4);\n    i0.ɵɵelementStart(7, \"mat-option\", 5, 6);\n    i0.ɵɵlistener(\"click\", function AdvancedSwipeComponent_div_0_Template_mat_option_click_7_listener() {\n      i0.ɵɵrestoreView(_r9);\n\n      const _r3 = i0.ɵɵreference(8);\n\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.selectAll(_r3);\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"mat-divider\");\n    i0.ɵɵtemplate(12, AdvancedSwipeComponent_div_0_mat_option_12_Template, 2, 2, \"mat-option\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-slide-toggle\", 8);\n    i0.ɵɵlistener(\"change\", function AdvancedSwipeComponent_div_0_Template_mat_slide_toggle_change_13_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.startSwipe($event.checked);\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 8, \"igo.integration.advanced-map-tool.advanced-swipe.swipe-select\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(10, 10, \"igo.integration.advanced-map-tool.advanced-swipe.selectAll\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.userControlledLayerList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r0.swipe)(\"labelPosition\", \"before\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 12, \"igo.integration.advanced-map-tool.advanced-swipe.swipe\"), \" \");\n  }\n}\n\nfunction AdvancedSwipeComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list\");\n    i0.ɵɵelementStart(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 9);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-list-item\");\n    i0.ɵɵelement(8, \"mat-icon\", 10);\n    i0.ɵɵelementStart(9, \"h4\", 11);\n    i0.ɵɵlistener(\"click\", function AdvancedSwipeComponent_ng_template_1_Template_h4_click_9_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.searchEmit();\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-list-item\");\n    i0.ɵɵelement(13, \"mat-icon\", 12);\n    i0.ɵɵelementStart(14, \"h4\", 13);\n    i0.ɵɵlistener(\"click\", function AdvancedSwipeComponent_ng_template_1_Template_h4_click_14_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.catalogEmit();\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-list-item\");\n    i0.ɵɵelement(18, \"mat-icon\", 14);\n    i0.ɵɵelementStart(19, \"h4\", 15);\n    i0.ɵɵlistener(\"click\", function AdvancedSwipeComponent_ng_template_1_Template_h4_click_19_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.contextEmit();\n    });\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 5, \"igo.integration.advanced-map-tool.advanced-swipe.empty\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 7, \"igo.integration.advanced-map-tool.advanced-swipe.customize\"), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 9, \"igo.integration.advanced-map-tool.advanced-swipe.search-tool\"), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(16, 11, \"igo.integration.advanced-map-tool.advanced-swipe.catalog-tool\"), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(21, 13, \"igo.integration.advanced-map-tool.advanced-swipe.context-tool\"), \" \");\n  }\n}\n\nlet AdvancedSwipeComponent = /*#__PURE__*/(() => {\n  class AdvancedSwipeComponent {\n    constructor(mapState, contextService, formBuilder, toolState) {\n      this.mapState = mapState;\n      this.contextService = contextService;\n      this.formBuilder = formBuilder;\n      this.toolState = toolState;\n      this.swipe = false;\n      this.buildForm();\n    }\n    /**\r\n     * Get an active map state\r\n     */\n\n\n    get map() {\n      return this.mapState.map;\n    }\n    /**\r\n     * Get the list of layers for swipe\r\n     * @internal\r\n     */\n\n\n    ngOnInit() {\n      this.map.layers$.subscribe(ll => this.userControlledLayerList = ll.filter(layer => !layer.baseLayer && layer.showInLayerList && layer.displayed));\n    }\n    /**\r\n     * Desactivate the swipe\r\n     * @internal\r\n     */\n\n\n    ngOnDestroy() {\n      this.swipe = false;\n      this.map.swipeEnabled$.next(this.swipe);\n    }\n    /**\r\n     * Build a form for choise of the layers\r\n     */\n\n\n    buildForm() {\n      this.form = this.formBuilder.group({\n        layers: ['', [Validators.required]]\n      });\n    }\n    /**\r\n     * Activate the swipe, send a list of layers for a swipe-tool\r\n     */\n\n\n    startSwipe(toggle) {\n      this.swipe = toggle;\n      this.map.swipeEnabled$.next(toggle);\n      this.listForSwipe = [];\n\n      for (const layer of this.form.value.layers) {\n        this.listForSwipe.push(layer);\n      }\n\n      this.map.selectedFeatures$.next(this.listForSwipe);\n    }\n    /**\r\n     * Restart a swipe for a new layers-list\r\n     */\n\n\n    applyNewLayers(e) {\n      this.startSwipe(false); // l'approche KISS\n\n      this.startSwipe(true);\n\n      if (e._selected) {\n        e._selected = false;\n      }\n\n      const allLayers = this.userControlledLayerList.length;\n      const selectedLayers = this.form.controls.layers.value.length;\n\n      if (selectedLayers === allLayers) {\n        e._selected = true;\n      }\n    }\n    /**\r\n     * Select all list of layers and restart a tool\r\n     */\n\n\n    selectAll(e) {\n      if (e._selected) {\n        this.form.controls.layers.setValue(this.userControlledLayerList);\n        e._selected = true;\n      } else {\n        this.form.controls.layers.setValue([]);\n      }\n\n      this.startSwipe(false);\n      this.startSwipe(true);\n    }\n    /**\r\n     * Open search tool\r\n     */\n\n\n    searchEmit() {\n      this.toolState.toolbox.activateTool('searchResults');\n    }\n    /**\r\n     * Open catalog\r\n     */\n\n\n    catalogEmit() {\n      this.toolState.toolbox.activateTool('catalog');\n    }\n    /**\r\n     * Open context manager\r\n     */\n\n\n    contextEmit() {\n      this.toolState.toolbox.activateTool('contextManager');\n    }\n\n  }\n\n  AdvancedSwipeComponent.ɵfac = function AdvancedSwipeComponent_Factory(t) {\n    return new (t || AdvancedSwipeComponent)(i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(i1.ContextService), i0.ɵɵdirectiveInject(i3$1.FormBuilder), i0.ɵɵdirectiveInject(ToolState));\n  };\n\n  AdvancedSwipeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdvancedSwipeComponent,\n    selectors: [[\"igo-advanced-swipe\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[\"class\", \"igo-swipe-select-container\", 4, \"ngIf\", \"ngIfElse\"], [\"noLayersBlock\", \"\"], [1, \"igo-swipe-select-container\"], [1, \"igo-form\", 3, \"formGroup\"], [\"formControlName\", \"layers\", \"multiple\", \"\"], [3, \"value\", \"click\"], [\"e\", \"\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"swipe-toggle\", \"mat-typography\", 3, \"checked\", \"labelPosition\", \"change\"], [1, \"map-empty\", \"mat-typography\"], [\"mat-list-icon\", \"\", \"svgIcon\", \"magnify\"], [\"matLine\", \"\", 1, \"search-tool\", \"mat-typography\", 3, \"click\"], [\"mat-list-icon\", \"\", \"svgIcon\", \"layers-plus\"], [\"matLine\", \"\", 1, \"catalog-tool\", \"mat-typography\", 3, \"click\"], [\"mat-list-icon\", \"\", \"svgIcon\", \"star\"], [\"matLine\", \"\", 1, \"context-tool\", \"mat-typography\", 3, \"click\"]],\n    template: function AdvancedSwipeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AdvancedSwipeComponent_div_0_Template, 16, 14, \"div\", 0);\n        i0.ɵɵtemplate(1, AdvancedSwipeComponent_ng_template_1_Template, 22, 15, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.userControlledLayerList.length)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i4$1.NgIf, i3$1.ɵNgNoValidate, i3$1.NgControlStatusGroup, i3$1.FormGroupDirective, i6$1.MatFormField, i6$1.MatLabel, i7$1.MatSelect, i3$1.NgControlStatus, i3$1.FormControlName, i8$1.MatOption, i9.MatDivider, i4$1.NgForOf, i10.MatSlideToggle, i7.MatList, i7.MatListItem, i6.MatIcon, i7.MatListIconCssMatStyler, i8$1.MatLine],\n    pipes: [i8.TranslatePipe],\n    styles: [\".nameOfTool[_ngcontent-%COMP%]{text-align:center;font-weight:bold;font-size:small;margin:15px 10px 0}.igo-swipe-select-container[_ngcontent-%COMP%]{padding:10px}.igo-swipe-select-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}.igo-form[_ngcontent-%COMP%]{padding:1px 5px;width:100%}.swipe-toggle[_ngcontent-%COMP%]{padding:10px 5px 35px}.map-empty[_ngcontent-%COMP%], .search-tool[_ngcontent-%COMP%], .catalog-tool[_ngcontent-%COMP%], .context-tool[_ngcontent-%COMP%]{margin:5px}.map-empty[_ngcontent-%COMP%]{padding:10px;text-align:justify}.search-tool[_ngcontent-%COMP%], .catalog-tool[_ngcontent-%COMP%], .context-tool[_ngcontent-%COMP%]{cursor:pointer}mat-list[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-weight:bold}mat-list-item[_ngcontent-%COMP%]     .mat-list-text{font-size:smaller}mat-list.mat-list-base[_ngcontent-%COMP%]   mat-list-item.mat-list-item[_ngcontent-%COMP%]     div.mat-list-item-content div.mat-list-text{padding-left:15px}.advanced-tool-line[_ngcontent-%COMP%]{height:2px;background-color:gray}\"]\n  });\n  return AdvancedSwipeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction AdvancedCoordinatesComponent_mat_form_field_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 12);\n    i0.ɵɵelement(1, \"textarea\", 13, 14);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(3, 2, \"igo.integration.advanced-map-tool.advanced-coordinates.lon\"))(\"value\", ctx_r0.coordinates[0]);\n  }\n}\n\nfunction AdvancedCoordinatesComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 12);\n    i0.ɵɵelement(1, \"textarea\", 13, 14);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(3, 2, \"igo.integration.advanced-map-tool.advanced-coordinates.est\"))(\"value\", ctx_r2.coordinates[0]);\n  }\n}\n\nfunction AdvancedCoordinatesComponent_mat_form_field_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 15);\n    i0.ɵɵelement(1, \"textarea\", 13, 14);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(3, 2, \"igo.integration.advanced-map-tool.advanced-coordinates.lat\"))(\"value\", ctx_r3.coordinates[1]);\n  }\n}\n\nfunction AdvancedCoordinatesComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 15);\n    i0.ɵɵelement(1, \"textarea\", 13, 14);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(3, 2, \"igo.integration.advanced-map-tool.advanced-coordinates.nord\"))(\"value\", ctx_r5.coordinates[1]);\n  }\n}\n\nfunction AdvancedCoordinatesComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵlistener(\"click\", function AdvancedCoordinatesComponent_mat_option_16_Template_mat_option_click_0_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const projection_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", projection_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", projection_r11.translatedValue || projection_r11.alias, \" \");\n  }\n}\n/**\r\n * Tool to display the coordinates and a cursor of the center of the map\r\n */\n\n\nlet AdvancedCoordinatesComponent = /*#__PURE__*/(() => {\n  class AdvancedCoordinatesComponent {\n    constructor(mapState, languageService, messageService, cdRef, storageService, config, formBuilder) {\n      this.mapState = mapState;\n      this.languageService = languageService;\n      this.messageService = messageService;\n      this.cdRef = cdRef;\n      this.storageService = storageService;\n      this.config = config;\n      this.formBuilder = formBuilder;\n      this.formattedScale$ = new BehaviorSubject('');\n      this.projections$ = new BehaviorSubject([]);\n      this.center = this.storageService.get('centerToggle');\n      this.inMtmZone = true;\n      this.inLambert2 = {\n        32198: true,\n        3798: true\n      };\n      this._projectionsLimitations = {};\n      this.defaultProj = {\n        translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.wgs84', {\n          code: 'EPSG:4326'\n        }),\n        translateKey: 'wgs84',\n        alias: 'WGS84',\n        code: 'EPSG:4326',\n        zone: ''\n      };\n      this.currentZones = {\n        utm: undefined,\n        mtm: undefined\n      };\n      this.units = true;\n      this.computeProjections();\n      this.buildForm();\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get inputProj() {\n      return this.form.get('inputProj').value;\n    }\n\n    set inputProj(value) {\n      this.form.patchValue({\n        inputProj: value\n      });\n    }\n\n    get projectionsLimitations() {\n      return this._projectionsLimitations || {};\n    }\n\n    set projectionsLimitations(value) {\n      this._projectionsLimitations = value;\n    }\n    /**\r\n     * Listen a state of the map, a state of a form, update the coordinates\r\n     */\n\n\n    ngOnInit() {\n      this.mapState$$ = combineLatest([this.map.viewController.state$.pipe(debounceTime(50)), this.form.valueChanges]).subscribe(() => {\n        this.setScaleValue(this.map);\n        this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n        const currentMtmZone = zoneMtm(this.currentCenterDefaultProj[0]);\n        const currentUtmZone = zoneUtm(this.currentCenterDefaultProj[0]);\n\n        if (!this.inMtmZone && currentMtmZone !== this.currentZones.mtm) {\n          this.back2quebec();\n        }\n\n        let zoneChange = false;\n\n        if (currentMtmZone !== this.currentZones.mtm) {\n          this.currentZones.mtm = currentMtmZone;\n          zoneChange = true;\n        }\n\n        if (currentUtmZone !== this.currentZones.utm) {\n          this.currentZones.utm = currentUtmZone;\n          zoneChange = true;\n        }\n\n        if (zoneChange) {\n          this.updateProjectionsZoneChange();\n        }\n\n        this.checkLambert(this.currentCenterDefaultProj);\n        this.coordinates = this.getCoordinates();\n        this.cdRef.detectChanges();\n        this.storageService.set('currentProjection', this.inputProj, StorageScope.SESSION);\n      });\n      const tempInputProj = this.storageService.get('currentProjection');\n      this.inputProj = this.projections$.value[0];\n\n      if (tempInputProj !== null) {\n        const pos = this.positionInList(tempInputProj);\n        this.inputProj = this.projections$.value[pos];\n        this.updateZoneMtmUtm();\n      }\n\n      this.map.mapCenter$.next(this.center);\n      this.coordinates = this.getCoordinates();\n      this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n    }\n\n    ngOnDestroy() {\n      this.map.mapCenter$.next(false);\n      this.mapState$$.unsubscribe();\n    }\n\n    setScaleValue(map) {\n      this.formattedScale$.next(': ~ 1 / ' + formatScale(map.viewController.getScale()));\n    }\n    /**\r\n     * Coordinates of the center of the map on the appropriate systeme of coordinates\r\n     * @returns Array of two numbers\r\n     */\n\n\n    getCoordinates() {\n      this.currentZones.mtm = zoneMtm(this.currentCenterDefaultProj[0]);\n      this.currentZones.utm = zoneUtm(this.currentCenterDefaultProj[0]);\n      let coord;\n      const code = this.inputProj.code;\n      let decimal = 2;\n\n      if (code.includes('EPSG:4326') || code.includes('EPSG:4269')) {\n        decimal = 5;\n      }\n\n      this.units = code === 'EPSG:4326' || code === 'EPSG:4269';\n      coord = this.map.viewController.getCenter(code).map(c => c.toFixed(decimal));\n      return coord;\n    }\n    /**\r\n     * Copy the coordinates to a clipboard\r\n     */\n\n\n    copyTextToClipboard() {\n      const successful = Clipboard.copy(this.coordinates.toString());\n\n      if (successful) {\n        const translate = this.languageService.translate;\n        const title = translate.instant('igo.integration.advanced-map-tool.advanced-coordinates.copyTitle');\n        const msg = translate.instant('igo.integration.advanced-map-tool.advanced-coordinates.copyMsg');\n        this.messageService.success(msg, title);\n      }\n    }\n    /**\r\n     * Display a cursor on the center of the map\r\n     */\n\n\n    displayCenter(toggle) {\n      this.center = toggle;\n      this.map.mapCenter$.next(toggle);\n      this.storageService.set('centerToggle', toggle, StorageScope.SESSION);\n    }\n    /**\r\n     * Builder of the form\r\n     */\n\n\n    buildForm() {\n      this.form = this.formBuilder.group({\n        inputProj: ['', [Validators.required]]\n      });\n    }\n    /**\r\n     * Update list of projections after changing of the state of the map\r\n     */\n\n\n    updateProjectionsZoneChange() {\n      let modifiedProj = this.projections$.value;\n      const translate = this.languageService.translate;\n      modifiedProj.map(p => {\n        if (p.translateKey === 'mtm') {\n          const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n\n          if (zone) {\n            const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n            p.alias = `MTM ${zone}`;\n            p.code = code;\n            p.zone = `${zone}`;\n            p.translatedValue = translate.instant('igo.geo.importExportForm.projections.mtm', p);\n          } else {\n            p.alias = '';\n            this.inMtmZone = false;\n\n            if (this.inputProj.translateKey === 'mtm') {\n              this.inputProj = this.projections$.value[0];\n            }\n          }\n        }\n\n        if (p.translateKey === 'utm') {\n          const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n          const code = `EPSG:326${zone}`;\n          p.alias = `UTM ${zone}`;\n          p.code = code;\n          p.zone = `${zone}`;\n          p.translatedValue = translate.instant('igo.geo.importExportForm.projections.utm', p);\n        }\n      });\n      modifiedProj = modifiedProj.filter(p => p.alias !== '');\n      this.projections$.next(modifiedProj);\n    }\n    /**\r\n     * Create a list of currents projections\r\n     */\n\n\n    computeProjections() {\n      this.projectionsConstraints = computeProjectionsConstraints(this.projectionsLimitations);\n      const projections = [];\n\n      if (!this.currentCenterDefaultProj) {\n        this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n      }\n\n      const translate = this.languageService.translate;\n\n      if (this.projectionsConstraints.wgs84) {\n        projections.push({\n          translatedValue: translate.instant('igo.geo.importExportForm.projections.wgs84', {\n            code: 'EPSG:4326'\n          }),\n          translateKey: 'wgs84',\n          alias: 'WGS84',\n          code: 'EPSG:4326',\n          zone: ''\n        });\n      }\n\n      if (this.projectionsConstraints.nad83) {\n        projections.push({\n          translatedValue: translate.instant('igo.geo.importExportForm.projections.nad83', {\n            code: 'EPSG:4269'\n          }),\n          translateKey: 'nad83',\n          alias: 'NAD83',\n          code: 'EPSG:4269',\n          zone: ''\n        });\n      }\n\n      if (this.projectionsConstraints.webMercator) {\n        projections.push({\n          translatedValue: translate.instant('igo.geo.importExportForm.projections.webMercator', {\n            code: 'EPSG:3857'\n          }),\n          translateKey: 'webMercator',\n          alias: 'Web Mercator',\n          code: 'EPSG:3857',\n          zone: ''\n        });\n      }\n\n      if (this.projectionsConstraints.mtm) {\n        // Quebec\n        const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n\n        if (zone) {\n          this.inMtmZone = true;\n          const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n          projections.splice(3, 0, {\n            translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', {\n              code,\n              zone\n            }),\n            translateKey: 'mtm',\n            alias: `MTM ${zone}`,\n            code,\n            zone: `${zone}`\n          });\n        } else {\n          this.inMtmZone = false;\n        }\n      }\n\n      if (this.projectionsConstraints.utm) {\n        const order = this.inMtmZone ? 4 : 3;\n        const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n        const code = zone < 10 ? `EPSG:3260${zone}` : `EPSG:326${zone}`;\n        projections.splice(order, 0, {\n          translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.utm', {\n            code,\n            zone\n          }),\n          translateKey: 'utm',\n          alias: `UTM ${zone}`,\n          code,\n          zone: `${zone}`\n        });\n      }\n\n      let configProjection = [];\n\n      if (this.projectionsConstraints.projFromConfig) {\n        configProjection = this.config.getConfig('projections') || [];\n      }\n\n      this.projections$.next(projections.concat(configProjection));\n    }\n    /**\r\n     * Push the MTM in the array of systeme of coordinates\r\n     * @param projections Array of the InputProjections\r\n     */\n\n\n    pushMtm(projections) {\n      if (this.projectionsConstraints.mtm) {\n        const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n        const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n        projections.splice(3, 0, {\n          translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', {\n            code,\n            zone\n          }),\n          translateKey: 'mtm',\n          alias: `MTM ${zone}`,\n          code,\n          zone: `${zone}`\n        });\n      }\n    }\n    /**\r\n     * Updates the list of systems of coordinates for territory of Quebec\r\n     * push MTM and UTM in the Array\r\n     */\n\n\n    back2quebec() {\n      const projections = this.projections$.value;\n      this.pushMtm(projections);\n      this.inMtmZone = true;\n    }\n    /**\r\n     * Update the numbers of the zones when application is restarted\r\n     */\n\n\n    updateZoneMtmUtm() {\n      if (this.inputProj.translateKey === 'mtm') {\n        const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n        this.inputProj.alias = `MTM ${zone}`;\n        const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n        this.inputProj.code = code;\n        this.inputProj.zone = `${zone}`;\n        this.inputProj.translatedValue = this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', {\n          code,\n          zone\n        });\n      }\n\n      if (this.inputProj.translateKey === 'utm') {\n        const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n        this.inputProj.alias = `UTM ${zone}`;\n        const code = zone < 10 ? `EPSG:3260${zone}` : `EPSG:326${zone}`;\n        this.inputProj.code = code;\n        this.inputProj.zone = `${zone}`;\n        this.inputProj.translatedValue = this.languageService.translate.instant('igo.geo.importExportForm.projections.utm', {\n          code,\n          zone\n        });\n      }\n    }\n    /**\r\n     * Compute the position of a current projection in a list. 0 if the projection is not in the list\r\n     * @param translateKey string, translate key of a projection\r\n     * @returns numeric, position of an element in the array\r\n     */\n\n\n    positionInList(tempInputProj) {\n      const tk = tempInputProj.translateKey;\n      const alias = tempInputProj.alias;\n      let position; // = undefined;\n\n      let iter = 0;\n      this.projections$.value.map(projection => {\n        if (tk) {\n          if (tk === projection.translateKey) {\n            position = iter;\n          }\n        } else if (alias === projection.alias) {\n          position = iter;\n        }\n\n        iter++;\n      });\n      position = position ? position : 0;\n      return position;\n    }\n    /**\r\n     * Change the list of projections depending on the projections of Lambert\r\n     * @param coordinates An array of numbers, longitude and latitude\r\n     */\n\n\n    checkLambert(coordinates) {\n      const lambertProjections = this.config.getConfig('projections');\n      lambertProjections.forEach(projection => {\n        let modifiedProj = this.projections$.value;\n        const extent = projection.extent;\n        const code = projection.code.match(/\\d+/);\n        const currentExtentWGS = olproj.transformExtent(extent, projection.code, this.defaultProj.code);\n\n        if (coordinates[0] < currentExtentWGS[0] || coordinates[0] > currentExtentWGS[2] || coordinates[1] < currentExtentWGS[1] || coordinates[1] > currentExtentWGS[3]) {\n          this.inLambert2[code] = false;\n\n          if (this.inputProj.alias === projection.alias) {\n            this.inputProj = this.projections$.value[0];\n          }\n\n          modifiedProj = modifiedProj.filter(p => p.alias !== projection.alias);\n          this.projections$.next(modifiedProj);\n        } else {\n          if (!this.inLambert2[code]) {\n            this.projections$.next(modifiedProj.concat(projection));\n            this.inLambert2[code] = true;\n          }\n        }\n      });\n    }\n\n  }\n\n  AdvancedCoordinatesComponent.ɵfac = function AdvancedCoordinatesComponent_Factory(t) {\n    return new (t || AdvancedCoordinatesComponent)(i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(i2$1.LanguageService), i0.ɵɵdirectiveInject(i2$1.MessageService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2$1.StorageService), i0.ɵɵdirectiveInject(i2$1.ConfigService), i0.ɵɵdirectiveInject(i3$1.FormBuilder));\n  };\n\n  AdvancedCoordinatesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdvancedCoordinatesComponent,\n    selectors: [[\"igo-advanced-coordinates\"]],\n    inputs: {\n      projectionsLimitations: \"projectionsLimitations\"\n    },\n    decls: 32,\n    vars: 37,\n    consts: [[\"class\", \"coordinates\", 4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [\"class\", \"coordinates2\", 4, \"ngIf\", \"ngIfElse\"], [\"elseBlock2\", \"\"], [\"mat-raised-button\", \"\", 1, \"igo-form-button-group\", 3, \"click\"], [\"svgIcon\", \"content-copy\"], [1, \"igo-form\", 3, \"formGroup\"], [1, \"igo-input-container\"], [3, \"value\", \"valueChange\"], [\"matTooltipShowDelay\", \"500\", 3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"center-toggle\", \"mat-typography\", 3, \"checked\", \"labelPosition\", \"change\"], [1, \"igo-zoom\", \"mat-typography\"], [1, \"coordinates\"], [\"matInput\", \"\", \"readonly\", \"\", \"rows\", \"1\", 3, \"placeholder\", \"value\"], [\"textArea\", \"\"], [1, \"coordinates2\"], [\"matTooltipShowDelay\", \"500\", 3, \"value\", \"click\"]],\n    template: function AdvancedCoordinatesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AdvancedCoordinatesComponent_mat_form_field_0_Template, 4, 4, \"mat-form-field\", 0);\n        i0.ɵɵtemplate(1, AdvancedCoordinatesComponent_ng_template_1_Template, 4, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(3, AdvancedCoordinatesComponent_mat_form_field_3_Template, 4, 4, \"mat-form-field\", 2);\n        i0.ɵɵtemplate(4, AdvancedCoordinatesComponent_ng_template_4_Template, 4, 4, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AdvancedCoordinatesComponent_Template_button_click_6_listener() {\n          return ctx.copyTextToClipboard();\n        });\n        i0.ɵɵelement(7, \"mat-icon\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 6);\n        i0.ɵɵelementStart(11, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13);\n        i0.ɵɵpipe(14, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-select\", 8);\n        i0.ɵɵlistener(\"valueChange\", function AdvancedCoordinatesComponent_Template_mat_select_valueChange_15_listener($event) {\n          return ctx.inputProj = $event;\n        });\n        i0.ɵɵtemplate(16, AdvancedCoordinatesComponent_mat_option_16_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵpipe(17, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-slide-toggle\", 10);\n        i0.ɵɵlistener(\"change\", function AdvancedCoordinatesComponent_Template_mat_slide_toggle_change_18_listener($event) {\n          return ctx.displayCenter($event.checked);\n        });\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 11);\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\", 11);\n        i0.ɵɵtext(25);\n        i0.ɵɵpipe(26, \"translate\");\n        i0.ɵɵpipe(27, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"p\", 11);\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵpipe(31, \"number\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        const _r4 = i0.ɵɵreference(5);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.units)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.units)(\"ngIfElse\", _r4);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 18, \"igo.integration.advanced-map-tool.advanced-coordinates.copy\"), \"\\n\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 20, \"igo.integration.advanced-map-tool.advanced-coordinates.coordSystem\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.inputProj);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(17, 22, ctx.projections$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"checked\", ctx.center)(\"labelPosition\", \"before\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 24, \"igo.integration.advanced-map-tool.advanced-coordinates.center\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(23, 26, \"igo.integration.advanced-map-tool.advanced-coordinates.zoom\"), \" \", ctx.map.viewController.getZoom(), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(26, 28, \"igo.integration.advanced-map-tool.advanced-coordinates.scale\"), \" \", i0.ɵɵpipeBind1(27, 30, ctx.formattedScale$), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(30, 32, \"igo.integration.advanced-map-tool.advanced-coordinates.resolution\"), \" \", i0.ɵɵpipeBind2(31, 34, ctx.map.viewController.getResolution(), \"1.0-0\"), \"\");\n      }\n    },\n    directives: [i4$1.NgIf, i3.MatButton, i6.MatIcon, i3$1.ɵNgNoValidate, i3$1.NgControlStatusGroup, i3$1.FormGroupDirective, i6$1.MatFormField, i6$1.MatLabel, i7$1.MatSelect, i4$1.NgForOf, i10.MatSlideToggle, i10$1.MatInput, i8$1.MatOption],\n    pipes: [i8.TranslatePipe, i4$1.AsyncPipe, i4$1.DecimalPipe],\n    styles: [\"textarea[_ngcontent-%COMP%]{resize:none}mat-form-field[_ngcontent-%COMP%]{padding:10px 15px}mat-form-field.coordinates[_ngcontent-%COMP%]{width:120px}mat-form-field.coordinates2[_ngcontent-%COMP%]{width:120px;padding:0 10px 0 3px}mat-form-field.igo-input-container[_ngcontent-%COMP%]{width:60%;padding:0 15px}.igo-form-button-group[_ngcontent-%COMP%]{padding:0 10px;margin:0 10px}.center-toggle[_ngcontent-%COMP%]{padding:10px 15px 35px}mat-slide-toggle[_ngcontent-%COMP%]{font-size:small}.igo-zoom[_ngcontent-%COMP%]{padding:0 15px}\"]\n  });\n  return AdvancedCoordinatesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet AdvancedMapToolComponent = /*#__PURE__*/(() => {\n  let AdvancedMapToolComponent = class AdvancedMapToolComponent {};\n\n  AdvancedMapToolComponent.ɵfac = function AdvancedMapToolComponent_Factory(t) {\n    return new (t || AdvancedMapToolComponent)();\n  };\n\n  AdvancedMapToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdvancedMapToolComponent,\n    selectors: [[\"igo-advanced-map-tool\"]],\n    decls: 10,\n    vars: 6,\n    consts: [[1, \"nameOfTool\"], [1, \"advanced-tool-line\"]],\n    template: function AdvancedMapToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"igo-advanced-swipe\");\n        i0.ɵɵelement(4, \"mat-divider\", 1);\n        i0.ɵɵelementStart(5, \"h4\", 0);\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"igo-advanced-coordinates\");\n        i0.ɵɵelement(9, \"mat-divider\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, \"igo.integration.advanced-map-tool.advanced-swipe.swipe-tool\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, \"igo.integration.advanced-map-tool.advanced-coordinates.coordinates\"));\n      }\n    },\n    directives: [AdvancedSwipeComponent, i9.MatDivider, AdvancedCoordinatesComponent],\n    pipes: [i8.TranslatePipe],\n    styles: [\".nameOfTool[_ngcontent-%COMP%]{text-align:center;font-weight:bold;font-size:small;margin:15px 10px 0}.advanced-tool-line[_ngcontent-%COMP%]{height:2px;background-color:gray}\"]\n  });\n  AdvancedMapToolComponent = __decorate([ToolComponent({\n    name: 'advancedMap',\n    title: 'igo.integration.tools.advancedMap',\n    icon: 'toolbox'\n  })\n  /**\r\n   * Tool to handle the advanced map tools\r\n   */\n  ], AdvancedMapToolComponent);\n  return AdvancedMapToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppMapModule = /*#__PURE__*/(() => {\n  class IgoAppMapModule {\n    static forRoot() {\n      return {\n        ngModule: IgoAppMapModule,\n        providers: []\n      };\n    }\n\n  }\n\n  IgoAppMapModule.ɵfac = function IgoAppMapModule_Factory(t) {\n    return new (t || IgoAppMapModule)();\n  };\n\n  IgoAppMapModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppMapModule\n  });\n  IgoAppMapModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[FormsModule, ReactiveFormsModule, MatButtonToggleModule, MatDividerModule, MatSelectModule, MatOptionModule, MatFormFieldModule, MatInputModule, MatCheckboxModule, IgoSpinnerModule, CommonModule, MatTabsModule, MatListModule, MatIconModule, IgoLanguageModule, IgoLayerModule, IgoMetadataModule, IgoDownloadModule, IgoImportExportModule, IgoFilterModule, IgoContextModule, IgoAppWorkspaceModule, MatSlideToggleModule, MatMenuModule, MatButtonModule, MatTooltipModule]]\n  });\n  return IgoAppMapModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppMapModule, {\n    declarations: [AdvancedMapToolComponent, MapToolComponent, MapToolsComponent, MapDetailsToolComponent, MapLegendToolComponent, AdvancedSwipeComponent, AdvancedCoordinatesComponent],\n    imports: [FormsModule, ReactiveFormsModule, MatButtonToggleModule, MatDividerModule, MatSelectModule, MatOptionModule, MatFormFieldModule, MatInputModule, MatCheckboxModule, IgoSpinnerModule, CommonModule, MatTabsModule, MatListModule, MatIconModule, IgoLanguageModule, IgoLayerModule, IgoMetadataModule, IgoDownloadModule, IgoImportExportModule, IgoFilterModule, IgoContextModule, IgoAppWorkspaceModule, MatSlideToggleModule, MatMenuModule, MatButtonModule, MatTooltipModule],\n    exports: [AdvancedMapToolComponent, MapToolComponent, MapToolsComponent, MapDetailsToolComponent, MapLegendToolComponent]\n  });\n})();\n/**\r\n * Service that holds the state of the measure module\r\n */\n\n\nlet MeasureState = /*#__PURE__*/(() => {\n  class MeasureState {\n    constructor(mapState) {\n      this.mapState = mapState;\n      /**\r\n       * Store that holds the measures\r\n       */\n\n      this.store = new FeatureStore([], {\n        map: this.mapState.map\n      });\n      this.mapState.map.layers$.subscribe(layers => {\n        if (layers.filter(l => l.id.startsWith('igo-measures-')).length === 0) {\n          this.store.deleteMany(this.store.all());\n          this.mapState.map.ol.getOverlays().getArray().filter(overlay => overlay.options.className.includes('igo-map-tooltip')).map(overlay => this.mapState.map.ol.removeOverlay(overlay));\n        }\n      });\n    }\n\n  }\n\n  MeasureState.ɵfac = function MeasureState_Factory(t) {\n    return new (t || MeasureState)(i0.ɵɵinject(MapState));\n  };\n\n  MeasureState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MeasureState,\n    factory: MeasureState.ɵfac,\n    providedIn: 'root'\n  });\n  return MeasureState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Tool to measure lengths and areas\r\n */\n\n\nlet MeasurerToolComponent = /*#__PURE__*/(() => {\n  let MeasurerToolComponent = class MeasurerToolComponent {\n    constructor(measureState, mapState) {\n      this.measureState = measureState;\n      this.mapState = mapState;\n    }\n    /**\r\n     * Map to measure on\r\n     * @internal\r\n     */\n\n\n    get store() {\n      return this.measureState.store;\n    }\n    /**\r\n     * Map to measure on\r\n     * @internal\r\n     */\n\n\n    get map() {\n      return this.mapState.map;\n    }\n\n  };\n\n  MeasurerToolComponent.ɵfac = function MeasurerToolComponent_Factory(t) {\n    return new (t || MeasurerToolComponent)(i0.ɵɵdirectiveInject(MeasureState), i0.ɵɵdirectiveInject(MapState));\n  };\n\n  MeasurerToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MeasurerToolComponent,\n    selectors: [[\"igo-measurer-tool\"]],\n    decls: 1,\n    vars: 2,\n    consts: [[3, \"store\", \"map\"]],\n    template: function MeasurerToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-measurer\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"store\", ctx.store)(\"map\", ctx.map);\n      }\n    },\n    directives: [i1$1.MeasurerComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  MeasurerToolComponent = __decorate([ToolComponent({\n    name: 'measurer',\n    title: 'igo.integration.tools.measurer',\n    icon: 'ruler'\n  })], MeasurerToolComponent);\n  return MeasurerToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @ignore\r\n */\n\n\nlet IgoAppMeasurerToolModule = /*#__PURE__*/(() => {\n  class IgoAppMeasurerToolModule {}\n\n  IgoAppMeasurerToolModule.ɵfac = function IgoAppMeasurerToolModule_Factory(t) {\n    return new (t || IgoAppMeasurerToolModule)();\n  };\n\n  IgoAppMeasurerToolModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppMeasurerToolModule\n  });\n  IgoAppMeasurerToolModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoMeasurerModule]]\n  });\n  return IgoAppMeasurerToolModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppMeasurerToolModule, {\n    declarations: [MeasurerToolComponent],\n    imports: [IgoMeasurerModule],\n    exports: [MeasurerToolComponent]\n  });\n})();\n\nlet IgoAppMeasureModule = /*#__PURE__*/(() => {\n  class IgoAppMeasureModule {}\n\n  IgoAppMeasureModule.ɵfac = function IgoAppMeasureModule_Factory(t) {\n    return new (t || IgoAppMeasureModule)();\n  };\n\n  IgoAppMeasureModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppMeasureModule\n  });\n  IgoAppMeasureModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[], IgoAppMeasurerToolModule]\n  });\n  return IgoAppMeasureModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppMeasureModule, {\n    exports: [IgoAppMeasurerToolModule]\n  });\n})();\n\nlet PrintToolComponent = /*#__PURE__*/(() => {\n  let PrintToolComponent = class PrintToolComponent {\n    constructor(mapState) {\n      this.mapState = mapState;\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n  };\n\n  PrintToolComponent.ɵfac = function PrintToolComponent_Factory(t) {\n    return new (t || PrintToolComponent)(i0.ɵɵdirectiveInject(MapState));\n  };\n\n  PrintToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PrintToolComponent,\n    selectors: [[\"igo-print-tool\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"map\"]],\n    template: function PrintToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-print\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"map\", ctx.map);\n      }\n    },\n    directives: [i1$1.PrintComponent],\n    encapsulation: 2\n  });\n  PrintToolComponent = __decorate([ToolComponent({\n    name: 'print',\n    title: 'igo.integration.tools.print',\n    icon: 'printer'\n  })], PrintToolComponent);\n  return PrintToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppPrintModule = /*#__PURE__*/(() => {\n  class IgoAppPrintModule {\n    static forRoot() {\n      return {\n        ngModule: IgoAppPrintModule,\n        providers: []\n      };\n    }\n\n  }\n\n  IgoAppPrintModule.ɵfac = function IgoAppPrintModule_Factory(t) {\n    return new (t || IgoAppPrintModule)();\n  };\n\n  IgoAppPrintModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppPrintModule\n  });\n  IgoAppPrintModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoPrintModule]]\n  });\n  return IgoAppPrintModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppPrintModule, {\n    declarations: [PrintToolComponent],\n    imports: [IgoPrintModule],\n    exports: [PrintToolComponent]\n  });\n})();\n/**\r\n * Service that holds the state of the search module\r\n */\n\n\nlet SearchState = /*#__PURE__*/(() => {\n  class SearchState {\n    constructor(searchSourceService, storageService, configService) {\n      this.searchSourceService = searchSourceService;\n      this.storageService = storageService;\n      this.configService = configService;\n      this.searchOverlayStyle = {};\n      this.searchOverlayStyleSelection = {};\n      this.searchOverlayStyleFocus = {};\n      this.searchTermSplitter$ = new BehaviorSubject('|');\n      this.searchTerm$ = new BehaviorSubject(undefined);\n      this.searchType$ = new BehaviorSubject(undefined);\n      this.searchDisabled$ = new BehaviorSubject(false);\n      this.searchResultsGeometryEnabled$ = new BehaviorSubject(false);\n      this.searchSettingsChange$ = new BehaviorSubject(undefined);\n      this.selectedResult$ = new BehaviorSubject(undefined);\n      /**\r\n       * Store that holds the search results\r\n       */\n\n      this.store = new EntityStore([]);\n      const searchOverlayStyle = this.configService.getConfig('searchOverlayStyle');\n\n      if (searchOverlayStyle) {\n        this.searchOverlayStyle = searchOverlayStyle.base;\n        this.searchOverlayStyleSelection = searchOverlayStyle.selection;\n        this.searchOverlayStyleFocus = searchOverlayStyle.focus;\n      }\n\n      const searchResultsGeometryEnabled = this.storageService.get('searchResultsGeometryEnabled');\n\n      if (searchResultsGeometryEnabled) {\n        this.searchResultsGeometryEnabled$.next(searchResultsGeometryEnabled);\n      }\n\n      this.store.addStrategy(this.createCustomFilterTermStrategy(), false);\n    }\n    /**\r\n     * Search types currently enabled in the search source service\r\n     */\n\n\n    get searchTypes() {\n      return this.searchSourceService.getEnabledSources().map(source => source.constructor.type);\n    }\n\n    createCustomFilterTermStrategy() {\n      const filterClauseFunc = record => {\n        return record.entity.meta.score === 100;\n      };\n\n      return new EntityStoreFilterCustomFuncStrategy({\n        filterClauseFunc\n      });\n    }\n    /**\r\n     * Activate custom strategy\r\n     *\r\n     */\n\n\n    activateCustomFilterTermStrategy() {\n      const strategy = this.store.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n\n      if (strategy !== undefined) {\n        strategy.activate();\n      }\n    }\n    /**\r\n     * Deactivate custom strategy\r\n     *\r\n     */\n\n\n    deactivateCustomFilterTermStrategy() {\n      const strategy = this.store.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n\n      if (strategy !== undefined) {\n        strategy.deactivate();\n      }\n    }\n\n    enableSearch() {\n      this.searchDisabled$.next(false);\n    }\n\n    disableSearch() {\n      this.searchDisabled$.next(true);\n    }\n\n    setSearchTerm(searchTerm) {\n      this.searchTerm$.next(searchTerm);\n    }\n\n    setSearchType(searchType) {\n      this.searchSourceService.enableSourcesByType(searchType);\n      this.searchType$.next(searchType);\n    }\n\n    setSearchSettingsChange() {\n      this.searchSettingsChange$.next(true);\n    }\n\n    setSelectedResult(result) {\n      this.selectedResult$.next(result);\n    }\n\n    setSearchResultsGeometryStatus(value) {\n      this.storageService.set('searchResultsGeometryEnabled', value);\n      this.searchResultsGeometryEnabled$.next(value);\n    }\n\n  }\n\n  SearchState.ɵfac = function SearchState_Factory(t) {\n    return new (t || SearchState)(i0.ɵɵinject(i1$1.SearchSourceService), i0.ɵɵinject(i2$1.StorageService), i0.ɵɵinject(i2$1.ConfigService));\n  };\n\n  SearchState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchState,\n    factory: SearchState.ɵfac,\n    providedIn: 'root'\n  });\n  return SearchState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet SearchBarBindingDirective = /*#__PURE__*/(() => {\n  class SearchBarBindingDirective {\n    constructor(component, searchState) {\n      this.component = component;\n      this.searchState = searchState;\n    }\n\n    get searchTerm() {\n      return this.searchState.searchTerm$.value;\n    }\n\n    get searchType() {\n      return this.searchState.searchType$.value;\n    }\n\n    ngOnInit() {\n      this.searchTerm$$ = this.searchState.searchTerm$.subscribe(searchTerm => {\n        if (searchTerm !== undefined && searchTerm !== null) {\n          this.component.setTerm(searchTerm);\n        }\n      });\n      this.searchType$$ = this.searchState.searchType$.subscribe(searchType => {\n        if (searchType !== undefined && searchType !== null) {\n          this.component.setSearchType(searchType);\n        }\n      });\n      this.searchDisabled$$ = this.searchState.searchDisabled$.subscribe(searchDisabled => {\n        this.component.disabled = searchDisabled;\n      });\n    }\n\n    ngOnDestroy() {\n      this.searchTerm$$.unsubscribe();\n      this.searchType$$.unsubscribe();\n      this.searchDisabled$$.unsubscribe();\n    }\n\n    onSearchTermChange(searchTerm) {\n      if (searchTerm !== this.searchTerm) {\n        this.searchState.setSearchTerm(searchTerm);\n      }\n    }\n\n    onSearchTypeChange(searchType) {\n      if (searchType !== this.searchType) {\n        this.searchState.setSearchType(searchType);\n      }\n    }\n\n  }\n\n  SearchBarBindingDirective.ɵfac = function SearchBarBindingDirective_Factory(t) {\n    return new (t || SearchBarBindingDirective)(i0.ɵɵdirectiveInject(i1$1.SearchBarComponent, 2), i0.ɵɵdirectiveInject(SearchState));\n  };\n\n  SearchBarBindingDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: SearchBarBindingDirective,\n    selectors: [[\"\", \"igoSearchBarBinding\", \"\"]],\n    hostBindings: function SearchBarBindingDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"searchTermChange\", function SearchBarBindingDirective_searchTermChange_HostBindingHandler($event) {\n          return ctx.onSearchTermChange($event);\n        })(\"searchTypeChange\", function SearchBarBindingDirective_searchTypeChange_HostBindingHandler($event) {\n          return ctx.onSearchTypeChange($event);\n        });\n      }\n    }\n  });\n  return SearchBarBindingDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @ignore\r\n */\n\n\nlet IgoAppSearchBarModule = /*#__PURE__*/(() => {\n  class IgoAppSearchBarModule {}\n\n  IgoAppSearchBarModule.ɵfac = function IgoAppSearchBarModule_Factory(t) {\n    return new (t || IgoAppSearchBarModule)();\n  };\n\n  IgoAppSearchBarModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppSearchBarModule\n  });\n  IgoAppSearchBarModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoSearchModule]]\n  });\n  return IgoAppSearchBarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppSearchBarModule, {\n    declarations: [SearchBarBindingDirective],\n    imports: [IgoSearchModule],\n    exports: [SearchBarBindingDirective]\n  });\n})();\n\nfunction SearchResultsToolComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"section\", 3);\n    i0.ɵɵelementStart(2, \"h4\");\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵelementStart(7, \"strong\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"div\", 4);\n    i0.ɵɵpipe(11, \"sanitizeHtml\");\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, \"igo.integration.searchResultsTool.noResults\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 5, \"igo.integration.searchResultsTool.doSearch\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(11, 7, i0.ɵɵpipeBind1(12, 9, \"igo.integration.searchResultsTool.examples\")), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction SearchResultsToolComponent_igo_flexible_1_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-search-add-button\", 12);\n  }\n\n  if (rf & 2) {\n    const result_r6 = ctx.result;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"map\", ctx_r4.map)(\"layer\", result_r6);\n  }\n}\n\nfunction SearchResultsToolComponent_igo_flexible_1_igo_panel_8_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function SearchResultsToolComponent_igo_flexible_1_igo_panel_8_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(3);\n      return ctx_r8.zoomToFeatureExtent();\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelement(3, \"mat-icon\", 19);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵpipe(5, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 3, i0.ɵɵpipeBind1(2, 5, ctx_r7.isSelectedResultOutOfView$) ? \"igo.integration.searchResultsTool.zoomOnFeatureTooltipOutOfView\" : \"igo.integration.searchResultsTool.zoomOnFeatureTooltip\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matBadge\", i0.ɵɵpipeBind1(4, 7, ctx_r7.isSelectedResultOutOfView$) ? \"!\" : \"\")(\"matBadgeHidden\", i0.ɵɵpipeBind1(5, 9, ctx_r7.isSelectedResultOutOfView$) === false);\n  }\n}\n\nfunction SearchResultsToolComponent_igo_flexible_1_igo_panel_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-panel\", 13);\n    i0.ɵɵelementStart(1, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SearchResultsToolComponent_igo_flexible_1_igo_panel_8_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.toggleTopPanel();\n    });\n    i0.ɵɵelement(2, \"mat-icon\", 15);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SearchResultsToolComponent_igo_flexible_1_igo_panel_8_button_4_Template, 6, 11, \"button\", 16);\n    i0.ɵɵelementStart(5, \"igo-feature-details\", 17);\n    i0.ɵɵlistener(\"routingEvent\", function SearchResultsToolComponent_igo_flexible_1_igo_panel_8_Template_igo_feature_details_routingEvent_5_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.getRoute();\n    });\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"title\", ctx_r5.featureTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", i0.ɵɵpipeBind1(3, 6, ctx_r5.topPanelState$) === \"collapsed\" ? \"arrow-up\" : \"arrow-down\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.feature.geometry);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"feature\", i0.ɵɵpipeBind1(6, 8, ctx_r5.feature$))(\"map\", ctx_r5.map)(\"toolbox\", ctx_r5.toolState.toolbox);\n  }\n}\n\nfunction SearchResultsToolComponent_igo_flexible_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-flexible\", 5, 6);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵelementStart(4, \"igo-search-results\", 8);\n    i0.ɵɵlistener(\"resultFocus\", function SearchResultsToolComponent_igo_flexible_1_Template_igo_search_results_resultFocus_4_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onResultFocus($event);\n    })(\"resultSelect\", function SearchResultsToolComponent_igo_flexible_1_Template_igo_search_results_resultSelect_4_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onResultSelect($event);\n    })(\"resultUnfocus\", function SearchResultsToolComponent_igo_flexible_1_Template_igo_search_results_resultUnfocus_4_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onResultUnfocus($event);\n    })(\"resultMouseenter\", function SearchResultsToolComponent_igo_flexible_1_Template_igo_search_results_resultMouseenter_4_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onResultFocus($event);\n    })(\"resultMouseleave\", function SearchResultsToolComponent_igo_flexible_1_Template_igo_search_results_resultMouseleave_4_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onResultUnfocus($event);\n    })(\"moreResults\", function SearchResultsToolComponent_igo_flexible_1_Template_igo_search_results_moreResults_4_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.onSearch($event);\n    });\n    i0.ɵɵtemplate(5, SearchResultsToolComponent_igo_flexible_1_ng_template_5_Template, 1, 2, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 10);\n    i0.ɵɵtemplate(8, SearchResultsToolComponent_igo_flexible_1_igo_panel_8_Template, 7, 10, \"igo-panel\", 11);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"state\", i0.ɵɵpipeBind1(2, 7, ctx_r1.feature$) ? ctx_r1.topPanelState : \"initial\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"store\", ctx_r1.store)(\"showIcons\", ctx_r1.showIcons)(\"term\", ctx_r1.term)(\"termSplitter\", ctx_r1.termSplitter)(\"settingsChange$\", ctx_r1.settingsChange$);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(9, 9, ctx_r1.feature$));\n  }\n}\n/**\r\n * Tool to browse the search results\r\n */\n\n\nlet SearchResultsToolComponent = /*#__PURE__*/(() => {\n  let SearchResultsToolComponent = class SearchResultsToolComponent {\n    constructor(mapState, searchState, elRef, toolState, directionState, configService) {\n      this.mapState = mapState;\n      this.searchState = searchState;\n      this.elRef = elRef;\n      this.toolState = toolState;\n      this.directionState = directionState;\n      /**\r\n       * to show hide results icons\r\n       */\n\n      this.showIcons = true;\n      this.hasFeatureEmphasisOnSelection = false;\n      this.shownResultsGeometries = [];\n      this.shownResultsEmphasisGeometries = [];\n      this.focusedResult$ = new BehaviorSubject(undefined);\n      this.isSelectedResultOutOfView$ = new BehaviorSubject(false);\n      this.term = '';\n      this.settingsChange$ = new BehaviorSubject(undefined);\n      this.topPanelState$ = new BehaviorSubject('initial');\n      this.format = new olFormatGeoJSON();\n      this.hasFeatureEmphasisOnSelection = configService.getConfig('hasFeatureEmphasisOnSelection');\n    }\n    /**\r\n     * Store holding the search results\r\n     * @internal\r\n     */\n\n\n    get store() {\n      return this.searchState.store;\n    }\n    /**\r\n     * Map to display the results on\r\n     * @internal\r\n     */\n\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get featureTitle() {\n      return this.feature ? getEntityTitle(this.feature) : undefined;\n    }\n\n    get feature$() {\n      return this.store.stateView.firstBy$(e => e.state.focused).pipe(map(element => this.feature = element ? element.entity.data : undefined));\n    }\n\n    set topPanelState(value) {\n      this.topPanelState$.next(value);\n    }\n\n    get topPanelState() {\n      return this.topPanelState$.value;\n    }\n\n    get termSplitter() {\n      return this.searchState.searchTermSplitter$.value;\n    }\n\n    ngOnInit() {\n      this.searchTerm$$ = this.searchState.searchTerm$.subscribe(searchTerm => {\n        if (searchTerm !== undefined && searchTerm !== null) {\n          this.term = searchTerm;\n        }\n      });\n\n      for (const res of this.store.stateView.all$().value) {\n        if (this.store.state.get(res.entity).selected === true) {\n          this.topPanelState = 'expanded';\n        }\n      }\n\n      this.searchState.searchSettingsChange$.subscribe(() => {\n        this.settingsChange$.next(true);\n      });\n      this.topPanelState$$ = this.topPanelState$.subscribe(() => {\n        const igoList = this.computeElementRef()[0];\n        const selected = this.computeElementRef()[1];\n\n        if (selected) {\n          setTimeout(() => {\n            // To be sure the flexible component has been displayed yet\n            if (!this.isScrolledIntoView(igoList, selected)) {\n              this.adjustTopPanel(igoList, selected);\n            }\n          }, FlexibleComponent.transitionTime + 50);\n        }\n      });\n\n      if (this.hasFeatureEmphasisOnSelection) {\n        if (!this.searchState.focusedOrResolution$$) {\n          this.searchState.focusedOrResolution$$ = combineLatest([this.focusedResult$, this.map.viewController.resolution$]).subscribe(bunch => this.buildResultEmphasis(bunch[0], 'focused'));\n        }\n\n        if (!this.searchState.selectedOrResolution$$) {\n          this.searchState.selectedOrResolution$$ = combineLatest([this.searchState.selectedResult$, this.map.viewController.resolution$]).subscribe(bunch => this.buildResultEmphasis(bunch[0], 'selected'));\n        }\n      }\n\n      this.monitorResultOutOfView();\n      this.showResultsGeometries$$ = combineLatest([this.searchState.searchResultsGeometryEnabled$, this.store.stateView.all$(), this.focusedResult$, this.searchState.selectedResult$, this.searchState.searchTerm$, this.map.viewController.resolution$]).subscribe(bunch => {\n        const searchResultsGeometryEnabled = bunch[0];\n        const searchResults = bunch[1];\n\n        if (this.hasFeatureEmphasisOnSelection) {\n          this.clearFeatureEmphasis('shown');\n        }\n\n        this.shownResultsGeometries.map(result => this.map.queryResultsOverlay.removeFeature(result));\n        const featureToHandleGeom = searchResults.filter(result => result.entity.meta.dataType === FEATURE && result.entity.data.geometry && !result.state.selected && !result.state.focused);\n        featureToHandleGeom.map(result => {\n          var _a;\n\n          if (searchResultsGeometryEnabled) {\n            result.entity.data.meta.style = getCommonVectorStyle(Object.assign({}, {\n              feature: result.entity.data\n            }, this.searchState.searchOverlayStyle, ((_a = result.entity.style) === null || _a === void 0 ? void 0 : _a.base) ? result.entity.style.base : {}));\n            this.shownResultsGeometries.push(result.entity.data);\n            this.map.queryResultsOverlay.addFeature(result.entity.data, FeatureMotion.None);\n\n            if (this.hasFeatureEmphasisOnSelection) {\n              this.buildResultEmphasis(result.entity, 'shown');\n            }\n          }\n        });\n      });\n    }\n\n    monitorResultOutOfView() {\n      this.isSelectedResultOutOfView$$ = combineLatest([this.map.viewController.state$, this.searchState.selectedResult$]).pipe(debounceTime(100)).subscribe(bunch => {\n        const selectedResult = bunch[1];\n\n        if (!selectedResult) {\n          this.isSelectedResultOutOfView$.next(false);\n          return;\n        }\n\n        if (selectedResult.data.geometry) {\n          const selectedOlFeature = featureToOl(selectedResult.data, this.map.projection);\n          const selectedOlFeatureExtent = computeOlFeaturesExtent(this.map, [selectedOlFeature]);\n          this.isSelectedResultOutOfView$.next(featuresAreOutOfView(this.map, selectedOlFeatureExtent));\n        }\n      });\n    }\n\n    buildResultEmphasis(result, trigger) {\n      var _a, _b, _c;\n\n      if (trigger !== 'shown') {\n        this.clearFeatureEmphasis(trigger);\n      }\n\n      if (!result || !result.data.geometry) {\n        return;\n      }\n\n      const myOlFeature = featureToOl(result.data, this.map.projection);\n      const olGeometry = myOlFeature.getGeometry();\n\n      if (featuresAreTooDeepInView(this.map, olGeometry.getExtent(), 0.0025)) {\n        const extent = olGeometry.getExtent();\n        const x = extent[0] + (extent[2] - extent[0]) / 2;\n        const y = extent[1] + (extent[3] - extent[1]) / 2;\n        const feature1 = new olFeature({\n          name: `${trigger}AbstractResult'`,\n          geometry: new olPoint([x, y])\n        });\n        const abstractResult = featureFromOl(feature1, this.map.projection);\n        let computedStyle;\n        let zIndexOffset = 0;\n\n        switch (trigger) {\n          case 'focused':\n            computedStyle = getCommonVectorSelectedStyle(Object.assign({}, {\n              feature: abstractResult\n            }, this.searchState.searchOverlayStyleFocus, ((_a = result.style) === null || _a === void 0 ? void 0 : _a.focus) ? result.style.focus : {}));\n            zIndexOffset = 2;\n            break;\n\n          case 'shown':\n            computedStyle = getCommonVectorStyle(Object.assign({}, {\n              feature: abstractResult\n            }, this.searchState.searchOverlayStyle, ((_b = result.style) === null || _b === void 0 ? void 0 : _b.base) ? result.style.base : {}));\n            break;\n\n          case 'selected':\n            computedStyle = getCommonVectorSelectedStyle(Object.assign({}, {\n              feature: abstractResult\n            }, this.searchState.searchOverlayStyleSelection, ((_c = result.style) === null || _c === void 0 ? void 0 : _c.selection) ? result.style.selection : {}));\n            zIndexOffset = 1;\n            break;\n        }\n\n        abstractResult.meta.style = computedStyle;\n        abstractResult.meta.style.setZIndex(2000 + zIndexOffset);\n        this.map.searchResultsOverlay.addFeature(abstractResult, FeatureMotion.None);\n\n        if (trigger === 'focused') {\n          this.abstractFocusedResult = abstractResult;\n        }\n\n        if (trigger === 'selected') {\n          this.abstractSelectedResult = abstractResult;\n        }\n\n        if (trigger === 'shown') {\n          this.shownResultsEmphasisGeometries.push(abstractResult);\n        }\n      } else {\n        this.clearFeatureEmphasis(trigger);\n      }\n    }\n\n    clearFeatureEmphasis(trigger) {\n      if (trigger === 'focused' && this.abstractFocusedResult) {\n        this.map.searchResultsOverlay.removeFeature(this.abstractFocusedResult);\n        this.abstractFocusedResult = undefined;\n      }\n\n      if (trigger === 'selected' && this.abstractSelectedResult) {\n        this.map.searchResultsOverlay.removeFeature(this.abstractSelectedResult);\n        this.abstractSelectedResult = undefined;\n      }\n\n      if (trigger === 'shown') {\n        this.shownResultsEmphasisGeometries.map(shownResult => this.map.searchResultsOverlay.removeFeature(shownResult));\n        this.shownResultsEmphasisGeometries = [];\n      }\n    }\n\n    ngOnDestroy() {\n      this.topPanelState$$.unsubscribe();\n      this.searchTerm$$.unsubscribe();\n\n      if (this.isSelectedResultOutOfView$$) {\n        this.isSelectedResultOutOfView$$.unsubscribe();\n      }\n\n      if (this.showResultsGeometries$$) {\n        this.showResultsGeometries$$.unsubscribe();\n      }\n\n      if (this.getRoute$$) {\n        this.getRoute$$.unsubscribe();\n      }\n    }\n    /**\r\n     * Try to add a feature to the map when it's being focused\r\n     * @internal\r\n     * @param result A search result that could be a feature\r\n     */\n\n\n    onResultFocus(result) {\n      var _a;\n\n      this.focusedResult$.next(result);\n\n      if (result.meta.dataType === FEATURE && result.data.geometry) {\n        result.data.meta.style = getCommonVectorSelectedStyle(Object.assign({}, {\n          feature: result.data\n        }, this.searchState.searchOverlayStyleFocus, ((_a = result.style) === null || _a === void 0 ? void 0 : _a.focus) ? result.style.focus : {}));\n        const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n\n        if (feature) {\n          feature.setStyle(result.data.meta.style);\n          return;\n        }\n\n        this.map.searchResultsOverlay.addFeature(result.data, FeatureMotion.None);\n      }\n    }\n\n    onResultUnfocus(result) {\n      var _a;\n\n      this.focusedResult$.next(undefined);\n\n      if (result.meta.dataType !== FEATURE) {\n        return;\n      }\n\n      if (this.store.state.get(result).selected === true) {\n        const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n\n        if (feature) {\n          const style = getCommonVectorSelectedStyle(Object.assign({}, {\n            feature: result.data\n          }, this.searchState.searchOverlayStyleFocus, ((_a = result.style) === null || _a === void 0 ? void 0 : _a.focus) ? result.style.focus : {}));\n          feature.setStyle(style);\n        }\n\n        return;\n      }\n\n      this.map.searchResultsOverlay.removeFeature(result.data);\n    }\n    /**\r\n     * Try to add a feature to the map when it's being selected\r\n     * @internal\r\n     * @param result A search result that could be a feature or some layer options\r\n     */\n\n\n    onResultSelect(result) {\n      this.map.searchResultsOverlay.dataSource.ol.clear();\n      this.tryAddFeatureToMap(result);\n      this.searchState.setSelectedResult(result);\n\n      if (this.topPanelState === 'expanded') {\n        const igoList = this.computeElementRef()[0];\n        const selected = this.computeElementRef()[1];\n        setTimeout(() => {\n          // To be sure the flexible component has been displayed yet\n          if (!this.isScrolledIntoView(igoList, selected)) {\n            this.adjustTopPanel(igoList, selected);\n          }\n        }, FlexibleComponent.transitionTime + 50);\n      }\n\n      if (this.topPanelState === 'initial') {\n        this.topPanelState = 'expanded';\n      }\n    }\n\n    onSearch(event) {\n      const results = event.results;\n      const newResults = this.store.entities$.value.filter(result => result.source !== event.research.source).concat(results);\n      this.store.load(newResults);\n\n      for (const res of this.store.all()) {\n        if (this.store.state.get(res).focused === true && this.store.state.get(res).selected !== true) {\n          this.store.state.update(res, {\n            focused: false\n          }, true);\n        }\n      }\n\n      setTimeout(() => {\n        const igoList = this.elRef.nativeElement.querySelector('igo-list');\n        let moreResults;\n        event.research.request.subscribe(source => {\n          if (!source[0] || !source[0].source) {\n            moreResults = null;\n          } else if (source[0].source.getId() === 'icherche') {\n            moreResults = igoList.querySelector('.icherche .moreResults');\n          } else if (source[0].source.getId() === 'ilayer') {\n            moreResults = igoList.querySelector('.ilayer .moreResults');\n          } else if (source[0].source.getId() === 'nominatim') {\n            moreResults = igoList.querySelector('.nominatim .moreResults');\n          } else {\n            moreResults = igoList.querySelector('.' + source[0].source.getId() + ' .moreResults');\n          }\n\n          if (moreResults !== null && !this.isScrolledIntoView(igoList, moreResults)) {\n            igoList.scrollTop = moreResults.offsetTop + moreResults.offsetHeight - igoList.clientHeight;\n          }\n        });\n      }, 250);\n    }\n\n    computeElementRef() {\n      const items = document.getElementsByTagName('igo-search-results-item');\n      const igoList = this.elRef.nativeElement.getElementsByTagName('igo-list')[0];\n      let selectedItem; // eslint-disable-next-line\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].className.includes('igo-list-item-selected')) {\n          selectedItem = items[i];\n        }\n      }\n\n      return [igoList, selectedItem];\n    }\n\n    adjustTopPanel(elemSource, elem) {\n      if (!this.isScrolledIntoView(elemSource, elem)) {\n        elemSource.scrollTop = elem.offsetTop + elem.children[0].offsetHeight - elemSource.clientHeight;\n      }\n    }\n\n    toggleTopPanel() {\n      if (this.topPanelState === 'expanded') {\n        this.topPanelState = 'collapsed';\n      } else {\n        this.topPanelState = 'expanded';\n      }\n    }\n\n    zoomToFeatureExtent() {\n      if (this.feature.geometry) {\n        const localOlFeature = this.format.readFeature(this.feature, {\n          dataProjection: this.feature.projection,\n          featureProjection: this.map.projection\n        });\n        moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Zoom);\n      }\n    }\n    /**\r\n     * Try to add a feature to the map overlay\r\n     * @param result A search result that could be a feature\r\n     */\n\n\n    tryAddFeatureToMap(result) {\n      var _a;\n\n      if (result.meta.dataType !== FEATURE) {\n        return undefined;\n      }\n\n      const feature = result.data; // Somethimes features have no geometry. It happens with some GetFeatureInfo\n\n      if (!feature.geometry) {\n        return;\n      }\n\n      feature.meta.style = getCommonVectorSelectedStyle(Object.assign({}, {\n        feature\n      }, this.searchState.searchOverlayStyleSelection, ((_a = result.style) === null || _a === void 0 ? void 0 : _a.selection) ? result.style.selection : {}));\n      this.map.searchResultsOverlay.addFeature(feature);\n    }\n\n    isScrolledIntoView(elemSource, elem) {\n      const padding = 6;\n      const docViewTop = elemSource.scrollTop;\n      const docViewBottom = docViewTop + elemSource.clientHeight;\n      const elemTop = elem.offsetTop;\n      const elemBottom = elemTop + elem.clientHeight + padding;\n      return elemBottom <= docViewBottom && elemTop >= docViewTop;\n    }\n\n    getRoute() {\n      this.toolState.toolbox.activateTool('directions');\n      this.directionState.stopsStore.clearStops();\n      setTimeout(() => {\n        let routingCoordLoaded = false;\n\n        if (this.getRoute$$) {\n          this.getRoute$$.unsubscribe();\n        }\n\n        this.getRoute$$ = this.directionState.stopsStore.storeInitialized$.subscribe(init => {\n          if (this.directionState.stopsStore.storeInitialized$.value && !routingCoordLoaded) {\n            routingCoordLoaded = true;\n            const stop = this.directionState.stopsStore.all().find(e => e.position === 1);\n            let coord;\n\n            if (this.feature.geometry) {\n              if (this.feature.geometry.type === 'Point') {\n                coord = [this.feature.geometry.coordinates[0], this.feature.geometry.coordinates[1]];\n              } else {\n                const point = pointOnFeature(this.feature.geometry);\n                coord = [point.geometry.coordinates[0], point.geometry.coordinates[1]];\n              }\n            }\n\n            stop.text = this.featureTitle;\n            stop.coordinates = coord;\n            this.directionState.stopsStore.update(stop);\n          }\n        });\n      }, 250);\n    }\n\n  };\n\n  SearchResultsToolComponent.ɵfac = function SearchResultsToolComponent_Factory(t) {\n    return new (t || SearchResultsToolComponent)(i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(SearchState), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ToolState), i0.ɵɵdirectiveInject(DirectionState), i0.ɵɵdirectiveInject(i2$1.ConfigService));\n  };\n\n  SearchResultsToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchResultsToolComponent,\n    selectors: [[\"igo-search-results-tool\"]],\n    inputs: {\n      showIcons: \"showIcons\",\n      topPanelState: \"topPanelState\"\n    },\n    decls: 3,\n    vars: 4,\n    consts: [[\"style\", \"margin: 10px;\", 4, \"ngIf\"], [\"initial\", \"100%\", \"initialMobile\", \"100%\", \"collapsed\", \"calc(100% - 58px)\", \"collapsedMobile\", \"calc(100% - 58px)\", \"expanded\", \"60%\", \"expandedMobile\", \"60%\", 3, \"state\", 4, \"ngIf\"], [2, \"margin\", \"10px\"], [1, \"mat-typography\"], [3, \"innerHTML\"], [\"initial\", \"100%\", \"initialMobile\", \"100%\", \"collapsed\", \"calc(100% - 58px)\", \"collapsedMobile\", \"calc(100% - 58px)\", \"expanded\", \"60%\", \"expandedMobile\", \"60%\", 3, \"state\"], [\"topPanel\", \"\"], [1, \"igo-content\"], [\"placeholder\", \"false\", 3, \"store\", \"showIcons\", \"term\", \"termSplitter\", \"settingsChange$\", \"resultFocus\", \"resultSelect\", \"resultUnfocus\", \"resultMouseenter\", \"resultMouseleave\", \"moreResults\"], [\"igoSearchItemToolbar\", \"\"], [\"igoFlexibleFill\", \"\", 1, \"igo-content\"], [3, \"title\", 4, \"ngIf\"], [3, \"map\", \"layer\"], [3, \"title\"], [\"mat-icon-button\", \"\", \"panelLeftButton\", \"\", 1, \"igo-icon-button\", 3, \"click\"], [3, \"svgIcon\"], [\"mat-icon-button\", \"\", \"panelRightButton\", \"\", \"class\", \"igo-icon-button\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"click\", 4, \"ngIf\"], [\"igoFeatureDetailsDirective\", \"\", 3, \"feature\", \"map\", \"toolbox\", \"routingEvent\"], [\"mat-icon-button\", \"\", \"panelRightButton\", \"\", \"matTooltipShowDelay\", \"500\", 1, \"igo-icon-button\", 3, \"matTooltip\", \"click\"], [\"matBadgeColor\", \"accent\", \"matBadgeSize\", \"small\", \"svgIcon\", \"magnify-plus-outline\", 3, \"matBadge\", \"matBadgeHidden\"]],\n    template: function SearchResultsToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SearchResultsToolComponent_div_0_Template, 13, 11, \"div\", 0);\n        i0.ɵɵtemplate(1, SearchResultsToolComponent_igo_flexible_1_Template, 10, 11, \"igo-flexible\", 1);\n        i0.ɵɵpipe(2, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.store || ctx.store.stateView.empty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.store && i0.ɵɵpipeBind1(2, 2, ctx.store.stateView.empty$) === false);\n      }\n    },\n    directives: [i4$1.NgIf, i4.FlexibleComponent, i1$1.SearchResultsComponent, i1$1.SearchResultAddButtonComponent, i4.PanelComponent, i3.MatButton, i6.MatIcon, i1$1.FeatureDetailsComponent, i1$1.FeatureDetailsDirective, i4$2.MatTooltip, i12.MatBadge],\n    pipes: [i4$1.AsyncPipe, i8.TranslatePipe, i4.SanitizeHtmlPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  SearchResultsToolComponent = __decorate([ToolComponent({\n    name: 'searchResults',\n    title: 'igo.integration.tools.searchResults',\n    icon: 'magnify'\n  })], SearchResultsToolComponent);\n  return SearchResultsToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @ignore\r\n */\n\n\nlet IgoAppSearchResultsToolModule = /*#__PURE__*/(() => {\n  class IgoAppSearchResultsToolModule {}\n\n  IgoAppSearchResultsToolModule.ɵfac = function IgoAppSearchResultsToolModule_Factory(t) {\n    return new (t || IgoAppSearchResultsToolModule)();\n  };\n\n  IgoAppSearchResultsToolModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppSearchResultsToolModule\n  });\n  IgoAppSearchResultsToolModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatIconModule, MatBadgeModule, MatTooltipModule, MatButtonModule, IgoLanguageModule, IgoFeatureModule, IgoSearchModule, IgoFlexibleModule, IgoPanelModule, IgoFeatureDetailsModule, IgoCustomHtmlModule]]\n  });\n  return IgoAppSearchResultsToolModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppSearchResultsToolModule, {\n    declarations: [SearchResultsToolComponent],\n    imports: [CommonModule, MatIconModule, MatBadgeModule, MatTooltipModule, MatButtonModule, IgoLanguageModule, IgoFeatureModule, IgoSearchModule, IgoFlexibleModule, IgoPanelModule, IgoFeatureDetailsModule, IgoCustomHtmlModule],\n    exports: [SearchResultsToolComponent]\n  });\n})();\n\nlet IgoAppSearchModule = /*#__PURE__*/(() => {\n  class IgoAppSearchModule {}\n\n  IgoAppSearchModule.ɵfac = function IgoAppSearchModule_Factory(t) {\n    return new (t || IgoAppSearchModule)();\n  };\n\n  IgoAppSearchModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppSearchModule\n  });\n  IgoAppSearchModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[], IgoAppSearchBarModule, IgoAppSearchResultsToolModule]\n  });\n  return IgoAppSearchModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppSearchModule, {\n    exports: [IgoAppSearchBarModule, IgoAppSearchResultsToolModule]\n  });\n})();\n\nlet OgcFilterToolComponent = /*#__PURE__*/(() => {\n  let OgcFilterToolComponent = class OgcFilterToolComponent {\n    constructor() {}\n\n  };\n\n  OgcFilterToolComponent.ɵfac = function OgcFilterToolComponent_Factory(t) {\n    return new (t || OgcFilterToolComponent)();\n  };\n\n  OgcFilterToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OgcFilterToolComponent,\n    selectors: [[\"igo-ogc-filter-tool\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"igoOgcFilterableListBinding\", \"\"]],\n    template: function OgcFilterToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-ogc-filterable-list\", 0);\n      }\n    },\n    directives: [i1$1.OgcFilterableListComponent, i1$1.OgcFilterableListBindingDirective],\n    encapsulation: 2\n  });\n  OgcFilterToolComponent = __decorate([ToolComponent({\n    name: 'ogcFilter',\n    title: 'igo.integration.tools.ogcFilter',\n    icon: 'filter'\n  })], OgcFilterToolComponent);\n  return OgcFilterToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TimeFilterToolComponent = /*#__PURE__*/(() => {\n  let TimeFilterToolComponent = class TimeFilterToolComponent {\n    constructor() {}\n\n  };\n\n  TimeFilterToolComponent.ɵfac = function TimeFilterToolComponent_Factory(t) {\n    return new (t || TimeFilterToolComponent)();\n  };\n\n  TimeFilterToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimeFilterToolComponent,\n    selectors: [[\"igo-time-filter-tool\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"igoTimeFilterListBinding\", \"\"]],\n    template: function TimeFilterToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-time-filter-list\", 0);\n      }\n    },\n    directives: [i1$1.TimeFilterListComponent, i1$1.TimeFilterListBindingDirective],\n    encapsulation: 2\n  });\n  TimeFilterToolComponent = __decorate([ToolComponent({\n    name: 'timeFilter',\n    title: 'igo.integration.tools.timeFilter',\n    icon: 'history'\n  })], TimeFilterToolComponent);\n  return TimeFilterToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction SpatialFilterToolComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"igo-feature-details\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const feature_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"feature\", feature_r1);\n  }\n}\n/**\r\n * Tool to apply spatial filter\r\n */\n\n\nlet SpatialFilterToolComponent = /*#__PURE__*/(() => {\n  let SpatialFilterToolComponent = class SpatialFilterToolComponent {\n    constructor(matIconRegistry, spatialFilterService, dataSourceService, layerService, mapState, messageService, languageService, importExportState, toolState, workspaceState, cdRef) {\n      this.matIconRegistry = matIconRegistry;\n      this.spatialFilterService = spatialFilterService;\n      this.dataSourceService = dataSourceService;\n      this.layerService = layerService;\n      this.mapState = mapState;\n      this.messageService = messageService;\n      this.languageService = languageService;\n      this.importExportState = importExportState;\n      this.toolState = toolState;\n      this.workspaceState = workspaceState;\n      this.cdRef = cdRef;\n      this.itemType = SpatialFilterItemType.Address;\n      this.layers = [];\n      this.activeLayers = [];\n      this.buffer = 0;\n      this.iterator = 1;\n      this.selectedFeature$ = new BehaviorSubject(undefined);\n      this.format = new olFormatGeoJSON();\n      this.store = new EntityStore([]); // Store to print results at the end\n\n      this.spatialListStore = new EntityStore([]);\n      this.loading = false;\n      this.thematicLength = 0;\n      this.measureUnit = MeasureLengthUnit.Meters;\n      this.unsubscribe$ = new Subject();\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    ngOnInit() {\n      for (const layer of this.map.layers) {\n        if (layer.title && layer.title.includes(this.languageService.translate.instant('igo.geo.spatialFilter.spatialFilter'))) {\n          this.layers.push(layer);\n        }\n      }\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    }\n\n    getOutputType(event) {\n      this.type = event;\n      this.queryType = undefined;\n    }\n\n    getOutputQueryType(event) {\n      this.queryType = event;\n\n      if (this.queryType) {\n        this.loadFilterList();\n      }\n    }\n\n    activateExportTool() {\n      const ids = [];\n      const re = new RegExp('^Zone \\\\d+');\n\n      for (const layer of this.layers) {\n        if (!layer.title.match(re)) {\n          ids.push(layer.id);\n        }\n      }\n\n      this.importExportState.setMode(ImportExportMode.export);\n      this.importExportState.setsExportOptions({\n        layers: ids\n      });\n      this.toolState.toolbox.activateTool('importExport');\n    }\n\n    activateWorkspace(record) {\n      let layerToOpenWks;\n      this.workspaceState.store.entities$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n        if (!record && this.activeLayers.length && this.workspaceState.store.all().length > 1) {\n          if (this.itemType === SpatialFilterItemType.Thematics) {\n            for (const thematic of this.thematics) {\n              if (!thematic.zeroResults) {\n                layerToOpenWks = this.activeLayers.find(layer => layer.title.includes(thematic.name + ' ' + this.iterator.toString()));\n                break;\n              }\n            }\n          } else {\n            const title = 'Adresses ' + this.iterator.toString();\n            this.activeLayers.forEach(layer => {\n              if (layer.title.includes(title)) {\n                layerToOpenWks = layer;\n              }\n            });\n          }\n\n          if (layerToOpenWks) {\n            this.workspaceState.workspacePanelExpanded = true;\n            this.workspaceState.setActiveWorkspaceById(layerToOpenWks.id);\n          }\n        } else if (record && this.activeLayers.length && this.workspaceState.store.all().length > 1) {\n          this.selectWorkspaceEntity(record);\n          this.moveendKey = this.map.ol.on('moveend', () => {\n            this.selectWorkspaceEntity(record);\n          });\n        }\n      });\n    }\n\n    selectWorkspaceEntity(record) {\n      this.workspaceState.store.all().forEach(workspace => {\n        workspace.entityStore.state.updateAll({\n          selected: false\n        });\n\n        if (workspace.title.includes(record.added[0].meta.title)) {\n          this.workspaceState.setActiveWorkspaceById(workspace.id);\n          workspace.entityStore.state.updateMany(record.added, {\n            selected: true\n          });\n        }\n      });\n    }\n\n    loadFilterList() {\n      this.spatialFilterService.loadFilterList(this.queryType).pipe(takeUntil(this.unsubscribe$)).subscribe(features => {\n        features.sort((a, b) => {\n          if (a.properties.nom < b.properties.nom) {\n            return -1;\n          }\n\n          if (a.properties.nom > b.properties.nom) {\n            return 1;\n          }\n\n          return 0;\n        });\n        this.spatialListStore.clear();\n        this.spatialListStore.load(features);\n      });\n    }\n\n    getOutputToggleSearch() {\n      this.loadThematics();\n    }\n\n    getOutputClearSearch() {\n      this.zone = undefined;\n      this.queryType = undefined;\n    }\n\n    clearMap() {\n      this.map.removeLayers(this.layers);\n      this.layers = [];\n      this.activeLayers = [];\n      this.thematicLength = 0;\n      this.iterator = 1;\n\n      if (this.type === SpatialFilterType.Predefined) {\n        this.zone = undefined;\n        this.queryType = undefined;\n      }\n    }\n\n    loadThematics() {\n      this.loading = true;\n      let zeroResults = true;\n      let thematics;\n\n      if (this.buffer === 0 || this.type === SpatialFilterType.Point) {\n        this.tryAddFeaturesToMap([this.zone]);\n      }\n\n      if (this.itemType !== SpatialFilterItemType.Thematics) {\n        const theme = {\n          name: ''\n        };\n        thematics = [theme];\n      } else {\n        thematics = this.thematics;\n      }\n\n      if (this.measureUnit === MeasureLengthUnit.Kilometers && this.type !== SpatialFilterType.Point) {\n        this.buffer = this.buffer * 1000;\n      }\n\n      if (this.type === SpatialFilterType.Polygon) {\n        this.buffer = 0; // to avoid buffer enter a second time in terrAPI\n      }\n\n      const observables$ = [];\n      thematics.forEach(thematic => {\n        observables$.push(this.spatialFilterService.loadFilterItem(this.zone, this.itemType, this.queryType, thematic, this.buffer).pipe(tap(features => {\n          this.store.insertMany(features);\n          const featuresPoint = [];\n          const featuresLinePoly = [];\n          let idPoint;\n          let idLinePoly;\n          features.forEach(feature => {\n            if (feature.geometry.type === 'Point') {\n              feature.properties.longitude = feature.geometry.coordinates[0];\n              feature.properties.latitude = feature.geometry.coordinates[1];\n              featuresPoint.push(feature);\n              idPoint = feature.meta.id;\n            } else {\n              featuresLinePoly.push(feature);\n              idLinePoly = feature.meta.id;\n            }\n          });\n          this.tryAddPointToMap(featuresPoint, idPoint);\n          this.tryAddLayerToMap(featuresLinePoly, idLinePoly);\n\n          if (features.length) {\n            zeroResults = false;\n            this.thematicLength += 1;\n            thematic.zeroResults = false;\n            this.cdRef.detectChanges();\n          } else {\n            thematic.zeroResults = true;\n          }\n\n          if (features.length >= 10000) {\n            this.messageService.alert(this.languageService.translate.instant('igo.geo.spatialFilter.maxSizeAlert'), this.languageService.translate.instant('igo.geo.spatialFilter.warning'), {\n              timeOut: 10000\n            });\n          }\n        })));\n      });\n      forkJoin(observables$).pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n        this.loading = false;\n\n        if (zeroResults) {\n          this.messageService.alert(this.languageService.translate.instant('igo.geo.spatialFilter.zeroResults'), this.languageService.translate.instant('igo.geo.spatialFilter.warning'), {\n            timeOut: 10000\n          });\n        }\n      });\n    }\n\n    onZoneChange(feature, buffer) {\n      this.zone = feature;\n\n      if (feature) {\n        buffer ? this.tryAddFeaturesToMap([feature], true) : this.tryAddFeaturesToMap([feature]);\n        this.zoomToFeatureExtent(feature);\n      }\n    }\n    /**\r\n     * Try to add zone feature to the map overlay\r\n     */\n\n\n    tryAddFeaturesToMap(features, buffer) {\n      var _a, _b, _c, _d;\n\n      let i = 1;\n\n      for (const feature of features) {\n        if (this.type === SpatialFilterType.Predefined) {\n          for (const layer of this.layers) {\n            if (layer.options._internal && layer.options._internal.code === feature.properties.code && !buffer) {\n              if (!((_a = layer.title) === null || _a === void 0 ? void 0 : _a.startsWith('Zone'))) {\n                const index = this.layers.indexOf(layer);\n                this.layers.splice(index, 1);\n              }\n\n              return;\n            }\n\n            if ((_b = layer.title) === null || _b === void 0 ? void 0 : _b.startsWith('Zone')) {\n              this.activeLayers = [];\n              const index = this.layers.indexOf(layer);\n              this.layers.splice(index, 1);\n              this.map.removeLayer(layer);\n            }\n          }\n        } else {\n          if (buffer) {\n            for (const layer of this.activeLayers) {\n              if (this.activeLayers.length === 1 && ((_c = layer.title) === null || _c === void 0 ? void 0 : _c.startsWith('Zone'))) {\n                const index = this.layers.indexOf(layer);\n                this.layers.splice(index, 1);\n                this.map.removeLayer(layer);\n              }\n            }\n          }\n\n          this.activeLayers = [];\n        }\n\n        for (const layer of this.layers) {\n          if ((_d = layer.title) === null || _d === void 0 ? void 0 : _d.startsWith('Zone')) {\n            i++;\n          }\n        }\n\n        this.dataSourceService.createAsyncDataSource({\n          type: 'vector',\n          queryable: true\n        }).pipe(take(1)).subscribe(dataSource => {\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: 'Zone ' + i + ' - ' + this.languageService.translate.instant('igo.geo.spatialFilter.spatialFilter'),\n            workspace: {\n              enabled: true\n            },\n            _internal: {\n              code: this.type === SpatialFilterType.Predefined ? feature.properties.code : undefined\n            },\n            source: dataSource,\n            visible: true,\n            style: (_feature, resolution) => {\n              const coordinates = features[0].coordinates;\n              return new olstyle.Style({\n                image: new olstyle.Circle({\n                  radius: coordinates ? this.buffer / Math.cos(Math.PI / 180 * coordinates[1]) / resolution : undefined,\n                  fill: new olstyle.Fill({\n                    color: 'rgba(200, 200, 20, 0.2)'\n                  }),\n                  stroke: new olstyle.Stroke({\n                    width: 1,\n                    color: 'orange'\n                  })\n                }),\n                stroke: new olstyle.Stroke({\n                  width: 1,\n                  color: 'orange'\n                }),\n                fill: new olstyle.Fill({\n                  color: 'rgba(200, 200, 20, 0.2)'\n                })\n              });\n            }\n          });\n          const featuresOl = features.map(f => {\n            return featureToOl(f, this.map.projection);\n          });\n\n          if (this.type !== SpatialFilterType.Predefined) {\n            const type = this.type === SpatialFilterType.Point ? 'Cercle' : 'Polygone';\n            featuresOl[0].set('nom', 'Zone', true);\n            featuresOl[0].set('type', type, true);\n          }\n\n          const ol = dataSource.ol;\n          ol.addFeatures(featuresOl);\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.activeLayers.push(olLayer);\n          this.cdRef.detectChanges();\n        });\n      }\n    }\n    /**\r\n     * Try to add point features to the map\r\n     * Necessary to create clusters\r\n     */\n\n\n    tryAddPointToMap(features, id) {\n      var _a;\n\n      let i = 1;\n\n      if (features.length) {\n        if (this.map === undefined) {\n          return;\n        }\n\n        for (const layer of this.layers) {\n          if ((_a = layer.title) === null || _a === void 0 ? void 0 : _a.startsWith(features[0].meta.title)) {\n            i++;\n          }\n        }\n\n        this.dataSourceService.createAsyncDataSource({\n          type: 'cluster',\n          id,\n          queryable: true,\n          distance: 120,\n          meta: {\n            title: 'Cluster'\n          }\n        }).pipe(take(1)).subscribe(dataSource => {\n          const icon = features[0].meta.icon;\n          let style;\n\n          if (!icon) {\n            style = createOverlayMarkerStyle();\n          } else {\n            style = this.createSvgIcon(icon) || createOverlayMarkerStyle();\n          }\n\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant('igo.geo.spatialFilter.spatialFilter'),\n            source: dataSource,\n            visible: true,\n            style\n          });\n          const featuresOl = features.map(feature => {\n            return featureToOl(feature, this.map.projection);\n          });\n          const ol = dataSource.ol;\n          ol.getSource().addFeatures(featuresOl);\n\n          if (this.layers.find(layer => layer.id === olLayer.id)) {\n            this.map.removeLayer(this.layers.find(layer => layer.id === olLayer.id));\n            i = i - 1;\n            olLayer.title = features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant('igo.geo.spatialFilter.spatialFilter');\n            olLayer.options.title = olLayer.title;\n          }\n\n          this.iterator = i;\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.pushLayer(olLayer);\n          this.cdRef.detectChanges();\n        });\n      }\n    }\n\n    createSvgIcon(icon) {\n      let style;\n      this.matIconRegistry.getNamedSvgIcon(icon).subscribe(svgObj => {\n        const xmlSerializer = new XMLSerializer();\n        svgObj.setAttribute('width', '30');\n        svgObj.setAttribute('height', '30');\n        svgObj.setAttribute('fill', 'rgba(0, 128, 255)');\n        svgObj.setAttribute('stroke', 'white');\n        const svg = xmlSerializer.serializeToString(svgObj);\n        style = new olstyle.Style({\n          image: new olstyle.Icon({\n            src: 'data:image/svg+xml;utf8,' + svg\n          })\n        });\n      });\n      return style;\n    }\n    /**\r\n     * Try to add line or polygon features to the map\r\n     */\n\n\n    tryAddLayerToMap(features, id) {\n      var _a;\n\n      let i = 1;\n\n      if (features.length) {\n        if (this.map === undefined) {\n          return;\n        }\n\n        for (const layer of this.layers) {\n          if ((_a = layer.title) === null || _a === void 0 ? void 0 : _a.startsWith(features[0].meta.title)) {\n            i++;\n          }\n        }\n\n        this.dataSourceService.createAsyncDataSource({\n          type: 'vector',\n          id,\n          queryable: true\n        }).pipe(take(1)).subscribe(dataSource => {\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant('igo.geo.spatialFilter.spatialFilter'),\n            source: dataSource,\n            visible: true\n          });\n          const featuresOl = features.map(feature => {\n            return featureToOl(feature, this.map.projection);\n          });\n          const ol = dataSource.ol;\n          ol.addFeatures(featuresOl);\n\n          if (this.layers.find(layer => layer.id === olLayer.id)) {\n            this.map.removeLayer(this.layers.find(layer => layer.id === olLayer.id));\n            i = i - 1;\n            olLayer.title = features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant('igo.geo.spatialFilter.spatialFilter');\n            olLayer.options.title = olLayer.title;\n          }\n\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.pushLayer(olLayer);\n          this.cdRef.detectChanges();\n        });\n      }\n    }\n\n    zoomToFeatureExtent(feature) {\n      if (feature) {\n        const olFeature = this.format.readFeature(feature, {\n          dataProjection: feature.projection,\n          featureProjection: this.map.projection\n        });\n        moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\n      }\n    }\n\n    pushLayer(layer) {\n      for (const lay of this.activeLayers) {\n        if (lay.id === layer.id) {\n          return;\n        }\n      }\n\n      this.activeLayers.push(layer);\n    }\n\n  };\n\n  SpatialFilterToolComponent.ɵfac = function SpatialFilterToolComponent_Factory(t) {\n    return new (t || SpatialFilterToolComponent)(i0.ɵɵdirectiveInject(i6.MatIconRegistry), i0.ɵɵdirectiveInject(i1$1.SpatialFilterService), i0.ɵɵdirectiveInject(i1$1.DataSourceService), i0.ɵɵdirectiveInject(i1$1.LayerService), i0.ɵɵdirectiveInject(MapState), i0.ɵɵdirectiveInject(i2$1.MessageService), i0.ɵɵdirectiveInject(i2$1.LanguageService), i0.ɵɵdirectiveInject(ImportExportState), i0.ɵɵdirectiveInject(ToolState), i0.ɵɵdirectiveInject(WorkspaceState), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  SpatialFilterToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SpatialFilterToolComponent,\n    selectors: [[\"igo-spatial-filter-tool\"]],\n    inputs: {\n      type: \"type\",\n      itemType: \"itemType\",\n      freehandDrawIsActive: \"freehandDrawIsActive\"\n    },\n    decls: 6,\n    vars: 16,\n    consts: [[3, \"store\", \"selectedQueryType\", \"zone\", \"layers\", \"eventType\", \"eventQueryType\", \"zoneChange\", \"zoneWithBufferChange\", \"bufferChange\", \"measureUnitChange\"], [3, \"type\", \"queryType\", \"map\", \"zone\", \"loading\", \"store\", \"layers\", \"allLayers\", \"thematicLength\", \"radiusEvent\", \"bufferEvent\", \"measureUnitChange\", \"freehandControl\", \"drawZoneEvent\", \"zoneWithBufferChange\", \"itemTypeChange\", \"thematicChange\", \"toggleSearch\", \"clearButtonEvent\", \"clearSearchEvent\", \"export\", \"openWorkspace\", \"entityChange\"], [4, \"ngIf\"], [3, \"feature\"]],\n    template: function SpatialFilterToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"igo-panel\");\n        i0.ɵɵelementStart(1, \"igo-spatial-filter-type\", 0);\n        i0.ɵɵlistener(\"eventType\", function SpatialFilterToolComponent_Template_igo_spatial_filter_type_eventType_1_listener($event) {\n          return ctx.getOutputType($event);\n        })(\"eventQueryType\", function SpatialFilterToolComponent_Template_igo_spatial_filter_type_eventQueryType_1_listener($event) {\n          return ctx.getOutputQueryType($event);\n        })(\"zoneChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_type_zoneChange_1_listener($event) {\n          return ctx.onZoneChange($event);\n        })(\"zoneWithBufferChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_type_zoneWithBufferChange_1_listener($event) {\n          return ctx.onZoneChange($event, true);\n        })(\"bufferChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_type_bufferChange_1_listener($event) {\n          return ctx.buffer = $event;\n        })(\"measureUnitChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_type_measureUnitChange_1_listener($event) {\n          return ctx.measureUnit = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"igo-spatial-filter-item\", 1);\n        i0.ɵɵlistener(\"radiusEvent\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_radiusEvent_2_listener($event) {\n          return ctx.buffer = $event;\n        })(\"bufferEvent\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_bufferEvent_2_listener($event) {\n          return ctx.buffer = $event;\n        })(\"measureUnitChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_measureUnitChange_2_listener($event) {\n          return ctx.measureUnit = $event;\n        })(\"freehandControl\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_freehandControl_2_listener($event) {\n          return ctx.freehandDrawIsActive = $event;\n        })(\"drawZoneEvent\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_drawZoneEvent_2_listener($event) {\n          return ctx.zone = $event;\n        })(\"zoneWithBufferChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_zoneWithBufferChange_2_listener($event) {\n          return ctx.onZoneChange($event, true);\n        })(\"itemTypeChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_itemTypeChange_2_listener($event) {\n          return ctx.itemType = $event;\n        })(\"thematicChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_thematicChange_2_listener($event) {\n          return ctx.thematics = $event;\n        })(\"toggleSearch\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_toggleSearch_2_listener() {\n          return ctx.getOutputToggleSearch();\n        })(\"clearButtonEvent\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_clearButtonEvent_2_listener() {\n          return ctx.clearMap();\n        })(\"clearSearchEvent\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_clearSearchEvent_2_listener() {\n          return ctx.getOutputClearSearch();\n        })(\"export\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_export_2_listener() {\n          return ctx.activateExportTool();\n        })(\"openWorkspace\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_openWorkspace_2_listener() {\n          return ctx.activateWorkspace();\n        })(\"entityChange\", function SpatialFilterToolComponent_Template_igo_spatial_filter_item_entityChange_2_listener($event) {\n          return ctx.activateWorkspace($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"igo-panel\");\n        i0.ɵɵtemplate(4, SpatialFilterToolComponent_ng_container_4_Template, 2, 1, \"ng-container\", 2);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"store\", ctx.spatialListStore)(\"selectedQueryType\", ctx.queryType)(\"zone\", ctx.zone)(\"layers\", ctx.activeLayers);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"type\", ctx.type)(\"queryType\", ctx.queryType)(\"map\", ctx.map)(\"zone\", ctx.zone)(\"loading\", ctx.loading)(\"store\", ctx.store)(\"layers\", ctx.activeLayers)(\"allLayers\", ctx.layers)(\"thematicLength\", ctx.thematicLength);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 14, ctx.selectedFeature$));\n      }\n    },\n    directives: [i1$1.SpatialFilterTypeComponent, i1$1.SpatialFilterItemComponent, i4$1.NgIf],\n    pipes: [i4$1.AsyncPipe],\n    styles: [\"\"],\n    changeDetection: 0\n  });\n  SpatialFilterToolComponent = __decorate([ToolComponent({\n    name: 'spatialFilter',\n    title: 'igo.integration.tools.spatialFilter',\n    icon: 'selection-marker'\n  })\n  /**\r\n   * Spatial Filter Type\r\n   */\n  ], SpatialFilterToolComponent);\n  return SpatialFilterToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction toolSlideInOut$1(speed = '300ms', type = 'ease-in-out') {\n  return trigger('toolSlideInOut', [state('enter', style({\n    transform: 'translateX(100%)'\n  })), transition('void => enter', animate(speed + ' ' + type))]);\n}\n\nlet ActiveTimeFilterToolComponent = /*#__PURE__*/(() => {\n  let ActiveTimeFilterToolComponent = class ActiveTimeFilterToolComponent {\n    constructor(mapState) {\n      this.mapState = mapState;\n      this.animate = 'enter';\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get layer() {\n      for (const lay of this.map.layers) {\n        if (lay.options.active === true) {\n          return lay;\n        }\n      }\n\n      return;\n    }\n\n  };\n\n  ActiveTimeFilterToolComponent.ɵfac = function ActiveTimeFilterToolComponent_Factory(t) {\n    return new (t || ActiveTimeFilterToolComponent)(i0.ɵɵdirectiveInject(MapState));\n  };\n\n  ActiveTimeFilterToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActiveTimeFilterToolComponent,\n    selectors: [[\"igo-active-time-filter-tool\"]],\n    decls: 1,\n    vars: 4,\n    consts: [[3, \"map\", \"layer\", \"header\"]],\n    template: function ActiveTimeFilterToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-time-filter-item\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"map\", ctx.map)(\"layer\", ctx.layer)(\"header\", false)(\"@toolSlideInOut\", ctx.animate);\n      }\n    },\n    directives: [i1$1.TimeFilterItemComponent],\n    encapsulation: 2,\n    data: {\n      animation: [toolSlideInOut$1()]\n    }\n  });\n  ActiveTimeFilterToolComponent = __decorate([ToolComponent({\n    name: 'activeTimeFilter',\n    title: 'igo.integration.tools.timeFilter',\n    icon: 'history',\n    parent: 'mapTools'\n  })], ActiveTimeFilterToolComponent);\n  return ActiveTimeFilterToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction toolSlideInOut(speed = '300ms', type = 'ease-in-out') {\n  return trigger('toolSlideInOut', [state('enter', style({\n    transform: 'translateX(100%)'\n  })), transition('void => enter', animate(speed + ' ' + type))]);\n}\n\nlet ActiveOgcFilterToolComponent = /*#__PURE__*/(() => {\n  let ActiveOgcFilterToolComponent = class ActiveOgcFilterToolComponent {\n    constructor(mapState) {\n      this.mapState = mapState;\n      this.animate = 'enter';\n    }\n\n    get map() {\n      return this.mapState.map;\n    }\n\n    get layer() {\n      for (const lay of this.map.layers) {\n        if (lay.options.active === true) {\n          return lay;\n        }\n      }\n\n      return;\n    }\n\n  };\n\n  ActiveOgcFilterToolComponent.ɵfac = function ActiveOgcFilterToolComponent_Factory(t) {\n    return new (t || ActiveOgcFilterToolComponent)(i0.ɵɵdirectiveInject(MapState));\n  };\n\n  ActiveOgcFilterToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActiveOgcFilterToolComponent,\n    selectors: [[\"igo-active-ogc-filter-tool\"]],\n    decls: 1,\n    vars: 4,\n    consts: [[3, \"map\", \"layer\", \"header\"]],\n    template: function ActiveOgcFilterToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"igo-ogc-filterable-item\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"map\", ctx.map)(\"layer\", ctx.layer)(\"header\", false)(\"@toolSlideInOut\", ctx.animate);\n      }\n    },\n    directives: [i1$1.OgcFilterableItemComponent],\n    encapsulation: 2,\n    data: {\n      animation: [toolSlideInOut()]\n    }\n  });\n  ActiveOgcFilterToolComponent = __decorate([ToolComponent({\n    name: 'activeOgcFilter',\n    title: 'igo.integration.tools.ogcFilter',\n    icon: 'filter',\n    parent: 'mapTools'\n  })], ActiveOgcFilterToolComponent);\n  return ActiveOgcFilterToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppFilterModule = /*#__PURE__*/(() => {\n  class IgoAppFilterModule {\n    static forRoot() {\n      return {\n        ngModule: IgoAppFilterModule,\n        providers: []\n      };\n    }\n\n  }\n\n  IgoAppFilterModule.ɵfac = function IgoAppFilterModule_Factory(t) {\n    return new (t || IgoAppFilterModule)();\n  };\n\n  IgoAppFilterModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppFilterModule\n  });\n  IgoAppFilterModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoFilterModule, IgoQueryModule, CommonModule]]\n  });\n  return IgoAppFilterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppFilterModule, {\n    declarations: [OgcFilterToolComponent, ActiveOgcFilterToolComponent, TimeFilterToolComponent, ActiveTimeFilterToolComponent, SpatialFilterToolComponent],\n    imports: [IgoFilterModule, IgoQueryModule, CommonModule],\n    exports: [OgcFilterToolComponent, ActiveOgcFilterToolComponent, TimeFilterToolComponent, ActiveTimeFilterToolComponent, SpatialFilterToolComponent]\n  });\n})();\n\nfunction AboutToolComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AboutToolComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.openGuide();\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"mat-icon\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loading)(\"matTooltip\", i0.ɵɵpipeBind1(1, 3, \"igo.integration.aboutTool.trainingGuideTooltip\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 5, \"igo.integration.aboutTool.trainingGuide\"));\n  }\n}\n\nfunction AboutToolComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"mat-icon\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(5);\n\n    i0.ɵɵproperty(\"disabled\", ctx_r1.loading)(\"matTooltip\", i0.ɵɵpipeBind1(1, 4, \"igo.integration.aboutTool.trainingGuideTooltip\"))(\"matMenuTriggerFor\", _r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 6, \"igo.integration.aboutTool.trainingGuide\"));\n  }\n}\n\nfunction AboutToolComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AboutToolComponent_button_6_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const guide_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.openGuide(guide_r7);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const guide_r7 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.formatFileName(guide_r7));\n  }\n}\n\nfunction AboutToolComponent_igo_custom_html_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-custom-html\", 6);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"html\", i0.ɵɵpipeBind1(1, 1, ctx_r4.headerHtml));\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    version: a0\n  };\n};\n\nlet AboutToolComponent = /*#__PURE__*/(() => {\n  let AboutToolComponent = class AboutToolComponent {\n    constructor(configService, auth, http, cdRef, languageService) {\n      this.configService = configService;\n      this.auth = auth;\n      this.http = http;\n      this.cdRef = cdRef;\n      this.languageService = languageService;\n      this._discoverTitleInLocale = 'IGO';\n      this.discoverTitleInLocale$ = of(this._discoverTitleInLocale);\n      this._html = 'igo.integration.aboutTool.html';\n      this._headerHtml = this.languageService.translate.instant('igo.integration.aboutTool.headerHtml');\n      this.loading = false;\n      this.version = configService.getConfig('version');\n      this.baseUrlProfil = configService.getConfig('storage.url');\n      this.baseUrlGuide = configService.getConfig('depot.url') + configService.getConfig('depot.guideUrl');\n    }\n\n    get headerHtml() {\n      return this._headerHtml;\n    }\n\n    set headerHtml(value) {\n      this._headerHtml = Array.isArray(value) ? value.join('\\n') : value;\n    }\n\n    get html() {\n      return this._html;\n    }\n\n    set html(value) {\n      this._html = Array.isArray(value) ? value.join('\\n') : value;\n    }\n\n    get discoverTitleInLocale() {\n      return this._discoverTitleInLocale;\n    }\n\n    set discoverTitleInLocale(value) {\n      this._discoverTitleInLocale = value;\n      this.discoverTitleInLocale$ = of(value);\n    }\n\n    ngOnInit() {\n      if (this.auth.authenticated && this.configService.getConfig('context.url')) {\n        this.http.get(this.baseUrlProfil).subscribe(profil => {\n          const recast = profil;\n          this.trainingGuideURLs = recast.guides;\n          this.cdRef.detectChanges();\n        });\n      } else if (this.auth.authenticated && !this.configService.getConfig('context.url') && this.configService.getConfig('depot.trainingGuides')) {\n        this.trainingGuideURLs = this.configService.getConfig('depot.trainingGuides');\n      }\n    }\n\n    openGuide(guide) {\n      this.loading = true;\n      const url = guide ? this.baseUrlGuide + guide + '?' : this.baseUrlGuide + this.trainingGuideURLs[0] + '?';\n      this.http.get(url, {\n        responseType: 'blob'\n      }).subscribe(() => {\n        this.loading = false;\n        window.open(url, '_blank');\n        this.cdRef.detectChanges();\n      });\n    }\n\n    formatFileName(name) {\n      name = name.split('_').join(' ');\n      const index = name.indexOf('.');\n      name = name.slice(0, index);\n      return name;\n    }\n\n  };\n\n  AboutToolComponent.ɵfac = function AboutToolComponent_Factory(t) {\n    return new (t || AboutToolComponent)(i0.ɵɵdirectiveInject(i2$1.ConfigService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3$2.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2$1.LanguageService));\n  };\n\n  AboutToolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AboutToolComponent,\n    selectors: [[\"igo-about-tool\"]],\n    inputs: {\n      headerHtml: \"headerHtml\",\n      html: \"html\",\n      discoverTitleInLocale: \"discoverTitleInLocale\",\n      trainingGuideURLs: \"trainingGuideURLs\"\n    },\n    decls: 10,\n    vars: 11,\n    consts: [[\"mat-raised-button\", \"\", \"tourToStart\", \"global\", \"menuIsOpen\", \"true\", \"styleButton\", \"raised\", 3, \"discoverTitleInLocale$\"], [\"class\", \"training-guide-button\", \"mat-raised-button\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 3, \"disabled\", \"matTooltip\", \"click\", 4, \"ngIf\"], [\"class\", \"training-guide-button\", \"mat-raised-button\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 3, \"disabled\", \"matTooltip\", \"matMenuTriggerFor\", 4, \"ngIf\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"mat-typography\", 3, \"html\", 4, \"ngIf\"], [1, \"mat-typography\", 3, \"html\"], [\"mat-raised-button\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 1, \"training-guide-button\", 3, \"disabled\", \"matTooltip\", \"click\"], [\"svgIcon\", \"file-document\"], [\"mat-raised-button\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 1, \"training-guide-button\", 3, \"disabled\", \"matTooltip\", \"matMenuTriggerFor\"], [\"mat-menu-item\", \"\", 3, \"click\"]],\n    template: function AboutToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"p\");\n        i0.ɵɵelement(1, \"igo-interactive-tour\", 0);\n        i0.ɵɵtemplate(2, AboutToolComponent_button_2_Template, 6, 7, \"button\", 1);\n        i0.ɵɵtemplate(3, AboutToolComponent_button_3_Template, 6, 8, \"button\", 2);\n        i0.ɵɵelementStart(4, \"mat-menu\", null, 3);\n        i0.ɵɵtemplate(6, AboutToolComponent_button_6_Template, 2, 1, \"button\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, AboutToolComponent_igo_custom_html_7_Template, 2, 3, \"igo-custom-html\", 5);\n        i0.ɵɵelement(8, \"igo-custom-html\", 6);\n        i0.ɵɵpipe(9, \"translate\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"discoverTitleInLocale$\", ctx.discoverTitleInLocale$);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.auth.authenticated && ctx.trainingGuideURLs && ctx.trainingGuideURLs.length === 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.auth.authenticated && ctx.trainingGuideURLs && ctx.trainingGuideURLs.length > 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.trainingGuideURLs);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.headerHtml !== \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"html\", i0.ɵɵpipeBind2(9, 6, ctx.html, i0.ɵɵpureFunction1(9, _c0, ctx.version)));\n      }\n    },\n    directives: [i4.InteractiveTourComponent, i4$1.NgIf, i6$2.MatMenu, i4$1.NgForOf, i4.CustomHtmlComponent, i3.MatButton, i4$2.MatTooltip, i6.MatIcon, i6$2.MatMenuTrigger, i6$2.MatMenuItem],\n    pipes: [i8.TranslatePipe],\n    styles: [\"igo-interactive-tour[_ngcontent-%COMP%]{margin-left:20px}.training-guide-button[_ngcontent-%COMP%]{margin-left:5px;background-color:#1976d2;color:#fff;padding:0 12px}\"]\n  });\n  AboutToolComponent = __decorate([ToolComponent({\n    name: 'about',\n    title: 'igo.integration.tools.about',\n    icon: 'help-circle'\n  })], AboutToolComponent);\n  return AboutToolComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoAppAboutModule = /*#__PURE__*/(() => {\n  class IgoAppAboutModule {\n    static forRoot() {\n      return {\n        ngModule: IgoAppAboutModule,\n        providers: []\n      };\n    }\n\n  }\n\n  IgoAppAboutModule.ɵfac = function IgoAppAboutModule_Factory(t) {\n    return new (t || IgoAppAboutModule)();\n  };\n\n  IgoAppAboutModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppAboutModule\n  });\n  IgoAppAboutModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[IgoLanguageModule, IgoCustomHtmlModule, MatButtonModule, MatTooltipModule, MatIconModule, MatMenuModule, IgoInteractiveTourModule, CommonModule]]\n  });\n  return IgoAppAboutModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoAppAboutModule, {\n    declarations: [AboutToolComponent],\n    imports: [IgoLanguageModule, IgoCustomHtmlModule, MatButtonModule, MatTooltipModule, MatIconModule, MatMenuModule, IgoInteractiveTourModule, CommonModule],\n    exports: [AboutToolComponent]\n  });\n})();\n\nlet IgoAppStorageModule = /*#__PURE__*/(() => {\n  class IgoAppStorageModule {}\n\n  IgoAppStorageModule.ɵfac = function IgoAppStorageModule_Factory(t) {\n    return new (t || IgoAppStorageModule)();\n  };\n\n  IgoAppStorageModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppStorageModule\n  });\n  IgoAppStorageModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return IgoAppStorageModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoIntegrationModule = /*#__PURE__*/(() => {\n  class IgoIntegrationModule {}\n\n  IgoIntegrationModule.ɵfac = function IgoIntegrationModule_Factory(t) {\n    return new (t || IgoIntegrationModule)();\n  };\n\n  IgoIntegrationModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoIntegrationModule\n  });\n  IgoIntegrationModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[], IgoAppStorageModule, IgoAppAnalyticsModule, IgoAppContextModule, IgoAppCatalogModule, IgoAppDirectionsModule, IgoAppDrawModule, IgoAppWorkspaceModule, IgoAppImportExportModule, IgoAppMapModule, IgoAppMeasureModule, IgoAppPrintModule, IgoAppSearchModule, IgoAppFilterModule, IgoAppAboutModule]\n  });\n  return IgoIntegrationModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoIntegrationModule, {\n    exports: [IgoAppStorageModule, IgoAppAnalyticsModule, IgoAppContextModule, IgoAppCatalogModule, IgoAppDirectionsModule, IgoAppDrawModule, IgoAppWorkspaceModule, IgoAppImportExportModule, IgoAppMapModule, IgoAppMeasureModule, IgoAppPrintModule, IgoAppSearchModule, IgoAppFilterModule, IgoAppAboutModule]\n  });\n})();\n\nlet IgoAppToolModule = /*#__PURE__*/(() => {\n  class IgoAppToolModule {}\n\n  IgoAppToolModule.ɵfac = function IgoAppToolModule_Factory(t) {\n    return new (t || IgoAppToolModule)();\n  };\n\n  IgoAppToolModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoAppToolModule\n  });\n  IgoAppToolModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return IgoAppToolModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Service that holds the state of the search module\r\n */\n\n\nlet AnalyticsListenerService = /*#__PURE__*/(() => {\n  class AnalyticsListenerService {\n    /**\r\n     * Toolbox that holds main tools\r\n     */\n    constructor(analyticsService, authService, contextState, searchState, toolState) {\n      this.analyticsService = analyticsService;\n      this.authService = authService;\n      this.contextState = contextState;\n      this.searchState = searchState;\n      this.toolState = toolState;\n    }\n\n    listen() {\n      this.listenUser();\n      this.listenContext();\n      this.listenTool();\n      this.listenSearch();\n    }\n\n    listenUser() {\n      this.authService.authenticate$.subscribe(() => {\n        const tokenDecoded = this.authService.decodeToken() || {};\n\n        if (tokenDecoded.user) {\n          this.authService.getProfils().subscribe(profils => this.analyticsService.setUser(tokenDecoded.user, profils.profils));\n        } else {\n          this.analyticsService.setUser();\n        }\n      });\n    }\n\n    listenContext() {\n      this.contextState.context$.subscribe(context => {\n        if (context) {\n          this.analyticsService.trackEvent('context', 'activateContext', context.id || context.uri);\n        }\n      });\n    }\n\n    listenTool() {\n      this.toolState.toolbox.activeTool$.pipe(skip(1)).subscribe(tool => {\n        if (tool) {\n          this.analyticsService.trackEvent('tool', 'activateTool', tool.name);\n        }\n      });\n    }\n\n    listenSearch() {\n      this.searchState.searchTerm$.pipe(skip(1)).subscribe(searchTerm => {\n        if (searchTerm !== undefined && searchTerm !== null) {\n          this.analyticsService.trackSearch(searchTerm, this.searchState.store.count);\n        }\n      });\n    }\n\n  }\n\n  AnalyticsListenerService.ɵfac = function AnalyticsListenerService_Factory(t) {\n    return new (t || AnalyticsListenerService)(i0.ɵɵinject(i2$1.AnalyticsService), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(ContextState), i0.ɵɵinject(SearchState), i0.ɵɵinject(ToolState));\n  };\n\n  AnalyticsListenerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnalyticsListenerService,\n    factory: AnalyticsListenerService.ɵfac,\n    providedIn: 'root'\n  });\n  return AnalyticsListenerService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Service that holds the state of the query module\r\n */\n\n\nlet QueryState = /*#__PURE__*/(() => {\n  class QueryState {\n    constructor(configService) {\n      this.configService = configService;\n      /**\r\n       * Store that holds the query results\r\n       */\n\n      this.store = new EntityStore([]);\n      this.queryOverlayStyle = {};\n      this.queryOverlayStyleSelection = {};\n      this.queryOverlayStyleFocus = {};\n      const queryOverlayStyle = this.configService.getConfig('queryOverlayStyle');\n\n      if (queryOverlayStyle) {\n        this.queryOverlayStyle = queryOverlayStyle.base;\n        this.queryOverlayStyleSelection = queryOverlayStyle.selection;\n        this.queryOverlayStyleFocus = queryOverlayStyle.focus;\n      }\n    }\n\n  }\n\n  QueryState.ɵfac = function QueryState_Factory(t) {\n    return new (t || QueryState)(i0.ɵɵinject(i2$1.ConfigService));\n  };\n\n  QueryState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QueryState,\n    factory: QueryState.ɵfac,\n    providedIn: 'root'\n  });\n  return QueryState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of tools\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AboutToolComponent, ActiveOgcFilterToolComponent, ActiveTimeFilterToolComponent, AdvancedMapToolComponent, AnalyticsListenerService, CatalogBrowserToolComponent, CatalogLibraryToolComponent, CatalogState, ContextEditorToolComponent, ContextManagerToolComponent, ContextPermissionManagerToolComponent, ContextShareToolComponent, ContextState, DirectionState, DirectionsToolComponent, DrawState, DrawingToolComponent, FeatureActionsService, IgoAppAboutModule, IgoAppAnalyticsModule, IgoAppCatalogBrowserToolModule, IgoAppCatalogLibraryToolModule, IgoAppCatalogModule, IgoAppContextModule, IgoAppDirectionsModule, IgoAppDrawModule, IgoAppFilterModule, IgoAppImportExportModule, IgoAppMapModule, IgoAppMeasureModule, IgoAppMeasurerToolModule, IgoAppPrintModule, IgoAppSearchBarModule, IgoAppSearchModule, IgoAppSearchResultsToolModule, IgoAppStorageModule, IgoAppToolModule, IgoAppWorkspaceModule, IgoIntegrationModule, ImportExportMode, ImportExportState, ImportExportToolComponent, ImportExportType, MapDetailsToolComponent, MapLegendToolComponent, MapState, MapToolComponent, MapToolsComponent, MeasureState, MeasurerToolComponent, OgcFilterToolComponent, PrintToolComponent, QueryState, SearchBarBindingDirective, SearchResultsToolComponent, SearchState, SpatialFilterToolComponent, StorageState, TimeFilterToolComponent, ToolState, WfsActionsService, WorkspaceButtonComponent, WorkspaceState };","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\analytics\\analytics.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\import-export\\import-export.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\tool\\tool.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context-editor-tool\\context-editor-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context-editor-tool\\context-editor-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context-manager-tool\\context-manager-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context-manager-tool\\context-manager-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context-permission-manager-tool\\context-permission-manager-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context-permission-manager-tool\\context-permission-manager-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\layer-list-tool.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context-share-tool\\context-share-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context-share-tool\\context-share-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\catalog\\catalog.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\catalog\\catalog-library-tool\\catalog-library-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\catalog\\catalog-library-tool\\catalog-library-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\catalog\\catalog-library-tool\\catalog-library-tool.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\catalog\\catalog-browser-tool\\catalog-browser-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\catalog\\catalog-browser-tool\\catalog-browser-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\catalog\\catalog-browser-tool\\catalog-browser-tool.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\catalog\\catalog.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\directions\\directions.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\context\\context.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\directions\\directions-tool\\directions-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\directions\\directions-tool\\directions-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\directions\\directions.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\draw\\draw.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\draw\\drawing-tool\\drawing-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\draw\\drawing-tool\\drawing-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\draw\\draw.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\workspace\\shared\\workspace.utils.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\storage\\storage.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\workspace\\shared\\feature-actions.service.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\workspace\\shared\\wfs-actions.service.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\workspace\\shared\\edition-actions.service.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\workspace\\workspace.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\workspace\\workspace-button\\workspace-button.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\workspace\\workspace-button\\workspace-button.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\workspace\\workspace.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\import-export\\import-export-tool\\import-export-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\import-export\\import-export-tool\\import-export-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\import-export\\import-export.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map-details-tool\\map-details-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map-details-tool\\map-details-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map-tool\\map-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map-tool\\map-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map-tools\\map-tools.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map-tools\\map-tools.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map-legend\\map-legend-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map-legend\\map-legend-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\advanced-map-tool\\advanced-swipe\\advanced-swipe.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\advanced-map-tool\\advanced-swipe\\advanced-swipe.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\advanced-map-tool\\advanced-coordinates\\advanced-coordinates.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\advanced-map-tool\\advanced-coordinates\\advanced-coordinates.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\advanced-map-tool\\advanced-map-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\advanced-map-tool\\advanced-map-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\map\\map.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\measure\\measure.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\measure\\measurer-tool\\measurer-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\measure\\measurer-tool\\measurer-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\measure\\measurer-tool\\measurer-tool.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\measure\\measure.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\print\\print-tool\\print-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\print\\print-tool\\print-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\print\\print.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\search\\search.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\search\\search-bar\\search-bar-binding.directive.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\search\\search-bar\\search-bar.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\search\\search-results-tool\\search-results-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\search\\search-results-tool\\search-results-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\search\\search-results-tool\\search-results-tool.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\search\\search.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\ogc-filter-tool\\ogc-filter-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\ogc-filter-tool\\ogc-filter-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\time-filter-tool\\time-filter-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\time-filter-tool\\time-filter-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\spatial-filter-tool\\spatial-filter-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\spatial-filter-tool\\spatial-filter-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\active-time-filter-tool\\active-time-filter-tool.animation.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\active-time-filter-tool\\active-time-filter-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\active-time-filter-tool\\active-time-filter-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\active-ogc-filter-tool\\active-ogc-filter-tool.animation.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\active-ogc-filter-tool\\active-ogc-filter-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\active-ogc-filter-tool\\active-ogc-filter-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\filter\\filter.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\about\\about-tool\\about-tool.component.html","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\about\\about-tool\\about-tool.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\about\\about.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\storage\\storage.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\integration.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\tool\\tool.module.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\analytics\\analytics-listener.service.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\lib\\search\\query.state.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\integration\\src\\public_api.ts"],"names":["toolSlideInOut"],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoAppAnalyticsModule {}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { ExportOptions } from '@igo2/geo';\n\nexport enum ImportExportType {\n  layer = 'layer',\n  context = 'context'\n}\n\nexport enum ImportExportMode {\n  import = 'import',\n  export = 'export'\n}\n\n/**\n * Service that holds the state of the importExport module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImportExportState {\n\n  readonly importExportType$: BehaviorSubject<ImportExportType> = new BehaviorSubject(ImportExportType.layer);\n  readonly selectedMode$: BehaviorSubject<ImportExportMode> = new BehaviorSubject(ImportExportMode.import);\n  readonly exportOptions$: BehaviorSubject<ExportOptions> = new BehaviorSubject(undefined);\n\n  setImportExportType(type: ImportExportType) {\n    this.importExportType$.next(type);\n  }\n\n  setMode(mode: ImportExportMode) {\n    this.selectedMode$.next(mode);\n  }\n\n  setsExportOptions(exportOptions: ExportOptions) {\n      this.exportOptions$.next(exportOptions);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Toolbox, ToolService } from '@igo2/common';\n\nimport { ExportOptions } from '@igo2/geo';\nimport { BehaviorSubject } from 'rxjs';\nimport { ImportExportMode, ImportExportState } from '../import-export/import-export.state';\n\n/**\n * Service that holds the state of the search module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolState {\n  get toolbox(): Toolbox {\n    return this.toolService.toolbox;\n  }\n\n  public openSidenav$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n\n  constructor(\n    private toolService: ToolService,\n    private importExportState: ImportExportState\n    ) {}\n\n    toolToActivateFromOptions(toolToActivate: { tool: string; options: {[key: string]: any} }) {\n    if (!toolToActivate) { return; }\n    if (toolToActivate.tool === 'importExport') {\n      let exportOptions: ExportOptions = this.importExportState.exportOptions$.value;\n      if (!exportOptions) {\n        exportOptions = {\n          layers: toolToActivate.options.layers,\n          featureInMapExtent: toolToActivate.options.featureInMapExtent\n        };\n      } else {\n        exportOptions.layers = toolToActivate.options.layers;\n        exportOptions.featureInMapExtent = toolToActivate.options.featureInMapExtent;\n      }\n      this.importExportState.setsExportOptions(exportOptions);\n      this.importExportState.setMode(ImportExportMode.export);\n    }\n\n    if (this.toolbox.getTool(toolToActivate.tool)) {\n      this.toolbox.activateTool(toolToActivate.tool);\n      this.openSidenav$.next(true);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { ToolState } from '../../tool/tool.state';\n\n@ToolComponent({\n  name: 'contextEditor',\n  title: 'igo.integration.tools.contexts',\n  icon: 'star',\n  parent: 'contextManager'\n})\n@Component({\n  selector: 'igo-context-editor-tool',\n  templateUrl: './context-editor-tool.component.html'\n})\nexport class ContextEditorToolComponent {\n\n  constructor(private toolState: ToolState) {}\n\n  submitSuccessed() {\n    this.toolState.toolbox.activatePreviousTool();\n  }\n}\n","<igo-context-edit\n  igoContextEditBinding\n  (submitSuccessed)=\"submitSuccessed()\"\n></igo-context-edit>\n","import { Injectable } from '@angular/core';\n\nimport { IgoMap, MapService, ProjectionService } from '@igo2/geo';\n// import { BehaviorSubject } from 'rxjs';\n\n/**\n * Service that holds the state of the map module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapState {\n\n  // public mapCenter$ = new BehaviorSubject<boolean>(false);\n  get showAllLegendsValue(): boolean {\n    return this._legendToolShowAll;\n  }\n\n  set showAllLegendsValue(value) {\n    this._legendToolShowAll = value;\n  }\n  private _legendToolShowAll: boolean;\n\n  /**\n   * Active map\n   */\n  get map(): IgoMap { return this._map; }\n  private _map: IgoMap;\n\n  constructor(\n    private mapService: MapService,\n    private projectionService: ProjectionService // Don't remove this or it'll never be injected\n  ) {\n    this._map = new IgoMap({\n      controls: {\n        scaleLine: true,\n        attribution: {\n          collapsed: true\n        }\n      }\n    });\n\n    this.mapService.setMap(this.map);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\n\nimport { ToolState } from '../../tool/tool.state';\nimport { MapState } from '../../map/map.state';\nimport { IgoMap } from '@igo2/geo';\n\n@ToolComponent({\n  name: 'contextManager',\n  title: 'igo.integration.tools.contexts',\n  icon: 'star'\n})\n@Component({\n  selector: 'igo-context-manager-tool',\n  templateUrl: './context-manager-tool.component.html'\n})\nexport class ContextManagerToolComponent {\n\n  @Input() toolToOpenOnContextChange: string = 'mapTools';\n\n  get map(): IgoMap { return this.mapState.map; }\n\n  constructor(private toolState: ToolState, private mapState: MapState) {}\n\n  editContext() {\n    this.toolState.toolbox.activateTool('contextEditor');\n  }\n\n  managePermissions() {\n    this.toolState.toolbox.activateTool('contextPermissionManager');\n  }\n}\n","<igo-context-list\n  igoContextListBinding\n  [map]=\"map\"\n  (edit)=\"editContext()\"\n  (managePermissions)=\"managePermissions()\">\n</igo-context-list>\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\n\n@ToolComponent({\n  name: 'contextPermissionManager',\n  title: 'igo.integration.tools.contexts',\n  icon: 'star',\n  parent: 'contextManager'\n})\n@Component({\n  selector: 'igo-context-permission-manager-tool',\n  templateUrl: './context-permission-manager-tool.component.html'\n})\nexport class ContextPermissionManagerToolComponent {}\n","<igo-context-permissions igoContextPermissionsBinding></igo-context-permissions>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LayerListControlsOptions } from '@igo2/geo';\n\n/**\n * Service that holds the state of layer list tool values\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class LayerListToolState {\n\n    readonly keyword$: BehaviorSubject<string> = new BehaviorSubject('');\n    readonly sortAlpha$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n    readonly onlyVisible$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n    readonly selectedTab$: BehaviorSubject<number> = new BehaviorSubject(undefined);\n\n    setKeyword(keyword: string) {\n        this.keyword$.next(keyword);\n      }\n\n    setSortAlpha(sort: boolean) {\n        this.sortAlpha$.next(sort);\n      }\n\n    setOnlyVisible(onlyVisible: boolean) {\n        this.onlyVisible$.next(onlyVisible);\n      }\n\n    setSelectedTab(tab: number) {\n      this.selectedTab$.next(tab);\n    }\n\n    getLayerListControls(): LayerListControlsOptions {\n      return {\n        keyword: this.keyword$.value,\n        onlyVisible: this.onlyVisible$.value,\n        sortAlpha: this.sortAlpha$.value\n      };\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { IgoMap, LayerListControlsOptions } from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\nimport { LayerListToolState } from '../../map/layer-list-tool.state';\n\n@ToolComponent({\n  name: 'shareMap',\n  title: 'igo.integration.tools.shareMap',\n  icon: 'share-variant'\n})\n@Component({\n  selector: 'igo-context-share-tool',\n  templateUrl: './context-share-tool.component.html'\n})\nexport class ContextShareToolComponent {\n\n  get map(): IgoMap { return this.mapState.map; }\n\n  get layerListControls(): LayerListControlsOptions { return this.layerListToolState.getLayerListControls(); }\n\n  constructor(\n    private mapState: MapState,\n    private layerListToolState: LayerListToolState\n  ) {}\n}\n","<igo-share-map\n  [map]=\"map\"></igo-share-map>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { IgoContextModule } from '@igo2/context';\n\nimport { ContextEditorToolComponent } from './context-editor-tool/context-editor-tool.component';\nimport { ContextManagerToolComponent } from './context-manager-tool/context-manager-tool.component';\nimport { ContextPermissionManagerToolComponent } from './context-permission-manager-tool/context-permission-manager-tool.component';\nimport { ContextShareToolComponent } from './context-share-tool/context-share-tool.component';\n\n@NgModule({\n  imports: [IgoContextModule],\n  declarations: [\n    ContextEditorToolComponent,\n    ContextManagerToolComponent,\n    ContextPermissionManagerToolComponent,\n    ContextShareToolComponent\n  ],\n  exports: [\n    ContextEditorToolComponent,\n    ContextManagerToolComponent,\n    ContextPermissionManagerToolComponent,\n    ContextShareToolComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppContextModule {}\n","import { Injectable } from '@angular/core';\n\nimport { AuthService } from '@igo2/auth';\nimport { EntityStore } from '@igo2/common';\nimport { Catalog, CatalogItem } from '@igo2/geo';\n\n/**\n * Service that holds the state of the catalog module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogState {\n\n  /**\n   * Store that contains all the catalogs\n   */\n  get catalogStore(): EntityStore<Catalog> { return this._catalogStore; }\n  private _catalogStore: EntityStore<Catalog>;\n\n  /**\n   * Catalog -> Catalog items store mapping\n   */\n  private catalogItemsStores = new Map<string, EntityStore<CatalogItem>>();\n\n  constructor(authService: AuthService) {\n    this._catalogStore = new EntityStore([]);\n\n    authService.authenticate$.subscribe(() => {\n      this.clearCatalogItemsStores();\n    });\n  }\n\n  /**\n   * Get a catalog's items store\n   * @param catalog Catalog\n   * @returns Store that contains the catalog items\n   */\n  getCatalogItemsStore(catalog: Catalog): EntityStore<CatalogItem> {\n    return this.catalogItemsStores.get(catalog.id as string);\n  }\n\n  /**\n   * Bind a catalog items store to a catalog\n   * @param catalog Catalog\n   * @param store Catalog items store\n   */\n  setCatalogItemsStore(catalog: Catalog, store: EntityStore<CatalogItem>) {\n    this.catalogItemsStores.set(catalog.id as string, store);\n  }\n\n  /**\n   * Clear all catalog items stores\n   */\n  clearCatalogItemsStores() {\n    this.catalogItemsStores.clear();\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\n\nimport { ToolComponent } from '@igo2/common';\n\nimport { EntityStore } from '@igo2/common';\nimport { Catalog, CatalogService } from '@igo2/geo';\nimport { StorageService } from '@igo2/core';\n\nimport { ToolState } from '../../tool/tool.state';\nimport { CatalogState } from '../catalog.state';\n\n/**\n * Tool to browse the list of available catalogs.\n */\n@ToolComponent({\n  name: 'catalog',\n  title: 'igo.integration.tools.catalog',\n  icon: 'layers-plus'\n})\n@Component({\n  selector: 'igo-catalog-library-tool',\n  templateUrl: './catalog-library-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CatalogLibraryToolComponent implements OnInit {\n  /**\n   * Store that contains the catalogs\n   * @internal\n   */\n  get store(): EntityStore<Catalog> {\n    return this.catalogState.catalogStore;\n  }\n\n  /**\n   * Determine if the form to add a catalog is allowed\n   */\n  @Input() addCatalogAllowed: boolean = false;\n\n  /**\n   * List of predefined catalogs\n   */\n  @Input() predefinedCatalogs: Catalog[] = [];\n\n  constructor(\n    private catalogService: CatalogService,\n    private catalogState: CatalogState,\n    private toolState: ToolState,\n    private storageService: StorageService\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    if (this.store.count === 0) {\n      this.loadCatalogs();\n    }\n  }\n\n  /**\n   * When the selected catalog changes, toggle the the CatalogBrowser tool.\n   * @internal\n   * @param event Select event\n   */\n  onCatalogSelectChange(event: { selected: boolean; catalog: Catalog }) {\n    if (event.selected === false) {\n      return;\n    }\n    this.toolState.toolbox.activateTool('catalogBrowser');\n  }\n\n  /**\n   * Get all the available catalogs from the CatalogService and\n   * load them into the store.\n   */\n  private loadCatalogs() {\n    this.catalogService.loadCatalogs().pipe(take(1)).subscribe((catalogs: Catalog[]) => {\n      this.store.clear();\n      this.store.load(catalogs.concat((this.storageService.get('addedCatalogs') || []) as Catalog[]));\n    });\n  }\n}\n","<igo-catalog-library\n  [predefinedCatalogs]=\"predefinedCatalogs\"\n  [addCatalogAllowed]=\"addCatalogAllowed\"\n  [store]=\"store\"\n  (catalogSelectChange)=\"onCatalogSelectChange($event)\">\n</igo-catalog-library>\n","import { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { IgoCatalogLibraryModule } from '@igo2/geo';\nimport { CatalogLibraryToolComponent } from './catalog-library-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoCatalogLibraryModule\n  ],\n  declarations: [CatalogLibraryToolComponent],\n  exports: [CatalogLibraryToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppCatalogLibraryToolModule {}\n","<igo-catalog-browser\n  *ngIf=\"store$ | async as store\"\n  [catalog]=\"catalog\"\n  [store]=\"store\"\n  [map]=\"map\"\n  [toggleCollapsedGroup]=\"toggleCollapsedGroup\">\n</igo-catalog-browser>\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { EntityRecord, EntityStore, ToolComponent } from '@igo2/common';\nimport { AuthService } from '@igo2/auth';\n\nimport {\n  IgoMap,\n  Catalog,\n  CatalogItem,\n  CatalogItemState,\n  CatalogService\n} from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\nimport { CatalogState } from '../catalog.state';\n\n/**\n * Tool to browse a catalog's groups and layers and display them to a map.\n */\n@ToolComponent({\n  name: 'catalogBrowser',\n  title: 'igo.integration.tools.catalog',\n  icon: 'photo-browser',\n  parent: 'catalog'\n})\n@Component({\n  selector: 'igo-catalog-browser-tool',\n  templateUrl: './catalog-browser-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CatalogBrowserToolComponent implements OnInit, OnDestroy {\n  catalog: Catalog;\n\n  /**\n   * Store that contains the catalog items\n   * @internal\n   */\n  store$ = new BehaviorSubject<EntityStore<CatalogItem, CatalogItemState>>(\n    undefined\n  );\n\n  /**\n   * Subscription to the selected catalog\n   */\n  private catalog$$: Subscription;\n\n  /**\n   * Subscription for authentication\n   */\n  private authenticate$$: Subscription;\n\n  /**\n   * Whether a group can be toggled when it's collapsed\n   */\n  @Input() toggleCollapsedGroup: boolean = true;\n\n  /**\n   * Map to add layers to\n   * @internal\n   */\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  constructor(\n    private catalogService: CatalogService,\n    private catalogState: CatalogState,\n    private mapState: MapState,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    const catalogStore = this.catalogState.catalogStore;\n    this.catalog$$ = catalogStore.stateView\n      .firstBy$(\n        (record: EntityRecord<Catalog>) => record.state.selected === true\n      )\n      .subscribe((record: EntityRecord<Catalog>) => {\n        if (record && record.entity) {\n          const catalog = record.entity;\n          this.catalog = catalog;\n        }\n      });\n\n    this.authenticate$$ = this.authService.authenticate$.subscribe(() => {\n      this.loadCatalogItems(this.catalog);\n    });\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this.catalog$$.unsubscribe();\n    this.authenticate$$.unsubscribe();\n  }\n\n  /**\n   * Get the selected catalog's items from the CatalogService and\n   * load them into the store.\n   * @param catalog Selected catalog\n   */\n  private loadCatalogItems(catalog: Catalog) {\n    let store = this.catalogState.getCatalogItemsStore(catalog);\n    if (store !== undefined) {\n      this.store$.next(store);\n      return;\n    }\n\n    store = new EntityStore<CatalogItem>([]);\n    this.catalogState.setCatalogItemsStore(catalog, store);\n    this.catalogService\n      .loadCatalogItems(catalog)\n      .pipe(take(1))\n      .subscribe((items: CatalogItem[]) => {\n        store.load(items);\n        this.store$.next(store);\n      });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { IgoCatalogBrowserModule } from '@igo2/geo';\nimport { CatalogBrowserToolComponent } from './catalog-browser-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoCatalogBrowserModule\n  ],\n  declarations: [CatalogBrowserToolComponent],\n  exports: [CatalogBrowserToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppCatalogBrowserToolModule {}\n","import { NgModule } from '@angular/core';\n\nimport { IgoAppCatalogLibraryToolModule } from './catalog-library-tool/catalog-library-tool.module';\nimport { IgoAppCatalogBrowserToolModule } from './catalog-browser-tool/catalog-browser-tool.module';\n\n@NgModule({\n  imports: [],\n  exports: [\n    IgoAppCatalogLibraryToolModule,\n    IgoAppCatalogBrowserToolModule\n  ],\n  declarations: []\n})\nexport class IgoAppCatalogModule {}\n","import { Injectable } from '@angular/core';\n\nimport { AnyLayerOptions, StopsStore, StopsFeatureStore, RoutesFeatureStore, StepFeatureStore } from '@igo2/geo';\nimport { Subject } from 'rxjs';\nimport { MapState } from '../map/map.state';\n\n/**\n * Service that holds the state of the direction module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectionState {\n\n  public zoomToActiveRoute$: Subject<void> = new Subject();\n\n  /**\n   * Store that holds the stop\n   */\n  public stopsStore: StopsStore = new StopsStore([]);\n\n  /**\n   * Store that holds the driving stops as feature\n   */\n  public stopsFeatureStore: StopsFeatureStore = new StopsFeatureStore([], {\n    map: this.mapState.map\n  });\n\n  /**\n   * Store that holds the driving route as feature\n   */\n  public routesFeatureStore: RoutesFeatureStore = new RoutesFeatureStore([], {\n    map: this.mapState.map\n  });\n\n  public stepFeatureStore: StepFeatureStore = new StepFeatureStore([], {\n    map: this.mapState.map\n  });\n\n  public debounceTime: number = 200;\n\n  constructor(private mapState: MapState) {\n\n    this.mapState.map.ol.once('rendercomplete', () => {\n      this.stopsFeatureStore.empty$.subscribe((empty) => {\n        if (this.stopsFeatureStore.layer?.options) {\n          (this.stopsFeatureStore.layer.options as AnyLayerOptions).showInLayerList = !empty;\n        }\n      });\n      this.routesFeatureStore.empty$.subscribe((empty) => {\n        if (this.routesFeatureStore.layer?.options) {\n          (this.routesFeatureStore.layer.options as AnyLayerOptions).showInLayerList = !empty;\n        }\n      });\n    });\n\n    this.mapState.map.layers$.subscribe(() => {\n      if (!this.mapState.map.getLayerById('igo-direction-stops-layer')) {\n        this.stopsStore.deleteMany(this.stopsStore.all());\n        this.stopsFeatureStore.deleteMany(this.stopsFeatureStore.all()); // not necessary\n      }\n      if (!this.mapState.map.getLayerById('igo-direction-route-layer')) {\n        this.routesFeatureStore.deleteMany(this.routesFeatureStore.all());\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { LanguageService } from '@igo2/core';\nimport { Tool, ToolService } from '@igo2/common';\nimport { ContextService, DetailedContext } from '@igo2/context';\n\nimport { ToolState } from '../tool/tool.state';\n\n/**\n * Service that holds the state of the context module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContextState {\n  /**\n   * Observable of the active context\n   */\n  context$: BehaviorSubject<DetailedContext> = new BehaviorSubject(undefined);\n\n  constructor(\n    private contextService: ContextService,\n    private toolService: ToolService,\n    private toolState: ToolState,\n    private languageService: LanguageService\n  ) {\n    this.contextService.context$.subscribe((context: DetailedContext) => {\n      this.onContextChange(context);\n    });\n    this.contextService.toolsChanged$.subscribe((context: DetailedContext) => {\n      this.updateTools(context);\n    });\n  }\n\n  /**\n   * Set the active context\n   * @param context Detailed context\n   */\n  private setContext(context: DetailedContext) {\n    this.updateTools(context);\n    this.context$.next(context);\n  }\n\n  /**\n   * Update the tool state with the context's tools\n   * @param context Detailed context\n   */\n  private updateTools(context: DetailedContext) {\n    const toolbox = this.toolState.toolbox;\n\n    const tools = [];\n    const contextTools = context.tools || [];\n    contextTools.forEach((contextTool: Tool) => {\n      const baseTool = this.toolService.getTool(contextTool.name);\n      if (baseTool === undefined) {\n        return;\n      }\n\n      const options = Object.assign(\n        {},\n        baseTool.options || {},\n        contextTool.options || {}\n      );\n      const tool = Object.assign({}, baseTool, contextTool, { options });\n      tools.push(tool);\n    });\n\n    tools.forEach((tool) => {\n      if (tool.parent) {\n        const parentIndex = tools.findIndex((el) => el.name === tool.parent);\n        if (parentIndex !== -1) {\n          tools[parentIndex].children = [];\n          tools[parentIndex].children.push(tool.name);\n        }\n      }\n    });\n\n    toolbox.setTools(tools);\n    toolbox.setToolbar(context.toolbar || []);\n\n    // TODO: This is a patch so the context service can work without\n    // injecting the ToolState or without being completely refactored\n    this.contextService.setTools([].concat(tools));\n    this.contextService.setToolbar(context.toolbar || []);\n  }\n\n  /**\n   * Set a new context and update the tool state\n   * @param context Detailed context\n   */\n  private onContextChange(context: DetailedContext) {\n    if (context === undefined) {\n      return;\n    }\n    this.setContext(context);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@igo2/auth';\n\nimport { ToolComponent } from '@igo2/common';\nimport { LanguageService, MessageService, StorageScope, StorageService } from '@igo2/core';\nimport { IgoMap, RoutesFeatureStore, StopsFeatureStore, StopsStore, StepFeatureStore } from '@igo2/geo';\nimport { Subject } from 'rxjs';\nimport { ContextState } from '../../context/context.state';\n\nimport { MapState } from '../../map/map.state';\nimport { DirectionState } from '../directions.state';\n\n@ToolComponent({\n  name: 'directions',\n  title: 'igo.integration.tools.directions',\n  icon: 'directions'\n})\n@Component({\n  selector: 'igo-directions-tool',\n  templateUrl: './directions-tool.component.html'\n})\nexport class DirectionsToolComponent implements OnInit {\n\n  public currentContextUri: string;\n  /**\n   * stops\n   * @internal\n   */\n  get stopsStore(): StopsStore { return this.directionState.stopsStore; }\n\n  get debounceTime(): number { return this.directionState.debounceTime; }\n\n  /**\n   * stops\n   * @internal\n   */\n   get stopsFeatureStore(): StopsFeatureStore { return this.directionState.stopsFeatureStore; }\n\n  /**\n   * routes\n   * @internal\n   */\n  get routesFeatureStore(): RoutesFeatureStore { return this.directionState.routesFeatureStore; }\n\n  /**\n   * step store\n   * @internal\n   */\n   get stepFeatureStore(): StepFeatureStore { return this.directionState.stepFeatureStore; }\n\n  /**\n   * step store\n   * @internal\n   */\n   get zoomToActiveRoute$(): Subject<void> { return this.directionState.zoomToActiveRoute$; }\n\n\n  /**\n   * Map to measure on\n   * @internal\n   */\n  get map(): IgoMap { return this.mapState.map; }\n\n  constructor(\n    private directionState: DirectionState,\n    private mapState: MapState,\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private storageService: StorageService,\n    public contextState: ContextState,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    const warningShown = this.storageService.get('direction.warning.shown') as boolean;\n    if (!warningShown) {\n      const translate = this.languageService.translate;\n      const title = translate.instant(\n        'igo.integration.directions.warning.title'\n      );\n      const msg = translate.instant('igo.integration.directions.warning.message');\n      this.messageService.info(msg, title, { timeOut: 20000 });\n      this.storageService.set('direction.warning.shown', true, StorageScope.SESSION);\n    }\n    this.contextState.context$.subscribe(c => {\n      if (!this.authService.authenticated) {\n        this.currentContextUri = c.uri;\n      }\n    });\n  }\n\n}\n","<igo-directions\n    [contextUri]=\"currentContextUri\"\n    [debounceTime]=\"debounceTime\"\n    [stopsStore]=\"stopsStore\"\n    [stopsFeatureStore]=\"stopsFeatureStore\"\n    [stepFeatureStore]=\"stepFeatureStore\"\n    [routesFeatureStore]=\"routesFeatureStore\"\n    [zoomToActiveRoute$]=\"zoomToActiveRoute$\">  \n</igo-directions>","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\n\nimport { IgoDirectionsModule } from '@igo2/geo';\nimport { DirectionsToolComponent } from './directions-tool/directions-tool.component';\n\n@NgModule({\n  imports: [IgoDirectionsModule],\n  declarations: [DirectionsToolComponent],\n  exports: [DirectionsToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppDirectionsModule {\n  static forRoot(): ModuleWithProviders<IgoAppDirectionsModule> {\n    return {\n      ngModule: IgoAppDirectionsModule,\n      providers: []\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { FeatureStore, Feature } from '@igo2/geo';\nimport { MapState } from '../map/map.state';\n\n/**\n * Service that holds the state of the measure module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrawState {\n\n  /**\n   * Store that holds the measures\n   */\n  public store: FeatureStore<Feature> = new FeatureStore<Feature>([], {\n    map: this.mapState.map\n  });\n\n  constructor(private mapState: MapState) {\n\n    this.mapState.map.layers$.subscribe(() => {\n      if (!this.mapState.map.getLayerById('igo-draw-layer')) {\n        this.store.deleteMany(this.store.all());\n      }\n    });\n  }\n\n}\n","import {\n    Component,\n    ChangeDetectionStrategy\n  } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { FeatureStore, Feature, IgoMap } from '@igo2/geo';\nimport { MapState } from '../../map/map.state';\nimport { DrawState } from '../draw.state';\n\n/**\n * Tool to measure lengths and areas\n */\n@ToolComponent({\n    name: 'draw',\n    title: 'igo.integration.tools.draw',\n    icon: 'draw'\n})\n@Component({\n    selector: 'igo-drawing-tool',\n    templateUrl: './drawing-tool.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawingToolComponent {\n\n/**\n * Map to measure on\n * @internal\n */\nget store(): FeatureStore<Feature> { return this.drawState.store; }\n\n/**\n * Map to measure on\n * @internal\n */\nget map(): IgoMap { return this.mapState.map; }\n\nconstructor(\n    private drawState: DrawState,\n    private mapState: MapState\n) {}\n\n}\n","<igo-draw [store]=\"store\" [map]=\"map\"></igo-draw>\n","import { NgModule } from '@angular/core';\n\nimport { IgoDrawingToolModule } from '@igo2/geo';\nimport { DrawingToolComponent } from './drawing-tool/drawing-tool.component';\n\n@NgModule({\n  imports: [IgoDrawingToolModule],\n  declarations: [DrawingToolComponent],\n  exports: [\n    DrawingToolComponent\n  ]\n})\nexport class IgoAppDrawModule {}\n","import {\n    FeatureMotion,\n    FeatureStoreSelectionStrategy,\n    FeatureWorkspace,\n    WfsWorkspace,\n    EditionWorkspace\n} from '@igo2/geo';\n\n\nexport function handleZoomAuto(workspace: FeatureWorkspace | WfsWorkspace | EditionWorkspace, storageService) {\n    const zoomStrategy = workspace.entityStore\n        .getStrategyOfType(FeatureStoreSelectionStrategy) as FeatureStoreSelectionStrategy;\n    zoomStrategy.setMotion(storageService.get('zoomAuto') as boolean ? FeatureMotion.Default : FeatureMotion.None);\n}\n\n\n","import { Injectable } from '@angular/core';\n\nimport { StorageService } from '@igo2/core';\n\n/**\n * Service that holds the state of storage service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageState {\n  get storageService(): StorageService {\n    return this.igoStorageService;\n  }\n\n  constructor(private igoStorageService: StorageService) {}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport {\n  Action,\n  EntityStoreFilterCustomFuncStrategy,\n  EntityStoreFilterSelectionStrategy\n} from '@igo2/common';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {\n  FeatureWorkspace,\n  mapExtentStrategyActiveToolTip,\n  noElementSelected,\n  ExportOptions\n} from '@igo2/geo';\nimport { StorageService, StorageServiceEvent, StorageServiceEventEnum, LanguageService, MediaService} from '@igo2/core';\nimport { StorageState } from '../../storage/storage.state';\nimport { map, skipWhile } from 'rxjs/operators';\nimport { ToolState } from '../../tool/tool.state';\nimport { handleZoomAuto } from './workspace.utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeatureActionsService implements OnDestroy {\n\n  public maximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private storageChange$$: Subscription;\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n\n  get zoomAuto(): boolean {\n    return this.storageService.get('zoomAuto') as boolean;\n  }\n\n  constructor(\n    private storageState: StorageState,\n    public languageService: LanguageService,\n    private toolState: ToolState,\n    private mediaService: MediaService\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.storageChange$$) {\n      this.storageChange$$.unsubscribe();\n    }\n  }\n\n  loadActions(\n    workspace: FeatureWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ) {\n    const actions = this.buildActions(\n      workspace,\n      rowsInMapExtentCheckCondition$,\n      selectOnlyCheckCondition$\n      );\n    workspace.actionStore.load(actions);\n  }\n\n  buildActions(\n    workspace: FeatureWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ): Action[] {\n    this.zoomAuto$.next(this.zoomAuto);\n    this.storageChange$$ = this.storageService.storageChange$\n      .pipe(\n        skipWhile(\n          (storageChange: StorageServiceEvent) =>\n            storageChange.key !== 'zoomAuto' || storageChange.event === StorageServiceEventEnum.CLEARED\n        )\n      )\n      .subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n    return [\n      {\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set(\n            'zoomAuto',\n            !this.storageService.get('zoomAuto') as boolean\n          );\n        }\n      },\n      {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      },\n      {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.tooltip',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      },\n      {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: (ws: FeatureWorkspace) => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), {\n            selected: false\n          });\n        },\n        args: [workspace],\n        availability: (ws: FeatureWorkspace) => noElementSelected(ws)\n      },\n      {\n        id: 'featureDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: (ws: FeatureWorkspace) => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(\n            EntityStoreFilterCustomFuncStrategy\n          );\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(\n            EntityStoreFilterSelectionStrategy\n          );\n          const layersWithSelection = filterSelectionStrategy.active\n            ? [ws.layer.id]\n            : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: {\n              layers: [ws.layer.id],\n              featureInMapExtent: filterStrategy.active,\n              layersWithSelection\n            } as ExportOptions\n          });\n        },\n        args: [workspace]\n      },\n      {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.maximizeTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        },\n      },\n      {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtent'\n        ),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtentTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }\n    ];\n  }\n}\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\n\nimport {\n  Action,\n  EntityStoreFilterCustomFuncStrategy,\n  EntityStoreFilterSelectionStrategy,\n  Widget\n} from '@igo2/common';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {\n  WfsWorkspace,\n  mapExtentStrategyActiveToolTip,\n  noElementSelected,\n  ExportOptions,\n  OgcFilterWidget,\n  OgcFilterableDataSource,\n} from '@igo2/geo';\nimport { StorageService, StorageServiceEvent, StorageServiceEventEnum, LanguageService, MediaService} from '@igo2/core';\nimport { StorageState } from '../../storage/storage.state';\nimport { map, skipWhile } from 'rxjs/operators';\nimport { ToolState } from '../../tool/tool.state';\nimport { handleZoomAuto } from './workspace.utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WfsActionsService implements OnDestroy {\n\n  public maximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n\n  selectOnlyCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  // rowsInMapExtentCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private storageChange$$: Subscription;\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n\n  get zoomAuto(): boolean {\n    return this.storageService.get('zoomAuto') as boolean;\n  }\n\n  constructor(\n    @Inject(OgcFilterWidget) private ogcFilterWidget: Widget,\n    private storageState: StorageState,\n    public languageService: LanguageService,\n    private mediaService: MediaService,\n    private toolState: ToolState) {}\n\n  ngOnDestroy(): void {\n    if (this.storageChange$$) {\n      this.storageChange$$.unsubscribe();\n    }\n  }\n\n  loadActions(\n    workspace: WfsWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ) {\n    const actions = this.buildActions(\n      workspace,\n      rowsInMapExtentCheckCondition$,\n      selectOnlyCheckCondition$\n      );\n    workspace.actionStore.load(actions);\n  }\n\n  buildActions(\n    workspace: WfsWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ): Action[] {\n    this.zoomAuto$.next(this.zoomAuto);\n    this.storageChange$$ = this.storageService.storageChange$\n      .pipe(skipWhile((storageChange: StorageServiceEvent) =>\n        storageChange?.key !== 'zoomAuto' || storageChange?.event === StorageServiceEventEnum.CLEARED))\n      .subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n    const actions = [\n      {\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set('zoomAuto', !this.storageService.get('zoomAuto') as boolean);\n        }\n      },\n      {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      },\n      {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.title',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      },\n      {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: (ws: WfsWorkspace) => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), { selected: false });\n        },\n        args: [workspace],\n        availability: (ws: WfsWorkspace) => noElementSelected(ws)\n      },\n      {\n        id: 'wfsDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: (ws: WfsWorkspace) => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          const layersWithSelection = filterSelectionStrategy.active ? [ws.layer.id] : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: { layers: [ws.layer.id], featureInMapExtent: filterStrategy.active, layersWithSelection } as ExportOptions\n          });\n        },\n        args: [workspace]\n      },\n      {\n        id: 'ogcFilter',\n        icon: 'filter',\n        title: 'igo.integration.workspace.ogcFilter.title',\n        tooltip: 'igo.integration.workspace.ogcFilter.tooltip',\n        handler: (widget: Widget, ws: WfsWorkspace) => {\n          ws.activateWidget(widget, {\n            map: ws.map,\n            layer: ws.layer\n          });\n        },\n        args: [this.ogcFilterWidget, workspace]\n      },\n      {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.maximizeTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        },\n      },\n      {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtent'\n        ),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtentTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }\n    ];\n    return (workspace.layer.dataSource as OgcFilterableDataSource).ogcFilters$?.value?.enabled ?\n    actions : actions.filter(action => action.id !== 'ogcFilter');\n  }\n}\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\n\nimport {\n  Action,\n  EntityStoreFilterCustomFuncStrategy,\n  EntityStoreFilterSelectionStrategy,\n  Widget\n} from '@igo2/common';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {\n  EditionWorkspace,\n  mapExtentStrategyActiveToolTip,\n  noElementSelected,\n  ExportOptions,\n  OgcFilterWidget,\n  OgcFilterableDataSource,\n} from '@igo2/geo';\nimport { StorageService, StorageServiceEvent, StorageServiceEventEnum, LanguageService, MediaService} from '@igo2/core';\nimport { StorageState } from '../../storage/storage.state';\nimport { map, skipWhile } from 'rxjs/operators';\nimport { ToolState } from '../../tool/tool.state';\nimport { handleZoomAuto } from './workspace.utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditionActionsService implements OnDestroy {\n\n  public maximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private storageChange$$: Subscription;\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n\n  get zoomAuto(): boolean {\n    return this.storageService.get('zoomAuto') as boolean;\n  }\n\n  constructor(\n    @Inject(OgcFilterWidget) private ogcFilterWidget: Widget,\n    private storageState: StorageState,\n    public languageService: LanguageService,\n    private mediaService: MediaService,\n    private toolState: ToolState) {}\n\n  ngOnDestroy(): void {\n    if (this.storageChange$$) {\n      this.storageChange$$.unsubscribe();\n    }\n  }\n\n  loadActions(\n    workspace: EditionWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ) {\n    const actions = this.buildActions(\n      workspace,\n      rowsInMapExtentCheckCondition$,\n      selectOnlyCheckCondition$\n      );\n    workspace.actionStore.load(actions);\n  }\n\n  buildActions(\n    workspace: EditionWorkspace,\n    rowsInMapExtentCheckCondition$: BehaviorSubject<boolean>,\n    selectOnlyCheckCondition$: BehaviorSubject<boolean>\n    ): Action[] {\n    this.zoomAuto$.next(this.zoomAuto);\n    this.storageChange$$ = this.storageService.storageChange$\n      .pipe(skipWhile((storageChange: StorageServiceEvent) =>\n        storageChange?.key !== 'zoomAuto' || storageChange?.event === StorageServiceEventEnum.CLEARED))\n      .subscribe(() => {\n        this.zoomAuto$.next(this.zoomAuto);\n        handleZoomAuto(workspace, this.storageService);\n      });\n    const actions = [\n      {\n        id: 'zoomAuto',\n        checkbox: true,\n        title: 'igo.integration.workspace.zoomAuto.title',\n        tooltip: 'igo.integration.workspace.zoomAuto.tooltip',\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          handleZoomAuto(workspace, this.storageService);\n          this.storageService.set('zoomAuto', !this.storageService.get('zoomAuto') as boolean);\n        }\n      },\n      {\n        id: 'filterInMapExtent',\n        checkbox: true,\n        title: 'igo.integration.workspace.inMapExtent.title',\n        tooltip: mapExtentStrategyActiveToolTip(workspace),\n        checkCondition: rowsInMapExtentCheckCondition$,\n        handler: () => rowsInMapExtentCheckCondition$.next(!rowsInMapExtentCheckCondition$.value)\n      },\n      {\n        id: 'selectedOnly',\n        checkbox: true,\n        title: 'igo.integration.workspace.selected.title',\n        tooltip: 'igo.integration.workspace.selected.title',\n        checkCondition: selectOnlyCheckCondition$,\n        handler: () => selectOnlyCheckCondition$.next(!selectOnlyCheckCondition$.value)\n      },\n      {\n        id: 'clearselection',\n        icon: 'select-off',\n        title: 'igo.integration.workspace.clearSelection.title',\n        tooltip: 'igo.integration.workspace.clearSelection.tooltip',\n        handler: (ws: EditionWorkspace) => {\n          ws.entityStore.state.updateMany(ws.entityStore.view.all(), { selected: false });\n        },\n        args: [workspace],\n        availability: (ws: EditionWorkspace) => noElementSelected(ws)\n      },\n      {\n        id: 'wfsDownload',\n        icon: 'file-export',\n        title: 'igo.integration.workspace.download.title',\n        tooltip: 'igo.integration.workspace.download.tooltip',\n        handler: (ws: EditionWorkspace) => {\n          const filterStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          const filterSelectionStrategy = ws.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          const layersWithSelection = filterSelectionStrategy.active ? [ws.layer.id] : [];\n          this.toolState.toolToActivateFromOptions({\n            tool: 'importExport',\n            options: { layers: [ws.layer.id], featureInMapExtent: filterStrategy.active, layersWithSelection } as ExportOptions\n          });\n        },\n        args: [workspace]\n      },\n      {\n        id: 'ogcFilter',\n        icon: 'filter',\n        title: 'igo.integration.workspace.ogcFilter.title',\n        tooltip: 'igo.integration.workspace.ogcFilter.tooltip',\n        handler: (widget: Widget, ws: EditionWorkspace) => {\n          ws.activateWidget(widget, {\n            map: ws.map,\n            layer: ws.layer\n          });\n        },\n        args: [this.ogcFilterWidget, workspace]\n      },\n      {\n        id: 'maximize',\n        title: this.languageService.translate.instant('igo.integration.workspace.maximize'),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.maximizeTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => !v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          if (!this.mediaService.isMobile()) {\n            this.maximize$.next(true);\n          }\n        },\n      },\n      {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtent'\n        ),\n        tooltip: this.languageService.translate.instant(\n          'igo.integration.workspace.standardExtentTooltip'\n        ),\n        icon: 'resize',\n        display: () => {\n          return this.maximize$.pipe(map((v) => v && !this.mediaService.isMobile()));\n        },\n        handler: () => {\n          this.maximize$.next(false);\n        }\n      }\n    ];\n    return (workspace.layer.dataSource as OgcFilterableDataSource).ogcFilters$?.value?.enabled ?\n    actions : actions.filter(action => action.id !== 'ogcFilter');\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport {\n  EntityRecord,\n  Workspace,\n  WorkspaceStore,\n  Widget,\n  EntityStoreFilterCustomFuncStrategy,\n  EntityStoreFilterSelectionStrategy } from '@igo2/common';\nimport { WfsWorkspace, FeatureWorkspace, EditionWorkspace } from '@igo2/geo';\nimport { FeatureActionsService } from './shared/feature-actions.service';\nimport { WfsActionsService } from './shared/wfs-actions.service';\nimport { StorageService } from '@igo2/core';\nimport { EditionActionsService } from './shared/edition-actions.service';\n\n/**\n * Service that holds the state of the workspace module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkspaceState implements OnDestroy {\n\n  public workspacePanelExpanded: boolean = false;\n\n  readonly workspaceEnabled$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly rowsInMapExtentCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  readonly selectOnlyCheckCondition$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  readonly workspaceMaximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n  private actionMaximize$$: Subscription[] = [];\n\n  private rowsInMapExtentCheckCondition$$: Subscription;\n  private selectOnlyCheckCondition$$: Subscription;\n\n  /** Subscription to the active workspace */\n  private activeWorkspace$$: Subscription;\n\n  /** Subscription to the active workspace widget */\n  private activeWorkspaceWidget$$: Subscription;\n\n  /** Active widget observable. Only one may be active for all available workspaces */\n  readonly activeWorkspaceWidget$: BehaviorSubject<Widget> = new BehaviorSubject<Widget>(undefined);\n\n  /**\n   * Observable of the active workspace\n   */\n  public workspace$ = new BehaviorSubject<Workspace>(undefined);\n\n  /**\n   * Store that holds all the available workspaces\n   */\n  get store(): WorkspaceStore { return this._store; }\n  private _store: WorkspaceStore;\n\n  constructor(\n    private featureActionsService: FeatureActionsService,\n    private wfsActionsService: WfsActionsService,\n    private editionActionsService: EditionActionsService,\n    private storageService: StorageService\n  ) {\n    this.initWorkspaces();\n  }\n\n  /**\n   * Initialize the workspace store. Each time a workspace is activated,\n   * subscribe to it's active widget. Tracking the active widget is useful\n   * to make sure only one widget is active at a time.\n   */\n  private initWorkspaces() {\n    this._store = new WorkspaceStore([]);\n    this._store.stateView\n      .firstBy$((record: EntityRecord<Workspace>) => record.state.active === true)\n      .subscribe((record: EntityRecord<Workspace>) => {\n        const workspace = record ? record.entity : undefined;\n        this.workspace$.next(workspace);\n      });\n\n    this._store.stateView.all$()\n    .subscribe((workspaces: EntityRecord<Workspace>[]) => {\n      workspaces.map((wks: EntityRecord<Workspace>) => {\n        if (wks.entity.actionStore.empty) {\n          if (wks.entity instanceof WfsWorkspace) {\n            this.wfsActionsService.loadActions(\n              wks.entity,\n              this.rowsInMapExtentCheckCondition$,\n              this.selectOnlyCheckCondition$);\n          } else if (wks.entity instanceof FeatureWorkspace) {\n            this.featureActionsService.loadActions(\n              wks.entity,\n              this.rowsInMapExtentCheckCondition$,\n              this.selectOnlyCheckCondition$);\n          } else if (wks.entity instanceof EditionWorkspace) {\n            this.editionActionsService.loadActions(\n              wks.entity,\n              this.rowsInMapExtentCheckCondition$,\n              this.selectOnlyCheckCondition$);\n          }\n        }\n\n      });\n    });\n\n    this.actionMaximize$$.push(this.featureActionsService.maximize$.subscribe(maximized => {\n      this.setWorkspaceIsMaximized(maximized);\n    }));\n\n    this.actionMaximize$$.push(this.wfsActionsService.maximize$.subscribe(maximized => {\n      this.setWorkspaceIsMaximized(maximized);\n    }));\n\n    this.actionMaximize$$.push(this.editionActionsService.maximize$.subscribe(maximized => {\n      this.setWorkspaceIsMaximized(maximized);\n    }));\n\n    this.activeWorkspace$$ = this.workspace$\n      .subscribe((workspace: Workspace) => {\n        if (this.activeWorkspaceWidget$$ !== undefined) {\n          this.activeWorkspaceWidget$$.unsubscribe();\n          this.activeWorkspaceWidget$$ = undefined;\n        }\n\n        if (workspace !== undefined) {\n          this.activeWorkspaceWidget$$ = workspace.widget$\n            .subscribe((widget: Widget) => this.activeWorkspaceWidget$.next(widget));\n        }\n      });\n\n    this.rowsInMapExtentCheckCondition$$ = this.rowsInMapExtentCheckCondition$.subscribe((rowsInMapExtent) => {\n      this._store.stateView.all().map((wks: EntityRecord<Workspace>) => {\n        if (!wks.entity.actionStore.empty) {\n          const filterStrategy = wks.entity.entityStore.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n          if (filterStrategy) {\n            if (rowsInMapExtent) {\n              filterStrategy.activate();\n            } else {\n              filterStrategy.deactivate();\n            }\n          }\n        }\n      });\n    });\n\n    this.selectOnlyCheckCondition$$ = this.selectOnlyCheckCondition$.subscribe((selectOnly) => {\n      this._store.stateView.all().map((wks: EntityRecord<Workspace>) => {\n        if (!wks.entity.actionStore.empty) {\n          const filterStrategy = wks.entity.entityStore.getStrategyOfType(EntityStoreFilterSelectionStrategy);\n          if (filterStrategy) {\n            if (selectOnly) {\n              filterStrategy.activate();\n            } else {\n              filterStrategy.deactivate();\n            }\n          }\n        }\n      });\n    });\n  }\n\n  private setWorkspaceIsMaximized(maximized: boolean) {\n    this.storageService.set('workspaceMaximize', maximized);\n    this.workspaceMaximize$.next(maximized);\n  }\n\n  public setActiveWorkspaceById(id: string) {\n    const wksFromId = this.store\n    .all()\n    .find(workspace => workspace.id === id);\n    if (wksFromId) {\n      this.store.activateWorkspace(wksFromId);\n    }\n  }\n\n  public setActiveWorkspaceByTitle(title: string) {\n    const wksFromTitle = this.store\n      .all()\n      .find(workspace => workspace.title === title);\n    if (wksFromTitle) {\n      this.store.activateWorkspace(wksFromTitle);\n    }\n  }\n\n  /**\n   * Teardown all the workspaces\n   * @internal\n   */\n  ngOnDestroy() {\n    this.teardownWorkspaces();\n    this.actionMaximize$$.map(a => a.unsubscribe());\n    if (this.rowsInMapExtentCheckCondition$$) {\n      this.selectOnlyCheckCondition$$.unsubscribe();\n    }\n    if (this.selectOnlyCheckCondition$$) {\n      this.selectOnlyCheckCondition$$.unsubscribe();\n    }\n  }\n\n  /**\n   * Teardown the workspace store and any subscribers\n   */\n  private teardownWorkspaces() {\n    this.store.clear();\n    if (this.activeWorkspaceWidget$$ !== undefined) {\n      this.activeWorkspaceWidget$$.unsubscribe();\n    }\n    if (this.activeWorkspace$$ !== undefined) {\n      this.activeWorkspace$$.unsubscribe();\n    }\n  }\n\n}\n","<button\n  *ngIf=\"hasWorkspace$ | async\"\n  mat-icon-button\n  tooltip-position=\"below\"\n  matTooltipShowDelay=\"500\"\n  [matTooltip]=\"'igo.integration.workspace.toggleWorkspace' | translate\"\n  [color]=\"color\"\n  (click)=\"activateWorkspace()\"\n  >\n  <mat-icon svgIcon=\"table\"></mat-icon>\n</button>\n","import { Component, Input, ChangeDetectionStrategy, OnInit, OnDestroy } from '@angular/core';\nimport type { Layer } from '@igo2/geo';\nimport { WorkspaceState } from '../workspace.state';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'igo-workspace-button',\n  templateUrl: './workspace-button.component.html',\n  styleUrls: ['./workspace-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkspaceButtonComponent implements OnInit, OnDestroy {\n\n  public hasWorkspace$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private hasWorkspace$$: Subscription;\n\n  private _layer: Layer;\n  private layer$: BehaviorSubject<Layer> = new BehaviorSubject(undefined);\n  @Input()\n  set layer(value: Layer) {\n    this._layer = value;\n    this.layer$.next(this._layer);\n  }\n\n  get layer(): Layer {\n    return this._layer;\n  }\n\n  @Input() color: string = 'primary';\n\n  constructor(private workspaceState: WorkspaceState) { }\n\n  ngOnInit(): void {\n    this.hasWorkspace$$ = combineLatest([this.workspaceState.workspaceEnabled$, this.layer$])\n      .subscribe(bunch => this.hasWorkspace$.next(bunch[0] && bunch[1]?.options.workspace?.enabled)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.hasWorkspace$$.unsubscribe();\n  }\n\n  activateWorkspace() {\n    if (\n      this.workspaceState.workspace$.value &&\n      (this.workspaceState.workspace$.value as any).layer.id === this.layer.id &&\n      this.workspaceState.workspacePanelExpanded) {\n      this.workspaceState.workspacePanelExpanded = false;\n    } else {\n      this.workspaceState.workspacePanelExpanded = true;\n      this.workspaceState.setActiveWorkspaceById(this.layer.id);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { WorkspaceButtonComponent } from './workspace-button/workspace-button.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    IgoLanguageModule\n  ],\n  declarations: [WorkspaceButtonComponent],\n  exports: [WorkspaceButtonComponent]\n})\nexport class IgoAppWorkspaceModule {}\n","<mat-tab-group *ngIf=\"importExportShowBothType\" >\n  <mat-tab [label]=\"'igo.integration.importExportTool.importExportData' | translate\">\n    <igo-import-export  \n      [map]=\"map\"\n      [selectFirstProj]=\"selectFirstProj\"\n      [projectionsLimitations]=\"projectionsLimitations\"\n      [store]=\"workspaceStore\"\n      [selectedMode]=\"importExportState.selectedMode$ | async\"\n      (selectMode)=\"modeChanged($event)\"\n      [exportOptions$]=\"importExportState.exportOptions$\"\n      (exportOptionsChange)=\"exportOptionsChange($event)\">\n    </igo-import-export>\n  </mat-tab>\n  <mat-tab [label]=\"'igo.integration.importExportTool.importExportContext' | translate\">\n    <igo-context-import-export [map]=\"map\"></igo-context-import-export>\n  </mat-tab>\n</mat-tab-group>\n\n<igo-import-export  \n  *ngIf=\"!importExportShowBothType && importExportType === 'layer'\"\n  [map]=\"map\"\n  [store]=\"workspaceStore\"\n  [selectedMode]=\"importExportState.selectedMode$ | async\"\n  (selectMode)=\"modeChanged($event)\"\n  [exportOptions$]=\"importExportState.exportOptions$\"\n  (exportOptionsChange)=\"exportOptionsChange($event)\">\n</igo-import-export>\n\n<igo-context-import-export \n  *ngIf=\"!importExportShowBothType && importExportType === 'context'\"\n  [map]=\"map\">\n</igo-context-import-export>","import { Component, ChangeDetectionStrategy, OnInit, Input } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport type { WorkspaceStore } from '@igo2/common';\nimport { IgoMap, ExportOptions, ProjectionsLimitationsOptions } from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\nimport { ImportExportMode, ImportExportState, ImportExportType } from '../import-export.state';\nimport { WorkspaceState } from '../../workspace/workspace.state';\n\n@ToolComponent({\n  name: 'importExport',\n  title: 'igo.integration.tools.importExport',\n  icon: 'file-move'\n})\n@Component({\n  selector: 'igo-import-export-tool',\n  templateUrl: './import-export-tool.component.html',\n  styleUrls: ['./import-export-tool.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImportExportToolComponent implements OnInit {\n\n  @Input() projectionsLimitations: ProjectionsLimitationsOptions;\n\n  @Input() selectFirstProj: boolean = false;\n\n  /**\n   * Map to measure on\n   * @internal\n   */\n  get map(): IgoMap { return this.mapState.map; }\n\n  get workspaceStore(): WorkspaceStore {\n    return this.workspaceState.store;\n  }\n\n  @Input() importExportType: ImportExportType = ImportExportType.layer;\n  @Input() importExportShowBothType: boolean = true;\n\n  constructor(\n    private mapState: MapState,\n    public importExportState: ImportExportState,\n    private workspaceState: WorkspaceState,\n  ) {}\n\n  ngOnInit(): void {\n    this.selectType();\n    this.selectMode();\n  }\n\n  private selectType() {\n    if (this.importExportType) {\n      this.importExportState.importExportType$.next(this.importExportType);\n    }\n    const userSelectedType = this.importExportState.importExportType$.value;\n    if (userSelectedType !== undefined) {\n      this.importExportState.setImportExportType(userSelectedType);\n    } else {\n      this.importExportState.setImportExportType(ImportExportType.layer);\n    }\n  }\n\n  private selectMode() {\n    const userSelectedMode = this.importExportState.selectedMode$.value;\n    if (userSelectedMode !== undefined) {\n      this.importExportState.setMode(userSelectedMode);\n    } else {\n      this.importExportState.setMode(ImportExportMode.import);\n\n    }\n  }\n\n  public modeChanged(mode: ImportExportMode) {\n    this.importExportState.setMode(mode);\n  }\n\n  public exportOptionsChange(exportOptions: ExportOptions) {\n    this.importExportState.setsExportOptions(exportOptions);\n  }\n\n  importExportTypeChange(event) {\n    this.importExportType = event.value;\n  }\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\n\nimport { IgoImportExportModule } from '@igo2/geo';\nimport { ImportExportToolComponent } from './import-export-tool/import-export-tool.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoContextImportExportModule } from '@igo2/context';\n\n@NgModule({\n  imports: [\n    IgoImportExportModule,\n    IgoContextImportExportModule,\n    CommonModule,\n    IgoLanguageModule,\n    MatButtonToggleModule,\n    MatTabsModule\n  ],\n  declarations: [ImportExportToolComponent],\n  exports: [ImportExportToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppImportExportModule {\n  static forRoot(): ModuleWithProviders<IgoAppImportExportModule> {\n    return {\n      ngModule: IgoAppImportExportModule,\n      providers: []\n    };\n  }\n}\n","<igo-layer-list class=\"mapDetailsList\" *ngIf=\"(layers$ | async).length; else empty\"\n  [map]=\"map\"\n  igoLayerListBinding\n  [excludeBaseLayers]=\"excludeBaseLayers\"\n  [layerFilterAndSortOptions]=\"layerFilterAndSortOptions\"\n  [expandLegendOfVisibleLayers]=\"expandLegendOfVisibleLayers\"\n  [toggleLegendOnVisibilityChange]=\"toggleLegendOnVisibilityChange\"\n  [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\"\n  floatLabel=\"never\"\n  [queryBadge]=\"queryBadge\">\n\n  <ng-template #igoLayerItemToolbar let-layer=\"layer\">\n    <!-- <igo-download-button [layer]=\"layer\"></igo-download-button> -->\n     <igo-workspace-button [layer]=\"layer\"></igo-workspace-button>\n    <igo-export-button [layer]=\"layer\" (click)=\"activateExport(layer)\"></igo-export-button>\n    <igo-ogc-filter-button [header]=\"ogcButton\" [layer]=\"layer\"></igo-ogc-filter-button>\n    <igo-time-filter-button [header]=\"timeButton\" [layer]=\"layer\"></igo-time-filter-button>\n    <igo-track-feature-button [trackFeature]=\"true\" [layer]=\"layer\"></igo-track-feature-button>\n    <igo-metadata-button [layer]=\"layer\"></igo-metadata-button>\n  </ng-template>\n\n</igo-layer-list>\n\n<ng-template #empty>\n  <mat-list *ngIf=\"delayedShowEmptyMapContent\">\n    <p class=\"map-empty mat-typography\">\n      {{'igo.integration.mapTool.empty' | translate}}</p>\n    <p *ngIf=\"layerAdditionAllowed && (searchToolInToolbar || catalogToolInToolbar || contextToolInToolbar)\" class=\"map-empty mat-typography\">\n      {{'igo.integration.mapTool.customize' | translate}}</p>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && searchToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z'> </path> </svg></mat-icon>\n      <h4 matLine class=\"search-tool mat-typography\" (click)=\"searchEmit()\">\n        {{'igo.integration.mapTool.search-tool' | translate}}\n      </h4>\n    </mat-list-item>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && catalogToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z'></path> </svg></mat-icon>\n      <h4 matLine class=\"catalog-tool mat-typography\" (click)=\"catalogEmit()\">\n        {{'igo.integration.mapTool.catalog-tool' | translate}}\n      </h4>\n    </mat-list-item>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && contextToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z'></path> </svg></mat-icon>\n      <h4 matLine class=\"context-tool mat-typography\" (click)=\"contextEmit()\">\n        {{'igo.integration.mapTool.context-tool' | translate}}\n      </h4>\n    </mat-list-item>\n  </mat-list>\n</ng-template>\n","import { Component, Input, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ToolComponent } from '@igo2/common';\nimport {\n  LayerListControlsEnum,\n  Layer,\n  IgoMap,\n  LayerListControlsOptions,\n  SearchSourceService,\n  sourceCanSearch,\n  ExportOptions\n} from '@igo2/geo';\n\nimport { ToolState } from './../../tool/tool.state';\nimport { MapState } from './../map.state';\nimport { ImportExportMode, ImportExportState } from '../../import-export/import-export.state';\n\n@ToolComponent({\n  name: 'mapDetails',\n  title: 'igo.integration.tools.map',\n  icon: 'map'\n})\n@Component({\n  selector: 'igo-map-details-tool',\n  templateUrl: './map-details-tool.component.html',\n  styleUrls: ['./map-details-tool.component.scss']\n})\nexport class MapDetailsToolComponent implements OnInit {\n  public delayedShowEmptyMapContent: boolean = false;\n\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\n\n  @Input() expandLegendOfVisibleLayers: boolean = false;\n\n  @Input() updateLegendOnResolutionChange: boolean = false;\n\n  @Input() ogcButton: boolean = true;\n\n  @Input() timeButton: boolean = true;\n\n  @Input() layerListControls: LayerListControlsOptions = {};\n\n  @Input() queryBadge: boolean = false;\n\n  @Input() layerAdditionAllowed: boolean = true;\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get layers$(): Observable<Layer[]> {\n    return this.map.layers$.pipe(\n      map((layers) =>\n        layers.filter(\n          (layer) =>\n            layer.showInLayerList !== false &&\n            (!this.excludeBaseLayers || !layer.baseLayer)\n        )\n      )\n    );\n  }\n\n  get excludeBaseLayers(): boolean {\n    return this.layerListControls.excludeBaseLayers || false;\n  }\n\n  get layerFilterAndSortOptions(): any {\n    const filterSortOptions = Object.assign(\n      {\n        showToolbar: LayerListControlsEnum.default\n      },\n      this.layerListControls\n    );\n\n    switch (this.layerListControls.showToolbar) {\n      case LayerListControlsEnum.always:\n        filterSortOptions.showToolbar = LayerListControlsEnum.always;\n        break;\n      case LayerListControlsEnum.never:\n        filterSortOptions.showToolbar = LayerListControlsEnum.never;\n        break;\n      default:\n        break;\n    }\n    return filterSortOptions;\n  }\n\n  get searchToolInToolbar(): boolean {\n    return (\n      this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 &&\n      this.searchSourceService\n        .getSources()\n        .filter(sourceCanSearch)\n        .filter((s) => s.available && s.getType() === 'Layer').length > 0\n    );\n  }\n\n  get catalogToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n  }\n\n  get contextToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n  }\n\n  constructor(\n    private mapState: MapState,\n    private toolState: ToolState,\n    private searchSourceService: SearchSourceService,\n    private cdRef: ChangeDetectorRef,\n    private importExportState: ImportExportState\n  ) {}\n\n  ngOnInit(): void {\n    // prevent message to be shown too quickly. Waiting for layers\n    setTimeout(() => {\n      this.delayedShowEmptyMapContent = true;\n      this.cdRef.detectChanges();\n    }, 250);\n  }\n\n  searchEmit() {\n    this.toolState.toolbox.activateTool('searchResults');\n  }\n\n  catalogEmit() {\n    this.toolState.toolbox.activateTool('catalog');\n  }\n\n  contextEmit() {\n    this.toolState.toolbox.activateTool('contextManager');\n  }\n\n  activateExport(layer: Layer) {\n    let id = layer.id;\n    if (layer.options.workspace?.workspaceId) {\n      id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n    }\n    this.importExportState.setsExportOptions({ layers: [id] } as ExportOptions);\n    this.importExportState.setMode(ImportExportMode.export);\n    this.toolState.toolbox.activateTool('importExport');\n  }\n}\n","<mat-tab-group>\n\n  <mat-tab [label]=\"'igo.integration.tools.map' | translate\">\n    <igo-layer-list\n      [map]=\"map\"\n      igoLayerListBinding\n      [excludeBaseLayers]=\"excludeBaseLayers\"\n      [layerFilterAndSortOptions]=\"layerFilterAndSortOptions\"\n      [expandLegendOfVisibleLayers]=\"expandLegendOfVisibleLayers\"\n      [toggleLegendOnVisibilityChange]=\"toggleLegendOnVisibilityChange\"\n      [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\"\n      [floatLabel]=\"false\"\n      [queryBadge]=\"queryBadge\">\n\n      <ng-template #igoLayerItemToolbar let-layer=\"layer\">\n        <!-- <igo-download-button [layer]=\"layer\"></igo-download-button> -->\n        <igo-workspace-button [layer]=\"layer\"></igo-workspace-button>\n        <igo-export-button [layer]=\"layer\" (click)=\"activateExport(layer)\"></igo-export-button>\n        <igo-ogc-filter-button [header]=\"ogcButton\" [layer]=\"layer\"></igo-ogc-filter-button>\n        <igo-time-filter-button [header]=\"timeButton\" [layer]=\"layer\"></igo-time-filter-button>\n        <igo-track-feature-button [trackFeature]=\"true\" [layer]=\"layer\"></igo-track-feature-button>\n        <igo-metadata-button [layer]=\"layer\"></igo-metadata-button>\n      </ng-template>\n\n    </igo-layer-list>\n  </mat-tab>\n\n  <mat-tab [label]=\"'igo.integration.tools.contexts' | translate\">\n    <igo-context-list igoContextListBinding></igo-context-list>\n  </mat-tab>\n\n</mat-tab-group>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport {\n  LayerListControlsEnum,\n  LayerListControlsOptions,\n  IgoMap,\n  ExportOptions,\n  Layer\n} from '@igo2/geo';\nimport { MapState } from './../map.state';\nimport { ImportExportMode, ImportExportState } from '../../import-export/import-export.state';\nimport { ToolState } from '../../tool/tool.state';\n\n/**\n * Tool to browse a map's layers or to choose a different map\n */\n@ToolComponent({\n  name: 'map',\n  title: 'igo.integration.tools.map',\n  icon: 'map'\n})\n@Component({\n  selector: 'igo-map-tool',\n  templateUrl: './map-tool.component.html',\n  styleUrls: ['./map-tool.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapToolComponent {\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\n\n  @Input() expandLegendOfVisibleLayers: boolean = false;\n\n  @Input() updateLegendOnResolutionChange: boolean = false;\n\n  @Input() ogcButton: boolean = true;\n\n  @Input() timeButton: boolean = true;\n\n  @Input() layerListControls: LayerListControlsOptions = {};\n\n  @Input() queryBadge: boolean = false;\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get excludeBaseLayers(): boolean {\n    return this.layerListControls.excludeBaseLayers || false;\n  }\n\n  get layerFilterAndSortOptions(): any {\n    const filterSortOptions = Object.assign(\n      {\n        showToolbar: LayerListControlsEnum.default\n      },\n      this.layerListControls\n    );\n\n    switch (this.layerListControls.showToolbar) {\n      case LayerListControlsEnum.always:\n        filterSortOptions.showToolbar = LayerListControlsEnum.always;\n        break;\n      case LayerListControlsEnum.never:\n        filterSortOptions.showToolbar = LayerListControlsEnum.never;\n        break;\n      default:\n        break;\n    }\n    return filterSortOptions;\n  }\n\n  constructor(\n    private mapState: MapState,\n    private toolState: ToolState,\n    private importExportState: ImportExportState\n  ) {}\n\n  activateExport(layer: Layer) {\n    let id = layer.id;\n    if (layer.options.workspace?.workspaceId) {\n      id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n    }\n    this.importExportState.setsExportOptions({ layers: [id] } as ExportOptions);\n    this.importExportState.setMode(ImportExportMode.export);\n    this.toolState.toolbox.activateTool('importExport');\n  }\n}\n","<mat-tab-group\n  #tabGroup\n  [selectedIndex]=\"layerListToolState.selectedTab$ | async\"\n  (selectedTabChange)=\"tabChanged($event)\">\n\n  <mat-tab [label]=\"'igo.integration.tools.layers' | translate\">\n    <igo-layer-list *ngIf=\"(layers$ | async).length !== 0; else emptyLayers\"\n      igoLayerListBinding\n      [excludeBaseLayers]=\"excludeBaseLayers\"\n      [layerFilterAndSortOptions]=\"layerFilterAndSortOptions\"\n      [expandLegendOfVisibleLayers]=\"expandLegendOfVisibleLayers\"\n      [toggleLegendOnVisibilityChange]=\"toggleLegendOnVisibilityChange\"\n      [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\"\n      [floatLabel]=\"false\"\n      [queryBadge]=\"queryBadge\"\n      [map]=\"map\"\n      (appliedFilterAndSort)= onLayerListChange($event)>\n\n      <ng-template #igoLayerItemToolbar let-layer=\"layer\">\n        <igo-metadata-button [layer]=\"layer\"></igo-metadata-button>\n        <igo-track-feature-button [trackFeature]=\"true\" [layer]=\"layer\"></igo-track-feature-button>\n        <igo-time-filter-button *ngIf=\"isTimeFilterButton(layer)\" [header]=\"timeButton\" [layer]=\"layer\"\n                                (click)=\"activateTimeFilter()\"></igo-time-filter-button>\n        <igo-ogc-filter-button *ngIf=\"isOGCFilterButton(layer)\" [header]=\"ogcButton\" [layer]=\"layer\"\n                                (click)=\"activateOgcFilter()\"></igo-ogc-filter-button>\n        <igo-export-button *ngIf=\"isExportButton(layer)\" [layer]=\"layer\" (click)=\"activateExport(layer)\"></igo-export-button>\n        <igo-workspace-button [layer]=\"layer\"></igo-workspace-button>\n      </ng-template>\n    </igo-layer-list>\n  </mat-tab>\n\n  <mat-tab [label]=\"'igo.integration.tools.legend' | translate\">\n    <igo-layer-legend-list *ngIf=\"showAllLegend()\"\n      igoLayerLegendListBinding\n      [allowShowAllLegends]=\"allowShowAllLegends\"\n      [showAllLegendsValue]=\"(showAllLegendsValue$ | async)\"\n      (allLegendsShown)=\"onShowAllLegends($event)\"\n      [excludeBaseLayers]=\"excludeBaseLayers\"\n      [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\">\n    </igo-layer-legend-list>\n    <ng-template *ngIf=\"(layers$ | async).length !== 0; else emptyLayers\"></ng-template>\n\n    <p class=\"map-empty mat-typography\"\n      *ngIf=\"!allowShowAllLegends && (layers$ | async).length !== 0 && (visibleOrInRangeLayers$ | async).length === 0\">\n      {{ ((visibleLayers$ | async).length) ? ('igo.integration.mapTool.noLayersInRange' | translate) :  ('igo.integration.mapTool.noLayersVisible' | translate) }}\n    </p>\n  </mat-tab>\n\n    <ng-template #emptyLayers>\n      <mat-list *ngIf=\"delayedShowEmptyMapContent\">\n        <p class=\"map-empty mat-typography\">\n          {{'igo.integration.mapTool.empty' | translate}}</p>\n        <p *ngIf=\"layerAdditionAllowed && (searchToolInToolbar || catalogToolInToolbar || contextToolInToolbar)\"\n          class=\"map-empty mat-typography\">\n          {{'igo.integration.mapTool.customize' | translate}}</p>\n\n        <mat-list-item *ngIf=\"layerAdditionAllowed && searchToolInToolbar\">\n          <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%'\n              preserveAspectRatio='xMidYMid meet' focusable='false'>\n              <path\n                d='M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z'>\n              </path>\n            </svg></mat-icon>\n          <h4 matLine class=\"search-tool mat-typography\" (click)=\"searchEmit()\">\n            {{'igo.integration.mapTool.search-tool' | translate}}\n          </h4>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"layerAdditionAllowed && catalogToolInToolbar\">\n          <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%'\n              preserveAspectRatio='xMidYMid meet' focusable='false'>\n              <path\n                d='M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z'>\n              </path>\n            </svg></mat-icon>\n          <h4 matLine class=\"catalog-tool mat-typography\" (click)=\"catalogEmit()\">\n            {{'igo.integration.mapTool.catalog-tool' | translate}}\n          </h4>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"layerAdditionAllowed && contextToolInToolbar\">\n          <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%'\n              preserveAspectRatio='xMidYMid meet' focusable='false'>\n              <path\n                d='M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z'>\n              </path>\n            </svg></mat-icon>\n          <h4 matLine class=\"context-tool mat-typography\" (click)=\"contextEmit()\">\n            {{'igo.integration.mapTool.context-tool' | translate}}\n          </h4>\n        </mat-list-item>\n      </mat-list>\n    </ng-template>\n</mat-tab-group>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit,\n  ViewChild,\n  OnDestroy\n} from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport {\n  LayerListControlsEnum,\n  LayerListControlsOptions,\n  IgoMap,\n  SearchSourceService,\n  sourceCanSearch,\n  Layer,\n  ExportOptions,\n  VectorLayer\n} from '@igo2/geo';\n\nimport { LayerListToolState } from '../layer-list-tool.state';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { ToolState } from '../../tool/tool.state';\nimport { MapState } from '../map.state';\nimport { BehaviorSubject, Observable, Subscription, combineLatest } from 'rxjs';\nimport { map, debounceTime } from 'rxjs/operators';\nimport { ImportExportMode, ImportExportState } from '../../import-export/import-export.state';\n/**\n * Tool to browse a map's layers or to choose a different map\n */\n@ToolComponent({\n  name: 'mapTools',\n  title: 'igo.integration.tools.map',\n  icon: 'map'\n})\n@Component({\n  selector: 'igo-map-tools',\n  templateUrl: './map-tools.component.html',\n  styleUrls: ['./map-tools.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapToolsComponent implements OnInit, OnDestroy {\n  layers$: BehaviorSubject<Layer[]> = new BehaviorSubject([]);\n  showAllLegendsValue$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  private resolution$$: Subscription;\n  private visibleOrInRangeLayers$$: Subscription;\n  public delayedShowEmptyMapContent: boolean = false;\n\n  @Input() allowShowAllLegends: boolean = false;\n\n  @Input() showAllLegendsValue: boolean = false;\n\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\n\n  @Input() expandLegendOfVisibleLayers: boolean = false;\n\n  @Input() updateLegendOnResolutionChange: boolean = false;\n\n  @Input() selectedTabAtOpening: string;\n\n  @Input() ogcButton: boolean = true;\n\n  @Input() timeButton: boolean = true;\n\n  @Input() layerAdditionAllowed: boolean = true;\n\n  @Input()\n  get layerListControls(): LayerListControlsOptions {\n    return this._layerListControls;\n  }\n  set layerListControls(value: LayerListControlsOptions) {\n    const stateOptions = this.layerListToolState.getLayerListControls();\n    const stateKeyword = stateOptions.keyword;\n    const stateOnlyVisible = stateOptions.onlyVisible;\n    const stateSortAlpha = stateOptions.sortAlpha;\n\n    value.keyword = stateKeyword !== '' ? stateKeyword : value.keyword;\n    value.onlyVisible =\n      stateOnlyVisible !== undefined ? stateOnlyVisible : value.onlyVisible;\n    value.sortAlpha =\n      stateSortAlpha !== undefined ? stateSortAlpha : value.sortAlpha;\n\n    value.onlyVisible =\n      value.onlyVisible === undefined ? false : value.onlyVisible;\n    value.sortAlpha = value.sortAlpha === undefined ? false : value.sortAlpha;\n\n    this._layerListControls = value;\n  }\n  private _layerListControls = {};\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  @Input() queryBadge: boolean = false;\n\n  get visibleOrInRangeLayers$(): Observable<Layer[]> {\n    return this.layers$.pipe(\n      map((layers) =>\n        layers.filter(\n          (layer) => layer.visible$.value && layer.isInResolutionsRange$.value\n        )\n      )\n    );\n  }\n\n  get visibleLayers$(): Observable<Layer[]> {\n    return this.layers$.pipe(\n      map((layers) => layers.filter((layer) => layer.visible$.value))\n    );\n  }\n\n  get excludeBaseLayers(): boolean {\n    return this.layerListControls.excludeBaseLayers || false;\n  }\n\n  get layerFilterAndSortOptions(): LayerListControlsOptions {\n    const filterSortOptions = Object.assign(\n      {\n        showToolbar: LayerListControlsEnum.default\n      },\n      this.layerListControls\n    );\n\n    switch (this.layerListControls.showToolbar) {\n      case LayerListControlsEnum.always:\n        filterSortOptions.showToolbar = LayerListControlsEnum.always;\n        break;\n      case LayerListControlsEnum.never:\n        filterSortOptions.showToolbar = LayerListControlsEnum.never;\n        break;\n      default:\n        break;\n    }\n    return filterSortOptions;\n  }\n\n  @ViewChild('tabGroup', { static: true }) tabGroup;\n\n  get searchToolInToolbar(): boolean {\n    return (\n      this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 &&\n      this.searchSourceService\n        .getSources()\n        .filter(sourceCanSearch)\n        .filter((s) => s.available && s.getType() === 'Layer').length > 0\n    );\n  }\n\n  get catalogToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n  }\n\n  get contextToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n  }\n\n  constructor(\n    public layerListToolState: LayerListToolState,\n    private toolState: ToolState,\n    public mapState: MapState,\n    private searchSourceService: SearchSourceService,\n    private importExportState: ImportExportState\n  ) {}\n\n  ngOnInit(): void {\n    this.selectedTab();\n    this.resolution$$ = combineLatest([\n      this.map.layers$,\n      this.map.viewController.resolution$\n    ])\n      .pipe(debounceTime(10))\n      .subscribe((bunch: [Layer[], number]) => {\n        this.layers$.next(\n          bunch[0].filter(\n            (layer) =>\n              layer.showInLayerList !== false &&\n              (!this.excludeBaseLayers || !layer.baseLayer)\n          )\n        );\n      });\n\n    if (this.allowShowAllLegends) {\n      this.mapState.showAllLegendsValue =\n        this.mapState.showAllLegendsValue !== undefined\n          ? this.mapState.showAllLegendsValue\n          : this.showAllLegendsValue || false;\n      this.showAllLegendsValue$.next(this.mapState.showAllLegendsValue);\n    } else {\n      this.showAllLegendsValue$.next(false);\n    }\n\n    // prevent message to be shown too quickly. Waiting for layers\n    setTimeout(() => (this.delayedShowEmptyMapContent = true), 250);\n  }\n\n  ngOnDestroy(): void {\n    this.resolution$$.unsubscribe();\n    if (this.visibleOrInRangeLayers$$) {\n      this.visibleOrInRangeLayers$$.unsubscribe();\n    }\n  }\n\n  onShowAllLegends(event) {\n    this.mapState.showAllLegendsValue = event;\n    this.showAllLegendsValue$.next(event);\n  }\n\n  private selectedTab() {\n    const userSelectedTab = this.layerListToolState.selectedTab$.value;\n    if (userSelectedTab !== undefined) {\n      this.layerListToolState.setSelectedTab(userSelectedTab);\n    } else {\n      if (this.selectedTabAtOpening === 'legend') {\n        this.layerListToolState.setSelectedTab(1);\n      } else {\n        this.layerListToolState.setSelectedTab(0);\n      }\n    }\n  }\n\n  public tabChanged(tab: MatTabChangeEvent) {\n    this.layerListToolState.setSelectedTab(tab.index);\n    this.layers$.next(\n      this.map.layers.filter(\n        (layer) =>\n          layer.showInLayerList !== false &&\n          (!this.excludeBaseLayers || !layer.baseLayer)\n      )\n    );\n  }\n\n  onLayerListChange(appliedFilters: LayerListControlsOptions) {\n    this.layerListToolState.setKeyword(appliedFilters.keyword);\n    this.layerListToolState.setSortAlpha(appliedFilters.sortAlpha);\n    this.layerListToolState.setOnlyVisible(appliedFilters.onlyVisible);\n  }\n\n  showAllLegend() {\n    if (this.layers$.getValue().length === 0) {\n      return false;\n    } else if (\n      this.layers$.getValue().length !== 0 &&\n      this.allowShowAllLegends === false\n    ) {\n      let visibleOrInRangeLayers;\n      this.visibleOrInRangeLayers$$ = this.visibleOrInRangeLayers$.subscribe((value) => {\n        value.length === 0\n          ? (visibleOrInRangeLayers = false)\n          : (visibleOrInRangeLayers = true);\n      });\n\n      if (visibleOrInRangeLayers === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  activateExport(layer: Layer) {\n    let id = layer.id;\n    if (layer.options.workspace?.workspaceId) {\n      id = layer.options.workspace.workspaceId !== layer.id ? layer.options.workspace.workspaceId : layer.id;\n    }\n    this.importExportState.setsExportOptions({ layers: [id] } as ExportOptions);\n    this.importExportState.setMode(ImportExportMode.export);\n    this.toolState.toolbox.activateTool('importExport');\n  }\n\n  activateTimeFilter() {\n    this.toolState.toolbox.activateTool('activeTimeFilter');\n  }\n\n  activateOgcFilter() {\n    this.toolState.toolbox.activateTool('activeOgcFilter');\n  }\n\n  searchEmit() {\n    this.toolState.toolbox.activateTool('searchResults');\n  }\n\n  catalogEmit() {\n    this.toolState.toolbox.activateTool('catalog');\n  }\n\n  contextEmit() {\n    this.toolState.toolbox.activateTool('contextManager');\n  }\n\n  isTimeFilterButton(layer): boolean {\n    const options = layer.dataSource.options;\n    return this.timeButton && options.timeFilterable && options.timeFilter;\n  }\n\n  isOGCFilterButton(layer): boolean {\n    const options = layer.dataSource.options;\n    return this.ogcButton && options.ogcFilters && options.ogcFilters.enabled &&\n    (options.ogcFilters.pushButtons || options.ogcFilters.checkboxes || options.ogcFilters.radioButtons\n      || options.ogcFilters.select || options.ogcFilters.editable);\n  }\n\n  isExportButton(layer: Layer): boolean {\n    if (\n      (layer instanceof VectorLayer && layer.exportable === true) ||\n      (layer.dataSource.options.download && layer.dataSource.options.download.url) ||\n      (layer.options.workspace?.enabled && layer.options.workspace?.workspaceId !== layer.id))\n      {\n          return true;\n      }\n    return false;\n  }\n}\n","<igo-layer-legend-list *ngIf=\"showAllLegend()\"\n  igoLayerLegendListBinding\n  [excludeBaseLayers]=\"excludeBaseLayers\"\n  [allowShowAllLegends]=\"allowShowAllLegends\"\n  [updateLegendOnResolutionChange]=\"updateLegendOnResolutionChange\"\n  [showAllLegendsValue]=\"(showAllLegendsValue$ | async)\"\n  (allLegendsShown)=\"onShowAllLegends($event)\">\n</igo-layer-legend-list>\n<ng-template *ngIf=\"(layers$ | async).length !== 0; else emptyLayers\"></ng-template>\n\n<p class=\"map-empty mat-typography\"\n  *ngIf=\"!allowShowAllLegends && (layers$ | async).length !== 0 && (visibleOrInRangeLayers$ | async).length === 0\">\n  {{ ((visibleLayers$ | async).length) ? ('igo.integration.mapTool.noLayersInRange' | translate) :  ('igo.integration.mapTool.noLayersVisible' | translate) }}\n</p>\n\n\n<ng-template #emptyLayers>\n  <mat-list *ngIf=\"delayedShowEmptyMapContent\">\n    <p class=\"map-empty mat-typography\">\n      {{'igo.integration.mapTool.empty' | translate}}</p>\n    <p *ngIf=\"layerAdditionAllowed && (searchToolInToolbar || catalogToolInToolbar || contextToolInToolbar)\" class=\"map-empty mat-typography\">\n      {{'igo.integration.mapTool.customize' | translate}}</p>\n\n    <mat-list-item *ngIf=\"layerAdditionAllowed && searchToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z'> </path> </svg></mat-icon>\n      <h4 matLine class=\"search-tool mat-typography\" (click)=\"searchEmit()\">\n        {{'igo.integration.mapTool.search-tool' | translate}}\n      </h4>\n    </mat-list-item>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && catalogToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M17,14H19V17H22V19H19V22H17V19H14V17H17V14M11,16L2,9L11,2L20,9L11,16M11,18.54L12,17.75V18C12,18.71 12.12,19.39 12.35,20L11,21.07L2,14.07L3.62,12.81L11,18.54Z'></path> </svg></mat-icon>\n      <h4 matLine class=\"catalog-tool mat-typography\" (click)=\"catalogEmit()\">\n        {{'igo.integration.mapTool.catalog-tool' | translate}}\n      </h4>\n    </mat-list-item>\n    <mat-list-item *ngIf=\"layerAdditionAllowed && contextToolInToolbar\">\n      <mat-icon mat-list-icon> <svg viewBox='0 0 24 24' fit='' height='100%' width='100%' preserveAspectRatio='xMidYMid meet' focusable='false'> <path d='M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z'></path> </svg></mat-icon>\n      <h4 matLine class=\"context-tool mat-typography\" (click)=\"contextEmit()\">\n        {{'igo.integration.mapTool.context-tool' | translate}}\n      </h4>\n    </mat-list-item>\n  </mat-list>\n</ng-template>\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable, Subscription, BehaviorSubject, ReplaySubject, combineLatest } from 'rxjs';\nimport { map, debounceTime } from 'rxjs/operators';\n\nimport { ToolComponent } from '@igo2/common';\nimport {\n  Layer,\n  IgoMap,\n  LayerListControlsOptions,\n  SearchSourceService,\n  sourceCanSearch\n} from '@igo2/geo';\n\nimport { ToolState } from './../../tool/tool.state';\nimport { MapState } from './../map.state';\n\n@ToolComponent({\n  name: 'mapLegend',\n  title: 'igo.integration.tools.legend',\n  icon: 'format-list-bulleted-type'\n})\n@Component({\n  selector: 'igo-map-legend-tool',\n  templateUrl: './map-legend-tool.component.html',\n  styleUrls: ['./map-legend-tool.component.scss']\n})\nexport class MapLegendToolComponent implements OnInit, OnDestroy {\n  public delayedShowEmptyMapContent: boolean = false;\n\n  layers$: BehaviorSubject<Layer[]> = new BehaviorSubject([]);\n  showAllLegendsValue$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  change$ = new ReplaySubject<void>(1);\n\n  private resolution$$: Subscription;\n  private visibleOrInRangeLayers$$: Subscription;\n\n  @Input() updateLegendOnResolutionChange: boolean = false;\n\n  @Input() layerAdditionAllowed: boolean = true;\n\n  @Input() allowShowAllLegends: boolean = false;\n\n  @Input() showAllLegendsValue: boolean = false;\n\n  @Input() layerListControls: LayerListControlsOptions = {};\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get visibleOrInRangeLayers$(): Observable<Layer[]> {\n    return this.layers$.pipe(\n      map(layers =>\n        layers.filter(\n          layer => layer.visible$.value && layer.isInResolutionsRange$.value\n        )\n      )\n    );\n  }\n\n  get visibleLayers$(): Observable<Layer[]> {\n    return this.layers$.pipe(\n      map(layers => layers.filter(layer => layer.visible$.value))\n    );\n  }\n\n  get excludeBaseLayers(): boolean {\n    return this.layerListControls.excludeBaseLayers || false;\n  }\n\n  get searchToolInToolbar(): boolean {\n    return (\n      this.toolState.toolbox.getToolbar().indexOf('searchResults') !== -1 &&\n      this.searchSourceService\n        .getSources()\n        .filter(sourceCanSearch)\n        .filter(s => s.available && s.getType() === 'Layer').length > 0\n    );\n  }\n\n  get catalogToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('catalog') !== -1;\n  }\n\n  get contextToolInToolbar(): boolean {\n    return this.toolState.toolbox.getToolbar().indexOf('contextManager') !== -1;\n  }\n  constructor(\n    private mapState: MapState,\n    private toolState: ToolState,\n    private searchSourceService: SearchSourceService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.resolution$$ = combineLatest([\n      this.map.layers$,\n      this.map.viewController.resolution$\n    ])\n      .pipe(debounceTime(10))\n      .subscribe((bunch: [Layer[], number]) => {\n        this.layers$.next(\n          bunch[0].filter(\n            layer =>\n              layer.showInLayerList !== false &&\n              (!this.excludeBaseLayers || !layer.baseLayer)\n          )\n        );\n      });\n\n    if (this.allowShowAllLegends) {\n      this.mapState.showAllLegendsValue =\n        this.mapState.showAllLegendsValue !== undefined\n          ? this.mapState.showAllLegendsValue\n          : this.showAllLegendsValue || false;\n      this.showAllLegendsValue$.next(this.mapState.showAllLegendsValue);\n    } else {\n      this.showAllLegendsValue$.next(false);\n    }\n\n    // prevent message to be shown too quickly. Waiting for layers\n    setTimeout(() => {\n      this.delayedShowEmptyMapContent = true;\n      this.cdRef.detectChanges();\n    }, 250);\n  }\n\n  onShowAllLegends(event) {\n    this.mapState.showAllLegendsValue = event;\n    this.showAllLegendsValue$.next(event);\n  }\n\n  showAllLegend() {\n    if (this.layers$.getValue().length === 0) {\n      return false;\n    } else if (\n      this.layers$.getValue().length !== 0 &&\n      this.allowShowAllLegends === false\n    ) {\n      let visibleOrInRangeLayers;\n      this.visibleOrInRangeLayers$$ = this.visibleOrInRangeLayers$.subscribe(value => {\n        value.length === 0\n          ? (visibleOrInRangeLayers = false)\n          : (visibleOrInRangeLayers = true);\n      });\n\n      if (visibleOrInRangeLayers === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  ngOnDestroy(): void {\n    this.resolution$$.unsubscribe();\n    if (this.visibleOrInRangeLayers$$) {\n      this.visibleOrInRangeLayers$$.unsubscribe();\n    }\n  }\n\n  searchEmit() {\n    this.toolState.toolbox.activateTool('searchResults');\n  }\n\n  catalogEmit() {\n    this.toolState.toolbox.activateTool('catalog');\n  }\n\n  contextEmit() {\n    this.toolState.toolbox.activateTool('contextManager');\n  }\n}\n","<div *ngIf=\"userControlledLayerList.length; else noLayersBlock\" class=\"igo-swipe-select-container\">\n    <form class=\"igo-form\" [formGroup]=\"form\">\n        <mat-form-field>\n            <mat-label>{{'igo.integration.advanced-map-tool.advanced-swipe.swipe-select' | translate}}</mat-label>\n            <mat-select formControlName=\"layers\" multiple>\n                <mat-option [value]=\"1\" (click)=\"selectAll(e)\" #e>\n                    {{'igo.integration.advanced-map-tool.advanced-swipe.selectAll' | translate}}\n                </mat-option>\n                <mat-divider></mat-divider>\n                <mat-option *ngFor=\"let layer of userControlledLayerList\" [value]=\"layer\" (click)=\"applyNewLayers(e)\">{{layer.title}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n\n    <mat-slide-toggle class=\"swipe-toggle mat-typography\"\n        [checked]=\"swipe\"\n        [labelPosition]=\"'before'\"\n        (change)=\"startSwipe($event.checked)\">\n        {{'igo.integration.advanced-map-tool.advanced-swipe.swipe' | translate}}\n    </mat-slide-toggle> \n</div>\n\n<ng-template #noLayersBlock>\n    <mat-list>\n        <p class=\"map-empty mat-typography\">\n            {{'igo.integration.advanced-map-tool.advanced-swipe.empty' | translate}}</p>\n        <p class=\"map-empty mat-typography\">\n            {{'igo.integration.advanced-map-tool.advanced-swipe.customize' | translate}}</p>\n        <mat-list-item>\n            <mat-icon mat-list-icon svgIcon=\"magnify\"></mat-icon>\n            <h4 matLine class=\"search-tool mat-typography\" (click)=\"searchEmit()\">\n                {{'igo.integration.advanced-map-tool.advanced-swipe.search-tool' | translate}}\n            </h4>\n        </mat-list-item>\n        <mat-list-item>\n            <mat-icon mat-list-icon svgIcon=\"layers-plus\"></mat-icon>\n            <h4 matLine class=\"catalog-tool mat-typography\" (click)=\"catalogEmit()\">\n                {{'igo.integration.advanced-map-tool.advanced-swipe.catalog-tool' | translate}}\n            </h4>\n        </mat-list-item>\n        <mat-list-item>\n            <mat-icon mat-list-icon svgIcon=\"star\"></mat-icon>\n            <h4 matLine class=\"context-tool mat-typography\" (click)=\"contextEmit()\">\n                {{'igo.integration.advanced-map-tool.advanced-swipe.context-tool' | translate}}\n            </h4>\n        </mat-list-item>\n    </mat-list>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ContextService, DetailedContext } from '@igo2/context';\nimport { IgoMap, Layer, VectorLayer } from '@igo2/geo';\nimport { MapState } from '../../map.state';\nimport { ToolState } from '../../../tool/tool.state';\n\n@Component({\n  selector: 'igo-advanced-swipe',\n  templateUrl: './advanced-swipe.component.html',\n  styleUrls: ['./advanced-swipe.component.scss']\n})\n\nexport class AdvancedSwipeComponent implements OnInit, OnDestroy {\n  public swipe: boolean = false;\n  public layerList: Layer[];\n  public userControlledLayerList: Layer[];\n  public form: FormGroup;\n  public layers: VectorLayer[];\n  public res: DetailedContext;\n  public listForSwipe: Layer[];\n\n  /**\n   * Get an active map state\n   */\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  constructor(\n    public mapState: MapState,\n    private contextService: ContextService,\n    private formBuilder: FormBuilder,\n    private toolState: ToolState) {\n      this.buildForm();\n  }\n\n  /**\n   * Get the list of layers for swipe\n   * @internal\n   */\n   ngOnInit() {\n    this.map.layers$.subscribe(ll => this.userControlledLayerList = ll.filter(layer =>\n      (!layer.baseLayer && layer.showInLayerList && layer.displayed)));\n  }\n\n  /**\n   * Desactivate the swipe\n   * @internal\n   */\n  ngOnDestroy(){\n    this.swipe = false;\n    this.map.swipeEnabled$.next(this.swipe);\n  }\n\n  /**\n   * Build a form for choise of the layers\n   */\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      layers: ['', [Validators.required]]\n    });\n  }\n\n  /**\n   * Activate the swipe, send a list of layers for a swipe-tool\n   */\n  startSwipe(toggle: boolean){\n    this.swipe = toggle;\n    this.map.swipeEnabled$.next(toggle);\n    this.listForSwipe = [];\n    for (const layer of this.form.value.layers) {\n      this.listForSwipe.push(layer);\n    }\n    this.map.selectedFeatures$.next(this.listForSwipe);\n  }\n\n  /**\n   * Restart a swipe for a new layers-list\n   */\n  applyNewLayers(e) {\n    this.startSwipe(false); // l'approche KISS\n    this.startSwipe(true);\n    if (e._selected) {e._selected = false; }\n    const allLayers = this.userControlledLayerList.length;\n    const selectedLayers = this.form.controls.layers.value.length;\n    if (selectedLayers === allLayers){\n      e._selected = true;\n    }\n  }\n\n  /**\n   * Select all list of layers and restart a tool\n   */\n  selectAll(e) {\n    if (e._selected) {\n      this.form.controls.layers.setValue(this.userControlledLayerList);\n      e._selected = true;\n    }\n    else {\n      this.form.controls.layers.setValue([]);\n    }\n    this.startSwipe(false);\n    this.startSwipe(true);\n  }\n\n  /**\n   * Open search tool\n   */\n  searchEmit() {\n    this.toolState.toolbox.activateTool('searchResults');\n  }\n\n  /**\n   * Open catalog\n   */\n  catalogEmit() {\n    this.toolState.toolbox.activateTool('catalog');\n  }\n\n  /**\n   * Open context manager\n   */\n  contextEmit() {\n    this.toolState.toolbox.activateTool('contextManager');\n  }\n}\n","<mat-form-field *ngIf=\"units; else elseBlock\" class=\"coordinates\">\n    <textarea  #textArea matInput readonly rows=\"1\"\n      [placeholder]=\"'igo.integration.advanced-map-tool.advanced-coordinates.lon' | translate\"\n      [value]=\"coordinates[0]\"></textarea>\n</mat-form-field>\n<ng-template #elseBlock >\n  <mat-form-field class=\"coordinates\">\n    <textarea #textArea matInput readonly rows=\"1\"\n  [placeholder]=\"'igo.integration.advanced-map-tool.advanced-coordinates.est' | translate\"\n  [value]=\"coordinates[0]\"></textarea></mat-form-field>\n</ng-template>\n\n<mat-form-field *ngIf=\"units; else elseBlock2\" class=\"coordinates2\">\n    <textarea #textArea matInput readonly rows=\"1\"\n      [placeholder]=\"'igo.integration.advanced-map-tool.advanced-coordinates.lat' | translate\"\n      [value]=\"coordinates[1]\"></textarea>\n</mat-form-field>\n<ng-template #elseBlock2 >\n  <mat-form-field class=\"coordinates2\">  <textarea #textArea matInput readonly rows=\"1\"\n  [placeholder]=\"'igo.integration.advanced-map-tool.advanced-coordinates.nord' | translate\"\n  [value]=\"coordinates[1]\"></textarea></mat-form-field>\n</ng-template>\n\n<button class=\"igo-form-button-group\"\n    mat-raised-button\n    (click)=\"copyTextToClipboard()\">\n    <mat-icon svgIcon=\"content-copy\"></mat-icon>\n    {{ 'igo.integration.advanced-map-tool.advanced-coordinates.copy' | translate }}\n</button>\n\n<form class=\"igo-form\" [formGroup]=\"form\">\n  <mat-form-field class=\"igo-input-container\">\n    <mat-label>{{'igo.integration.advanced-map-tool.advanced-coordinates.coordSystem' | translate}}</mat-label>\n    <mat-select [(value)]=\"inputProj\">\n      <mat-option matTooltipShowDelay=\"500\"\n        *ngFor=\"let projection of (projections$ | async)\"\n        [value]=\"projection\"\n        (click)=\"$event.stopPropagation()\">\n        {{projection.translatedValue || projection.alias }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-slide-toggle class=\"center-toggle mat-typography\"\n    [checked]=\"center\"\n    [labelPosition]=\"'before'\"\n    (change)=\"displayCenter($event.checked)\">\n    {{'igo.integration.advanced-map-tool.advanced-coordinates.center' | translate}}\n  </mat-slide-toggle> \n</form>\n\n<p class=\"igo-zoom mat-typography\">{{'igo.integration.advanced-map-tool.advanced-coordinates.zoom' | translate}} {{map.viewController.getZoom() }}</p>\n<p class=\"igo-zoom mat-typography\">{{'igo.integration.advanced-map-tool.advanced-coordinates.scale' | translate}} {{ formattedScale$ | async }}</p>\n<p class=\"igo-zoom mat-typography\">{{'igo.integration.advanced-map-tool.advanced-coordinates.resolution' | translate}} {{map.viewController.getResolution() | number: '1.0-0' }}</p>","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { formatScale, IgoMap, InputProjections, ProjectionsLimitationsOptions } from '@igo2/geo';\nimport { MapState } from '../../map.state';\nimport { Clipboard } from '@igo2/utils';\nimport { MessageService, LanguageService, StorageService, StorageScope, ConfigService } from '@igo2/core';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { zoneMtm, zoneUtm, computeProjectionsConstraints } from '@igo2/geo';\nimport * as olproj from 'ol/proj';\n/**\n * Tool to display the coordinates and a cursor of the center of the map\n */\n@Component({\n  selector: 'igo-advanced-coordinates',\n  templateUrl: './advanced-coordinates.component.html',\n  styleUrls: ['./advanced-coordinates.component.scss']\n})\nexport class AdvancedCoordinatesComponent implements OnInit, OnDestroy {\n  public formattedScale$: BehaviorSubject<string> = new BehaviorSubject('');\n  public projections$: BehaviorSubject<InputProjections[]> = new BehaviorSubject([]);\n  public form: FormGroup;\n  public coordinates: string[];\n  private currentCenterDefaultProj: [number, number];\n  public center: boolean = this.storageService.get('centerToggle') as boolean;\n  private inMtmZone: boolean = true;\n  private inLambert2 = {32198: true, 3798: true};\n  private mapState$$: Subscription;\n  private _projectionsLimitations: ProjectionsLimitationsOptions = {};\n  private projectionsConstraints: ProjectionsLimitationsOptions;\n  private defaultProj: InputProjections = {\n    translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.wgs84', { code: 'EPSG:4326' }),\n    translateKey: 'wgs84', alias: 'WGS84', code: 'EPSG:4326', zone: ''\n  };\n  private currentZones = { utm: undefined, mtm: undefined };\n  public units: boolean = true;\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get inputProj(): InputProjections {\n    return this.form.get('inputProj').value;\n  }\n  set inputProj(value: InputProjections) {\n    this.form.patchValue({ inputProj: value });\n  }\n  get projectionsLimitations(): ProjectionsLimitationsOptions {\n    return this._projectionsLimitations || {};\n  }\n\n  @Input()\n  set projectionsLimitations(value: ProjectionsLimitationsOptions) {\n    this._projectionsLimitations = value;\n  }\n\n  constructor(\n    public mapState: MapState,\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private cdRef: ChangeDetectorRef,\n    private storageService: StorageService,\n    private config: ConfigService,\n    private formBuilder: FormBuilder) {\n      this.computeProjections();\n      this.buildForm();\n    }\n\n  /**\n   * Listen a state of the map, a state of a form, update the coordinates\n   */\n  ngOnInit(): void {\n    this.mapState$$ = combineLatest([this.map.viewController.state$.pipe(debounceTime(50)), this.form.valueChanges])\n        .subscribe(() => {\n      this.setScaleValue(this.map);\n      this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n      const currentMtmZone = zoneMtm(this.currentCenterDefaultProj[0]);\n      const currentUtmZone = zoneUtm(this.currentCenterDefaultProj[0]);\n      if (!this.inMtmZone && currentMtmZone !== this.currentZones.mtm) {\n        this.back2quebec();\n      }\n      let zoneChange = false;\n      if (currentMtmZone !== this.currentZones.mtm) {\n        this.currentZones.mtm = currentMtmZone;\n        zoneChange = true;\n      }\n      if (currentUtmZone !== this.currentZones.utm) {\n        this.currentZones.utm = currentUtmZone;\n        zoneChange = true;\n      }\n      if (zoneChange) {\n        this.updateProjectionsZoneChange();\n      }\n      this.checkLambert(this.currentCenterDefaultProj);\n      this.coordinates = this.getCoordinates();\n      this.cdRef.detectChanges();\n      this.storageService.set('currentProjection', this.inputProj, StorageScope.SESSION);\n    });\n\n    const tempInputProj = this.storageService.get('currentProjection') as InputProjections;\n    this.inputProj = this.projections$.value[0];\n    if (tempInputProj !== null)\n    {\n      const pos = this.positionInList(tempInputProj);\n      this.inputProj = this.projections$.value[pos];\n      this.updateZoneMtmUtm();\n    }\n    this.map.mapCenter$.next(this.center);\n    this.coordinates = this.getCoordinates();\n    this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n  }\n\n  ngOnDestroy(): void {\n    this.map.mapCenter$.next(false);\n    this.mapState$$.unsubscribe();\n  }\n\n  setScaleValue(map: IgoMap) {\n    this.formattedScale$.next(': ~ 1 / ' + formatScale(map.viewController.getScale()));\n  }\n  /**\n   * Coordinates of the center of the map on the appropriate systeme of coordinates\n   * @returns Array of two numbers\n   */\n  getCoordinates(): string[] {\n    this.currentZones.mtm = zoneMtm(this.currentCenterDefaultProj[0]);\n    this.currentZones.utm = zoneUtm(this.currentCenterDefaultProj[0]);\n    let coord;\n    const code = this.inputProj.code;\n    let decimal = 2;\n    if (code.includes('EPSG:4326') || code.includes('EPSG:4269')) {\n      decimal = 5;\n    }\n    this.units = (code === 'EPSG:4326' || code === 'EPSG:4269');\n    coord = this.map.viewController.getCenter(code).map(c => c.toFixed(decimal));\n    return coord;\n  }\n\n  /**\n   * Copy the coordinates to a clipboard\n   */\n  copyTextToClipboard(): void {\n    const successful = Clipboard.copy(this.coordinates.toString());\n    if (successful) {\n      const translate = this.languageService.translate;\n      const title = translate.instant(\n        'igo.integration.advanced-map-tool.advanced-coordinates.copyTitle'\n      );\n      const msg = translate.instant('igo.integration.advanced-map-tool.advanced-coordinates.copyMsg');\n      this.messageService.success(msg, title);\n    }\n  }\n\n  /**\n   * Display a cursor on the center of the map\n   */\n  displayCenter(toggle: boolean): void {\n    this.center = toggle;\n    this.map.mapCenter$.next(toggle);\n    this.storageService.set('centerToggle', toggle, StorageScope.SESSION);\n  }\n\n  /**\n   * Builder of the form\n   */\n  private buildForm(): void {\n    this.form = this.formBuilder.group({\n      inputProj: ['', [Validators.required]]\n    });\n  }\n\n  /**\n   * Update list of projections after changing of the state of the map\n   */\n  private updateProjectionsZoneChange(): void {\n    let modifiedProj = this.projections$.value;\n    const translate = this.languageService.translate;\n    modifiedProj.map(p => {\n      if (p.translateKey === 'mtm') {\n        const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n        if (zone) {\n          const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n          p.alias = `MTM ${zone}`;\n          p.code = code;\n          p.zone = `${zone}`;\n          p.translatedValue = translate.instant('igo.geo.importExportForm.projections.mtm', p);\n        }\n        else {\n          p.alias = '';\n          this.inMtmZone = false;\n          if (this.inputProj.translateKey === 'mtm') {\n            this.inputProj = this.projections$.value[0];\n          }\n        }\n      }\n      if (p.translateKey === 'utm') {\n        const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n        const code = `EPSG:326${zone}`;\n        p.alias = `UTM ${zone}`;\n        p.code = code;\n        p.zone = `${zone}`;\n        p.translatedValue = translate.instant('igo.geo.importExportForm.projections.utm', p);\n      }\n    });\n    modifiedProj = modifiedProj.filter(p => p.alias !== '');\n    this.projections$.next(modifiedProj);\n  }\n\n  /**\n   * Create a list of currents projections\n   */\n  private computeProjections(): void {\n    this.projectionsConstraints = computeProjectionsConstraints(this.projectionsLimitations);\n    const projections: InputProjections[] = [];\n\n    if (!this.currentCenterDefaultProj) {\n      this.currentCenterDefaultProj = this.map.viewController.getCenter(this.defaultProj.code);\n    }\n\n    const translate = this.languageService.translate;\n    if (this.projectionsConstraints.wgs84) {\n      projections.push({\n        translatedValue: translate.instant('igo.geo.importExportForm.projections.wgs84', { code: 'EPSG:4326' }),\n        translateKey: 'wgs84', alias: 'WGS84', code: 'EPSG:4326', zone: ''\n      });\n    }\n\n    if (this.projectionsConstraints.nad83) {\n      projections.push({\n        translatedValue: translate.instant('igo.geo.importExportForm.projections.nad83', { code: 'EPSG:4269' }),\n        translateKey: 'nad83', alias: 'NAD83', code: 'EPSG:4269', zone: ''\n      });\n    }\n\n    if (this.projectionsConstraints.webMercator) {\n      projections.push({\n        translatedValue: translate.instant('igo.geo.importExportForm.projections.webMercator', { code: 'EPSG:3857' }),\n        translateKey: 'webMercator', alias: 'Web Mercator', code: 'EPSG:3857', zone: ''\n      });\n    }\n    if (this.projectionsConstraints.mtm) {\n      // Quebec\n      const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n      if (zone) {\n        this.inMtmZone = true;\n        const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n        projections.splice(3, 0, {\n          translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', { code, zone }),\n          translateKey: 'mtm', alias: `MTM ${zone}`, code, zone: `${zone}`\n        });\n      }\n      else {\n        this.inMtmZone = false;\n      }\n    }\n    if (this.projectionsConstraints.utm) {\n      const order = this.inMtmZone ? 4 : 3;\n      const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n      const code = zone < 10 ? `EPSG:3260${zone}` : `EPSG:326${zone}`;\n      projections.splice(order, 0, {\n        translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.utm', { code, zone }),\n        translateKey: 'utm', alias: `UTM ${zone}`, code, zone: `${zone}`\n      });\n    }\n    let configProjection = [];\n    if (this.projectionsConstraints.projFromConfig) {\n      configProjection = this.config.getConfig('projections') || [];\n    }\n    this.projections$.next(projections.concat(configProjection));\n  }\n\n  /**\n   * Push the MTM in the array of systeme of coordinates\n   * @param projections Array of the InputProjections\n   */\n  private pushMtm(projections: Array<InputProjections>): void {\n    if (this.projectionsConstraints.mtm) {\n      const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n      const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n      projections.splice(3, 0, {\n          translatedValue: this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', { code, zone }),\n          translateKey: 'mtm', alias: `MTM ${zone}`, code, zone: `${zone}`});\n    }\n  }\n\n  /**\n   * Updates the list of systems of coordinates for territory of Quebec\n   * push MTM and UTM in the Array\n   */\n  private back2quebec(): void {\n    const projections = this.projections$.value;\n    this.pushMtm(projections);\n    this.inMtmZone = true;\n  }\n\n  /**\n   * Update the numbers of the zones when application is restarted\n   */\n  private updateZoneMtmUtm() {\n    if (this.inputProj.translateKey === 'mtm') {\n      const zone = zoneMtm(this.currentCenterDefaultProj[0]);\n      this.inputProj.alias = `MTM ${zone}`;\n      const code = zone < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + zone}`;\n      this.inputProj.code = code;\n      this.inputProj.zone = `${zone}`;\n      this.inputProj.translatedValue = this.languageService.translate.instant('igo.geo.importExportForm.projections.mtm', { code, zone });\n    }\n    if (this.inputProj.translateKey === 'utm') {\n      const zone = zoneUtm(this.currentCenterDefaultProj[0]);\n      this.inputProj.alias = `UTM ${zone}`;\n      const code = zone < 10 ? `EPSG:3260${zone}` : `EPSG:326${zone}`;\n      this.inputProj.code = code;\n      this.inputProj.zone = `${zone}`;\n      this.inputProj.translatedValue = this.languageService.translate.instant('igo.geo.importExportForm.projections.utm', { code, zone });\n    }\n  }\n\n  /**\n   * Compute the position of a current projection in a list. 0 if the projection is not in the list\n   * @param translateKey string, translate key of a projection\n   * @returns numeric, position of an element in the array\n   */\n  positionInList(tempInputProj: InputProjections): number {\n    const tk = tempInputProj.translateKey;\n    const alias = tempInputProj.alias;\n    let position; // = undefined;\n    let iter = 0;\n    this.projections$.value.map((projection) => {\n      if (tk) {\n        if (tk === projection.translateKey) {\n          position = iter;\n        }\n      }\n      else if (alias === projection.alias) {\n        position = iter;\n      }\n      iter++;\n    });\n    position = position ? position : 0;\n    return position;\n  }\n\n  /**\n   * Change the list of projections depending on the projections of Lambert\n   * @param coordinates An array of numbers, longitude and latitude\n   */\n  checkLambert(coordinates: [number, number]) {\n    const lambertProjections = this.config.getConfig('projections');\n    lambertProjections.forEach(projection => {\n        let modifiedProj = this.projections$.value;\n        const extent = projection.extent;\n        const code = projection.code.match(/\\d+/);\n        const currentExtentWGS = olproj.transformExtent(extent, projection.code, this.defaultProj.code);\n        if (coordinates[0] < currentExtentWGS[0] || coordinates[0] > currentExtentWGS[2] ||\n            coordinates[1] < currentExtentWGS[1] || coordinates[1] > currentExtentWGS[3]) {\n            this.inLambert2[code] = false;\n            if (this.inputProj.alias === projection.alias) {\n              this.inputProj = this.projections$.value[0];\n            }\n            modifiedProj = modifiedProj.filter(p => p.alias !== projection.alias);\n            this.projections$.next(modifiedProj);\n        }\n        else {\n            if (!this.inLambert2[code]) {\n                this.projections$.next(modifiedProj.concat(projection));\n                this.inLambert2[code] = true;\n            }\n        }\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { ToolComponent } from '@igo2/common';\n\n@ToolComponent({\n  name: 'advancedMap',\n  title: 'igo.integration.tools.advancedMap',\n  icon: 'toolbox'\n})\n\n/**\n * Tool to handle the advanced map tools\n */\n@Component({\n  selector: 'igo-advanced-map-tool',\n  templateUrl: './advanced-map-tool.component.html',\n  styleUrls: ['./advanced-map-tool.component.scss']\n})\n\nexport class AdvancedMapToolComponent {\n\n}\n","<h4 class=\"nameOfTool\">{{'igo.integration.advanced-map-tool.advanced-swipe.swipe-tool' | translate}}</h4>\n<igo-advanced-swipe></igo-advanced-swipe>\n<mat-divider class=\"advanced-tool-line\"></mat-divider>\n\n<h4 class=\"nameOfTool\">{{'igo.integration.advanced-map-tool.advanced-coordinates.coordinates' | translate}}</h4>\n<igo-advanced-coordinates></igo-advanced-coordinates>\n<mat-divider class=\"advanced-tool-line\"></mat-divider>\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { IgoLanguageModule } from '@igo2/core';\nimport {\n  IgoLayerModule,\n  IgoMetadataModule,\n  IgoDownloadModule,\n  IgoFilterModule,\n  IgoImportExportModule\n} from '@igo2/geo';\nimport { IgoContextModule } from '@igo2/context';\nimport { MapDetailsToolComponent } from './map-details-tool/map-details-tool.component';\nimport { MapToolComponent } from './map-tool/map-tool.component';\nimport { MapToolsComponent } from './map-tools/map-tools.component';\nimport { MapLegendToolComponent } from './map-legend/map-legend-tool.component';\nimport { IgoAppWorkspaceModule } from '../workspace/workspace.module';\nimport { AdvancedMapToolComponent } from './advanced-map-tool/advanced-map-tool.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { IgoSpinnerModule } from '@igo2/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdvancedSwipeComponent } from './advanced-map-tool/advanced-swipe/advanced-swipe.component';\nimport { AdvancedCoordinatesComponent } from './advanced-map-tool/advanced-coordinates/advanced-coordinates.component';\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonToggleModule,\n    MatDividerModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    IgoSpinnerModule,\n    CommonModule,\n    MatTabsModule,\n    MatListModule,\n    MatIconModule,\n    IgoLanguageModule,\n    IgoLayerModule,\n    IgoMetadataModule,\n    IgoDownloadModule,\n    IgoImportExportModule,\n    IgoFilterModule,\n    IgoContextModule,\n    IgoAppWorkspaceModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  declarations: [ AdvancedMapToolComponent, MapToolComponent,\n    MapToolsComponent, MapDetailsToolComponent, MapLegendToolComponent, AdvancedSwipeComponent, AdvancedCoordinatesComponent],\n  exports: [AdvancedMapToolComponent, MapToolComponent, MapToolsComponent, MapDetailsToolComponent, MapLegendToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppMapModule {\n  static forRoot(): ModuleWithProviders<IgoAppMapModule> {\n    return {\n      ngModule: IgoAppMapModule,\n      providers: []\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { FeatureStore, FeatureWithMeasure } from '@igo2/geo';\nimport { MapState } from '../map/map.state';\n\n/**\n * Service that holds the state of the measure module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeasureState {\n\n  /**\n   * Store that holds the measures\n   */\n  public store: FeatureStore<FeatureWithMeasure> = new FeatureStore<FeatureWithMeasure>([], {\n    map: this.mapState.map\n  });\n\n  constructor(private mapState: MapState) {\n\n    this.mapState.map.layers$.subscribe((layers) => {\n      if ((layers.filter(l => l.id.startsWith('igo-measures-')).length === 0)) {\n        this.store.deleteMany(this.store.all());\n        this.mapState.map.ol.getOverlays().getArray()\n          .filter(overlay => (overlay as any).options.className.includes('igo-map-tooltip'))\n          .map(overlay => this.mapState.map.ol.removeOverlay(overlay));\n      }\n    });\n  }\n\n}\n","import {\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { FeatureStore, FeatureWithMeasure, IgoMap } from '@igo2/geo';\nimport { MapState } from '../../map/map.state';\nimport { MeasureState } from '../measure.state';\n\n/**\n * Tool to measure lengths and areas\n */\n@ToolComponent({\n  name: 'measurer',\n  title: 'igo.integration.tools.measurer',\n  icon: 'ruler'\n})\n@Component({\n  selector: 'igo-measurer-tool',\n  templateUrl: './measurer-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MeasurerToolComponent {\n\n  /**\n   * Map to measure on\n   * @internal\n   */\n  get store(): FeatureStore<FeatureWithMeasure> { return this.measureState.store; }\n\n  /**\n   * Map to measure on\n   * @internal\n   */\n  get map(): IgoMap { return this.mapState.map; }\n\n  constructor(\n    private measureState: MeasureState,\n    private mapState: MapState\n  ) {}\n\n}\n","<igo-measurer [store]=\"store\" [map]=\"map\"></igo-measurer>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { IgoMeasurerModule } from '@igo2/geo';\n\nimport { MeasurerToolComponent } from './measurer-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    IgoMeasurerModule\n  ],\n  declarations: [MeasurerToolComponent],\n  exports: [MeasurerToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppMeasurerToolModule {}\n","import { NgModule } from '@angular/core';\n\nimport { IgoAppMeasurerToolModule } from './measurer-tool/measurer-tool.module';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [\n    IgoAppMeasurerToolModule\n  ]\n})\nexport class IgoAppMeasureModule {}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { IgoMap } from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\n\n@ToolComponent({\n  name: 'print',\n  title: 'igo.integration.tools.print',\n  icon: 'printer'\n})\n@Component({\n  selector: 'igo-print-tool',\n  templateUrl: './print-tool.component.html'\n})\nexport class PrintToolComponent {\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  constructor(private mapState: MapState) {}\n}\n","<igo-print [map]=\"map\"></igo-print>\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\n\nimport { IgoPrintModule } from '@igo2/geo';\nimport { PrintToolComponent } from './print-tool/print-tool.component';\n\n@NgModule({\n  imports: [IgoPrintModule],\n  declarations: [PrintToolComponent],\n  exports: [PrintToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppPrintModule {\n  static forRoot(): ModuleWithProviders<IgoAppPrintModule> {\n    return {\n      ngModule: IgoAppPrintModule,\n      providers: []\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { EntityRecord, EntityStore, EntityStoreFilterCustomFuncStrategy, EntityStoreStrategyFuncOptions } from '@igo2/common';\nimport { ConfigService, StorageService } from '@igo2/core';\nimport { SearchResult, SearchSourceService, SearchSource, CommonVectorStyleOptions } from '@igo2/geo';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n/**\n * Service that holds the state of the search module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchState {\n  public searchOverlayStyle: CommonVectorStyleOptions = {};\n  public searchOverlayStyleSelection: CommonVectorStyleOptions = {};\n  public searchOverlayStyleFocus: CommonVectorStyleOptions = {};\n\n  public focusedOrResolution$$: Subscription;\n  public selectedOrResolution$$: Subscription;\n\n  readonly searchTermSplitter$: BehaviorSubject<string> = new BehaviorSubject('|');\n\n  readonly searchTerm$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly searchType$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly searchDisabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly searchResultsGeometryEnabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly searchSettingsChange$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n\n  readonly selectedResult$: BehaviorSubject<SearchResult> = new BehaviorSubject(undefined);\n\n  /**\n   * Store that holds the search results\n   */\n  readonly store: EntityStore<SearchResult> = new EntityStore<SearchResult>([]);\n\n  /**\n   * Search types currently enabled in the search source service\n   */\n  get searchTypes(): string[] {\n    return this.searchSourceService\n      .getEnabledSources()\n      .map((source: SearchSource) => (source.constructor as any).type);\n  }\n\n  constructor(\n    private searchSourceService: SearchSourceService,\n    private storageService: StorageService,\n    private configService: ConfigService) {\n    const searchOverlayStyle = this.configService.getConfig('searchOverlayStyle') as {\n      base?: CommonVectorStyleOptions,\n      selection?: CommonVectorStyleOptions,\n      focus?: CommonVectorStyleOptions\n    };\n    if (searchOverlayStyle) {\n      this.searchOverlayStyle = searchOverlayStyle.base;\n      this.searchOverlayStyleSelection = searchOverlayStyle.selection;\n      this.searchOverlayStyleFocus = searchOverlayStyle.focus;\n    }\n\n    const searchResultsGeometryEnabled = this.storageService.get('searchResultsGeometryEnabled') as boolean;\n    if (searchResultsGeometryEnabled) {\n      this.searchResultsGeometryEnabled$.next(searchResultsGeometryEnabled);\n    }\n    this.store.addStrategy(this.createCustomFilterTermStrategy(), false);\n  }\n\n  private createCustomFilterTermStrategy(): EntityStoreFilterCustomFuncStrategy {\n    const filterClauseFunc = (record: EntityRecord<SearchResult>) => {\n      return record.entity.meta.score === 100;\n    };\n    return new EntityStoreFilterCustomFuncStrategy({filterClauseFunc} as EntityStoreStrategyFuncOptions);\n  }\n\n  /**\n   * Activate custom strategy\n   *\n   */\n  activateCustomFilterTermStrategy() {\n    const strategy = this.store.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n    if (strategy !== undefined) {\n      strategy.activate();\n    }\n  }\n\n  /**\n   * Deactivate custom strategy\n   *\n   */\n  deactivateCustomFilterTermStrategy() {\n    const strategy = this.store.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n    if (strategy !== undefined) {\n      strategy.deactivate();\n    }\n  }\n\n  enableSearch() {\n    this.searchDisabled$.next(false);\n  }\n\n  disableSearch() {\n    this.searchDisabled$.next(true);\n  }\n\n  setSearchTerm(searchTerm: string) {\n    this.searchTerm$.next(searchTerm);\n  }\n\n  setSearchType(searchType: string) {\n    this.searchSourceService.enableSourcesByType(searchType);\n    this.searchType$.next(searchType);\n  }\n\n  setSearchSettingsChange() {\n    this.searchSettingsChange$.next(true);\n  }\n\n  setSelectedResult(result: SearchResult) {\n    this.selectedResult$.next(result);\n  }\n\n  setSearchResultsGeometryStatus(value) {\n    this.storageService.set('searchResultsGeometryEnabled', value);\n    this.searchResultsGeometryEnabled$.next(value);\n  }\n}\n","import { Directive, Self, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { SearchBarComponent } from '@igo2/geo';\nimport { SearchState } from '../search.state';\n\n@Directive({\n  selector: '[igoSearchBarBinding]'\n})\nexport class SearchBarBindingDirective implements OnInit, OnDestroy {\n\n  get searchTerm(): string { return this.searchState.searchTerm$.value; }\n  get searchType(): string { return this.searchState.searchType$.value; }\n\n  private searchTerm$$: Subscription;\n  private searchType$$: Subscription;\n  private searchDisabled$$: Subscription;\n\n  constructor(\n    @Self() private component: SearchBarComponent,\n    private searchState: SearchState\n  ) {}\n\n  ngOnInit() {\n    this.searchTerm$$ = this.searchState.searchTerm$.subscribe((searchTerm: string) => {\n      if (searchTerm !== undefined && searchTerm !== null) {\n        this.component.setTerm(searchTerm);\n      }\n    });\n\n    this.searchType$$ = this.searchState.searchType$.subscribe((searchType: string) => {\n      if (searchType !== undefined && searchType !== null) {\n        this.component.setSearchType(searchType);\n      }\n    });\n\n    this.searchDisabled$$ = this.searchState.searchDisabled$.subscribe((searchDisabled: boolean) => {\n      this.component.disabled = searchDisabled;\n    });\n  }\n\n  ngOnDestroy() {\n    this.searchTerm$$.unsubscribe();\n    this.searchType$$.unsubscribe();\n    this.searchDisabled$$.unsubscribe();\n  }\n\n  @HostListener('searchTermChange', ['$event'])\n  onSearchTermChange(searchTerm?: string) {\n    if (searchTerm !== this.searchTerm) {\n      this.searchState.setSearchTerm(searchTerm);\n    }\n  }\n\n  @HostListener('searchTypeChange', ['$event'])\n  onSearchTypeChange(searchType?: string) {\n    if (searchType !== this.searchType) {\n      this.searchState.setSearchType(searchType);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { IgoSearchModule } from '@igo2/geo';\n\nimport { SearchBarBindingDirective } from './search-bar-binding.directive';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [IgoSearchModule],\n  declarations: [SearchBarBindingDirective],\n  exports: [SearchBarBindingDirective],\n})\nexport class IgoAppSearchBarModule {}\n","<div *ngIf=\"!store || store.stateView.empty\" style=\"margin: 10px;\">\n  <section class=\"mat-typography\">\n    <h4><strong>{{ 'igo.integration.searchResultsTool.noResults' | translate }}</strong></h4>\n    <p><strong>{{ 'igo.integration.searchResultsTool.doSearch' | translate }}</strong></p>\n    <div [innerHTML]=\"'igo.integration.searchResultsTool.examples' | translate | sanitizeHtml\"></div>\n</section>\n</div>\n\n<igo-flexible\n  *ngIf=\"store && (store.stateView.empty$ | async)===false\"\n  #topPanel\n  initial=\"100%\"\n  initialMobile=\"100%\"\n  collapsed=\"calc(100% - 58px)\"\n  collapsedMobile=\"calc(100% - 58px)\"\n  expanded=\"60%\"\n  expandedMobile=\"60%\"\n  [state]=\"(feature$ | async) ? topPanelState : 'initial'\">\n\n  <div class=\"igo-content\">\n    <igo-search-results\n      [store]=\"store\"\n      [showIcons]=\"showIcons\"\n      [term]=\"term\"\n      [termSplitter]=\"termSplitter\"\n      [settingsChange$]=\"settingsChange$\"\n      placeholder=\"false\"\n      (resultFocus)=\"onResultFocus($event)\"\n      (resultSelect)=\"onResultSelect($event)\"\n      (resultUnfocus)=\"onResultUnfocus($event)\"\n      (resultMouseenter)=\"onResultFocus($event)\"\n      (resultMouseleave)=\"onResultUnfocus($event)\"\n      (moreResults)=\"onSearch($event)\">\n      <ng-template #igoSearchItemToolbar let-result=\"result\">\n        <igo-search-add-button\n          [map]=\"map\"\n          [layer]=\"result\">\n        </igo-search-add-button>\n      </ng-template>\n    </igo-search-results>\n  </div>\n\n  <div igoFlexibleFill class=\"igo-content\">\n    <igo-panel [title]=\"featureTitle\" *ngIf=\"feature$ | async\">\n\n      <button\n        mat-icon-button\n        panelLeftButton\n        class=\"igo-icon-button\"\n        (click)=\"toggleTopPanel()\">\n        <mat-icon [svgIcon]=\"(topPanelState$ | async) === 'collapsed' ? 'arrow-up' : 'arrow-down'\"></mat-icon>\n      </button>\n\n      <button\n        *ngIf=\"feature.geometry\"\n        mat-icon-button\n        panelRightButton\n        class=\"igo-icon-button\"\n        [matTooltip]=\"((isSelectedResultOutOfView$ | async) ? 'igo.integration.searchResultsTool.zoomOnFeatureTooltipOutOfView' : 'igo.integration.searchResultsTool.zoomOnFeatureTooltip') | translate\"\n        matTooltipShowDelay=\"500\"\n        (click)=\"zoomToFeatureExtent()\">\n        <mat-icon\n        [matBadge]=\"(isSelectedResultOutOfView$ | async) ? '!' : ''\"\n        matBadgeColor=\"accent\"\n        matBadgeSize=\"small\"\n        [matBadgeHidden]=\"(isSelectedResultOutOfView$ | async)===false\"     \n        svgIcon=\"magnify-plus-outline\"></mat-icon>\n      </button>\n\n      <igo-feature-details\n        igoFeatureDetailsDirective\n        [feature]=\"feature$ | async\"\n        [map]=\"map\"\n        [toolbox]=\"toolState.toolbox\"\n        (routingEvent)=\"getRoute()\">\n      </igo-feature-details>\n    </igo-panel>\n  </div>\n\n</igo-flexible>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit,\n  ElementRef,\n  OnDestroy\n} from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olFeature from 'ol/Feature';\nimport olPoint from 'ol/geom/Point';\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\n\nimport pointOnFeature from '@turf/point-on-feature';\n\nimport { ConfigService } from '@igo2/core';\n\nimport {\n  EntityStore,\n  ToolComponent,\n  FlexibleState,\n  getEntityTitle,\n  FlexibleComponent,\n  EntityState\n} from '@igo2/common';\n\nimport {\n  FEATURE,\n  Feature,\n  FeatureMotion,\n  SearchResult,\n  IgoMap,\n  moveToOlFeatures,\n  Research,\n  featuresAreTooDeepInView,\n  featureToOl,\n  featureFromOl,\n  getCommonVectorStyle,\n  getCommonVectorSelectedStyle,\n  computeOlFeaturesExtent,\n  featuresAreOutOfView\n} from '@igo2/geo';\n\nimport { MapState } from '../../map/map.state';\n\nimport { SearchState } from '../search.state';\nimport { ToolState } from '../../tool/tool.state';\nimport { DirectionState } from '../../directions/directions.state';\n\n/**\n * Tool to browse the search results\n */\n@ToolComponent({\n  name: 'searchResults',\n  title: 'igo.integration.tools.searchResults',\n  icon: 'magnify'\n})\n@Component({\n  selector: 'igo-search-results-tool',\n  templateUrl: './search-results-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchResultsToolComponent implements OnInit, OnDestroy {\n  /**\n   * to show hide results icons\n   */\n  @Input() showIcons: boolean = true;\n\n  private hasFeatureEmphasisOnSelection: boolean = false;\n\n  private showResultsGeometries$$: Subscription;\n  private getRoute$$: Subscription;\n  private shownResultsGeometries: Feature[] = [];\n  private shownResultsEmphasisGeometries: Feature[] = [];\n  private focusedResult$: BehaviorSubject<SearchResult> = new BehaviorSubject(\n    undefined\n  );\n  public isSelectedResultOutOfView$ = new BehaviorSubject(false);\n  private isSelectedResultOutOfView$$: Subscription;\n  private abstractFocusedResult: Feature;\n  private abstractSelectedResult: Feature;\n\n  /**\n   * Store holding the search results\n   * @internal\n   */\n  get store(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  /**\n   * Map to display the results on\n   * @internal\n   */\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get featureTitle(): string {\n    return this.feature ? getEntityTitle(this.feature) : undefined;\n  }\n\n  get feature$(): Observable<Feature> {\n    return this.store.stateView\n      .firstBy$((e) => e.state.focused)\n      .pipe(\n        map(\n          (element) =>\n          (this.feature = element\n            ? (element.entity.data as Feature)\n            : undefined)\n        )\n      );\n  }\n\n  public feature: Feature;\n\n  public term = '';\n  private searchTerm$$: Subscription;\n\n  public settingsChange$ = new BehaviorSubject<boolean>(undefined);\n\n  public topPanelState$ = new BehaviorSubject<FlexibleState>('initial');\n  private topPanelState$$: Subscription;\n\n  @Input()\n  set topPanelState(value: FlexibleState) {\n    this.topPanelState$.next(value);\n  }\n  get topPanelState(): FlexibleState {\n    return this.topPanelState$.value;\n  }\n\n  get termSplitter(): string {\n    return this.searchState.searchTermSplitter$.value;\n  }\n\n  private format = new olFormatGeoJSON();\n\n  constructor(\n    private mapState: MapState,\n    private searchState: SearchState,\n    private elRef: ElementRef,\n    public toolState: ToolState,\n    private directionState: DirectionState,\n    configService: ConfigService\n  ) {\n    this.hasFeatureEmphasisOnSelection = configService.getConfig(\n      'hasFeatureEmphasisOnSelection'\n    );\n  }\n\n  ngOnInit() {\n    this.searchTerm$$ = this.searchState.searchTerm$.subscribe(\n      (searchTerm: string) => {\n        if (searchTerm !== undefined && searchTerm !== null) {\n          this.term = searchTerm;\n        }\n      }\n    );\n\n    for (const res of this.store.stateView.all$().value) {\n      if (this.store.state.get(res.entity).selected === true) {\n        this.topPanelState = 'expanded';\n      }\n    }\n\n    this.searchState.searchSettingsChange$.subscribe(() => {\n      this.settingsChange$.next(true);\n    });\n\n    this.topPanelState$$ = this.topPanelState$.subscribe(() => {\n      const igoList = this.computeElementRef()[0];\n      const selected = this.computeElementRef()[1];\n      if (selected) {\n        setTimeout(() => {\n          // To be sure the flexible component has been displayed yet\n          if (!this.isScrolledIntoView(igoList, selected)) {\n            this.adjustTopPanel(igoList, selected);\n          }\n        }, FlexibleComponent.transitionTime + 50);\n      }\n    });\n\n    if (this.hasFeatureEmphasisOnSelection) {\n      if (!this.searchState.focusedOrResolution$$) {\n        this.searchState.focusedOrResolution$$ = combineLatest([\n          this.focusedResult$,\n          this.map.viewController.resolution$\n        ]).subscribe((bunch: [SearchResult<Feature>, number]) =>\n          this.buildResultEmphasis(bunch[0], 'focused')\n        );\n      }\n\n      if (!this.searchState.selectedOrResolution$$) {\n        this.searchState.selectedOrResolution$$ = combineLatest([\n          this.searchState.selectedResult$,\n          this.map.viewController.resolution$\n        ]).subscribe((bunch: [SearchResult<Feature>, number]) =>\n          this.buildResultEmphasis(bunch[0], 'selected')\n        );\n      }\n    }\n    this.monitorResultOutOfView();\n\n    this.showResultsGeometries$$ = combineLatest([\n      this.searchState.searchResultsGeometryEnabled$,\n      this.store.stateView.all$(),\n      this.focusedResult$,\n      this.searchState.selectedResult$,\n      this.searchState.searchTerm$,\n      this.map.viewController.resolution$\n    ]).subscribe((bunch: [boolean, { entity: SearchResult, state: EntityState }[], SearchResult, SearchResult, string, number]) => {\n\n      const searchResultsGeometryEnabled = bunch[0];\n      const searchResults = bunch[1];\n\n      if (this.hasFeatureEmphasisOnSelection) {\n        this.clearFeatureEmphasis('shown');\n      }\n      this.shownResultsGeometries.map(result => this.map.queryResultsOverlay.removeFeature(result));\n      const featureToHandleGeom = searchResults\n        .filter(result =>\n          result.entity.meta.dataType === FEATURE &&\n          result.entity.data.geometry &&\n          !result.state.selected &&\n          !result.state.focused);\n\n      featureToHandleGeom.map(result => {\n        if (searchResultsGeometryEnabled) {\n          result.entity.data.meta.style =\n            getCommonVectorStyle(\n              Object.assign(\n                {},\n                { feature: result.entity.data as Feature | olFeature<OlGeometry> },\n                this.searchState.searchOverlayStyle,\n                result.entity.style?.base ? result.entity.style.base : {}\n              ));\n          this.shownResultsGeometries.push(result.entity.data as Feature);\n          this.map.queryResultsOverlay.addFeature(result.entity.data as Feature, FeatureMotion.None);\n          if (this.hasFeatureEmphasisOnSelection) {\n            this.buildResultEmphasis(result.entity as SearchResult<Feature>, 'shown');\n          }\n        }\n      });\n    });\n  }\n\n  private monitorResultOutOfView() {\n    this.isSelectedResultOutOfView$$ = combineLatest([\n      this.map.viewController.state$,\n      this.searchState.selectedResult$\n    ])\n      .pipe(debounceTime(100))\n      .subscribe((bunch) => {\n        const selectedResult = bunch[1] as SearchResult<Feature>;\n        if (!selectedResult) {\n          this.isSelectedResultOutOfView$.next(false);\n          return;\n        }\n        if (selectedResult.data.geometry) {\n          const selectedOlFeature = featureToOl(\n            selectedResult.data,\n            this.map.projection\n          );\n          const selectedOlFeatureExtent = computeOlFeaturesExtent(this.map, [\n            selectedOlFeature\n          ]);\n          this.isSelectedResultOutOfView$.next(\n            featuresAreOutOfView(this.map, selectedOlFeatureExtent)\n          );\n        }\n      });\n  }\n\n  private buildResultEmphasis(\n    result: SearchResult<Feature>,\n    trigger: 'selected' | 'focused' | 'shown' | undefined\n  ) {\n    if (trigger !== 'shown') {\n      this.clearFeatureEmphasis(trigger);\n    }\n    if (!result || !result.data.geometry) {\n      return;\n    }\n    const myOlFeature = featureToOl(result.data, this.map.projection);\n    const olGeometry = myOlFeature.getGeometry();\n    if (featuresAreTooDeepInView(this.map, olGeometry.getExtent() as [number, number, number, number], 0.0025)) {\n      const extent = olGeometry.getExtent();\n      const x = extent[0] + (extent[2] - extent[0]) / 2;\n      const y = extent[1] + (extent[3] - extent[1]) / 2;\n      const feature1 = new olFeature({\n        name: `${trigger}AbstractResult'`,\n        geometry: new olPoint([x, y])\n      });\n      const abstractResult = featureFromOl(feature1, this.map.projection);\n\n      let computedStyle;\n      let zIndexOffset = 0;\n\n      switch (trigger) {\n        case 'focused':\n          computedStyle = getCommonVectorSelectedStyle(\n            Object.assign({},\n              { feature: abstractResult },\n              this.searchState.searchOverlayStyleFocus,\n              result.style?.focus ? result.style.focus : {}));\n          zIndexOffset = 2;\n          break;\n        case 'shown':\n          computedStyle = getCommonVectorStyle(Object.assign({},\n            { feature: abstractResult },\n            this.searchState.searchOverlayStyle,\n            result.style?.base ? result.style.base : {}));\n          break;\n        case 'selected':\n          computedStyle = getCommonVectorSelectedStyle(\n            Object.assign({},\n              { feature: abstractResult },\n              this.searchState.searchOverlayStyleSelection,\n              result.style?.selection ? result.style.selection : {}));\n          zIndexOffset = 1;\n          break;\n      }\n      abstractResult.meta.style = computedStyle;\n      abstractResult.meta.style.setZIndex(2000 + zIndexOffset);\n      this.map.searchResultsOverlay.addFeature(abstractResult, FeatureMotion.None);\n      if (trigger === 'focused') {\n        this.abstractFocusedResult = abstractResult;\n      }\n      if (trigger === 'selected') {\n        this.abstractSelectedResult = abstractResult;\n      }\n      if (trigger === 'shown') {\n        this.shownResultsEmphasisGeometries.push(abstractResult);\n      }\n    } else {\n      this.clearFeatureEmphasis(trigger);\n    }\n  }\n\n  private clearFeatureEmphasis(trigger: 'selected' | 'focused' | 'shown') {\n    if (trigger === 'focused' && this.abstractFocusedResult) {\n      this.map.searchResultsOverlay.removeFeature(this.abstractFocusedResult);\n      this.abstractFocusedResult = undefined;\n    }\n    if (trigger === 'selected' && this.abstractSelectedResult) {\n      this.map.searchResultsOverlay.removeFeature(this.abstractSelectedResult);\n      this.abstractSelectedResult = undefined;\n    }\n    if (trigger === 'shown') {\n      this.shownResultsEmphasisGeometries.map(shownResult => this.map.searchResultsOverlay.removeFeature(shownResult));\n      this.shownResultsEmphasisGeometries = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.topPanelState$$.unsubscribe();\n    this.searchTerm$$.unsubscribe();\n    if (this.isSelectedResultOutOfView$$) {\n      this.isSelectedResultOutOfView$$.unsubscribe();\n    }\n    if (this.showResultsGeometries$$) {\n      this.showResultsGeometries$$.unsubscribe();\n    }\n    if (this.getRoute$$) {\n      this.getRoute$$.unsubscribe();\n    }\n  }\n\n  /**\n   * Try to add a feature to the map when it's being focused\n   * @internal\n   * @param result A search result that could be a feature\n   */\n  onResultFocus(result: SearchResult) {\n    this.focusedResult$.next(result);\n    if (result.meta.dataType === FEATURE && result.data.geometry) {\n      result.data.meta.style = getCommonVectorSelectedStyle(\n        Object.assign({},\n          { feature: result.data as Feature | olFeature<OlGeometry> },\n          this.searchState.searchOverlayStyleFocus,\n          result.style?.focus ? result.style.focus : {}));\n\n      const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n      if (feature) {\n        feature.setStyle(result.data.meta.style);\n        return;\n      }\n      this.map.searchResultsOverlay.addFeature(result.data as Feature, FeatureMotion.None);\n    }\n  }\n\n  onResultUnfocus(result: SearchResult) {\n    this.focusedResult$.next(undefined);\n    if (result.meta.dataType !== FEATURE) {\n      return;\n    }\n\n    if (this.store.state.get(result).selected === true) {\n      const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n      if (feature) {\n        const style = getCommonVectorSelectedStyle(\n          Object.assign({},\n            { feature: result.data as Feature | olFeature<OlGeometry> },\n            this.searchState.searchOverlayStyleFocus,\n            result.style?.focus ? result.style.focus : {}));\n        feature.setStyle(style);\n      }\n      return;\n    }\n    this.map.searchResultsOverlay.removeFeature(result.data as Feature);\n  }\n\n  /**\n   * Try to add a feature to the map when it's being selected\n   * @internal\n   * @param result A search result that could be a feature or some layer options\n   */\n  onResultSelect(result: SearchResult) {\n    this.map.searchResultsOverlay.dataSource.ol.clear();\n    this.tryAddFeatureToMap(result);\n    this.searchState.setSelectedResult(result);\n\n    if (this.topPanelState === 'expanded') {\n      const igoList = this.computeElementRef()[0];\n      const selected = this.computeElementRef()[1];\n      setTimeout(() => {\n        // To be sure the flexible component has been displayed yet\n        if (!this.isScrolledIntoView(igoList, selected)) {\n          this.adjustTopPanel(igoList, selected);\n        }\n      }, FlexibleComponent.transitionTime + 50);\n    }\n\n    if (this.topPanelState === 'initial') {\n      this.topPanelState = 'expanded';\n    }\n  }\n\n  onSearch(event: { research: Research; results: SearchResult[] }) {\n    const results = event.results;\n    const newResults = this.store.entities$.value\n      .filter((result: SearchResult) => result.source !== event.research.source)\n      .concat(results);\n\n    this.store.load(newResults);\n\n    for (const res of this.store.all()) {\n      if (\n        this.store.state.get(res).focused === true &&\n        this.store.state.get(res).selected !== true\n      ) {\n        this.store.state.update(res, { focused: false }, true);\n      }\n    }\n\n    setTimeout(() => {\n      const igoList = this.elRef.nativeElement.querySelector('igo-list');\n      let moreResults;\n      event.research.request.subscribe((source) => {\n        if (!source[0] || !source[0].source) {\n          moreResults = null;\n        } else if (source[0].source.getId() === 'icherche') {\n          moreResults = igoList.querySelector('.icherche .moreResults');\n        } else if (source[0].source.getId() === 'ilayer') {\n          moreResults = igoList.querySelector('.ilayer .moreResults');\n        } else if (source[0].source.getId() === 'nominatim') {\n          moreResults = igoList.querySelector('.nominatim .moreResults');\n        } else {\n          moreResults = igoList.querySelector('.' + source[0].source.getId() + ' .moreResults');\n        }\n\n        if (\n          moreResults !== null &&\n          !this.isScrolledIntoView(igoList, moreResults)\n        ) {\n          igoList.scrollTop =\n            moreResults.offsetTop +\n            moreResults.offsetHeight -\n            igoList.clientHeight;\n        }\n      });\n    }, 250);\n  }\n\n  computeElementRef() {\n    const items = document.getElementsByTagName('igo-search-results-item');\n    const igoList = this.elRef.nativeElement.getElementsByTagName(\n      'igo-list'\n    )[0];\n    let selectedItem;\n    // eslint-disable-next-line\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].className.includes('igo-list-item-selected')) {\n        selectedItem = items[i];\n      }\n    }\n    return [igoList, selectedItem];\n  }\n\n  adjustTopPanel(elemSource, elem) {\n    if (!this.isScrolledIntoView(elemSource, elem)) {\n      elemSource.scrollTop =\n        elem.offsetTop +\n        elem.children[0].offsetHeight -\n        elemSource.clientHeight;\n    }\n  }\n\n  toggleTopPanel() {\n    if (this.topPanelState === 'expanded') {\n      this.topPanelState = 'collapsed';\n    } else {\n      this.topPanelState = 'expanded';\n    }\n  }\n\n  zoomToFeatureExtent() {\n    if (this.feature.geometry) {\n      const localOlFeature = this.format.readFeature(this.feature, {\n        dataProjection: this.feature.projection,\n        featureProjection: this.map.projection\n      });\n      moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Zoom);\n    }\n  }\n\n  /**\n   * Try to add a feature to the map overlay\n   * @param result A search result that could be a feature\n   */\n  private tryAddFeatureToMap(result: SearchResult) {\n    if (result.meta.dataType !== FEATURE) {\n      return undefined;\n    }\n    const feature = (result as SearchResult<Feature>).data;\n\n    // Somethimes features have no geometry. It happens with some GetFeatureInfo\n    if (!feature.geometry) {\n      return;\n    }\n\n    feature.meta.style = getCommonVectorSelectedStyle(\n      Object.assign({},\n        { feature },\n        this.searchState.searchOverlayStyleSelection,\n        result.style?.selection ? result.style.selection : {}));\n\n    this.map.searchResultsOverlay.addFeature(feature);\n  }\n\n  isScrolledIntoView(elemSource, elem) {\n    const padding = 6;\n    const docViewTop = elemSource.scrollTop;\n    const docViewBottom = docViewTop + elemSource.clientHeight;\n\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.clientHeight + padding;\n    return elemBottom <= docViewBottom && elemTop >= docViewTop;\n  }\n\n  getRoute() {\n    this.toolState.toolbox.activateTool('directions');\n    this.directionState.stopsStore.clearStops();\n    setTimeout(() => {\n      let routingCoordLoaded = false;\n      if (this.getRoute$$) { this.getRoute$$.unsubscribe(); }\n      this.getRoute$$ = this.directionState.stopsStore.storeInitialized$.subscribe((init: boolean) => {\n        if (this.directionState.stopsStore.storeInitialized$.value && !routingCoordLoaded) {\n          routingCoordLoaded = true;\n          const stop = this.directionState.stopsStore.all().find((e) => e.position === 1);\n          let coord;\n          if (this.feature.geometry) {\n            if (this.feature.geometry.type === 'Point') {\n              coord = [this.feature.geometry.coordinates[0], this.feature.geometry.coordinates[1]];\n            } else {\n              const point = pointOnFeature(this.feature.geometry);\n              coord = [point.geometry.coordinates[0], point.geometry.coordinates[1]];\n            }\n          }\n          stop.text = this.featureTitle;\n          stop.coordinates = coord;\n          this.directionState.stopsStore.update(stop);\n        }\n      });\n    }, 250);\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoFlexibleModule, IgoCustomHtmlModule, IgoPanelModule } from '@igo2/common';\nimport {\n  IgoFeatureModule,\n  IgoSearchModule,\n  IgoFeatureDetailsModule\n} from '@igo2/geo';\n\nimport { SearchResultsToolComponent } from './search-results-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatButtonModule,\n    IgoLanguageModule,\n    IgoFeatureModule,\n    IgoSearchModule,\n    IgoFlexibleModule,\n    IgoPanelModule,\n    IgoFeatureDetailsModule,\n    IgoCustomHtmlModule\n  ],\n  declarations: [SearchResultsToolComponent],\n  exports: [SearchResultsToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppSearchResultsToolModule {}\n","import { NgModule } from '@angular/core';\n\nimport { IgoAppSearchBarModule } from './search-bar/search-bar.module';\nimport { IgoAppSearchResultsToolModule } from './search-results-tool/search-results-tool.module';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [\n   IgoAppSearchBarModule,\n   IgoAppSearchResultsToolModule\n  ],\n})\nexport class IgoAppSearchModule {}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\n\n@ToolComponent({\n  name: 'ogcFilter',\n  title: 'igo.integration.tools.ogcFilter',\n  icon: 'filter'\n})\n@Component({\n  selector: 'igo-ogc-filter-tool',\n  templateUrl: './ogc-filter-tool.component.html'\n})\nexport class OgcFilterToolComponent {\n  constructor() {}\n}\n","<igo-ogc-filterable-list igoOgcFilterableListBinding></igo-ogc-filterable-list>\n\n\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\n\n@ToolComponent({\n  name: 'timeFilter',\n  title: 'igo.integration.tools.timeFilter',\n  icon: 'history'\n})\n@Component({\n  selector: 'igo-time-filter-tool',\n  templateUrl: './time-filter-tool.component.html'\n})\nexport class TimeFilterToolComponent {\n  constructor() {}\n}\n","<igo-time-filter-list igoTimeFilterListBinding></igo-time-filter-list>\n","<igo-panel>\n  <igo-spatial-filter-type\n    [store]=\"spatialListStore\"\n    [selectedQueryType]=\"queryType\"\n    [zone]=\"zone\"\n    [layers]=\"activeLayers\"\n    (eventType)=\"getOutputType($event)\"\n    (eventQueryType)=\"getOutputQueryType($event)\"\n    (zoneChange)=\"onZoneChange($event)\"\n    (zoneWithBufferChange)=\"onZoneChange($event, true)\"\n    (bufferChange)=\"buffer = $event\"\n    (measureUnitChange)=\"measureUnit = $event\">\n  </igo-spatial-filter-type>\n\n  <igo-spatial-filter-item\n    [type]=\"type\"\n    [queryType]=\"queryType\"\n    [map]=\"map\"\n    [zone]=\"zone\"\n    [loading]=\"loading\"\n    [store]=\"store\"\n    [layers]=\"activeLayers\"\n    [allLayers]=\"layers\"\n    [thematicLength]=\"thematicLength\"\n    (radiusEvent)=\"buffer = $event\"\n    (bufferEvent)=\"buffer = $event\"\n    (measureUnitChange)=\"measureUnit = $event\"\n    (freehandControl)=\"freehandDrawIsActive = $event\"\n    (drawZoneEvent)=\"zone = $event\"\n    (zoneWithBufferChange)=\"onZoneChange($event, true)\"\n    (itemTypeChange)=\"itemType = $event\"\n    (thematicChange)=\"thematics = $event\"\n    (toggleSearch)=\"getOutputToggleSearch()\"\n    (clearButtonEvent)=\"clearMap()\"\n    (clearSearchEvent)=\"getOutputClearSearch()\"\n    (export)=\"activateExportTool()\"\n    (openWorkspace)=\"activateWorkspace()\"\n    (entityChange)=\"activateWorkspace($event)\">\n  </igo-spatial-filter-item>\n</igo-panel>\n\n<igo-panel>\n  <ng-container *ngIf=\"selectedFeature$ | async as feature\">\n    <igo-feature-details [feature]=\"feature\"></igo-feature-details>\n  </ng-container>\n</igo-panel>","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { Observable, forkJoin, Subject } from 'rxjs';\nimport { tap, take, takeUntil } from 'rxjs/operators';\n\nimport {\n  IgoMap,\n  DataSourceService,\n  LayerService,\n  Feature,\n  moveToOlFeatures,\n  FeatureMotion,\n  ClusterDataSource,\n  featureToOl,\n  DataSource,\n  QueryableDataSourceOptions,\n  SpatialFilterService,\n  SpatialFilterType,\n  SpatialFilterItemType,\n  SpatialFilterQueryType,\n  SpatialFilterThematic,\n  Layer,\n  createOverlayMarkerStyle,\n  ExportOptions,\n  MeasureLengthUnit\n} from '@igo2/geo';\nimport { EntityStore, ToolComponent } from '@igo2/common';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olSourceVector from 'ol/source/Vector';\nimport olSourceCluster from 'ol/source/Cluster';\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\nimport { BehaviorSubject } from 'rxjs';\nimport { MapState } from '../../map/map.state';\nimport { ImportExportMode, ImportExportState } from './../../import-export/import-export.state';\nimport * as olstyle from 'ol/style';\nimport { MessageService, LanguageService } from '@igo2/core';\nimport { ToolState } from '../../tool/tool.state';\nimport { WorkspaceState } from '../../workspace/workspace.state';\nimport { EventsKey } from 'ol/events';\n\n/**\n * Tool to apply spatial filter\n */\n@ToolComponent({\n  name: 'spatialFilter',\n  title: 'igo.integration.tools.spatialFilter',\n  icon: 'selection-marker'\n})\n/**\n * Spatial Filter Type\n */\n@Component({\n  selector: 'igo-spatial-filter-tool',\n  templateUrl: './spatial-filter-tool.component.html',\n  styleUrls: ['./spatial-filter-tool.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialFilterToolComponent implements OnInit, OnDestroy {\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  @Input() type: SpatialFilterType;\n  @Input() itemType: SpatialFilterItemType = SpatialFilterItemType.Address;\n  @Input() freehandDrawIsActive: boolean;\n\n  public layers: Layer[] = [];\n  public activeLayers: Layer[] = [];\n\n  public queryType: SpatialFilterQueryType;\n  public thematics: SpatialFilterThematic[];\n  public zone: Feature;\n  public zoneWithBuffer: Feature;\n  public buffer = 0;\n\n  public iterator = 1;\n\n  public selectedFeature$: BehaviorSubject<Feature> = new BehaviorSubject(\n    undefined\n  );\n\n  private format = new olFormatGeoJSON();\n\n  public store: EntityStore<Feature> = new EntityStore<Feature>([]); // Store to print results at the end\n\n  public spatialListStore: EntityStore<Feature> = new EntityStore<Feature>([]);\n\n  public loading = false;\n\n  public thematicLength = 0;\n\n  public measureUnit: MeasureLengthUnit = MeasureLengthUnit.Meters;\n  private unsubscribe$ = new Subject<void>();\n\n  private moveendKey: EventsKey;\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private spatialFilterService: SpatialFilterService,\n    private dataSourceService: DataSourceService,\n    private layerService: LayerService,\n    private mapState: MapState,\n    private messageService: MessageService,\n    private languageService: LanguageService,\n    private importExportState: ImportExportState,\n    private toolState: ToolState,\n    private workspaceState: WorkspaceState,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    for (const layer of this.map.layers) {\n      if (layer.title && layer.title.includes(this.languageService.translate.instant('igo.geo.spatialFilter.spatialFilter'))) {\n        this.layers.push(layer);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  getOutputType(event: SpatialFilterType) {\n    this.type = event;\n    this.queryType = undefined;\n  }\n\n  getOutputQueryType(event: SpatialFilterQueryType) {\n    this.queryType = event;\n    if (this.queryType) {\n      this.loadFilterList();\n    }\n  }\n\n  activateExportTool() {\n    const ids = [];\n    const re = new RegExp('^Zone \\\\d+');\n    for (const layer of this.layers) {\n      if (!layer.title.match(re)) {\n        ids.push(layer.id);\n      }\n    }\n    this.importExportState.setMode(ImportExportMode.export);\n    this.importExportState.setsExportOptions({ layers: ids } as ExportOptions);\n    this.toolState.toolbox.activateTool('importExport');\n  }\n\n  activateWorkspace(record?) {\n    let layerToOpenWks;\n    this.workspaceState.store.entities$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      if (!record && this.activeLayers.length && this.workspaceState.store.all().length > 1) {\n        if (this.itemType === SpatialFilterItemType.Thematics) {\n            for (const thematic of this.thematics) {\n              if (!thematic.zeroResults) {\n                layerToOpenWks = this.activeLayers.find(layer => layer.title.includes(thematic.name + ' ' + this.iterator.toString()));\n                break;\n              }\n          }\n        } else {\n            const title = 'Adresses ' + this.iterator.toString();\n            this.activeLayers.forEach((layer) => {\n              if (layer.title.includes(title)) {\n                layerToOpenWks = layer;\n              }\n            });\n        }\n\n        if (layerToOpenWks) {\n          this.workspaceState.workspacePanelExpanded = true;\n          this.workspaceState.setActiveWorkspaceById(layerToOpenWks.id);\n        }\n      } else if (record && this.activeLayers.length && this.workspaceState.store.all().length > 1) {\n        this.selectWorkspaceEntity(record);\n        this.moveendKey = this.map.ol.on('moveend', () => {\n          this.selectWorkspaceEntity(record);\n        });\n      }\n    });\n  }\n\n  private selectWorkspaceEntity(record) {\n    this.workspaceState.store.all().forEach(workspace => {\n      workspace.entityStore.state.updateAll({selected: false});\n      if (workspace.title.includes(record.added[0].meta.title)) {\n        this.workspaceState.setActiveWorkspaceById(workspace.id);\n        workspace.entityStore.state.updateMany(record.added, {selected: true});\n      }\n    });\n  }\n\n  private loadFilterList() {\n    this.spatialFilterService\n      .loadFilterList(this.queryType)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((features: Feature[]) => {\n        features.sort((a, b) => {\n          if (a.properties.nom < b.properties.nom) {\n            return -1;\n          }\n          if (a.properties.nom > b.properties.nom) {\n            return 1;\n          }\n          return 0;\n        });\n        this.spatialListStore.clear();\n        this.spatialListStore.load(features);\n      });\n  }\n\n  getOutputToggleSearch() {\n    this.loadThematics();\n  }\n\n  getOutputClearSearch() {\n    this.zone = undefined;\n    this.queryType = undefined;\n  }\n\n  clearMap() {\n    this.map.removeLayers(this.layers);\n    this.layers = [];\n    this.activeLayers = [];\n    this.thematicLength = 0;\n    this.iterator = 1;\n    if (this.type === SpatialFilterType.Predefined) {\n      this.zone = undefined;\n      this.queryType = undefined;\n    }\n  }\n\n  private loadThematics() {\n    this.loading = true;\n    let zeroResults = true;\n    let thematics;\n    if (this.buffer === 0 || this.type === SpatialFilterType.Point) {\n      this.tryAddFeaturesToMap([this.zone]);\n    }\n    if (this.itemType !== SpatialFilterItemType.Thematics) {\n      const theme: SpatialFilterThematic = {\n        name: ''\n      };\n      thematics = [theme];\n    } else {\n      thematics = this.thematics;\n    }\n    if (this.measureUnit === MeasureLengthUnit.Kilometers && this.type !== SpatialFilterType.Point) {\n      this.buffer = this.buffer * 1000;\n    }\n    if (this.type === SpatialFilterType.Polygon) {\n      this.buffer = 0; // to avoid buffer enter a second time in terrAPI\n    }\n\n    const observables$: Observable<Feature[]>[] = [];\n    thematics.forEach(thematic => {\n      observables$.push(\n        this.spatialFilterService\n          .loadFilterItem(\n            this.zone,\n            this.itemType,\n            this.queryType,\n            thematic,\n            this.buffer\n          )\n          .pipe(\n            tap((features: Feature[]) => {\n              this.store.insertMany(features);\n              const featuresPoint: Feature[] = [];\n              const featuresLinePoly: Feature[] = [];\n              let idPoint;\n              let idLinePoly;\n              features.forEach(feature => {\n                if (feature.geometry.type === 'Point') {\n                  feature.properties.longitude = feature.geometry.coordinates[0];\n                  feature.properties.latitude = feature.geometry.coordinates[1];\n                  featuresPoint.push(feature);\n                  idPoint = feature.meta.id;\n                } else {\n                  featuresLinePoly.push(feature);\n                  idLinePoly = feature.meta.id;\n                }\n              });\n\n              this.tryAddPointToMap(featuresPoint, idPoint);\n              this.tryAddLayerToMap(featuresLinePoly, idLinePoly);\n              if (features.length) {\n                zeroResults = false;\n                this.thematicLength += 1;\n                thematic.zeroResults = false;\n                this.cdRef.detectChanges();\n              } else {\n                thematic.zeroResults = true;\n              }\n\n              if (features.length >= 10000) {\n                this.messageService.alert(\n                  this.languageService.translate.instant(\n                    'igo.geo.spatialFilter.maxSizeAlert'\n                  ),\n                  this.languageService.translate.instant(\n                    'igo.geo.spatialFilter.warning'\n                  ),\n                  { timeOut: 10000 }\n                );\n              }\n            })\n          )\n      );\n    });\n\n    forkJoin(observables$).pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.loading = false;\n      if (zeroResults) {\n        this.messageService.alert(\n          this.languageService.translate.instant(\n            'igo.geo.spatialFilter.zeroResults'\n          ),\n          this.languageService.translate.instant(\n            'igo.geo.spatialFilter.warning'\n          ),\n          { timeOut: 10000 }\n        );\n      }\n    });\n  }\n\n  onZoneChange(feature: Feature, buffer?: boolean) {\n    this.zone = feature;\n    if (feature) {\n      buffer ? this.tryAddFeaturesToMap([feature], true) : this.tryAddFeaturesToMap([feature]);\n      this.zoomToFeatureExtent(feature);\n    }\n  }\n\n  /**\n   * Try to add zone feature to the map overlay\n   */\n  public tryAddFeaturesToMap(features: Feature[], buffer?: boolean) {\n    let i = 1;\n    for (const feature of features) {\n      if (this.type === SpatialFilterType.Predefined) {\n        for (const layer of this.layers) {\n          if (\n            layer.options._internal &&\n            layer.options._internal.code === feature.properties.code &&\n            !buffer\n          ) {\n            if (!layer.title?.startsWith('Zone')) {\n              const index = this.layers.indexOf(layer);\n              this.layers.splice(index, 1);\n            }\n            return;\n          }\n          if (layer.title?.startsWith('Zone')) {\n            this.activeLayers = [];\n            const index = this.layers.indexOf(layer);\n            this.layers.splice(index, 1);\n            this.map.removeLayer(layer);\n          }\n        }\n      } else {\n        if (buffer) {\n          for (const layer of this.activeLayers) {\n            if (this.activeLayers.length === 1 && layer.title?.startsWith('Zone')) {\n              const index = this.layers.indexOf(layer);\n              this.layers.splice(index, 1);\n              this.map.removeLayer(layer);\n            }\n          }\n        }\n        this.activeLayers = [];\n      }\n      for (const layer of this.layers) {\n        if (layer.title?.startsWith('Zone')) {\n          i++;\n        }\n      }\n      this.dataSourceService\n        .createAsyncDataSource({\n          type: 'vector',\n          queryable: true\n        } as QueryableDataSourceOptions)\n        .pipe(take(1))\n        .subscribe((dataSource: DataSource) => {\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: ('Zone ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string,\n            workspace: { enabled: true },\n            _internal: {\n              code:\n                this.type === SpatialFilterType.Predefined\n                  ? feature.properties.code\n                  : undefined\n            },\n            source: dataSource,\n            visible: true,\n            style: (_feature, resolution) => {\n              const coordinates = (features[0] as any).coordinates;\n              return new olstyle.Style({\n                image: new olstyle.Circle({\n                  radius: coordinates\n                    ? this.buffer /\n                      Math.cos((Math.PI / 180) * coordinates[1]) /\n                      resolution\n                    : undefined,\n                  fill: new olstyle.Fill({\n                    color: 'rgba(200, 200, 20, 0.2)'\n                  }),\n                  stroke: new olstyle.Stroke({\n                    width: 1,\n                    color: 'orange'\n                  })\n                }),\n                stroke: new olstyle.Stroke({\n                  width: 1,\n                  color: 'orange'\n                }),\n                fill: new olstyle.Fill({\n                  color: 'rgba(200, 200, 20, 0.2)'\n                })\n              });\n            }\n          });\n          const featuresOl = features.map(f => {\n            return featureToOl(f, this.map.projection);\n          });\n          if (this.type !== SpatialFilterType.Predefined) {\n            const type = this.type === SpatialFilterType.Point ? 'Cercle' : 'Polygone';\n            featuresOl[0].set('nom', 'Zone', true);\n            featuresOl[0].set('type', type, true);\n          }\n          const ol = dataSource.ol as olSourceVector<OlGeometry> | olSourceCluster;\n          ol.addFeatures(featuresOl);\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.activeLayers.push(olLayer);\n          this.cdRef.detectChanges();\n        });\n    }\n  }\n\n  /**\n   * Try to add point features to the map\n   * Necessary to create clusters\n   */\n  private tryAddPointToMap(features: Feature[], id) {\n    let i = 1;\n    if (features.length) {\n      if (this.map === undefined) {\n        return;\n      }\n      for (const layer of this.layers) {\n        if (layer.title?.startsWith(features[0].meta.title)) {\n          i++;\n        }\n      }\n      this.dataSourceService\n        .createAsyncDataSource({\n          type: 'cluster',\n          id,\n          queryable: true,\n          distance: 120,\n          meta: {\n            title: 'Cluster'\n          }\n        } as QueryableDataSourceOptions)\n        .pipe(take(1))\n        .subscribe((dataSource: ClusterDataSource) => {\n          const icon = features[0].meta.icon;\n          let style: olstyle.Style;\n          if (!icon) {\n            style = createOverlayMarkerStyle();\n          } else {\n            style = this.createSvgIcon(icon) || createOverlayMarkerStyle();\n          }\n\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: (features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string,\n            source: dataSource,\n            visible: true,\n            style\n          });\n\n          const featuresOl = features.map(feature => {\n            return featureToOl(feature, this.map.projection);\n          });\n          const ol = dataSource.ol as olSourceCluster;\n          ol.getSource().addFeatures(featuresOl);\n          if (this.layers.find(layer => layer.id === olLayer.id)) {\n            this.map.removeLayer(\n              this.layers.find(layer => layer.id === olLayer.id)\n            );\n            i = i - 1;\n            olLayer.title = (features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string;\n            olLayer.options.title = olLayer.title;\n          }\n          this.iterator = i;\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.pushLayer(olLayer);\n          this.cdRef.detectChanges();\n        });\n    }\n  }\n\n  private createSvgIcon(icon): olstyle.Style {\n    let style: olstyle.Style;\n    this.matIconRegistry.getNamedSvgIcon(icon).subscribe(svgObj => {\n      const xmlSerializer = new XMLSerializer();\n      svgObj.setAttribute('width', '30');\n      svgObj.setAttribute('height', '30');\n      svgObj.setAttribute('fill', 'rgba(0, 128, 255)');\n      svgObj.setAttribute('stroke', 'white');\n      const svg = xmlSerializer.serializeToString(svgObj);\n      style = new olstyle.Style({\n        image: new olstyle.Icon({\n          src: 'data:image/svg+xml;utf8,' + svg\n        })\n      });\n    });\n    return style;\n  }\n  /**\n   * Try to add line or polygon features to the map\n   */\n  private tryAddLayerToMap(features: Feature[], id) {\n    let i = 1;\n    if (features.length) {\n      if (this.map === undefined) {\n        return;\n      }\n      for (const layer of this.layers) {\n        if (layer.title?.startsWith(features[0].meta.title)) {\n          i++;\n        }\n      }\n      this.dataSourceService\n        .createAsyncDataSource({\n          type: 'vector',\n          id,\n          queryable: true\n        } as QueryableDataSourceOptions)\n        .pipe(take(1))\n        .subscribe((dataSource: DataSource) => {\n          const olLayer = this.layerService.createLayer({\n            isIgoInternalLayer: true,\n            title: (features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string,\n            source: dataSource,\n            visible: true\n          });\n          const featuresOl = features.map(feature => {\n            return featureToOl(feature, this.map.projection);\n          });\n          const ol = dataSource.ol as olSourceVector<OlGeometry>;\n          ol.addFeatures(featuresOl);\n          if (this.layers.find(layer => layer.id === olLayer.id)) {\n            this.map.removeLayer(\n              this.layers.find(layer => layer.id === olLayer.id)\n            );\n            i = i - 1;\n            olLayer.title = (features[0].meta.title + ' ' + i + ' - ' + this.languageService.translate.instant(\n              'igo.geo.spatialFilter.spatialFilter'\n            )) as string;\n            olLayer.options.title = olLayer.title;\n          }\n          this.map.addLayer(olLayer);\n          this.layers.push(olLayer);\n          this.pushLayer(olLayer);\n          this.cdRef.detectChanges();\n        });\n    }\n  }\n\n  zoomToFeatureExtent(feature) {\n    if (feature) {\n      const olFeature = this.format.readFeature(feature, {\n        dataProjection: feature.projection,\n        featureProjection: this.map.projection\n      });\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\n    }\n  }\n\n  pushLayer(layer) {\n    for (const lay of this.activeLayers) {\n      if (lay.id === layer.id) {\n        return;\n      }\n    }\n\n    this.activeLayers.push(layer);\n  }\n}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function toolSlideInOut(\n  speed = '300ms',\n  type = 'ease-in-out'\n): AnimationTriggerMetadata {\n  return trigger('toolSlideInOut', [\n    state(\n      'enter',\n      style({\n        transform: 'translateX(100%)'\n      })\n    ),\n    transition('void => enter', animate(speed + ' ' + type))\n  ]);\n}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { MapState } from '../../map/map.state';\nimport { IgoMap, Layer } from '@igo2/geo';\nimport { toolSlideInOut } from './active-time-filter-tool.animation';\n\n@ToolComponent({\n  name: 'activeTimeFilter',\n  title: 'igo.integration.tools.timeFilter',\n  icon: 'history',\n  parent: 'mapTools'\n})\n@Component({\n  selector: 'igo-active-time-filter-tool',\n  templateUrl: './active-time-filter-tool.component.html',\n  animations: [toolSlideInOut()]\n})\nexport class ActiveTimeFilterToolComponent {\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get layer(): Layer {\n    for (const lay of this.map.layers) {\n      if (lay.options.active === true) {\n        return lay;\n      }\n    }\n    return;\n  }\n\n  public animate = 'enter';\n\n  constructor(public mapState: MapState) {}\n}\n","<igo-time-filter-item\n    [map]=\"map\"\n    [layer]=\"layer\"\n    [header]=\"false\"\n    [@toolSlideInOut]=\"animate\">\n</igo-time-filter-item>\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function toolSlideInOut(\n  speed = '300ms',\n  type = 'ease-in-out'\n): AnimationTriggerMetadata {\n  return trigger('toolSlideInOut', [\n    state(\n      'enter',\n      style({\n        transform: 'translateX(100%)'\n      })\n    ),\n    transition('void => enter', animate(speed + ' ' + type))\n  ]);\n}\n","import { Component } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { MapState } from '../../map/map.state';\nimport { Layer, IgoMap } from '@igo2/geo';\n\nimport { toolSlideInOut } from './active-ogc-filter-tool.animation';\n\n@ToolComponent({\n  name: 'activeOgcFilter',\n  title: 'igo.integration.tools.ogcFilter',\n  icon: 'filter',\n  parent: 'mapTools'\n})\n@Component({\n  selector: 'igo-active-ogc-filter-tool',\n  templateUrl: './active-ogc-filter-tool.component.html',\n  animations: [toolSlideInOut()]\n})\nexport class ActiveOgcFilterToolComponent {\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get layer(): Layer {\n    for (const lay of this.map.layers) {\n      if (lay.options.active === true) {\n        return lay;\n      }\n    }\n    return;\n  }\n\n  public animate = 'enter';\n\n  constructor(public mapState: MapState) {}\n}\n","<igo-ogc-filterable-item\n    [map]=\"map\"\n    [layer]=\"layer\"\n    [header]=\"false\"\n    [@toolSlideInOut]=\"animate\">\n</igo-ogc-filterable-item>\n\n\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoFilterModule, IgoQueryModule } from '@igo2/geo';\nimport { OgcFilterToolComponent } from './ogc-filter-tool/ogc-filter-tool.component';\nimport { TimeFilterToolComponent } from './time-filter-tool/time-filter-tool.component';\nimport { SpatialFilterToolComponent } from './spatial-filter-tool/spatial-filter-tool.component';\nimport { ActiveTimeFilterToolComponent } from './active-time-filter-tool/active-time-filter-tool.component';\nimport { ActiveOgcFilterToolComponent } from './active-ogc-filter-tool/active-ogc-filter-tool.component';\n\n@NgModule({\n  imports: [IgoFilterModule, IgoQueryModule, CommonModule],\n  declarations: [\n    OgcFilterToolComponent,\n    ActiveOgcFilterToolComponent,\n    TimeFilterToolComponent,\n    ActiveTimeFilterToolComponent,\n    SpatialFilterToolComponent\n  ],\n  exports: [\n    OgcFilterToolComponent,\n    ActiveOgcFilterToolComponent,\n    TimeFilterToolComponent,\n    ActiveTimeFilterToolComponent,\n    SpatialFilterToolComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppFilterModule {\n  static forRoot(): ModuleWithProviders<IgoAppFilterModule> {\n    return {\n      ngModule: IgoAppFilterModule,\n      providers: []\n    };\n  }\n}\n","<p></p>\n<igo-interactive-tour\n  mat-raised-button\n  tourToStart=\"global\"\n  menuIsOpen=true\n  styleButton=\"raised\"\n  [discoverTitleInLocale$]=\"discoverTitleInLocale$\">\n</igo-interactive-tour>\n\n<button *ngIf=\"auth.authenticated && trainingGuideURLs && trainingGuideURLs.length === 1\"\n  class=\"training-guide-button\"\n  mat-raised-button\n  tooltip-position=\"below\"\n  matTooltipShowDelay=\"500\"\n  [disabled]=\"loading\"\n  [matTooltip]=\"'igo.integration.aboutTool.trainingGuideTooltip' | translate\"\n  (click)=\"openGuide()\">\n  <span>{{'igo.integration.aboutTool.trainingGuide' | translate}}</span>\n  <mat-icon svgIcon=\"file-document\"></mat-icon>\n</button>\n\n<button *ngIf=\"auth.authenticated && trainingGuideURLs && trainingGuideURLs.length > 1\"\n  class=\"training-guide-button\"\n  mat-raised-button\n  tooltip-position=\"below\"\n  matTooltipShowDelay=\"500\"\n  [disabled]=\"loading\"\n  [matTooltip]=\"'igo.integration.aboutTool.trainingGuideTooltip' | translate\"\n  [matMenuTriggerFor]=\"menu\">\n  <span>{{'igo.integration.aboutTool.trainingGuide' | translate}}</span>\n  <mat-icon svgIcon=\"file-document\"></mat-icon>\n</button>\n\n<mat-menu #menu=\"matMenu\">\n  <button *ngFor=\"let guide of trainingGuideURLs\" mat-menu-item (click)=\"openGuide(guide)\">{{formatFileName(guide)}}</button>\n</mat-menu>\n\n<igo-custom-html *ngIf=\"headerHtml !== ''\" class=\"mat-typography\"\n  [html]=\"headerHtml | translate\">\n</igo-custom-html>\n\n<igo-custom-html class=\"mat-typography\"\n  [html]=\"html | translate: {version: version}\">\n</igo-custom-html>\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { ToolComponent } from '@igo2/common';\nimport { ConfigService, LanguageService, Version } from '@igo2/core';\nimport { of } from 'rxjs';\nimport type { Observable } from 'rxjs';\nimport { AuthService } from '@igo2/auth';\nimport { HttpClient } from '@angular/common/http';\n\n@ToolComponent({\n  name: 'about',\n  title: 'igo.integration.tools.about',\n  icon: 'help-circle'\n})\n@Component({\n  selector: 'igo-about-tool',\n  templateUrl: './about-tool.component.html',\n  styleUrls: ['./about-tool.component.scss']\n})\nexport class AboutToolComponent implements OnInit {\n  @Input()\n  get headerHtml() {\n    return this._headerHtml;\n  }\n  set headerHtml(value: string) {\n    this._headerHtml = Array.isArray(value) ? value.join('\\n') : value;\n  }\n\n  @Input()\n  get html() {\n    return this._html;\n  }\n  set html(value: string) {\n    this._html = Array.isArray(value) ? value.join('\\n') : value;\n  }\n  private _discoverTitleInLocale: string = 'IGO';\n  public discoverTitleInLocale$: Observable<string> = of(this._discoverTitleInLocale);\n\n  @Input()\n  get discoverTitleInLocale() {\n    return this._discoverTitleInLocale;\n  }\n  set discoverTitleInLocale(value: string) {\n    this._discoverTitleInLocale = value;\n    this.discoverTitleInLocale$ = of(value);\n  }\n\n  @Input() trainingGuideURLs;\n\n  public version: Version;\n  private _html: string = 'igo.integration.aboutTool.html';\n  private _headerHtml: string = this.languageService.translate.instant('igo.integration.aboutTool.headerHtml');\n\n  private baseUrlProfil;\n  private baseUrlGuide;\n\n  public loading = false;\n\n  constructor(\n    public configService: ConfigService,\n    public auth: AuthService,\n    private http: HttpClient,\n    private cdRef: ChangeDetectorRef,\n    private languageService: LanguageService) {\n    this.version = configService.getConfig('version');\n    this.baseUrlProfil = configService.getConfig('storage.url');\n    this.baseUrlGuide = configService.getConfig('depot.url') + configService.getConfig('depot.guideUrl');\n  }\n\n  ngOnInit() {\n    if (this.auth.authenticated && this.configService.getConfig('context.url')) {\n      this.http.get(this.baseUrlProfil).subscribe((profil) => {\n        const recast = profil as any;\n        this.trainingGuideURLs = recast.guides;\n        this.cdRef.detectChanges();\n      });\n    } else if (\n        this.auth.authenticated &&\n        !this.configService.getConfig('context.url') &&\n        this.configService.getConfig('depot.trainingGuides')) {\n          this.trainingGuideURLs = this.configService.getConfig('depot.trainingGuides');\n    }\n  }\n\n  openGuide(guide?) {\n    this.loading = true;\n    const url = guide ?\n      this.baseUrlGuide + guide + '?' :\n      this.baseUrlGuide + this.trainingGuideURLs[0] + '?';\n    this.http\n    .get(url, {\n      responseType: 'blob'\n    })\n    .subscribe(() => {\n      this.loading = false;\n      window.open(url, '_blank');\n      this.cdRef.detectChanges();\n    });\n  }\n\n  formatFileName(name: string) {\n    name = name.split('_').join(' ');\n    const index = name.indexOf('.');\n    name = name.slice(0, index);\n    return name;\n  }\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  CUSTOM_ELEMENTS_SCHEMA\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoCustomHtmlModule, IgoInteractiveTourModule } from '@igo2/common';\n\nimport { AboutToolComponent } from './about-tool/about-tool.component';\n\n@NgModule({\n  imports: [\n    IgoLanguageModule,\n    IgoCustomHtmlModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatMenuModule,\n    IgoInteractiveTourModule,\n    CommonModule\n  ],\n  declarations: [AboutToolComponent],\n  exports: [AboutToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppAboutModule {\n  static forRoot(): ModuleWithProviders<IgoAppAboutModule> {\n    return {\n      ngModule: IgoAppAboutModule,\n      providers: []\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoAppStorageModule {}\n","import { NgModule } from '@angular/core';\n\nimport { IgoAppAnalyticsModule } from './analytics/analytics.module';\nimport { IgoAppContextModule } from './context/context.module';\nimport { IgoAppCatalogModule } from './catalog/catalog.module';\nimport { IgoAppDirectionsModule } from './directions/directions.module';\nimport { IgoAppDrawModule } from './draw/draw.module';\nimport { IgoAppWorkspaceModule } from './workspace/workspace.module';\nimport { IgoAppImportExportModule } from './import-export/import-export.module';\nimport { IgoAppMapModule } from './map/map.module';\nimport { IgoAppMeasureModule } from './measure/measure.module';\nimport { IgoAppPrintModule } from './print/print.module';\nimport { IgoAppSearchModule } from './search/search.module';\nimport { IgoAppFilterModule } from './filter/filter.module';\nimport { IgoAppAboutModule } from './about/about.module';\nimport { IgoAppStorageModule } from './storage/storage.module';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [\n    IgoAppStorageModule,\n    IgoAppAnalyticsModule,\n    IgoAppContextModule,\n    IgoAppCatalogModule,\n    IgoAppDirectionsModule,\n    IgoAppDrawModule,\n    IgoAppWorkspaceModule,\n    IgoAppImportExportModule,\n    IgoAppMapModule,\n    IgoAppMeasureModule,\n    IgoAppPrintModule,\n    IgoAppSearchModule,\n    IgoAppFilterModule,\n    IgoAppAboutModule\n  ]\n})\nexport class IgoIntegrationModule {}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class IgoAppToolModule {}\n","import { Injectable } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { AnalyticsService } from '@igo2/core';\nimport { AuthService } from '@igo2/auth';\n\nimport { ContextState } from '../context/context.state';\nimport { SearchState } from '../search/search.state';\nimport { ToolState } from '../tool/tool.state';\n\n/**\n * Service that holds the state of the search module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalyticsListenerService {\n  /**\n   * Toolbox that holds main tools\n   */\n\n  constructor(\n    private analyticsService: AnalyticsService,\n    private authService: AuthService,\n    private contextState: ContextState,\n    private searchState: SearchState,\n    private toolState: ToolState\n  ) {}\n\n  listen() {\n    this.listenUser();\n    this.listenContext();\n    this.listenTool();\n    this.listenSearch();\n  }\n\n  listenUser() {\n    this.authService.authenticate$.subscribe(() => {\n      const tokenDecoded = this.authService.decodeToken() || {};\n      if (tokenDecoded.user) {\n        this.authService\n          .getProfils()\n          .subscribe(profils =>\n            this.analyticsService.setUser(tokenDecoded.user, profils.profils)\n          );\n      } else {\n        this.analyticsService.setUser();\n      }\n    });\n  }\n\n  listenContext() {\n    this.contextState.context$.subscribe(context => {\n      if (context) {\n        this.analyticsService.trackEvent('context', 'activateContext', context.id || context.uri);\n      }\n    });\n  }\n\n  listenTool() {\n    this.toolState.toolbox.activeTool$.pipe(skip(1)).subscribe(tool => {\n      if (tool) {\n        this.analyticsService.trackEvent('tool', 'activateTool', tool.name);\n      }\n    });\n  }\n\n  listenSearch() {\n    this.searchState.searchTerm$.pipe(skip(1)).subscribe((searchTerm: string) => {\n      if (searchTerm !== undefined && searchTerm !== null) {\n        this.analyticsService.trackSearch(searchTerm, this.searchState.store.count);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { EntityStore } from '@igo2/common';\nimport { ConfigService } from '@igo2/core';\nimport { CommonVectorStyleOptions, SearchResult } from '@igo2/geo';\n\n/**\n * Service that holds the state of the query module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryState {\n  /**\n   * Store that holds the query results\n   */\n  public store: EntityStore<SearchResult> = new EntityStore<SearchResult>([]);\n  public queryOverlayStyle: CommonVectorStyleOptions = {};\n  public queryOverlayStyleSelection: CommonVectorStyleOptions = {};\n  public queryOverlayStyleFocus: CommonVectorStyleOptions = {};\n\n  constructor(private configService: ConfigService) {\n    const queryOverlayStyle = this.configService.getConfig('queryOverlayStyle') as {\n      base?: CommonVectorStyleOptions,\n      selection?: CommonVectorStyleOptions,\n      focus?: CommonVectorStyleOptions\n    };\n    if (queryOverlayStyle) {\n      this.queryOverlayStyle = queryOverlayStyle.base;\n      this.queryOverlayStyleSelection = queryOverlayStyle.selection;\n      this.queryOverlayStyleFocus = queryOverlayStyle.focus;\n    }\n  }\n}\n","/*\n * Public API Surface of tools\n */\n\nexport * from './lib/integration.module';\nexport * from './lib/about/about.module';\nexport * from './lib/analytics/analytics.module';\nexport * from './lib/storage/storage.module';\nexport * from './lib/context/context.module';\nexport * from './lib/catalog/catalog.module';\n\nexport * from './lib/directions/directions.module';\nexport * from './lib/draw/draw.module';\nexport * from './lib/workspace/workspace.module';\nexport * from './lib/filter/filter.module';\nexport * from './lib/import-export/import-export.module';\nexport * from './lib/map/map.module';\nexport * from './lib/measure/measure.module';\nexport * from './lib/print/print.module';\nexport * from './lib/search/search.module';\nexport * from './lib/tool/tool.module';\n\nexport * from './lib/about';\nexport * from './lib/analytics';\nexport * from './lib/context';\nexport * from './lib/catalog';\nexport * from './lib/directions';\nexport * from './lib/draw';\nexport * from './lib/workspace';\nexport * from './lib/filter';\nexport * from './lib/import-export';\nexport * from './lib/map';\nexport * from './lib/measure';\nexport * from './lib/print';\nexport * from './lib/search';\nexport * from './lib/tool';\nexport * from './lib/storage';\n"]},"metadata":{},"sourceType":"module"}