{"ast":null,"code":"/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\n\nimport { EventType } from './EventType.js';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar EventMessageUtils = function () {\n  function EventMessageUtils() {}\n  /**\r\n   * Gets interaction status from event message\r\n   * @param message\r\n   */\n\n\n  EventMessageUtils.getInteractionStatusFromEvent = function (message) {\n    switch (message.eventType) {\n      case EventType.LOGIN_START:\n        return InteractionStatus.Login;\n\n      case EventType.SSO_SILENT_START:\n        return InteractionStatus.SsoSilent;\n\n      case EventType.ACQUIRE_TOKEN_START:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.AcquireToken;\n        }\n\n        break;\n\n      case EventType.HANDLE_REDIRECT_START:\n        return InteractionStatus.HandleRedirect;\n\n      case EventType.LOGOUT_START:\n        return InteractionStatus.Logout;\n\n      case EventType.LOGIN_SUCCESS:\n      case EventType.SSO_SILENT_SUCCESS:\n      case EventType.HANDLE_REDIRECT_END:\n      case EventType.LOGIN_FAILURE:\n      case EventType.SSO_SILENT_FAILURE:\n      case EventType.LOGOUT_END:\n        return InteractionStatus.None;\n\n      case EventType.ACQUIRE_TOKEN_SUCCESS:\n      case EventType.ACQUIRE_TOKEN_FAILURE:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.None;\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  return EventMessageUtils;\n}();\n\nexport { EventMessageUtils };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@azure/msal-browser/dist/event/EventMessage.js"],"names":["EventType","InteractionType","InteractionStatus","EventMessageUtils","getInteractionStatusFromEvent","message","eventType","LOGIN_START","Login","SSO_SILENT_START","SsoSilent","ACQUIRE_TOKEN_START","interactionType","Redirect","Popup","AcquireToken","HANDLE_REDIRECT_START","HandleRedirect","LOGOUT_START","Logout","LOGIN_SUCCESS","SSO_SILENT_SUCCESS","HANDLE_REDIRECT_END","LOGIN_FAILURE","SSO_SILENT_FAILURE","LOGOUT_END","None","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE"],"mappings":"AAAA;AACA;;AACA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,8BAAnD;AAEA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB,GAAkB,YAAY;AAC/C,WAASA,iBAAT,GAA6B,CAC5B;AACD;AACJ;AACA;AACA;;;AACIA,EAAAA,iBAAiB,CAACC,6BAAlB,GAAkD,UAAUC,OAAV,EAAmB;AACjE,YAAQA,OAAO,CAACC,SAAhB;AACI,WAAKN,SAAS,CAACO,WAAf;AACI,eAAOL,iBAAiB,CAACM,KAAzB;;AACJ,WAAKR,SAAS,CAACS,gBAAf;AACI,eAAOP,iBAAiB,CAACQ,SAAzB;;AACJ,WAAKV,SAAS,CAACW,mBAAf;AACI,YAAIN,OAAO,CAACO,eAAR,KAA4BX,eAAe,CAACY,QAA5C,IAAwDR,OAAO,CAACO,eAAR,KAA4BX,eAAe,CAACa,KAAxG,EAA+G;AAC3G,iBAAOZ,iBAAiB,CAACa,YAAzB;AACH;;AACD;;AACJ,WAAKf,SAAS,CAACgB,qBAAf;AACI,eAAOd,iBAAiB,CAACe,cAAzB;;AACJ,WAAKjB,SAAS,CAACkB,YAAf;AACI,eAAOhB,iBAAiB,CAACiB,MAAzB;;AACJ,WAAKnB,SAAS,CAACoB,aAAf;AACA,WAAKpB,SAAS,CAACqB,kBAAf;AACA,WAAKrB,SAAS,CAACsB,mBAAf;AACA,WAAKtB,SAAS,CAACuB,aAAf;AACA,WAAKvB,SAAS,CAACwB,kBAAf;AACA,WAAKxB,SAAS,CAACyB,UAAf;AACI,eAAOvB,iBAAiB,CAACwB,IAAzB;;AACJ,WAAK1B,SAAS,CAAC2B,qBAAf;AACA,WAAK3B,SAAS,CAAC4B,qBAAf;AACI,YAAIvB,OAAO,CAACO,eAAR,KAA4BX,eAAe,CAACY,QAA5C,IAAwDR,OAAO,CAACO,eAAR,KAA4BX,eAAe,CAACa,KAAxG,EAA+G;AAC3G,iBAAOZ,iBAAiB,CAACwB,IAAzB;AACH;;AACD;AA1BR;;AA4BA,WAAO,IAAP;AACH,GA9BD;;AA+BA,SAAOvB,iBAAP;AACH,CAvCsC,EAAvC;;AAyCA,SAASA,iBAAT","sourcesContent":["/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\nimport { EventType } from './EventType.js';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar EventMessageUtils = /** @class */ (function () {\r\n    function EventMessageUtils() {\r\n    }\r\n    /**\r\n     * Gets interaction status from event message\r\n     * @param message\r\n     */\r\n    EventMessageUtils.getInteractionStatusFromEvent = function (message) {\r\n        switch (message.eventType) {\r\n            case EventType.LOGIN_START:\r\n                return InteractionStatus.Login;\r\n            case EventType.SSO_SILENT_START:\r\n                return InteractionStatus.SsoSilent;\r\n            case EventType.ACQUIRE_TOKEN_START:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.AcquireToken;\r\n                }\r\n                break;\r\n            case EventType.HANDLE_REDIRECT_START:\r\n                return InteractionStatus.HandleRedirect;\r\n            case EventType.LOGOUT_START:\r\n                return InteractionStatus.Logout;\r\n            case EventType.LOGIN_SUCCESS:\r\n            case EventType.SSO_SILENT_SUCCESS:\r\n            case EventType.HANDLE_REDIRECT_END:\r\n            case EventType.LOGIN_FAILURE:\r\n            case EventType.SSO_SILENT_FAILURE:\r\n            case EventType.LOGOUT_END:\r\n                return InteractionStatus.None;\r\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\r\n            case EventType.ACQUIRE_TOKEN_FAILURE:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.None;\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    };\r\n    return EventMessageUtils;\r\n}());\n\nexport { EventMessageUtils };\n"]},"metadata":{},"sourceType":"module"}