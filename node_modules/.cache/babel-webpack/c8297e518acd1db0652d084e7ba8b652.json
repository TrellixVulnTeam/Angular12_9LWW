{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Image\n */\n\n\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nvar ImageWrapper = function (_super) {\n  __extends(ImageWrapper, _super);\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n\n\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n    var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n    /**\n     * @private\n     * @type {string}\n     */\n\n\n    _this.src_ = src;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n\n    _this.image_ = new Image();\n\n    if (crossOrigin !== null) {\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {?function():void}\n     */\n\n\n    _this.unlisten_ = null;\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n\n    _this.state = ImageState.IDLE;\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n\n    _this.imageLoadFunction_ = imageLoadFunction;\n    return _this;\n  }\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n\n\n  ImageWrapper.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.handleImageError_ = function () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.handleImageLoad_ = function () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n\n\n  ImageWrapper.prototype.load = function () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n\n\n  ImageWrapper.prototype.setImage = function (image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n\n  return ImageWrapper;\n}(ImageBase);\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\n\n\nexport function listenImage(image, loadHandler, errorHandler) {\n  var img = image;\n\n  if (img.src && IMAGE_DECODE) {\n    var promise = img.decode();\n    var listening_1 = true;\n\n    var unlisten = function () {\n      listening_1 = false;\n    };\n\n    promise.then(function () {\n      if (listening_1) {\n        loadHandler();\n      }\n    }).catch(function (error) {\n      if (listening_1) {\n        // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n        //        https://bugs.webkit.org/show_bug.cgi?id=198527\n        if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n    return unlisten;\n  }\n\n  var listenerKeys = [listenOnce(img, EventType.LOAD, loadHandler), listenOnce(img, EventType.ERROR, errorHandler)];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\nexport default ImageWrapper;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/Image.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","EventType","ImageBase","ImageState","IMAGE_DECODE","getHeight","listenOnce","unlistenByKey","ImageWrapper","_super","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","_this","IDLE","src_","image_","Image","unlisten_","state","imageLoadFunction_","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","height","LOADED","load","LOADING","listenImage","bind","setImage","image","loadHandler","errorHandler","img","promise","decode","listening_1","unlisten","then","catch","error","name","message","listenerKeys","LOAD","forEach"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n        this.resolution = getHeight(this.extent) / this.image_.height;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n"]},"metadata":{},"sourceType":"module"}