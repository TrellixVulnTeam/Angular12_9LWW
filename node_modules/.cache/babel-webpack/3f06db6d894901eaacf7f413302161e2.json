{"ast":null,"code":"/**\n * @module ol/style/IconImage\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\n\nvar taintedTestContext = null;\n\nvar IconImage = function (_super) {\n  __extends(IconImage, _super);\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n\n\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n\n    _this.hitDetectionImage_ = null;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    _this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n\n\n    _this.canvas_ = {};\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n\n    _this.color_ = color;\n    /**\n     * @private\n     * @type {?function():void}\n     */\n\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n\n    _this.imageState_ = imageState;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    _this.size_ = size;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n\n    _this.src_ = src;\n    /**\n     * @private\n     */\n\n    _this.tainted_;\n    return _this;\n  }\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n\n\n  IconImage.prototype.isTainted_ = function () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n\n      taintedTestContext.drawImage(this.image_, 0, 0);\n\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n\n    return this.tainted_ === true;\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.dispatchChangeEvent_ = function () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.handleImageError_ = function () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.handleImageLoad_ = function () {\n    this.imageState_ = ImageState.LOADED;\n\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n\n\n  IconImage.prototype.getImage = function (pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n\n\n  IconImage.prototype.getPixelRatio = function (pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  IconImage.prototype.getImageState = function () {\n    return this.imageState_;\n  };\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n\n\n  IconImage.prototype.getHitDetectionImage = function () {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n\n    return this.hitDetectionImage_;\n  };\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  IconImage.prototype.getSize = function () {\n    return this.size_;\n  };\n  /**\n   * @return {string|undefined} Image src.\n   */\n\n\n  IconImage.prototype.getSrc = function () {\n    return this.src_;\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  IconImage.prototype.load = function () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n\n      try {\n        /** @type {HTMLImageElement} */\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n\n\n  IconImage.prototype.replaceColor_ = function (pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio] || this.imageState_ !== ImageState.LOADED) {\n      return;\n    }\n\n    var canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n    var ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n    ctx.globalCompositeOperation = 'multiply'; // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      var data = imgData.data;\n      var r = this.color_[0] / 255.0;\n      var g = this.color_[1] / 255.0;\n      var b = this.color_[2] / 255.0;\n      var a = this.color_[3];\n\n      for (var i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n\n      ctx.putImageData(imgData, 0, 0);\n    }\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  IconImage.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n\n  return IconImage;\n}(EventTarget);\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\n\n\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n\n  return iconImage;\n}\nexport default IconImage;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/style/IconImage.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","EventTarget","EventType","ImageState","asString","createCanvasContext2D","shared","iconImageCache","listenImage","taintedTestContext","IconImage","_super","image","src","size","crossOrigin","imageState","color","_this","hitDetectionImage_","image_","Image","canvas_","color_","unlisten_","imageState_","size_","src_","tainted_","isTainted_","undefined","LOADED","drawImage","getImageData","e","dispatchChangeEvent_","dispatchEvent","CHANGE","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","width","height","getImage","pixelRatio","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","context","fillRect","canvas","getSize","getSrc","load","IDLE","LOADING","bind","document","createElement","Math","ceil","ctx","getContext","scale","globalCompositeOperation","fillStyle","imgData","data","r","g","a","i","ii","length","putImageData","get","iconImage","set"],"mappings":"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","sourcesContent":["/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ ||\n            this.canvas_[pixelRatio] ||\n            this.imageState_ !== ImageState.LOADED) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n"]},"metadata":{},"sourceType":"module"}