{"ast":null,"code":"/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = []; // Skip any null or undefined parameter values\n\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&'); // remove any trailing ? or &\n\n  uri = uri.replace(/[?&]$/, ''); // append ? or & depending on whether uri has existing parameters\n\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/uri.js"],"names":["appendParams","uri","params","keyParams","Object","keys","forEach","k","undefined","push","encodeURIComponent","qs","join","replace","indexOf"],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,MAA3B,EAAmC;AACtC,MAAIC,SAAS,GAAG,EAAhB,CADsC,CAEtC;;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAUC,CAAV,EAAa;AACrC,QAAIL,MAAM,CAACK,CAAD,CAAN,KAAc,IAAd,IAAsBL,MAAM,CAACK,CAAD,CAAN,KAAcC,SAAxC,EAAmD;AAC/CL,MAAAA,SAAS,CAACM,IAAV,CAAeF,CAAC,GAAG,GAAJ,GAAUG,kBAAkB,CAACR,MAAM,CAACK,CAAD,CAAP,CAA3C;AACH;AACJ,GAJD;AAKA,MAAII,EAAE,GAAGR,SAAS,CAACS,IAAV,CAAe,GAAf,CAAT,CARsC,CAStC;;AACAX,EAAAA,GAAG,GAAGA,GAAG,CAACY,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAN,CAVsC,CAWtC;;AACAZ,EAAAA,GAAG,GAAGA,GAAG,CAACa,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0Bb,GAAG,GAAG,GAAhC,GAAsCA,GAAG,GAAG,GAAlD;AACA,SAAOA,GAAG,GAAGU,EAAb;AACH","sourcesContent":["/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n"]},"metadata":{},"sourceType":"module"}