{"ast":null,"code":"/*! @azure/msal-common v4.5.1 2021-08-02 */\n'use strict';\n\nimport { __assign, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { LogLevel } from '../logger/Logger.js';\nimport { Constants } from '../utils/Constants.js';\nimport { version } from '../packageMetadata.js';\nimport { DefaultStorageClass } from '../cache/CacheManager.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n// Token renewal offset default in seconds\n\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\nvar DEFAULT_SYSTEM_OPTIONS = {\n  tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n  preventCorsPreflight: false\n};\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\n  loggerCallback: function () {// allow users to not set loggerCallback\n  },\n  piiLoggingEnabled: false,\n  logLevel: LogLevel.Info,\n  correlationId: \"\"\n};\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\n  sendGetRequestAsync: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  sendPostRequestAsync: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  }\n};\nvar DEFAULT_LIBRARY_INFO = {\n  sku: Constants.SKU,\n  version: version,\n  cpu: \"\",\n  os: \"\"\n};\nvar DEFAULT_CLIENT_CREDENTIALS = {\n  clientSecret: \"\",\n  clientAssertion: undefined\n};\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\n\nfunction buildClientConfiguration(_a) {\n  var userAuthOptions = _a.authOptions,\n      userSystemOptions = _a.systemOptions,\n      userLoggerOption = _a.loggerOptions,\n      storageImplementation = _a.storageInterface,\n      networkImplementation = _a.networkInterface,\n      cryptoImplementation = _a.cryptoInterface,\n      clientCredentials = _a.clientCredentials,\n      libraryInfo = _a.libraryInfo,\n      serverTelemetryManager = _a.serverTelemetryManager,\n      persistencePlugin = _a.persistencePlugin,\n      serializableCache = _a.serializableCache;\n  return {\n    authOptions: buildAuthOptions(userAuthOptions),\n    systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\n    loggerOptions: __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption),\n    storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION),\n    networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n    cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n    clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n    libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo),\n    serverTelemetryManager: serverTelemetryManager || null,\n    persistencePlugin: persistencePlugin || null,\n    serializableCache: serializableCache || null\n  };\n}\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\n\n\nfunction buildAuthOptions(authOptions) {\n  return __assign({\n    clientCapabilities: []\n  }, authOptions);\n}\n\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@azure/msal-common/dist/config/ClientConfiguration.js"],"names":["__assign","__awaiter","__generator","DEFAULT_CRYPTO_IMPLEMENTATION","AuthError","LogLevel","Constants","version","DefaultStorageClass","DEFAULT_TOKEN_RENEWAL_OFFSET_SEC","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","loggerCallback","piiLoggingEnabled","logLevel","Info","correlationId","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","notImplErr","_a","createUnexpectedError","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","SKU","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","undefined","buildClientConfiguration","userAuthOptions","authOptions","userSystemOptions","systemOptions","userLoggerOption","loggerOptions","storageImplementation","storageInterface","networkImplementation","networkInterface","cryptoImplementation","cryptoInterface","clientCredentials","libraryInfo","serverTelemetryManager","persistencePlugin","serializableCache","buildAuthOptions","clientId","clientCapabilities"],"mappings":"AAAA;AACA;;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,uBAAjD;AACA,SAASC,6BAAT,QAA8C,sBAA9C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gCAAgC,GAAG,GAAvC;AACA,IAAIC,sBAAsB,GAAG;AACzBC,EAAAA,yBAAyB,EAAEF,gCADF;AAEzBG,EAAAA,oBAAoB,EAAE;AAFG,CAA7B;AAIA,IAAIC,6BAA6B,GAAG;AAChCC,EAAAA,cAAc,EAAE,YAAY,CACxB;AACH,GAH+B;AAIhCC,EAAAA,iBAAiB,EAAE,KAJa;AAKhCC,EAAAA,QAAQ,EAAEX,QAAQ,CAACY,IALa;AAMhCC,EAAAA,aAAa,EAAE;AANiB,CAApC;AAQA,IAAIC,8BAA8B,GAAG;AACjCC,EAAAA,mBAAmB,EAAE,YAAY;AAC7B,WAAOnB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;AAC/C,UAAIoB,UAAJ;AACA,aAAOnB,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;AACnCD,QAAAA,UAAU,GAAG,oEAAb;AACA,cAAMjB,SAAS,CAACmB,qBAAV,CAAgCF,UAAhC,CAAN;AACH,OAHiB,CAAlB;AAIH,KANe,CAAhB;AAOH,GATgC;AAUjCG,EAAAA,oBAAoB,EAAE,YAAY;AAC9B,WAAOvB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;AAC/C,UAAIoB,UAAJ;AACA,aAAOnB,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;AACnCD,QAAAA,UAAU,GAAG,qEAAb;AACA,cAAMjB,SAAS,CAACmB,qBAAV,CAAgCF,UAAhC,CAAN;AACH,OAHiB,CAAlB;AAIH,KANe,CAAhB;AAOH;AAlBgC,CAArC;AAoBA,IAAII,oBAAoB,GAAG;AACvBC,EAAAA,GAAG,EAAEpB,SAAS,CAACqB,GADQ;AAEvBpB,EAAAA,OAAO,EAAEA,OAFc;AAGvBqB,EAAAA,GAAG,EAAE,EAHkB;AAIvBC,EAAAA,EAAE,EAAE;AAJmB,CAA3B;AAMA,IAAIC,0BAA0B,GAAG;AAC7BC,EAAAA,YAAY,EAAE,EADe;AAE7BC,EAAAA,eAAe,EAAEC;AAFY,CAAjC;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,wBAAT,CAAkCZ,EAAlC,EAAsC;AAClC,MAAIa,eAAe,GAAGb,EAAE,CAACc,WAAzB;AAAA,MAAsCC,iBAAiB,GAAGf,EAAE,CAACgB,aAA7D;AAAA,MAA4EC,gBAAgB,GAAGjB,EAAE,CAACkB,aAAlG;AAAA,MAAiHC,qBAAqB,GAAGnB,EAAE,CAACoB,gBAA5I;AAAA,MAA8JC,qBAAqB,GAAGrB,EAAE,CAACsB,gBAAzL;AAAA,MAA2MC,oBAAoB,GAAGvB,EAAE,CAACwB,eAArO;AAAA,MAAsPC,iBAAiB,GAAGzB,EAAE,CAACyB,iBAA7Q;AAAA,MAAgSC,WAAW,GAAG1B,EAAE,CAAC0B,WAAjT;AAAA,MAA8TC,sBAAsB,GAAG3B,EAAE,CAAC2B,sBAA1V;AAAA,MAAkXC,iBAAiB,GAAG5B,EAAE,CAAC4B,iBAAzY;AAAA,MAA4ZC,iBAAiB,GAAG7B,EAAE,CAAC6B,iBAAnb;AACA,SAAO;AACHf,IAAAA,WAAW,EAAEgB,gBAAgB,CAACjB,eAAD,CAD1B;AAEHG,IAAAA,aAAa,EAAEtC,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKU,sBAAL,CAAT,EAAuC2B,iBAAvC,CAFpB;AAGHG,IAAAA,aAAa,EAAExC,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKa,6BAAL,CAAT,EAA8C0B,gBAA9C,CAHpB;AAIHG,IAAAA,gBAAgB,EAAED,qBAAqB,IAAI,IAAIjC,mBAAJ,CAAwB2B,eAAe,CAACkB,QAAxC,EAAkDlD,6BAAlD,CAJxC;AAKHyC,IAAAA,gBAAgB,EAAED,qBAAqB,IAAIxB,8BALxC;AAMH2B,IAAAA,eAAe,EAAED,oBAAoB,IAAI1C,6BANtC;AAOH4C,IAAAA,iBAAiB,EAAEA,iBAAiB,IAAIjB,0BAPrC;AAQHkB,IAAAA,WAAW,EAAEhD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKyB,oBAAL,CAAT,EAAqCuB,WAArC,CARlB;AASHC,IAAAA,sBAAsB,EAAEA,sBAAsB,IAAI,IAT/C;AAUHC,IAAAA,iBAAiB,EAAEA,iBAAiB,IAAI,IAVrC;AAWHC,IAAAA,iBAAiB,EAAEA,iBAAiB,IAAI;AAXrC,GAAP;AAaH;AACD;AACA;AACA;AACA;;;AACA,SAASC,gBAAT,CAA0BhB,WAA1B,EAAuC;AACnC,SAAOpC,QAAQ,CAAC;AAAEsD,IAAAA,kBAAkB,EAAE;AAAtB,GAAD,EAA6BlB,WAA7B,CAAf;AACH;;AAED,SAAS1B,sBAAT,EAAiCwB,wBAAjC","sourcesContent":["/*! @azure/msal-common v4.5.1 2021-08-02 */\n'use strict';\nimport { __assign, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { LogLevel } from '../logger/Logger.js';\nimport { Constants } from '../utils/Constants.js';\nimport { version } from '../packageMetadata.js';\nimport { DefaultStorageClass } from '../cache/CacheManager.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n    correlationId: \"\"\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: \"\",\r\n    os: \"\"\r\n};\r\nvar DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: \"\",\r\n    clientAssertion: undefined\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, clientCredentials = _a.clientCredentials, libraryInfo = _a.libraryInfo, serverTelemetryManager = _a.serverTelemetryManager, persistencePlugin = _a.persistencePlugin, serializableCache = _a.serializableCache;\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption),\r\n        storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo),\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null\r\n    };\r\n}\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions) {\r\n    return __assign({ clientCapabilities: [] }, authOptions);\r\n}\n\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration };\n"]},"metadata":{},"sourceType":"module"}