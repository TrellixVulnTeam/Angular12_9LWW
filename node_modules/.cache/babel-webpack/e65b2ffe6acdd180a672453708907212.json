{"ast":null,"code":"/*! @azure/msal-common v4.5.1 2021-08-02 */\n'use strict';\n\nimport { __spreadArrays } from '../_virtual/_tslib.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar Constants = {\n  LIBRARY_NAME: \"MSAL.JS\",\n  SKU: \"msal.js.common\",\n  // Prefix for all library cache entries\n  CACHE_PREFIX: \"msal\",\n  // default authority\n  DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n  DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n  // ADFS String\n  ADFS: \"adfs\",\n  // Default AAD Instance Discovery Endpoint\n  AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n  // Resource delimiter - used for certain cache entries\n  RESOURCE_DELIM: \"|\",\n  // Placeholder for non-existent account ids/objects\n  NO_ACCOUNT: \"NO_ACCOUNT\",\n  // Claims\n  CLAIMS: \"claims\",\n  // Consumer UTID\n  CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n  // Default scopes\n  OPENID_SCOPE: \"openid\",\n  PROFILE_SCOPE: \"profile\",\n  OFFLINE_ACCESS_SCOPE: \"offline_access\",\n  EMAIL_SCOPE: \"email\",\n  // Default response type for authorization code flow\n  CODE_RESPONSE_TYPE: \"code\",\n  CODE_GRANT_TYPE: \"authorization_code\",\n  RT_GRANT_TYPE: \"refresh_token\",\n  FRAGMENT_RESPONSE_MODE: \"fragment\",\n  S256_CODE_CHALLENGE_METHOD: \"S256\",\n  URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n  AUTHORIZATION_PENDING: \"authorization_pending\",\n  NOT_DEFINED: \"not_defined\",\n  EMPTY_STRING: \"\",\n  FORWARD_SLASH: \"/\",\n  IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n  IMDS_VERSION: \"2020-06-01\",\n  IMDS_TIMEOUT: 2000,\n  AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n  REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n  KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"]\n};\nvar OIDC_DEFAULT_SCOPES = [Constants.OPENID_SCOPE, Constants.PROFILE_SCOPE, Constants.OFFLINE_ACCESS_SCOPE];\n\nvar OIDC_SCOPES = __spreadArrays(OIDC_DEFAULT_SCOPES, [Constants.EMAIL_SCOPE]);\n/**\r\n * Request header names\r\n */\n\n\nvar HeaderNames = /*#__PURE__*/(() => {\n  (function (HeaderNames) {\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\n    HeaderNames[\"RETRY_AFTER\"] = \"Retry-After\";\n    HeaderNames[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\n  })(HeaderNames || (HeaderNames = {}));\n\n  return HeaderNames;\n})();\n\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\nvar PersistentCacheKeys = /*#__PURE__*/(() => {\n  (function (PersistentCacheKeys) {\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\n    PersistentCacheKeys[\"ACTIVE_ACCOUNT\"] = \"active-account\";\n  })(PersistentCacheKeys || (PersistentCacheKeys = {}));\n\n  return PersistentCacheKeys;\n})();\n\n/**\r\n * String constants related to AAD Authority\r\n */\nvar AADAuthorityConstants = /*#__PURE__*/(() => {\n  (function (AADAuthorityConstants) {\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\n  })(AADAuthorityConstants || (AADAuthorityConstants = {}));\n\n  return AADAuthorityConstants;\n})();\n\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\nvar AADServerParamKeys = /*#__PURE__*/(() => {\n  (function (AADServerParamKeys) {\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\n    AADServerParamKeys[\"ERROR\"] = \"error\";\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\n    AADServerParamKeys[\"STATE\"] = \"state\";\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\n    AADServerParamKeys[\"CODE\"] = \"code\";\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\n    AADServerParamKeys[\"X_CLIENT_CURR_TELEM\"] = \"x-client-current-telemetry\";\n    AADServerParamKeys[\"X_CLIENT_LAST_TELEM\"] = \"x-client-last-telemetry\";\n    AADServerParamKeys[\"X_MS_LIB_CAPABILITY\"] = \"x-ms-lib-capability\";\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\n    AADServerParamKeys[\"ID_TOKEN_HINT\"] = \"id_token_hint\";\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\n    AADServerParamKeys[\"CLIENT_SECRET\"] = \"client_secret\";\n    AADServerParamKeys[\"CLIENT_ASSERTION\"] = \"client_assertion\";\n    AADServerParamKeys[\"CLIENT_ASSERTION_TYPE\"] = \"client_assertion_type\";\n    AADServerParamKeys[\"TOKEN_TYPE\"] = \"token_type\";\n    AADServerParamKeys[\"REQ_CNF\"] = \"req_cnf\";\n    AADServerParamKeys[\"OBO_ASSERTION\"] = \"assertion\";\n    AADServerParamKeys[\"REQUESTED_TOKEN_USE\"] = \"requested_token_use\";\n    AADServerParamKeys[\"ON_BEHALF_OF\"] = \"on_behalf_of\";\n    AADServerParamKeys[\"FOCI\"] = \"foci\";\n    AADServerParamKeys[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\n  })(AADServerParamKeys || (AADServerParamKeys = {}));\n\n  return AADServerParamKeys;\n})();\n\n/**\r\n * Claims request keys\r\n */\nvar ClaimsRequestKeys = /*#__PURE__*/(() => {\n  (function (ClaimsRequestKeys) {\n    ClaimsRequestKeys[\"ACCESS_TOKEN\"] = \"access_token\";\n    ClaimsRequestKeys[\"XMS_CC\"] = \"xms_cc\";\n  })(ClaimsRequestKeys || (ClaimsRequestKeys = {}));\n\n  return ClaimsRequestKeys;\n})();\n\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\nvar PromptValue = {\n  LOGIN: \"login\",\n  SELECT_ACCOUNT: \"select_account\",\n  CONSENT: \"consent\",\n  NONE: \"none\",\n  CREATE: \"create\"\n};\n/**\r\n * SSO Types - generated to populate hints\r\n */\n\nvar SSOTypes = /*#__PURE__*/(() => {\n  (function (SSOTypes) {\n    SSOTypes[\"ACCOUNT\"] = \"account\";\n    SSOTypes[\"SID\"] = \"sid\";\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\n  })(SSOTypes || (SSOTypes = {}));\n\n  return SSOTypes;\n})();\n\n/**\r\n * allowed values for codeVerifier\r\n */\nvar CodeChallengeMethodValues = {\n  PLAIN: \"plain\",\n  S256: \"S256\"\n};\n/**\r\n * allowed values for response_mode\r\n */\n\nvar ResponseMode = /*#__PURE__*/(() => {\n  (function (ResponseMode) {\n    ResponseMode[\"QUERY\"] = \"query\";\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\n  })(ResponseMode || (ResponseMode = {}));\n\n  return ResponseMode;\n})();\n\n/**\r\n * allowed grant_type\r\n */\nvar GrantType = /*#__PURE__*/(() => {\n  (function (GrantType) {\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\n    GrantType[\"JWT_BEARER\"] = \"urn:ietf:params:oauth:grant-type:jwt-bearer\";\n  })(GrantType || (GrantType = {}));\n\n  return GrantType;\n})();\n\n/**\r\n * Account types in Cache\r\n */\nvar CacheAccountType = /*#__PURE__*/(() => {\n  (function (CacheAccountType) {\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\n  })(CacheAccountType || (CacheAccountType = {}));\n\n  return CacheAccountType;\n})();\n\n/**\r\n * Separators used in cache\r\n */\nvar Separators = /*#__PURE__*/(() => {\n  (function (Separators) {\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\n  })(Separators || (Separators = {}));\n\n  return Separators;\n})();\n\n/**\r\n * Credential Type stored in the cache\r\n */\nvar CredentialType = /*#__PURE__*/(() => {\n  (function (CredentialType) {\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\n    CredentialType[\"ACCESS_TOKEN_WITH_AUTH_SCHEME\"] = \"AccessToken_With_AuthScheme\";\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\n  })(CredentialType || (CredentialType = {}));\n\n  return CredentialType;\n})();\n\n/**\r\n * Credential Type stored in the cache\r\n */\nvar CacheSchemaType = /*#__PURE__*/(() => {\n  (function (CacheSchemaType) {\n    CacheSchemaType[\"ACCOUNT\"] = \"Account\";\n    CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\n    CacheSchemaType[\"ID_TOKEN\"] = \"IdToken\";\n    CacheSchemaType[\"ACCESS_TOKEN\"] = \"AccessToken\";\n    CacheSchemaType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\n    CacheSchemaType[\"APP_METADATA\"] = \"AppMetadata\";\n    CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\n    CacheSchemaType[\"TELEMETRY\"] = \"Telemetry\";\n    CacheSchemaType[\"UNDEFINED\"] = \"Undefined\";\n    CacheSchemaType[\"THROTTLING\"] = \"Throttling\";\n  })(CacheSchemaType || (CacheSchemaType = {}));\n\n  return CacheSchemaType;\n})();\n\n/**\r\n * Combine all cache types\r\n */\nvar CacheType = /*#__PURE__*/(() => {\n  (function (CacheType) {\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\n    CacheType[CacheType[\"APP_METADATA\"] = 3001] = \"APP_METADATA\";\n    CacheType[CacheType[\"UNDEFINED\"] = 9999] = \"UNDEFINED\";\n  })(CacheType || (CacheType = {}));\n\n  return CacheType;\n})();\n\n/**\r\n * More Cache related constants\r\n */\nvar APP_METADATA = \"appmetadata\";\nvar CLIENT_INFO = \"client_info\";\nvar THE_FAMILY_ID = \"1\";\nvar AUTHORITY_METADATA_CONSTANTS = {\n  CACHE_KEY: \"authority-metadata\",\n  REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\n\n};\nvar AuthorityMetadataSource = /*#__PURE__*/(() => {\n  (function (AuthorityMetadataSource) {\n    AuthorityMetadataSource[\"CONFIG\"] = \"config\";\n    AuthorityMetadataSource[\"CACHE\"] = \"cache\";\n    AuthorityMetadataSource[\"NETWORK\"] = \"network\";\n  })(AuthorityMetadataSource || (AuthorityMetadataSource = {}));\n\n  return AuthorityMetadataSource;\n})();\nvar SERVER_TELEM_CONSTANTS = {\n  SCHEMA_VERSION: 5,\n  MAX_CUR_HEADER_BYTES: 80,\n  MAX_LAST_HEADER_BYTES: 330,\n  MAX_CACHED_ERRORS: 50,\n  CACHE_KEY: \"server-telemetry\",\n  CATEGORY_SEPARATOR: \"|\",\n  VALUE_SEPARATOR: \",\",\n  OVERFLOW_TRUE: \"1\",\n  OVERFLOW_FALSE: \"0\",\n  UNKNOWN_ERROR: \"unknown_error\"\n};\n/**\r\n * Type of the authentication request\r\n */\n\nvar AuthenticationScheme = /*#__PURE__*/(() => {\n  (function (AuthenticationScheme) {\n    AuthenticationScheme[\"POP\"] = \"pop\";\n    AuthenticationScheme[\"BEARER\"] = \"Bearer\";\n  })(AuthenticationScheme || (AuthenticationScheme = {}));\n\n  return AuthenticationScheme;\n})();\n\n/**\r\n * Constants related to throttling\r\n */\nvar ThrottlingConstants = {\n  // Default time to throttle RequestThumbprint in seconds\n  DEFAULT_THROTTLE_TIME_SECONDS: 60,\n  // Default maximum time to throttle in seconds, overrides what the server sends back\n  DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n  // Prefix for storing throttling entries\n  THROTTLING_PREFIX: \"throttling\",\n  // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n  X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\n};\nvar Errors = {\n  INVALID_GRANT_ERROR: \"invalid_grant\",\n  CLIENT_MISMATCH_ERROR: \"client_mismatch\"\n};\n/**\r\n * Password grant parameters\r\n */\n\nvar PasswordGrantConstants = /*#__PURE__*/(() => {\n  (function (PasswordGrantConstants) {\n    PasswordGrantConstants[\"username\"] = \"username\";\n    PasswordGrantConstants[\"password\"] = \"password\";\n  })(PasswordGrantConstants || (PasswordGrantConstants = {}));\n\n  return PasswordGrantConstants;\n})();\n\n/**\r\n * Response codes\r\n */\nvar ResponseCodes = /*#__PURE__*/(() => {\n  (function (ResponseCodes) {\n    ResponseCodes[ResponseCodes[\"httpSuccess\"] = 200] = \"httpSuccess\";\n    ResponseCodes[ResponseCodes[\"httpBadRequest\"] = 400] = \"httpBadRequest\";\n  })(ResponseCodes || (ResponseCodes = {}));\n\n  return ResponseCodes;\n})();\n\n/**\r\n * Region Discovery Sources\r\n */\nvar RegionDiscoverySources = /*#__PURE__*/(() => {\n  (function (RegionDiscoverySources) {\n    RegionDiscoverySources[\"FAILED_AUTO_DETECTION\"] = \"1\";\n    RegionDiscoverySources[\"INTERNAL_CACHE\"] = \"2\";\n    RegionDiscoverySources[\"ENVIRONMENT_VARIABLE\"] = \"3\";\n    RegionDiscoverySources[\"IMDS\"] = \"4\";\n  })(RegionDiscoverySources || (RegionDiscoverySources = {}));\n\n  return RegionDiscoverySources;\n})();\n\n/**\r\n * Region Discovery Outcomes\r\n */\nvar RegionDiscoveryOutcomes = /*#__PURE__*/(() => {\n  (function (RegionDiscoveryOutcomes) {\n    RegionDiscoveryOutcomes[\"CONFIGURED_MATCHES_DETECTED\"] = \"1\";\n    RegionDiscoveryOutcomes[\"CONFIGURED_NO_AUTO_DETECTION\"] = \"2\";\n    RegionDiscoveryOutcomes[\"CONFIGURED_NOT_DETECTED\"] = \"3\";\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_SUCCESSFUL\"] = \"4\";\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_FAILED\"] = \"5\";\n  })(RegionDiscoveryOutcomes || (RegionDiscoveryOutcomes = {}));\n\n  return RegionDiscoveryOutcomes;\n})();\nvar CacheOutcome = /*#__PURE__*/(() => {\n  (function (CacheOutcome) {\n    CacheOutcome[\"NO_CACHE_HIT\"] = \"0\";\n    CacheOutcome[\"FORCE_REFRESH\"] = \"1\";\n    CacheOutcome[\"NO_CACHED_ACCESS_TOKEN\"] = \"2\";\n    CacheOutcome[\"CACHED_ACCESS_TOKEN_EXPIRED\"] = \"3\";\n    CacheOutcome[\"REFRESH_CACHED_ACCESS_TOKEN\"] = \"4\";\n  })(CacheOutcome || (CacheOutcome = {}));\n\n  return CacheOutcome;\n})();\nexport { AADAuthorityConstants, AADServerParamKeys, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheSchemaType, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, Errors, GrantType, HeaderNames, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseCodes, ResponseMode, SERVER_TELEM_CONSTANTS, SSOTypes, Separators, THE_FAMILY_ID, ThrottlingConstants };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@azure/msal-common/dist/utils/Constants.js"],"names":["__spreadArrays","Constants","LIBRARY_NAME","SKU","CACHE_PREFIX","DEFAULT_AUTHORITY","DEFAULT_AUTHORITY_HOST","ADFS","AAD_INSTANCE_DISCOVERY_ENDPT","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_RESPONSE_TYPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","AADServerParamKeys","ClaimsRequestKeys","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","CREATE","SSOTypes","CodeChallengeMethodValues","PLAIN","S256","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","CacheSchemaType","CacheType","APP_METADATA","CLIENT_INFO","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","CACHE_KEY","REFRESH_TIME_SECONDS","AuthorityMetadataSource","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_CUR_HEADER_BYTES","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","AuthenticationScheme","ThrottlingConstants","DEFAULT_THROTTLE_TIME_SECONDS","DEFAULT_MAX_THROTTLE_TIME_SECONDS","THROTTLING_PREFIX","X_MS_LIB_CAPABILITY_VALUE","Errors","INVALID_GRANT_ERROR","CLIENT_MISMATCH_ERROR","PasswordGrantConstants","ResponseCodes","RegionDiscoverySources","RegionDiscoveryOutcomes","CacheOutcome"],"mappings":"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","sourcesContent":["/*! @azure/msal-common v4.5.1 2021-08-02 */\n'use strict';\nimport { __spreadArrays } from '../_virtual/_tslib.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    EMAIL_SCOPE: \"email\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\",\r\n    EMPTY_STRING: \"\",\r\n    FORWARD_SLASH: \"/\",\r\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\r\n    IMDS_VERSION: \"2020-06-01\",\r\n    IMDS_TIMEOUT: 2000,\r\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\r\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\r\n    KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"]\r\n};\r\nvar OIDC_DEFAULT_SCOPES = [\r\n    Constants.OPENID_SCOPE,\r\n    Constants.PROFILE_SCOPE,\r\n    Constants.OFFLINE_ACCESS_SCOPE\r\n];\r\nvar OIDC_SCOPES = __spreadArrays(OIDC_DEFAULT_SCOPES, [\r\n    Constants.EMAIL_SCOPE\r\n]);\r\n/**\r\n * Request header names\r\n */\r\nvar HeaderNames;\r\n(function (HeaderNames) {\r\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n    HeaderNames[\"RETRY_AFTER\"] = \"Retry-After\";\r\n    HeaderNames[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\r\n})(HeaderNames || (HeaderNames = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n    PersistentCacheKeys[\"ACTIVE_ACCOUNT\"] = \"active-account\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\r\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\r\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\r\n    AADServerParamKeys[\"X_CLIENT_CURR_TELEM\"] = \"x-client-current-telemetry\";\r\n    AADServerParamKeys[\"X_CLIENT_LAST_TELEM\"] = \"x-client-last-telemetry\";\r\n    AADServerParamKeys[\"X_MS_LIB_CAPABILITY\"] = \"x-ms-lib-capability\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n    AADServerParamKeys[\"ID_TOKEN_HINT\"] = \"id_token_hint\";\r\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\r\n    AADServerParamKeys[\"CLIENT_SECRET\"] = \"client_secret\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION\"] = \"client_assertion\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION_TYPE\"] = \"client_assertion_type\";\r\n    AADServerParamKeys[\"TOKEN_TYPE\"] = \"token_type\";\r\n    AADServerParamKeys[\"REQ_CNF\"] = \"req_cnf\";\r\n    AADServerParamKeys[\"OBO_ASSERTION\"] = \"assertion\";\r\n    AADServerParamKeys[\"REQUESTED_TOKEN_USE\"] = \"requested_token_use\";\r\n    AADServerParamKeys[\"ON_BEHALF_OF\"] = \"on_behalf_of\";\r\n    AADServerParamKeys[\"FOCI\"] = \"foci\";\r\n    AADServerParamKeys[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * Claims request keys\r\n */\r\nvar ClaimsRequestKeys;\r\n(function (ClaimsRequestKeys) {\r\n    ClaimsRequestKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    ClaimsRequestKeys[\"XMS_CC\"] = \"xms_cc\";\r\n})(ClaimsRequestKeys || (ClaimsRequestKeys = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n    CREATE: \"create\"\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nvar CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\"\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nvar ResponseMode;\r\n(function (ResponseMode) {\r\n    ResponseMode[\"QUERY\"] = \"query\";\r\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\r\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\r\n})(ResponseMode || (ResponseMode = {}));\r\n/**\r\n * allowed grant_type\r\n */\r\nvar GrantType;\r\n(function (GrantType) {\r\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\r\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\r\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\r\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\r\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\r\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\r\n    GrantType[\"JWT_BEARER\"] = \"urn:ietf:params:oauth:grant-type:jwt-bearer\";\r\n})(GrantType || (GrantType = {}));\r\n/**\r\n * Account types in Cache\r\n */\r\nvar CacheAccountType;\r\n(function (CacheAccountType) {\r\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\r\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\r\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\r\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\r\n})(CacheAccountType || (CacheAccountType = {}));\r\n/**\r\n * Separators used in cache\r\n */\r\nvar Separators;\r\n(function (Separators) {\r\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\r\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\r\n})(Separators || (Separators = {}));\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nvar CredentialType;\r\n(function (CredentialType) {\r\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CredentialType[\"ACCESS_TOKEN_WITH_AUTH_SCHEME\"] = \"AccessToken_With_AuthScheme\";\r\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n})(CredentialType || (CredentialType = {}));\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nvar CacheSchemaType;\r\n(function (CacheSchemaType) {\r\n    CacheSchemaType[\"ACCOUNT\"] = \"Account\";\r\n    CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\r\n    CacheSchemaType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CacheSchemaType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CacheSchemaType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n    CacheSchemaType[\"APP_METADATA\"] = \"AppMetadata\";\r\n    CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\r\n    CacheSchemaType[\"TELEMETRY\"] = \"Telemetry\";\r\n    CacheSchemaType[\"UNDEFINED\"] = \"Undefined\";\r\n    CacheSchemaType[\"THROTTLING\"] = \"Throttling\";\r\n})(CacheSchemaType || (CacheSchemaType = {}));\r\n/**\r\n * Combine all cache types\r\n */\r\nvar CacheType;\r\n(function (CacheType) {\r\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\r\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\r\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\r\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\r\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\r\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\r\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\r\n    CacheType[CacheType[\"APP_METADATA\"] = 3001] = \"APP_METADATA\";\r\n    CacheType[CacheType[\"UNDEFINED\"] = 9999] = \"UNDEFINED\";\r\n})(CacheType || (CacheType = {}));\r\n/**\r\n * More Cache related constants\r\n */\r\nvar APP_METADATA = \"appmetadata\";\r\nvar CLIENT_INFO = \"client_info\";\r\nvar THE_FAMILY_ID = \"1\";\r\nvar AUTHORITY_METADATA_CONSTANTS = {\r\n    CACHE_KEY: \"authority-metadata\",\r\n    REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\r\n};\r\nvar AuthorityMetadataSource;\r\n(function (AuthorityMetadataSource) {\r\n    AuthorityMetadataSource[\"CONFIG\"] = \"config\";\r\n    AuthorityMetadataSource[\"CACHE\"] = \"cache\";\r\n    AuthorityMetadataSource[\"NETWORK\"] = \"network\";\r\n})(AuthorityMetadataSource || (AuthorityMetadataSource = {}));\r\nvar SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 5,\r\n    MAX_CUR_HEADER_BYTES: 80,\r\n    MAX_LAST_HEADER_BYTES: 330,\r\n    MAX_CACHED_ERRORS: 50,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\",\r\n    OVERFLOW_TRUE: \"1\",\r\n    OVERFLOW_FALSE: \"0\",\r\n    UNKNOWN_ERROR: \"unknown_error\"\r\n};\r\n/**\r\n * Type of the authentication request\r\n */\r\nvar AuthenticationScheme;\r\n(function (AuthenticationScheme) {\r\n    AuthenticationScheme[\"POP\"] = \"pop\";\r\n    AuthenticationScheme[\"BEARER\"] = \"Bearer\";\r\n})(AuthenticationScheme || (AuthenticationScheme = {}));\r\n/**\r\n * Constants related to throttling\r\n */\r\nvar ThrottlingConstants = {\r\n    // Default time to throttle RequestThumbprint in seconds\r\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\r\n    // Default maximum time to throttle in seconds, overrides what the server sends back\r\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\r\n    // Prefix for storing throttling entries\r\n    THROTTLING_PREFIX: \"throttling\",\r\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\r\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\r\n};\r\nvar Errors = {\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\r\n};\r\n/**\r\n * Password grant parameters\r\n */\r\nvar PasswordGrantConstants;\r\n(function (PasswordGrantConstants) {\r\n    PasswordGrantConstants[\"username\"] = \"username\";\r\n    PasswordGrantConstants[\"password\"] = \"password\";\r\n})(PasswordGrantConstants || (PasswordGrantConstants = {}));\r\n/**\r\n * Response codes\r\n */\r\nvar ResponseCodes;\r\n(function (ResponseCodes) {\r\n    ResponseCodes[ResponseCodes[\"httpSuccess\"] = 200] = \"httpSuccess\";\r\n    ResponseCodes[ResponseCodes[\"httpBadRequest\"] = 400] = \"httpBadRequest\";\r\n})(ResponseCodes || (ResponseCodes = {}));\r\n/**\r\n * Region Discovery Sources\r\n */\r\nvar RegionDiscoverySources;\r\n(function (RegionDiscoverySources) {\r\n    RegionDiscoverySources[\"FAILED_AUTO_DETECTION\"] = \"1\";\r\n    RegionDiscoverySources[\"INTERNAL_CACHE\"] = \"2\";\r\n    RegionDiscoverySources[\"ENVIRONMENT_VARIABLE\"] = \"3\";\r\n    RegionDiscoverySources[\"IMDS\"] = \"4\";\r\n})(RegionDiscoverySources || (RegionDiscoverySources = {}));\r\n/**\r\n * Region Discovery Outcomes\r\n */\r\nvar RegionDiscoveryOutcomes;\r\n(function (RegionDiscoveryOutcomes) {\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_MATCHES_DETECTED\"] = \"1\";\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_NO_AUTO_DETECTION\"] = \"2\";\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_NOT_DETECTED\"] = \"3\";\r\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_SUCCESSFUL\"] = \"4\";\r\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_FAILED\"] = \"5\";\r\n})(RegionDiscoveryOutcomes || (RegionDiscoveryOutcomes = {}));\r\nvar CacheOutcome;\r\n(function (CacheOutcome) {\r\n    CacheOutcome[\"NO_CACHE_HIT\"] = \"0\";\r\n    CacheOutcome[\"FORCE_REFRESH\"] = \"1\";\r\n    CacheOutcome[\"NO_CACHED_ACCESS_TOKEN\"] = \"2\";\r\n    CacheOutcome[\"CACHED_ACCESS_TOKEN_EXPIRED\"] = \"3\";\r\n    CacheOutcome[\"REFRESH_CACHED_ACCESS_TOKEN\"] = \"4\";\r\n})(CacheOutcome || (CacheOutcome = {}));\n\nexport { AADAuthorityConstants, AADServerParamKeys, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheSchemaType, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, Errors, GrantType, HeaderNames, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseCodes, ResponseMode, SERVER_TELEM_CONSTANTS, SSOTypes, Separators, THE_FAMILY_ID, ThrottlingConstants };\n"]},"metadata":{},"sourceType":"module"}