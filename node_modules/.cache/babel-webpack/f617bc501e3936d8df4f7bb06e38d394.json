{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/TextBuilder\n */\n\n\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\n\nexport var TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1\n};\n\nvar CanvasTextBuilder = function (_super) {\n  __extends(CanvasTextBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n\n\n  function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n\n\n    _this.labels_ = null;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.text_ = '';\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textOffsetX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textOffsetY_ = 0;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n\n    _this.textRotateWithView_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.textRotation_ = 0;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    _this.textFillState_ = null;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n\n    _this.fillStates = {};\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    _this.textStrokeState_ = null;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n\n    _this.strokeStates = {};\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n\n    _this.textState_ = {};\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n\n    _this.textStates = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.textKey_ = '';\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.fillKey_ = '';\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.strokeKey_ = '';\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n\n    _this.declutterImageWithText_ = undefined;\n    return _this;\n  }\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n\n\n  CanvasTextBuilder.prototype.finish = function () {\n    var instructions = _super.prototype.finish.call(this);\n\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  };\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n\n    if (this.text_ === '' || !textState || !fillState && !strokeState) {\n      return;\n    }\n\n    var coordinates = this.coordinates;\n    var begin = coordinates.length;\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var stride = geometry.getStride();\n\n    if (textState.placement === TextPlacement.LINE && (geometryType == GeometryType.LINE_STRING || geometryType == GeometryType.MULTI_LINE_STRING || geometryType == GeometryType.POLYGON || geometryType == GeometryType.MULTI_POLYGON)) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n\n      var ends = void 0;\n      flatCoordinates = geometry.getFlatCoordinates();\n\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */\n        geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends =\n        /** @type {import(\"../../geom/Polygon.js\").default} */\n        geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n        geometry.getEndss();\n        ends = [];\n\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd = void 0;\n\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n\n        for (var i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n\n        var end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n\n      this.endGeometry(feature);\n    } else {\n      var geometryWidths = textState.overflow ? null : [];\n\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */\n          geometry.getFlatCoordinates();\n          break;\n\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n          /** @type {import(\"../../geom/LineString.js\").default} */\n          geometry.getFlatMidpoint();\n          break;\n\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n          /** @type {import(\"../../geom/Circle.js\").default} */\n          geometry.getCenter();\n          break;\n\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */\n          geometry.getFlatMidpoints();\n          stride = 2;\n          break;\n\n        case GeometryType.POLYGON:\n          flatCoordinates =\n          /** @type {import(\"../../geom/Polygon.js\").default} */\n          geometry.getFlatInteriorPoint();\n\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n\n          stride = 3;\n          break;\n\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n          geometry.getFlatInteriorPoints();\n          flatCoordinates = [];\n\n          for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n\n          stride = 2;\n          break;\n\n        default:\n      }\n\n      var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n      if (end === begin) {\n        return;\n      }\n\n      if (geometryWidths && (end - begin) / 2 !== flatCoordinates.length / stride) {\n        var beg_1 = begin / 2;\n        geometryWidths = geometryWidths.filter(function (w, i) {\n          var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] && coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n\n          if (!keep) {\n            --beg_1;\n          }\n\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature); // adjust padding for negative scale\n\n      var padding = textState.padding;\n\n      if (padding != defaultPadding && (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n        var p0 = textState.padding[0];\n        var p1 = textState.padding[1];\n        var p2 = textState.padding[2];\n        var p3 = textState.padding[3];\n\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n\n        padding = [p0, p1, p2, p3];\n      } // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n\n\n      var pixelRatio_1 = this.pixelRatio;\n      this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [1, 1], NaN, this.declutterImageWithText_, padding == defaultPadding ? defaultPadding : padding.map(function (p) {\n        return p * pixelRatio_1;\n      }), !!textState.backgroundFill, !!textState.backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths]);\n      var scale = 1 / pixelRatio_1;\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [scale, scale], NaN, this.declutterImageWithText_, padding, !!textState.backgroundFill, !!textState.backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths]);\n      this.endGeometry(feature);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  CanvasTextBuilder.prototype.saveTextStates_ = function () {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n    var strokeKey = this.strokeKey_;\n\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        };\n      }\n    }\n\n    var textKey = this.textKey_;\n\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale\n      };\n    }\n\n    var fillKey = this.fillKey_;\n\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle\n        };\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n\n\n  CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var strokeKey = this.strokeKey_;\n    var textKey = this.textKey_;\n    var fillKey = this.fillKey_;\n    this.saveTextStates_();\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var strokeWidth = strokeState ? strokeState.lineWidth * Math.abs(textState.scale[0]) / 2 : 0;\n    this.instructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, pixelRatio, offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, 1, offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio]);\n  };\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n\n\n  CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n    var textState, fillState, strokeState;\n\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n\n        if (!fillState) {\n          fillState = {};\n          this.textFillState_ = fillState;\n        }\n\n        fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n\n        if (!strokeState) {\n          strokeState = {};\n          this.textStrokeState_ = strokeState;\n        }\n\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset = lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth = lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit = miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      var textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n      this.strokeKey_ = strokeState ? (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) + strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth + strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' : '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?') + (textState.textBaseline || '?');\n      this.fillKey_ = fillState ? typeof fillState.fillStyle == 'string' ? fillState.fillStyle : '|' + getUid(fillState.fillStyle) : '';\n    }\n\n    this.declutterImageWithText_ = opt_sharedData;\n  };\n\n  return CanvasTextBuilder;\n}(CanvasBuilder);\n\nexport default CanvasTextBuilder;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/render/canvas/TextBuilder.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","CanvasBuilder","CanvasInstruction","GeometryType","TextPlacement","asColorLike","defaultFillStyle","defaultFont","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultPadding","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","registerFont","getUid","intersects","matchingChunk","TEXT_ALIGN","CanvasTextBuilder","_super","tolerance","maxExtent","resolution","pixelRatio","_this","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","undefined","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","declutterImageWithText_","finish","instructions","drawText","geometry","feature","fillState","strokeState","textState","coordinates","begin","length","geometryType","getType","flatCoordinates","stride","getStride","placement","LINE","LINE_STRING","MULTI_LINE_STRING","POLYGON","MULTI_POLYGON","getBufferedMaxExtent","getExtent","ends","getFlatCoordinates","getEnds","slice","endss","getEndss","i","ii","push","beginGeometry","textAlign","flatOffset","flatEnd","o","oo","range","maxAngle","end","drawChars_","endGeometry","geometryWidths","overflow","POINT","MULTI_POINT","getFlatMidpoint","CIRCLE","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","appendFlatPointCoordinates","beg_1","filter","w","keep","saveTextStates_","backgroundFill","backgroundStroke","setFillStrokeStyle","updateFillStyle","state","createFill","hitDetectionInstructions","updateStrokeStyle","applyStroke","createStroke","padding","scale","p0","p1","p2","p3","pixelRatio_1","DRAW_IMAGE","NaN","map","strokeKey","strokeStyle","lineCap","lineDashOffset","lineWidth","lineJoin","miterLimit","lineDash","textKey","font","textBaseline","fillKey","fillStyle","baseline","offsetY","text","strokeWidth","Math","abs","DRAW_CHARS","setTextStyle","textStyle","opt_sharedData","textFillStyle","getFill","getColor","textStrokeStyle","getStroke","getLineDash","getLineDashOffset","getWidth","getMiterLimit","getLineCap","getLineJoin","getFont","textScale","getScaleArray","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","getRotateWithView","textRotation","getRotation","getText","join"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n"]},"metadata":{},"sourceType":"module"}