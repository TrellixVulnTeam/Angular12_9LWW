{"ast":null,"code":"import EventType from 'ol/events/EventType.js';\nimport { labelCache } from 'ol/render/canvas.js';\nimport { listen } from 'ol/events.js';\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\n\nexport var assign = typeof Object.assign === 'function' ? Object.assign : function (target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments[i];\n\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return output;\n};\nexport function deg2rad(degrees) {\n  return degrees * Math.PI / 180;\n}\nexport var defaultResolutions = function () {\n  var resolutions = [];\n\n  for (var res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n\n  return resolutions;\n}();\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\n\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n    // eslint-disable-line\n    return new OffscreenCanvas(width, height);\n  } else {\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\nexport function getZoomForResolution(resolution, resolutions) {\n  var i = 0;\n  var ii = resolutions.length;\n\n  for (; i < ii; ++i) {\n    var candidate = resolutions[i];\n\n    if (candidate < resolution && i + 1 < ii) {\n      var zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n\n  return ii - 1;\n}\nvar hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    var textWithLetterSpacing = '';\n    var lines = text.split('\\n');\n    var joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n\n    for (var l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n\n    return textWithLetterSpacing;\n  }\n\n  return text;\n}\nvar measureContext;\n\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\n\nvar measureCache = {};\n\nif (labelCache) {\n  // Only available when using ES modules\n  //@ts-ignore\n  listen(labelCache, EventType.CLEAR, function () {\n    measureCache = {};\n  });\n}\n\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    var hardLines = text.split('\\n');\n    var lines = [];\n\n    for (var i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n\n    return lines.join('\\n');\n  }\n\n  var key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  var wrappedText = measureCache[key];\n\n  if (!wrappedText) {\n    var words = text.split(' ');\n\n    if (words.length > 1) {\n      var ctx = getMeasureContext();\n      ctx.font = font;\n      var oneEm = ctx.measureText('M').width;\n      var maxWidth = oneEm * em;\n      var line = '';\n      var lines = []; // Pass 1 - wrap lines to not exceed maxWidth\n\n      for (var i = 0, ii = words.length; i < ii; ++i) {\n        var word = words[i];\n        var testLine = line + (line ? ' ' : '') + word;\n\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n\n          line = word;\n        }\n      }\n\n      if (line) {\n        lines.push(line);\n      } // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n\n\n      for (var i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        var line_1 = lines[i];\n\n        if (measureText(line_1, letterSpacing) < maxWidth * 0.35) {\n          var prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          var nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line_1;\n            i -= 1;\n          } else {\n            lines[i] = line_1 + ' ' + lines[i];\n          }\n        }\n      } // Pass 3 - try to fill 80% of maxWidth for each line\n\n\n      for (var i = 0, ii = lines.length - 1; i < ii; ++i) {\n        var line_2 = lines[i];\n        var next = lines[i + 1];\n\n        if (measureText(line_2, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n          var lineWords = line_2.split(' ');\n          var lastWord = lineWords.pop();\n\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n\n          ii -= 1;\n        }\n      }\n\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n\n  return wrappedText;\n}","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol-mapbox-style/dist/util.js"],"names":["EventType","labelCache","listen","assign","Object","target","var_sources","undefined","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","deg2rad","degrees","Math","PI","defaultResolutions","resolutions","res","push","createCanvas","width","height","WorkerGlobalScope","self","OffscreenCanvas","canvas","document","createElement","getZoomForResolution","resolution","candidate","zoomFactor","log","hairSpacePool","Array","join","applyLetterSpacing","text","letterSpacing","textWithLetterSpacing","lines","split","joinSpaceString","slice","round","l","ll","measureContext","getMeasureContext","getContext","measureText","measureCache","CLEAR","wrapText","font","em","indexOf","hardLines","wrappedText","words","ctx","oneEm","maxWidth","line","word","testLine","line_1","prevWidth","Infinity","nextWidth","splice","line_2","next","lineWords","lastWord","pop"],"mappings":"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","sourcesContent":["import EventType from 'ol/events/EventType.js';\nimport { labelCache } from 'ol/render/canvas.js';\nimport { listen } from 'ol/events.js';\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\nexport function deg2rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\nexport var defaultResolutions = (function () {\n    var resolutions = [];\n    for (var res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n})();\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n        return /** @type {?} */ (new OffscreenCanvas(width, height));\n    }\n    else {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n}\nexport function getZoomForResolution(resolution, resolutions) {\n    var i = 0;\n    var ii = resolutions.length;\n    for (; i < ii; ++i) {\n        var candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            var zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nvar hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        var textWithLetterSpacing = '';\n        var lines = text.split('\\n');\n        var joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (var l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nvar measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return (getMeasureContext().measureText(text).width +\n        (text.length - 1) * letterSpacing);\n}\nvar measureCache = {};\nif (labelCache) {\n    // Only available when using ES modules\n    //@ts-ignore\n    listen(labelCache, EventType.CLEAR, function () {\n        measureCache = {};\n    });\n}\nexport function wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        var hardLines = text.split('\\n');\n        var lines = [];\n        for (var i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    var key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    var wrappedText = measureCache[key];\n    if (!wrappedText) {\n        var words = text.split(' ');\n        if (words.length > 1) {\n            var ctx = getMeasureContext();\n            ctx.font = font;\n            var oneEm = ctx.measureText('M').width;\n            var maxWidth = oneEm * em;\n            var line = '';\n            var lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (var i = 0, ii = words.length; i < ii; ++i) {\n                var word = words[i];\n                var testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                }\n                else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (var i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                var line_1 = lines[i];\n                if (measureText(line_1, letterSpacing) < maxWidth * 0.35) {\n                    var prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    var nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line_1;\n                        i -= 1;\n                    }\n                    else {\n                        lines[i] = line_1 + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (var i = 0, ii = lines.length - 1; i < ii; ++i) {\n                var line_2 = lines[i];\n                var next = lines[i + 1];\n                if (measureText(line_2, letterSpacing) > maxWidth * 0.7 &&\n                    measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    var lineWords = line_2.split(' ');\n                    var lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        }\n        else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\n"]},"metadata":{},"sourceType":"module"}