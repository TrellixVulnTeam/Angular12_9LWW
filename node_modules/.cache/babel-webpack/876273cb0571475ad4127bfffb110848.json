{"ast":null,"code":"import { LanguageService } from '@igo2/core';\nimport { IgoMap, DataSourceService, LayerService, FEATURE, FeatureMotion } from '@igo2/geo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@igo2/core\";\nimport * as i2 from \"@igo2/geo\";\nimport * as i3 from \"@angular/material/card\";\nexport let AppOverlayComponent = /*#__PURE__*/(() => {\n  class AppOverlayComponent {\n    constructor(languageService, dataSourceService, layerService) {\n      this.languageService = languageService;\n      this.dataSourceService = dataSourceService;\n      this.layerService = layerService;\n      this.map = new IgoMap({\n        overlay: true,\n        controls: {\n          attribution: {\n            collapsed: true\n          }\n        }\n      });\n      this.view = {\n        center: [-73, 47.2],\n        zoom: 6\n      };\n    }\n\n    ngOnInit() {\n      this.dataSourceService.createAsyncDataSource({\n        type: 'osm'\n      }).subscribe(dataSource => {\n        this.map.addLayer(this.layerService.createLayer({\n          title: 'OSM',\n          source: dataSource\n        }));\n      });\n    }\n\n    ngAfterViewInit() {\n      const feature1 = {\n        type: FEATURE,\n        projection: 'EPSG:4326',\n        meta: {\n          id: 1\n        },\n        properties: {},\n        geometry: {\n          type: 'Point',\n          coordinates: [-73, 46.6]\n        }\n      };\n      const feature2 = {\n        type: FEATURE,\n        projection: 'EPSG:4326',\n        meta: {\n          id: 2\n        },\n        properties: {},\n        geometry: {\n          type: 'LineString',\n          coordinates: [[-72, 47.8], [-73.5, 47.4], [-72.4, 48.6]]\n        }\n      };\n      const feature3 = {\n        type: FEATURE,\n        projection: 'EPSG:4326',\n        meta: {\n          id: 3\n        },\n        properties: {},\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[[-71, 46.8], [-73, 47], [-71.2, 46.6]]]\n        }\n      };\n      this.map.overlay.setFeatures([feature1, feature2, feature3], FeatureMotion.None);\n    }\n\n  }\n\n  AppOverlayComponent.ɵfac = function AppOverlayComponent_Factory(t) {\n    return new (t || AppOverlayComponent)(i0.ɵɵdirectiveInject(i1.LanguageService), i0.ɵɵdirectiveInject(i2.DataSourceService), i0.ɵɵdirectiveInject(i2.LayerService));\n  };\n\n  AppOverlayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppOverlayComponent,\n    selectors: [[\"app-overlay\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[\"href\", \"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/geo/overlay\"], [3, \"map\", \"view\"], [\"color\", \"primary\", 3, \"map\"]],\n    template: function AppOverlayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-subtitle\");\n        i0.ɵɵtext(2, \"Geo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Overlay\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵelementStart(6, \"li\");\n        i0.ɵɵtext(7, \"Dependencies: LanguageService\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵtext(9, \" See the \");\n        i0.ɵɵelementStart(10, \"a\", 0);\n        i0.ɵɵtext(11, \"code of this example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"igo-map-browser\", 1);\n        i0.ɵɵelement(14, \"igo-zoom-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"map\", ctx.map)(\"view\", ctx.view);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"map\", ctx.map);\n      }\n    },\n    directives: [i3.MatCard, i3.MatCardSubtitle, i3.MatCardTitle, i3.MatCardContent, i2.MapBrowserComponent, i2.ZoomButtonComponent],\n    styles: [\"igo-map-browser[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm92ZXJsYXkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtBQUNGIiwiZmlsZSI6Im92ZXJsYXkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpZ28tbWFwLWJyb3dzZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAzMDBweDtcbn1cbiJdfQ== */\"]\n  });\n  return AppOverlayComponent;\n})();","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\geo\\overlay\\overlay.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\geo\\overlay\\overlay.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\n\nimport { LanguageService } from '@igo2/core';\nimport {\n  IgoMap,\n  DataSourceService,\n  LayerService,\n  FEATURE,\n  Feature,\n  FeatureMotion\n} from '@igo2/geo';\n\n@Component({\n  selector: 'app-overlay',\n  templateUrl: './overlay.component.html',\n  styleUrls: ['./overlay.component.scss']\n})\nexport class AppOverlayComponent implements OnInit, AfterViewInit {\n  public map = new IgoMap({\n    overlay: true,\n    controls: {\n      attribution: {\n        collapsed: true\n      }\n    }\n  });\n\n  public view = {\n    center: [-73, 47.2],\n    zoom: 6\n  };\n\n  constructor(\n    private languageService: LanguageService,\n    private dataSourceService: DataSourceService,\n    private layerService: LayerService\n  ) {}\n\n  ngOnInit() {\n    this.dataSourceService\n      .createAsyncDataSource({\n        type: 'osm'\n      })\n      .subscribe(dataSource => {\n        this.map.addLayer(\n          this.layerService.createLayer({\n            title: 'OSM',\n            source: dataSource\n          })\n        );\n      });\n  }\n\n  ngAfterViewInit() {\n    const feature1: Feature = {\n      type: FEATURE,\n      projection: 'EPSG:4326',\n      meta: {\n        id: 1\n      },\n      properties: {},\n      geometry: {\n        type: 'Point',\n        coordinates: [-73, 46.6]\n      }\n    };\n\n    const feature2: Feature = {\n      type: FEATURE,\n      projection: 'EPSG:4326',\n      meta: {\n        id: 2\n      },\n      properties: {},\n      geometry: {\n        type: 'LineString',\n        coordinates: [[-72, 47.8], [-73.5, 47.4], [-72.4, 48.6]]\n      }\n    };\n\n    const feature3: Feature = {\n      type: FEATURE,\n      projection: 'EPSG:4326',\n      meta: {\n        id: 3\n      },\n      properties: {},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[-71, 46.8], [-73, 47], [-71.2, 46.6]]]\n      }\n    };\n\n    this.map.overlay.setFeatures(\n      [feature1, feature2, feature3],\n      FeatureMotion.None\n    );\n  }\n}\n","<mat-card>\n  <mat-card-subtitle>Geo</mat-card-subtitle>\n  <mat-card-title>Overlay</mat-card-title>\n  <mat-card-content>\n    <li>Dependencies: LanguageService</li>\n\n    <br>\n    See the <a href=\"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/geo/overlay\">code of this example</a>\n    <hr>\n  </mat-card-content>\n\n  <igo-map-browser [map]=\"map\" [view]=\"view\">\n    <igo-zoom-button [map]=\"map\" color=\"primary\"></igo-zoom-button>\n  </igo-map-browser>\n\n</mat-card>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}