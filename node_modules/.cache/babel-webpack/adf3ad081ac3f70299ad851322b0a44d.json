{"ast":null,"code":"import { featureEach, coordEach } from '@turf/meta';\nimport { point, featureCollection } from '@turf/helpers';\n/**\n * Takes a feature or set of features and returns all positions as {@link Point|points}.\n *\n * @name explode\n * @param {GeoJSON} geojson input features\n * @returns {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var explode = turf.explode(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, explode]\n */\n\nfunction explode(geojson) {\n  var points = [];\n\n  if (geojson.type === \"FeatureCollection\") {\n    featureEach(geojson, function (feature) {\n      coordEach(feature, function (coord) {\n        points.push(point(coord, feature.properties));\n      });\n    });\n  } else {\n    coordEach(geojson, function (coord) {\n      points.push(point(coord, geojson.properties));\n    });\n  }\n\n  return featureCollection(points);\n}\n\nexport default explode;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@turf/explode/dist/es/index.js"],"names":["featureEach","coordEach","point","featureCollection","explode","geojson","points","type","feature","coord","push","properties"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,YAAvC;AACA,SAASC,KAAT,EAAgBC,iBAAhB,QAAyC,eAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAID,OAAO,CAACE,IAAR,KAAiB,mBAArB,EAA0C;AACxCP,IAAAA,WAAW,CAACK,OAAD,EAAU,UAAUG,OAAV,EAAmB;AACtCP,MAAAA,SAAS,CAACO,OAAD,EAAU,UAAUC,KAAV,EAAiB;AAClCH,QAAAA,MAAM,CAACI,IAAP,CAAYR,KAAK,CAACO,KAAD,EAAQD,OAAO,CAACG,UAAhB,CAAjB;AACD,OAFQ,CAAT;AAGD,KAJU,CAAX;AAKD,GAND,MAMO;AACLV,IAAAA,SAAS,CAACI,OAAD,EAAU,UAAUI,KAAV,EAAiB;AAClCH,MAAAA,MAAM,CAACI,IAAP,CAAYR,KAAK,CAACO,KAAD,EAAQJ,OAAO,CAACM,UAAhB,CAAjB;AACD,KAFQ,CAAT;AAGD;;AACD,SAAOR,iBAAiB,CAACG,MAAD,CAAxB;AACD;;AAED,eAAeF,OAAf","sourcesContent":["import { featureEach, coordEach } from '@turf/meta';\nimport { point, featureCollection } from '@turf/helpers';\n\n/**\n * Takes a feature or set of features and returns all positions as {@link Point|points}.\n *\n * @name explode\n * @param {GeoJSON} geojson input features\n * @returns {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var explode = turf.explode(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, explode]\n */\nfunction explode(geojson) {\n  var points = [];\n  if (geojson.type === \"FeatureCollection\") {\n    featureEach(geojson, function (feature) {\n      coordEach(feature, function (coord) {\n        points.push(point(coord, feature.properties));\n      });\n    });\n  } else {\n    coordEach(geojson, function (coord) {\n      points.push(point(coord, geojson.properties));\n    });\n  }\n  return featureCollection(points);\n}\n\nexport default explode;\n"]},"metadata":{},"sourceType":"module"}