{"ast":null,"code":"import { LanguageService } from '@igo2/core';\nimport { IgoMap, LayerService } from '@igo2/geo';\nimport { WorkspaceStore } from '@igo2/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@igo2/core\";\nimport * as i2 from \"@igo2/geo\";\nimport * as i3 from \"@angular/material/card\";\nexport let AppImportExportComponent = /*#__PURE__*/(() => {\n  class AppImportExportComponent {\n    constructor(languageService, layerService) {\n      this.languageService = languageService;\n      this.layerService = layerService;\n      this.map = new IgoMap({\n        controls: {\n          attribution: {\n            collapsed: true\n          }\n        }\n      });\n      this.view = {\n        center: [-73, 47.2],\n        zoom: 9\n      };\n      this.store = new WorkspaceStore([]);\n      this.layerService.createAsyncLayer({\n        title: 'OSM',\n        sourceOptions: {\n          type: 'osm'\n        }\n      }).subscribe(l => this.map.addLayer(l));\n    }\n\n  }\n\n  AppImportExportComponent.ɵfac = function AppImportExportComponent_Factory(t) {\n    return new (t || AppImportExportComponent)(i0.ɵɵdirectiveInject(i1.LanguageService), i0.ɵɵdirectiveInject(i2.LayerService));\n  };\n\n  AppImportExportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppImportExportComponent,\n    selectors: [[\"app-import-export\"]],\n    decls: 16,\n    vars: 5,\n    consts: [[\"href\", \"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/geo/import-export\"], [3, \"map\", \"view\"], [\"color\", \"primary\", 3, \"map\"], [3, \"store\", \"map\"]],\n    template: function AppImportExportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-subtitle\");\n        i0.ɵɵtext(2, \"Geo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Import / Export\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵelementStart(6, \"li\");\n        i0.ɵɵtext(7, \"Dependencies: LanguageService\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵtext(9, \" See the \");\n        i0.ɵɵelementStart(10, \"a\", 0);\n        i0.ɵɵtext(11, \"code of this example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"igo-map-browser\", 1);\n        i0.ɵɵelement(14, \"igo-zoom-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"igo-import-export\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"map\", ctx.map)(\"view\", ctx.view);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"map\", ctx.map);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"store\", ctx.store)(\"map\", ctx.map);\n      }\n    },\n    directives: [i3.MatCard, i3.MatCardSubtitle, i3.MatCardTitle, i3.MatCardContent, i2.MapBrowserComponent, i2.ZoomButtonComponent, i2.ImportExportComponent],\n    styles: [\"igo-map-browser[_ngcontent-%COMP%] {\\n  width: 900px;\\n  height: 1000px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltcG9ydC1leHBvcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VBQ0EsY0FBQTtBQUNGIiwiZmlsZSI6ImltcG9ydC1leHBvcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpZ28tbWFwLWJyb3dzZXIge1xuICB3aWR0aDogOTAwcHg7XG4gIGhlaWdodDogMTAwMHB4O1xufVxuIl19 */\"]\n  });\n  return AppImportExportComponent;\n})();","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\geo\\import-export\\import-export.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\geo\\import-export\\import-export.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\n\nimport { LanguageService } from '@igo2/core';\nimport { IgoMap, LayerService } from '@igo2/geo';\nimport { WorkspaceStore } from '@igo2/common';\n\n@Component({\n  selector: 'app-import-export',\n  templateUrl: './import-export.component.html',\n  styleUrls: ['./import-export.component.scss']\n})\nexport class AppImportExportComponent {\n  public map = new IgoMap({\n    controls: {\n      attribution: {\n        collapsed: true\n      }\n    }\n  });\n\n  public view = {\n    center: [-73, 47.2],\n    zoom: 9\n  };\n\n  public store = new WorkspaceStore([]);\n\n  constructor(\n    private languageService: LanguageService,\n    private layerService: LayerService\n  ) {\n    this.layerService\n      .createAsyncLayer({\n        title: 'OSM',\n        sourceOptions: {\n          type: 'osm'\n        }\n      })\n      .subscribe(l => this.map.addLayer(l));\n  }\n}\n","<mat-card>\n  <mat-card-subtitle>Geo</mat-card-subtitle>\n  <mat-card-title>Import / Export</mat-card-title>\n  <mat-card-content>\n    <li>Dependencies: LanguageService</li>\n\n    <br>\n    See the <a href=\"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/geo/import-export\">code of this example</a>\n    <hr>\n  </mat-card-content>\n\n  <igo-map-browser [map]=\"map\" [view]=\"view\">\n    <igo-zoom-button [map]=\"map\" color=\"primary\"></igo-zoom-button>\n  </igo-map-browser>\n\n  <igo-import-export [store]=\"store\" [map]=\"map\"></igo-import-export>\n\n</mat-card>\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}