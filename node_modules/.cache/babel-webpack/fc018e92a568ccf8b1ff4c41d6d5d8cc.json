{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/MapBrowserEvent\n */\n\n\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\n\nvar MapBrowserEvent = function (_super) {\n  __extends(MapBrowserEvent, _super);\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n\n\n  function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n    var _this = _super.call(this, type, map, opt_frameState) || this;\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n\n\n    _this.originalEvent = originalEvent;\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n\n    _this.pixel_ = null;\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n\n    _this.coordinate_ = null;\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n\n    _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n    return _this;\n  }\n\n  Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n    /**\n     * The map pixel relative to the viewport corresponding to the original event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    get: function () {\n      if (!this.pixel_) {\n        this.pixel_ = this.map.getEventPixel(this.originalEvent);\n      }\n\n      return this.pixel_;\n    },\n    set: function (pixel) {\n      this.pixel_ = pixel;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n    /**\n     * The coordinate corresponding to the original browser event.  This will be in the user\n     * projection if one is set.  Otherwise it will be in the view projection.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    get: function () {\n      if (!this.coordinate_) {\n        this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n      }\n\n      return this.coordinate_;\n    },\n    set: function (coordinate) {\n      this.coordinate_ = coordinate;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n\n  MapBrowserEvent.prototype.preventDefault = function () {\n    _super.prototype.preventDefault.call(this);\n\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */\n      this.originalEvent.preventDefault();\n    }\n  };\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n\n\n  MapBrowserEvent.prototype.stopPropagation = function () {\n    _super.prototype.stopPropagation.call(this);\n\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */\n      this.originalEvent.stopPropagation();\n    }\n  };\n\n  return MapBrowserEvent;\n}(MapEvent);\n\nexport default MapBrowserEvent;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/MapBrowserEvent.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","MapEvent","MapBrowserEvent","_super","type","map","originalEvent","opt_dragging","opt_frameState","_this","pixel_","coordinate_","dragging","undefined","defineProperty","get","getEventPixel","set","pixel","enumerable","configurable","getCoordinateFromPixel","coordinate","preventDefault","stopPropagation"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean} [opt_dragging] Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        if ('preventDefault' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n        }\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        if ('stopPropagation' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n        }\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n"]},"metadata":{},"sourceType":"module"}