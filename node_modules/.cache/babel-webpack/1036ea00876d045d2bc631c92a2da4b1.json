{"ast":null,"code":"/*! @azure/msal-common v4.5.1 2021-08-02 */\n'use strict';\n\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { Constants } from '../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Log message level.\r\n */\n\nvar LogLevel = /*#__PURE__*/(() => {\n  (function (LogLevel) {\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\n  })(LogLevel || (LogLevel = {}));\n\n  return LogLevel;\n})();\n\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\nvar Logger = function () {\n  function Logger(loggerOptions, packageName, packageVersion) {\n    // Current log level, defaults to info.\n    this.level = LogLevel.Info;\n\n    var defaultLoggerCallback = function () {};\n\n    this.localCallback = loggerOptions.loggerCallback || defaultLoggerCallback;\n    this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled || false;\n    this.level = loggerOptions.logLevel || LogLevel.Info;\n    this.correlationId = loggerOptions.correlationId || \"\";\n    this.packageName = packageName || Constants.EMPTY_STRING;\n    this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n  }\n  /**\r\n   * Create new Logger with existing configurations.\r\n   */\n\n\n  Logger.prototype.clone = function (packageName, packageVersion, correlationId) {\n    return new Logger({\n      loggerCallback: this.localCallback,\n      piiLoggingEnabled: this.piiLoggingEnabled,\n      logLevel: this.level,\n      correlationId: correlationId || this.correlationId\n    }, packageName, packageVersion);\n  };\n  /**\r\n   * Log message with required options.\r\n   */\n\n\n  Logger.prototype.logMessage = function (logMessage, options) {\n    if (options.logLevel > this.level || !this.piiLoggingEnabled && options.containsPii) {\n      return;\n    }\n\n    var timestamp = new Date().toUTCString(); // Add correlationId to logs if set, correlationId provided on log messages take precedence\n\n    var logHeader;\n\n    if (!StringUtils.isEmpty(options.correlationId)) {\n      logHeader = \"[\" + timestamp + \"] : [\" + options.correlationId + \"]\";\n    } else if (!StringUtils.isEmpty(this.correlationId)) {\n      logHeader = \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\n    } else {\n      logHeader = \"[\" + timestamp + \"]\";\n    }\n\n    var log = logHeader + \" : \" + this.packageName + \"@\" + this.packageVersion + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage; // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\n\n    this.executeCallback(options.logLevel, log, options.containsPii || false);\n  };\n  /**\r\n   * Execute callback with message.\r\n   */\n\n\n  Logger.prototype.executeCallback = function (level, message, containsPii) {\n    if (this.localCallback) {\n      this.localCallback(level, message, containsPii);\n    }\n  };\n  /**\r\n   * Logs error messages.\r\n   */\n\n\n  Logger.prototype.error = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Error,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs error messages with PII.\r\n   */\n\n\n  Logger.prototype.errorPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Error,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs warning messages.\r\n   */\n\n\n  Logger.prototype.warning = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Warning,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs warning messages with PII.\r\n   */\n\n\n  Logger.prototype.warningPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Warning,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs info messages.\r\n   */\n\n\n  Logger.prototype.info = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Info,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs info messages with PII.\r\n   */\n\n\n  Logger.prototype.infoPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Info,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs verbose messages.\r\n   */\n\n\n  Logger.prototype.verbose = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Verbose,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs verbose messages with PII.\r\n   */\n\n\n  Logger.prototype.verbosePii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Verbose,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs trace messages.\r\n   */\n\n\n  Logger.prototype.trace = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Trace,\n      containsPii: false,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Logs trace messages with PII.\r\n   */\n\n\n  Logger.prototype.tracePii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Trace,\n      containsPii: true,\n      correlationId: correlationId || \"\"\n    });\n  };\n  /**\r\n   * Returns whether PII Logging is enabled or not.\r\n   */\n\n\n  Logger.prototype.isPiiLoggingEnabled = function () {\n    return this.piiLoggingEnabled || false;\n  };\n\n  return Logger;\n}();\n\nexport { LogLevel, Logger };","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/@azure/msal-common/dist/logger/Logger.js"],"names":["StringUtils","Constants","LogLevel","Logger","loggerOptions","packageName","packageVersion","level","Info","defaultLoggerCallback","localCallback","loggerCallback","piiLoggingEnabled","logLevel","correlationId","EMPTY_STRING","prototype","clone","logMessage","options","containsPii","timestamp","Date","toUTCString","logHeader","isEmpty","log","executeCallback","message","error","Error","errorPii","warning","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","trace","Trace","tracePii","isPiiLoggingEnabled"],"mappings":"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","sourcesContent":["/*! @azure/msal-common v4.5.1 2021-08-02 */\n'use strict';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions, packageName, packageVersion) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        var defaultLoggerCallback = function () { };\r\n        this.localCallback = loggerOptions.loggerCallback || defaultLoggerCallback;\r\n        this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled || false;\r\n        this.level = loggerOptions.logLevel || LogLevel.Info;\r\n        this.correlationId = loggerOptions.correlationId || \"\";\r\n        this.packageName = packageName || Constants.EMPTY_STRING;\r\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\r\n    }\r\n    /**\r\n     * Create new Logger with existing configurations.\r\n     */\r\n    Logger.prototype.clone = function (packageName, packageVersion, correlationId) {\r\n        return new Logger({ loggerCallback: this.localCallback, piiLoggingEnabled: this.piiLoggingEnabled, logLevel: this.level, correlationId: correlationId || this.correlationId }, packageName, packageVersion);\r\n    };\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\r\n        var logHeader;\r\n        if (!StringUtils.isEmpty(options.correlationId)) {\r\n            logHeader = \"[\" + timestamp + \"] : [\" + options.correlationId + \"]\";\r\n        }\r\n        else if (!StringUtils.isEmpty(this.correlationId)) {\r\n            logHeader = \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        }\r\n        else {\r\n            logHeader = \"[\" + timestamp + \"]\";\r\n        }\r\n        var log = logHeader + \" : \" + this.packageName + \"@\" + this.packageVersion + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs trace messages.\r\n     */\r\n    Logger.prototype.trace = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs trace messages with PII.\r\n     */\r\n    Logger.prototype.tracePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\nexport { LogLevel, Logger };\n"]},"metadata":{},"sourceType":"module"}