{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, EventEmitter, Output, ViewChild, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager, FocusMonitor } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n\n/** @docs-private */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nconst _c0 = [\"*\"];\nconst _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\";\nconst _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c4 = [\"text\"];\n\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nconst _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\n\nconst _MatListBase = /*#__PURE__*/mixinDisabled( /*#__PURE__*/mixinDisableRipple(class {})); // Boilerplate for applying mixins to MatListItem.\n\n/** @docs-private */\n\n\nconst _MatListItemMixinBase = /*#__PURE__*/mixinDisableRipple(class {});\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\n\nconst MAT_LIST = /*#__PURE__*/new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\nconst MAT_NAV_LIST = /*#__PURE__*/new InjectionToken('MatNavList');\nlet MatNavList = /*#__PURE__*/(() => {\n  class MatNavList extends _MatListBase {\n    constructor() {\n      super(...arguments);\n      /** Emits when the state of the list changes. */\n\n      this._stateChanges = new Subject();\n    }\n\n    ngOnChanges() {\n      this._stateChanges.next();\n    }\n\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n\n  }\n\n  MatNavList.ɵfac = /*@__PURE__*/function () {\n    let ɵMatNavList_BaseFactory;\n    return function MatNavList_Factory(t) {\n      return (ɵMatNavList_BaseFactory || (ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList)))(t || MatNavList);\n    };\n  }();\n\n  MatNavList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatNavList,\n    selectors: [[\"mat-nav-list\"]],\n    hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"],\n    inputs: {\n      disableRipple: \"disableRipple\",\n      disabled: \"disabled\"\n    },\n    exportAs: [\"matNavList\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_NAV_LIST,\n      useExisting: MatNavList\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatNavList_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [_c1],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatNavList;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MatList = /*#__PURE__*/(() => {\n  class MatList extends _MatListBase {\n    constructor(_elementRef) {\n      super();\n      this._elementRef = _elementRef;\n      /** Emits when the state of the list changes. */\n\n      this._stateChanges = new Subject();\n\n      if (this._getListType() === 'action-list') {\n        _elementRef.nativeElement.classList.add('mat-action-list');\n      }\n    }\n\n    _getListType() {\n      const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n\n      if (nodeName === 'mat-list') {\n        return 'list';\n      }\n\n      if (nodeName === 'mat-action-list') {\n        return 'action-list';\n      }\n\n      return null;\n    }\n\n    ngOnChanges() {\n      this._stateChanges.next();\n    }\n\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n\n  }\n\n  MatList.ɵfac = function MatList_Factory(t) {\n    return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatList,\n    selectors: [[\"mat-list\"], [\"mat-action-list\"]],\n    hostAttrs: [1, \"mat-list\", \"mat-list-base\"],\n    inputs: {\n      disableRipple: \"disableRipple\",\n      disabled: \"disabled\"\n    },\n    exportAs: [\"matList\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_LIST,\n      useExisting: MatList\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatList_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [_c1],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatList;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n\n\nlet MatListAvatarCssMatStyler = /*#__PURE__*/(() => {\n  class MatListAvatarCssMatStyler {}\n\n  MatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) {\n    return new (t || MatListAvatarCssMatStyler)();\n  };\n\n  MatListAvatarCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatListAvatarCssMatStyler,\n    selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]],\n    hostAttrs: [1, \"mat-list-avatar\"]\n  });\n  return MatListAvatarCssMatStyler;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n\n\nlet MatListIconCssMatStyler = /*#__PURE__*/(() => {\n  class MatListIconCssMatStyler {}\n\n  MatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) {\n    return new (t || MatListIconCssMatStyler)();\n  };\n\n  MatListIconCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatListIconCssMatStyler,\n    selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]],\n    hostAttrs: [1, \"mat-list-icon\"]\n  });\n  return MatListIconCssMatStyler;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n\n\nlet MatListSubheaderCssMatStyler = /*#__PURE__*/(() => {\n  class MatListSubheaderCssMatStyler {}\n\n  MatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) {\n    return new (t || MatListSubheaderCssMatStyler)();\n  };\n\n  MatListSubheaderCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatListSubheaderCssMatStyler,\n    selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]],\n    hostAttrs: [1, \"mat-subheader\"]\n  });\n  return MatListSubheaderCssMatStyler;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** An item within a Material Design list. */\n\n\nlet MatListItem = /*#__PURE__*/(() => {\n  class MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n      super();\n      this._element = _element;\n      this._isInteractiveList = false;\n      this._destroyed = new Subject();\n      this._disabled = false;\n      this._isInteractiveList = !!(navList || list && list._getListType() === 'action-list');\n      this._list = navList || list; // If no type attribute is specified for <button>, set it to \"button\".\n      // If a type attribute is already specified, do nothing.\n\n      const element = this._getHostElement();\n\n      if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n        element.setAttribute('type', 'button');\n      }\n\n      if (this._list) {\n        // React to changes in the state of the parent list since\n        // some of the item's properties depend on it (e.g. `disableRipple`).\n        this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n          _changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /** Whether the option is disabled. */\n\n\n    get disabled() {\n      return this._disabled || !!(this._list && this._list.disabled);\n    }\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n\n    ngAfterContentInit() {\n      setLines(this._lines, this._element);\n    }\n\n    ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n\n\n    _isRippleDisabled() {\n      return !this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple);\n    }\n    /** Retrieves the DOM element of the component host. */\n\n\n    _getHostElement() {\n      return this._element.nativeElement;\n    }\n\n  }\n\n  MatListItem.ɵfac = function MatListItem_Factory(t) {\n    return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_NAV_LIST, 8), ɵngcc0.ɵɵdirectiveInject(MAT_LIST, 8));\n  };\n\n  MatListItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatListItem,\n    selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]],\n    contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"],\n    hostVars: 6,\n    hostBindings: function MatListItem_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n      }\n    },\n    inputs: {\n      disableRipple: \"disableRipple\",\n      disabled: \"disabled\"\n    },\n    exportAs: [\"matListItem\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c3,\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]],\n    template: function MatListItem_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n      }\n    },\n    directives: [ɵngcc1.MatRipple],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatListItem;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst _MatSelectionListBase = /*#__PURE__*/mixinDisableRipple(class {});\n\nconst _MatListOptionBase = /*#__PURE__*/mixinDisableRipple(class {});\n/** @docs-private */\n\n\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSelectionList),\n  multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\n\nclass MatSelectionListChange {\n  constructor(\n  /** Reference to the selection list that emitted the event. */\n  source,\n  /**\n   * Reference to the option that has been changed.\n   * @deprecated Use `options` instead, because some events may change more than one option.\n   * @breaking-change 12.0.0\n   */\n  option,\n  /** Reference to the options that have been changed. */\n  options) {\n    this.source = source;\n    this.option = option;\n    this.options = options;\n  }\n\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n\n\nlet MatListOption = /*#__PURE__*/(() => {\n  class MatListOption extends _MatListOptionBase {\n    constructor(_element, _changeDetector,\n    /** @docs-private */\n    selectionList) {\n      super();\n      this._element = _element;\n      this._changeDetector = _changeDetector;\n      this.selectionList = selectionList;\n      this._selected = false;\n      this._disabled = false;\n      this._hasFocus = false;\n      /**\n       * Emits when the selected state of the option has changed.\n       * Use to facilitate two-data binding to the `selected` property.\n       * @docs-private\n       */\n\n      this.selectedChange = new EventEmitter();\n      /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n\n      this.checkboxPosition = 'after';\n      /**\n       * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n       * in the first cycle.\n       */\n\n      this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n\n\n    get color() {\n      return this._color || this.selectionList.color;\n    }\n\n    set color(newValue) {\n      this._color = newValue;\n    }\n    /** Value of the option */\n\n\n    get value() {\n      return this._value;\n    }\n\n    set value(newValue) {\n      if (this.selected && !this.selectionList.compareWith(newValue, this.value) && this._inputsInitialized) {\n        this.selected = false;\n      }\n\n      this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n\n\n    get disabled() {\n      return this._disabled || this.selectionList && this.selectionList.disabled;\n    }\n\n    set disabled(value) {\n      const newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._disabled) {\n        this._disabled = newValue;\n\n        this._changeDetector.markForCheck();\n      }\n    }\n    /** Whether the option is selected. */\n\n\n    get selected() {\n      return this.selectionList.selectedOptions.isSelected(this);\n    }\n\n    set selected(value) {\n      const isSelected = coerceBooleanProperty(value);\n\n      if (isSelected !== this._selected) {\n        this._setSelected(isSelected);\n\n        if (isSelected || this.selectionList.multiple) {\n          this.selectionList._reportValueChange();\n        }\n      }\n    }\n\n    ngOnInit() {\n      const list = this.selectionList;\n\n      if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n        this._setSelected(true);\n      }\n\n      const wasSelected = this._selected; // List options that are selected at initialization can't be reported properly to the form\n      // control. This is because it takes some time until the selection-list knows about all\n      // available options. Also it can happen that the ControlValueAccessor has an initial value\n      // that should be used instead. Deferring the value change report to the next tick ensures\n      // that the form control value is not being overwritten.\n\n      Promise.resolve().then(() => {\n        if (this._selected || wasSelected) {\n          this.selected = true;\n\n          this._changeDetector.markForCheck();\n        }\n      });\n      this._inputsInitialized = true;\n    }\n\n    ngAfterContentInit() {\n      setLines(this._lines, this._element);\n    }\n\n    ngOnDestroy() {\n      if (this.selected) {\n        // We have to delay this until the next tick in order\n        // to avoid changed after checked errors.\n        Promise.resolve().then(() => {\n          this.selected = false;\n        });\n      }\n\n      const hadFocus = this._hasFocus;\n\n      const newActiveItem = this.selectionList._removeOptionFromList(this); // Only move focus if this option was focused at the time it was destroyed.\n\n\n      if (hadFocus && newActiveItem) {\n        newActiveItem.focus();\n      }\n    }\n    /** Toggles the selection state of the option. */\n\n\n    toggle() {\n      this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n\n\n    focus() {\n      this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n\n\n    getLabel() {\n      return this._text ? this._text.nativeElement.textContent || '' : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n\n\n    _isRippleDisabled() {\n      return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n\n    _handleClick() {\n      if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n        this.toggle(); // Emit a change event if the selected state of the option changed through user interaction.\n\n        this.selectionList._emitChangeEvent([this]);\n      }\n    }\n\n    _handleFocus() {\n      this.selectionList._setFocusedOption(this);\n\n      this._hasFocus = true;\n    }\n\n    _handleBlur() {\n      this.selectionList._onTouched();\n\n      this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n\n\n    _getHostElement() {\n      return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n\n\n    _setSelected(selected) {\n      if (selected === this._selected) {\n        return false;\n      }\n\n      this._selected = selected;\n\n      if (selected) {\n        this.selectionList.selectedOptions.select(this);\n      } else {\n        this.selectionList.selectedOptions.deselect(this);\n      }\n\n      this.selectedChange.emit(selected);\n\n      this._changeDetector.markForCheck();\n\n      return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n\n\n    _markForCheck() {\n      this._changeDetector.markForCheck();\n    }\n\n  }\n\n  MatListOption.ɵfac = function MatListOption_Factory(t) {\n    return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSelectionList)));\n  };\n\n  MatListOption.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatListOption,\n    selectors: [[\"mat-list-option\"]],\n    contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n      }\n    },\n    viewQuery: function MatListOption_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"],\n    hostVars: 15,\n    hostBindings: function MatListOption_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        })(\"blur\", function MatListOption_blur_HostBindingHandler() {\n          return ctx._handleBlur();\n        })(\"click\", function MatListOption_click_HostBindingHandler() {\n          return ctx._handleClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", -1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n      }\n    },\n    inputs: {\n      disableRipple: \"disableRipple\",\n      checkboxPosition: \"checkboxPosition\",\n      color: \"color\",\n      value: \"value\",\n      selected: \"selected\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\"\n    },\n    exportAs: [\"matListOption\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c6,\n    decls: 7,\n    vars: 5,\n    consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]],\n    template: function MatListOption_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n      }\n    },\n    directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatListOption;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\n\n\nlet MatSelectionList = /*#__PURE__*/(() => {\n  class MatSelectionList extends _MatSelectionListBase {\n    constructor(_element, // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n      super();\n      this._element = _element;\n      this._changeDetector = _changeDetector;\n      this._focusMonitor = _focusMonitor;\n      this._multiple = true;\n      this._contentInitialized = false;\n      /** Emits a change event whenever the selected state of an option changes. */\n\n      this.selectionChange = new EventEmitter();\n      /**\n       * Tabindex of the selection list.\n       * @breaking-change 11.0.0 Remove `tabIndex` input.\n       */\n\n      this.tabIndex = 0;\n      /** Theme color of the selection list. This sets the checkbox color for all list options. */\n\n      this.color = 'accent';\n      /**\n       * Function used for comparing an option against the selected value when determining which\n       * options should appear as selected. The first argument is the value of an options. The second\n       * one is a value from the selected value. A boolean must be returned.\n       */\n\n      this.compareWith = (a1, a2) => a1 === a2;\n\n      this._disabled = false;\n      /** The currently selected options. */\n\n      this.selectedOptions = new SelectionModel(this._multiple);\n      /** The tabindex of the selection list. */\n\n      this._tabIndex = -1;\n      /** View to model callback that should be called whenever the selected options change. */\n\n      this._onChange = _ => {};\n      /** Emits when the list has been destroyed. */\n\n\n      this._destroyed = new Subject();\n      /** View to model callback that should be called if the list or its options lost focus. */\n\n      this._onTouched = () => {};\n    }\n    /** Whether the selection list is disabled. */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value); // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n      // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n      // changed its state. Since we know that a change to `disabled` property of the list affects\n      // the state of the options, we manually mark each option for check.\n\n      this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n\n\n    get multiple() {\n      return this._multiple;\n    }\n\n    set multiple(value) {\n      const newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._multiple) {\n        if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n        }\n\n        this._multiple = newValue;\n        this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n      }\n    }\n\n    ngAfterContentInit() {\n      var _a;\n\n      this._contentInitialized = true;\n      this._keyManager = new FocusKeyManager(this.options).withWrap().withTypeAhead().withHomeAndEnd() // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n      // screenreader users, that allows reading the different options of the list.\n      .skipPredicate(() => false).withAllowedModifierKeys(['shiftKey']);\n\n      if (this._value) {\n        this._setOptionsFromValues(this._value);\n      } // If the user attempts to tab out of the selection list, allow focus to escape.\n\n\n      this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._allowFocusEscape();\n      }); // When the number of options change, update the tabindex of the selection list.\n\n\n      this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n        this._updateTabIndex();\n      }); // Sync external changes to the model back to the options.\n\n      this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n        if (event.added) {\n          for (let item of event.added) {\n            item.selected = true;\n          }\n        }\n\n        if (event.removed) {\n          for (let item of event.removed) {\n            item.selected = false;\n          }\n        }\n      }); // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n\n      (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n        var _a;\n\n        if (origin === 'keyboard' || origin === 'program') {\n          let toFocus = 0;\n\n          for (let i = 0; i < this.options.length; i++) {\n            if ((_a = this.options.get(i)) === null || _a === void 0 ? void 0 : _a.selected) {\n              toFocus = i;\n              break;\n            }\n          }\n\n          this._keyManager.setActiveItem(toFocus);\n        }\n      });\n    }\n\n    ngOnChanges(changes) {\n      const disableRippleChanges = changes['disableRipple'];\n      const colorChanges = changes['color'];\n\n      if (disableRippleChanges && !disableRippleChanges.firstChange || colorChanges && !colorChanges.firstChange) {\n        this._markOptionsForCheck();\n      }\n    }\n\n    ngOnDestroy() {\n      var _a; // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n\n\n      (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n\n\n    focus(options) {\n      this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n\n\n    selectAll() {\n      return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n\n\n    deselectAll() {\n      return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n\n\n    _setFocusedOption(option) {\n      this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n\n\n    _removeOptionFromList(option) {\n      const optionIndex = this._getOptionIndex(option);\n\n      if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n        // Check whether the option is the last item\n        if (optionIndex > 0) {\n          this._keyManager.updateActiveItem(optionIndex - 1);\n        } else if (optionIndex === 0 && this.options.length > 1) {\n          this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n        }\n      }\n\n      return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n\n\n    _keydown(event) {\n      const keyCode = event.keyCode;\n      const manager = this._keyManager;\n      const previousFocusIndex = manager.activeItemIndex;\n      const hasModifier = hasModifierKey(event);\n\n      switch (keyCode) {\n        case SPACE:\n        case ENTER:\n          if (!hasModifier && !manager.isTyping()) {\n            this._toggleFocusedOption(); // Always prevent space from scrolling the page since the list has focus\n\n\n            event.preventDefault();\n          }\n\n          break;\n\n        default:\n          // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n          if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') && !manager.isTyping()) {\n            const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n\n            this._setAllOptionsSelected(shouldSelect, true, true);\n\n            event.preventDefault();\n          } else {\n            manager.onKeydown(event);\n          }\n\n      }\n\n      if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey && manager.activeItemIndex !== previousFocusIndex) {\n        this._toggleFocusedOption();\n      }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n\n\n    _reportValueChange() {\n      // Stop reporting value changes after the list has been destroyed. This avoids\n      // cases where the list might wrongly reset its value once it is removed, but\n      // the form control is still live.\n      if (this.options && !this._isDestroyed) {\n        const value = this._getSelectedOptionValues();\n\n        this._onChange(value);\n\n        this._value = value;\n      }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n\n\n    _emitChangeEvent(options) {\n      this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n\n\n    writeValue(values) {\n      this._value = values;\n\n      if (this.options) {\n        this._setOptionsFromValues(values || []);\n      }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n\n\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n\n\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n\n\n    _setOptionsFromValues(values) {\n      this.options.forEach(option => option._setSelected(false));\n      values.forEach(value => {\n        const correspondingOption = this.options.find(option => {\n          // Skip options that are already in the model. This allows us to handle cases\n          // where the same primitive value is selected multiple times.\n          return option.selected ? false : this.compareWith(option.value, value);\n        });\n\n        if (correspondingOption) {\n          correspondingOption._setSelected(true);\n        }\n      });\n    }\n    /** Returns the values of the selected options. */\n\n\n    _getSelectedOptionValues() {\n      return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n\n\n    _toggleFocusedOption() {\n      let focusedIndex = this._keyManager.activeItemIndex;\n\n      if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n        let focusedOption = this.options.toArray()[focusedIndex];\n\n        if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n          focusedOption.toggle(); // Emit a change event because the focused option changed its state through user\n          // interaction.\n\n          this._emitChangeEvent([focusedOption]);\n        }\n      }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n\n\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n      // Keep track of whether anything changed, because we only want to\n      // emit the changed event when something actually changed.\n      const changedOptions = [];\n      this.options.forEach(option => {\n        if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n          changedOptions.push(option);\n        }\n      });\n\n      if (changedOptions.length) {\n        this._reportValueChange();\n\n        if (isUserInput) {\n          this._emitChangeEvent(changedOptions);\n        }\n      }\n\n      return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n\n\n    _isValidIndex(index) {\n      return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n\n\n    _getOptionIndex(option) {\n      return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n\n\n    _markOptionsForCheck() {\n      if (this.options) {\n        this.options.forEach(option => option._markForCheck());\n      }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n\n\n    _allowFocusEscape() {\n      this._tabIndex = -1;\n      setTimeout(() => {\n        this._tabIndex = 0;\n\n        this._changeDetector.markForCheck();\n      });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n\n\n    _updateTabIndex() {\n      this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n\n  }\n\n  MatSelectionList.ɵfac = function MatSelectionList_Factory(t) {\n    return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor));\n  };\n\n  MatSelectionList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatSelectionList,\n    selectors: [[\"mat-selection-list\"]],\n    contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n      }\n    },\n    hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"],\n    hostVars: 3,\n    hostBindings: function MatSelectionList_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n      }\n    },\n    inputs: {\n      disableRipple: \"disableRipple\",\n      tabIndex: \"tabIndex\",\n      color: \"color\",\n      compareWith: \"compareWith\",\n      disabled: \"disabled\",\n      multiple: \"multiple\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    exportAs: [\"matSelectionList\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatSelectionList_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [_c1],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatSelectionList;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet MatListModule = /*#__PURE__*/(() => {\n  class MatListModule {}\n\n  MatListModule.ɵfac = function MatListModule_Factory(t) {\n    return new (t || MatListModule)();\n  };\n\n  MatListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatListModule\n  });\n  MatListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule, MatCommonModule, MatPseudoCheckboxModule, MatDividerModule]\n  });\n  return MatListModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, {\n    declarations: function () {\n      return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption];\n    },\n    imports: function () {\n      return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule];\n    },\n    exports: function () {\n      return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule, MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@angular/material/fesm2015/list.js"],"names":["CommonModule","InjectionToken","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","Directive","ChangeDetectorRef","Optional","Inject","ContentChildren","ContentChild","Input","forwardRef","EventEmitter","Output","ViewChild","Attribute","NgModule","mixinDisabled","mixinDisableRipple","setLines","MatLine","MatLineModule","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","coerceBooleanProperty","Subject","takeUntil","startWith","FocusKeyManager","FocusMonitor","SelectionModel","hasModifierKey","A","ENTER","SPACE","UP_ARROW","DOWN_ARROW","NG_VALUE_ACCESSOR","MatDividerModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","_c2","_c3","_c4","MatListOption_mat_pseudo_checkbox_2_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","_c5","_c6","_MatListBase","_MatListItemMixinBase","MAT_LIST","MAT_NAV_LIST","MatNavList","constructor","arguments","_stateChanges","ngOnChanges","next","ngOnDestroy","complete","ɵfac","ɵMatNavList_BaseFactory","MatNavList_Factory","t","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","inputs","disableRipple","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","template","MatNavList_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","ngDevMode","MatList","_elementRef","_getListType","nativeElement","classList","add","nodeName","toLowerCase","MatList_Factory","ɵɵdirectiveInject","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","ɵdir","ɵɵdefineDirective","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","_changeDetectorRef","navList","list","_isInteractiveList","_destroyed","_disabled","_list","element","_getHostElement","hasAttribute","setAttribute","pipe","subscribe","markForCheck","value","ngAfterContentInit","_lines","_isRippleDisabled","MatListItem_Factory","contentQueries","MatListItem_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_avatar","first","_icon","hostVars","hostBindings","MatListItem_HostBindings","ɵɵclassProp","consts","MatListItem_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","directives","MatRipple","_MatSelectionListBase","_MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","multi","MatSelectionListChange","source","option","options","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","selectedChange","checkboxPosition","_inputsInitialized","color","_color","newValue","_value","compareWith","selectedOptions","isSelected","_setSelected","multiple","_reportValueChange","ngOnInit","some","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","toggle","getLabel","_text","textContent","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","emit","_markForCheck","MatListOption_Factory","MatListOption_ContentQueries","viewQuery","MatListOption_Query","ɵɵviewQuery","MatListOption_HostBindings","ɵɵlistener","MatListOption_focus_HostBindingHandler","MatListOption_blur_HostBindingHandler","MatListOption_click_HostBindingHandler","ɵɵattribute","outputs","MatListOption_Template","ɵɵtemplate","NgIf","MatPseudoCheckbox","tabIndex","_focusMonitor","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_","_markOptionsForCheck","Error","_a","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","changes","_updateTabIndex","changed","event","added","item","removed","monitor","origin","toFocus","i","length","get","setActiveItem","disableRippleChanges","colorChanges","firstChange","stopMonitoring","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","Math","min","activeItem","_keydown","keyCode","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","preventDefault","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","forEach","correspondingOption","find","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","push","index","indexOf","setTimeout","MatSelectionList_Factory","ɵɵinjectAttribute","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_keydown_HostBindingHandler","$event","toString","MatSelectionList_Template","MatListModule","MatListModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, EventEmitter, Output, ViewChild, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager, FocusMonitor } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\n\nconst _c0 = [\"*\"];\nconst _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\";\nconst _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c4 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nconst _MatListBase = mixinDisabled(mixinDisableRipple(class {\n}));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nconst _MatListItemMixinBase = mixinDisableRipple(class {\n});\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = /*@__PURE__*/ function () { let ɵMatNavList_BaseFactory; return function MatNavList_Factory(t) { return (ɵMatNavList_BaseFactory || (ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList)))(t || MatNavList); }; }();\nMatNavList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_NAV_LIST, useExisting: MatNavList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nclass MatList extends _MatListBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_LIST, useExisting: MatList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_LIST, useExisting: MatList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_NAV_LIST, 8), ɵngcc0.ɵɵdirectiveInject(MAT_LIST, 8)); };\nMatListItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_NAV_LIST,] }] },\n    { type: MatList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LIST,] }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_NAV_LIST]\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LIST]\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatSelectionListBase = mixinDisableRipple(class {\n});\nconst _MatListOptionBase = mixinDisableRipple(class {\n});\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() { return this._color || this.selectionList.color; }\n    set color(newValue) { this._color = newValue; }\n    /** Value of the option */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this.selectionList.multiple) {\n                this.selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSelectionList))); };\nMatListOption.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", -1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, outputs: { selectedChange: \"selectedChange\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c6, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef(() => MatSelectionList),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    selectedChange: [{ type: Output }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSelectionList)]\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            var _a;\n            if (origin === 'keyboard' || origin === 'program') {\n                let toFocus = 0;\n                for (let i = 0; i < this.options.length; i++) {\n                    if ((_a = this.options.get(i)) === null || _a === void 0 ? void 0 : _a.selected) {\n                        toFocus = i;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(toFocus);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n        return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor)); };\nMatSelectionList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.FocusMonitor }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = function MatListModule_Factory(t) { return new (t || MatListModule)(); };\nMatListModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule,\n        MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n"]},"metadata":{},"sourceType":"module"}