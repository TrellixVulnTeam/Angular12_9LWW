{"ast":null,"code":"import * as Bowser from 'bowser';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n/* eslint-disable */\n\nconst ALPHA = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nlet Base64 = /*#__PURE__*/(() => {\n  class Base64 {\n    static getByte(s, i) {\n      const x = s.charCodeAt(i);\n      return x;\n    }\n\n    static getByte64(s, i) {\n      const idx = this.ALPHA.indexOf(s.charAt(i));\n      return idx;\n    }\n\n    static decode(s) {\n      let pads = 0,\n          i,\n          b10,\n          imax = s.length,\n          x = [];\n      s = String(s);\n\n      if (imax === 0) {\n        return s;\n      }\n\n      if (s.charAt(imax - 1) === this.PADCHAR) {\n        pads = 1;\n\n        if (s.charAt(imax - 2) === this.PADCHAR) {\n          pads = 2;\n        }\n\n        imax -= 4;\n      }\n\n      for (i = 0; i < imax; i += 4) {\n        b10 = this.getByte64(s, i) << 18 | this.getByte64(s, i + 1) << 12 | this.getByte64(s, i + 2) << 6 | this.getByte64(s, i + 3);\n        x.push(String.fromCharCode(b10 >> 16, b10 >> 8 & 255, b10 & 255));\n      }\n\n      switch (pads) {\n        case 1:\n          b10 = this.getByte64(s, i) << 18 | this.getByte64(s, i + 1) << 12 | this.getByte64(s, i + 2) << 6;\n          x.push(String.fromCharCode(b10 >> 16, b10 >> 8 & 255));\n          break;\n\n        case 2:\n          b10 = this.getByte64(s, i) << 18 | this.getByte64(s, i + 1) << 12;\n          x.push(String.fromCharCode(b10 >> 16));\n          break;\n      }\n\n      return x.join('');\n    }\n\n    static encode(s) {\n      s = String(s);\n      let i,\n          b10,\n          x = [],\n          imax = s.length - s.length % 3;\n\n      if (s.length === 0) {\n        return s;\n      }\n\n      for (i = 0; i < imax; i += 3) {\n        b10 = this.getByte(s, i) << 16 | this.getByte(s, i + 1) << 8 | this.getByte(s, i + 2);\n        x.push(this.ALPHA.charAt(b10 >> 18));\n        x.push(this.ALPHA.charAt(b10 >> 12 & 63));\n        x.push(this.ALPHA.charAt(b10 >> 6 & 63));\n        x.push(this.ALPHA.charAt(b10 & 63));\n      }\n\n      switch (s.length - imax) {\n        case 1:\n          b10 = this.getByte(s, i) << 16;\n          x.push(this.ALPHA.charAt(b10 >> 18) + this.ALPHA.charAt(b10 >> 12 & 63) + this.PADCHAR + this.PADCHAR);\n          break;\n\n        case 2:\n          b10 = this.getByte(s, i) << 16 | this.getByte(s, i + 1) << 8;\n          x.push(this.ALPHA.charAt(b10 >> 18) + this.ALPHA.charAt(b10 >> 12 & 63) + this.ALPHA.charAt(b10 >> 6 & 63) + this.PADCHAR);\n          break;\n      }\n\n      return x.join('');\n    }\n\n  }\n\n  Base64.PADCHAR = '=';\n  Base64.ALPHA = ALPHA;\n  return Base64;\n})();\nconst userAgent = Bowser.getParser(window.navigator.userAgent);\n\nclass Clipboard {\n  static copy(element) {\n    let successful = false;\n\n    if (typeof element === 'string') {\n      const textArea = Clipboard.createTextArea(element);\n      Clipboard.selectText(textArea);\n      successful = Clipboard.copyTextToClipboard();\n      Clipboard.destroyTextArea(textArea);\n    } else {\n      Clipboard.selectText(element);\n      successful = Clipboard.copyTextToClipboard();\n    }\n\n    return successful;\n  }\n\n  static createTextArea(text) {\n    const textArea = document.createElement('textArea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    return textArea;\n  }\n\n  static destroyTextArea(textArea) {\n    document.body.removeChild(textArea);\n  }\n\n  static selectText(textArea) {\n    if (userAgent.getOSName() === 'iOS') {\n      const oldContentEditable = textArea.contentEditable;\n      const oldReadOnly = textArea.readOnly;\n      const range = document.createRange();\n      const selection = window.getSelection();\n      textArea.contenteditable = true;\n      textArea.readonly = false;\n      range.selectNodeContents(textArea);\n      selection.removeAllRanges();\n      selection.addRange(range);\n      textArea.setSelectionRange(0, 999999);\n      textArea.contentEditable = oldContentEditable;\n      textArea.readOnly = oldReadOnly;\n    } else {\n      textArea.select();\n    }\n  }\n\n  static copyTextToClipboard() {\n    if (!(userAgent.getOSName() === 'iOS' && userAgent.compareVersion('<10'))) {\n      return document.execCommand('copy');\n    }\n\n    return false;\n  }\n\n}\n\nclass StringUtils {\n  static diff(s1, s2, p = 4) {\n    if (!s1 && !s2) {\n      return '';\n    }\n\n    if (!s1) {\n      return '<span class=\"inserted\">' + s2 + '</span>';\n    }\n\n    if (!s2) {\n      return '<span class=\"deleted\">' + s1 + '</span>';\n    }\n\n    s1 = s1.toString();\n    s2 = s2.toString();\n    const changeData = StringUtils.getChanges(s1, s2, '', p);\n    const nextS = s2.slice(changeData.mtc.length + changeData.ins.length + changeData.sbs.length); // remaining part of \"s\"\n\n    const nextThis = s1.slice(changeData.mtc.length + changeData.del.length + changeData.sbs.length); // remaining part of \"this\"\n\n    let result = ''; // the glorious result\n\n    if (changeData.del.length > 0) {\n      changeData.del = '<span class=\"deleted\">' + changeData.del + '</span>';\n    }\n\n    if (changeData.ins.length > 0) {\n      changeData.ins = '<span class=\"inserted\">' + changeData.ins + '</span>';\n    }\n\n    result = changeData.mtc + changeData.del + changeData.ins + changeData.sbs;\n    result += nextThis !== '' || nextS !== '' ? StringUtils.diff(nextThis, nextS, p) : '';\n    return result;\n  }\n\n  static getMatchingSubstring(s, l, m) {\n    // returns the first matching substring in-between the two strings\n    let i = 0;\n    let match = false;\n    const slen = s.length;\n    const o = {\n      fis: slen,\n      mtc: m,\n      sbs: ''\n    }; // temporary object used to construct the cd (change data) object\n\n    while (i < slen) {\n      l[i] === s[i] ? match ? o.sbs += s[i] : (match = true, o.fis = i, o.sbs = s[i]) : match ? i = slen : i = i;\n      ++i;\n    }\n\n    return o;\n  }\n\n  static getChanges(s1, s2, m, p) {\n    const isThisLonger = s1.length >= s1.length ? true : false;\n    let [longer, shorter] = isThisLonger ? [s1, s2] : [s2, s1]; // assignment of longer and shorter by es6 destructuring\n\n    let bi = 0; // base index designating the index of first mismacthing character in both strings\n\n    while (shorter[bi] === longer[bi] && bi < shorter.length) {\n      ++bi;\n    } // make bi the index of first mismatching character\n\n\n    longer = longer.split('').slice(bi); // as the longer string will be rotated it is converted into array\n\n    shorter = shorter.slice(bi); // shorter and longer now starts from the first mismatching character\n\n    const len = longer.length; // length of the longer string\n\n    let cd = {\n      fis: shorter.length,\n      fil: len,\n      sbs: '',\n      mtc: m + s2.slice(0, bi)\n    }; // if exists mtc holds the matching string at the front\n\n    let sub = {\n      sbs: ''\n    }; // returned substring per 1 character rotation of the longer string\n\n    if (shorter !== '') {\n      for (let rc = 0; rc < len && sub.sbs.length < p; rc++) {\n        // rc -> rotate count, p -> precision factor\n        sub = StringUtils.getMatchingSubstring(shorter, StringUtils.rotateArray(longer, rc), cd.mtc); // rotate longer string 1 char and get substring\n\n        sub.fil = rc < len - sub.fis ? sub.fis + rc // mismatch is longer than the mismatch in short\n        : sub.fis - len + rc; // mismatch is shorter than the mismatch in short\n\n        if (sub.sbs.length > cd.sbs.length) {\n          cd = sub; // only keep the one with the longest substring.\n        }\n      }\n    } // insert the mismatching delete subsrt and insert substr to the cd object and attach the previous substring\n\n\n    [cd.del, cd.ins] = isThisLonger ? [longer.slice(0, cd.fil).join(''), shorter.slice(0, cd.fis)] : [shorter.slice(0, cd.fis), longer.slice(0, cd.fil).join('')];\n    return cd.del.indexOf(' ') === -1 || cd.ins.indexOf(' ') === -1 || cd.del === '' || cd.ins === '' || cd.sbs === '' ? cd : StringUtils.getChanges(cd.del, cd.ins, cd.mtc, p);\n  }\n\n  static rotateArray(array, n) {\n    const len = array.length;\n    const res = new Array(array.length);\n\n    if (n % len === 0) {\n      return array.slice();\n    } else {\n      for (let i = 0; i < len; i++) {\n        res[i] = array[(i + (len + n % len)) % len];\n      }\n    }\n\n    return res;\n  }\n\n}\n\nvar ChangeType = /*#__PURE__*/(() => {\n  (function (ChangeType) {\n    ChangeType[\"ADDED\"] = \"added\";\n    ChangeType[\"DELETED\"] = \"deleted\";\n    ChangeType[\"MODIFIED\"] = \"modified\";\n  })(ChangeType || (ChangeType = {}));\n\n  return ChangeType;\n})();\n\nclass ChangeUtils {\n  static findChanges(obj1, obj2, ignoreKeys = []) {\n    const items = {\n      added: [],\n      deleted: [],\n      modified: []\n    };\n\n    if (!obj1 || !obj2) {\n      return items;\n    }\n\n    const obj1Clone = [...obj1];\n    const obj2Clone = [...obj2];\n\n    for (const fromItem of obj1Clone) {\n      const index = obj2Clone.findIndex(s => s.id === fromItem.id);\n\n      if (index === -1) {\n        items.deleted.push({\n          change: {\n            type: ChangeType.DELETED\n          },\n          value: fromItem\n        });\n        continue;\n      }\n\n      const toItem = obj2Clone.splice(index, 1)[0];\n      const fromItemClone = JSON.parse(JSON.stringify(fromItem));\n      const toItemClone = JSON.parse(JSON.stringify(toItem));\n      const keysChanged = ChangeUtils.compareObject(fromItemClone, toItemClone, undefined, ignoreKeys);\n\n      if (keysChanged.length) {\n        items.modified.push({\n          change: {\n            type: ChangeType.MODIFIED,\n            keysChanged\n          },\n          value: fromItemClone,\n          oldValue: fromItem,\n          newValue: toItem\n        });\n      }\n    }\n\n    items.added = obj2Clone.map(itemAdded => {\n      return {\n        change: {\n          type: ChangeType.ADDED\n        },\n        value: itemAdded\n      };\n    });\n    return items;\n  }\n\n  static compareObject(fromItem, toItem, baseKey, ignoreKeys = []) {\n    const fromItemClone = JSON.parse(JSON.stringify(fromItem));\n    const toItemClone = JSON.parse(JSON.stringify(toItem));\n    const keys = new Set([...Object.keys(fromItem), ...Object.keys(toItem)]);\n    let keysChanged = [];\n    keys.forEach(key => {\n      const keyString = baseKey ? `${baseKey}.${key}` : key;\n\n      if (ignoreKeys.indexOf(keyString) !== -1) {\n        return;\n      }\n\n      if (Array.isArray(fromItem[key])) {\n        fromItem[key] = fromItem[key].join(',<br>');\n      }\n\n      if (Array.isArray(toItem[key])) {\n        toItem[key] = toItem[key].join(',<br>');\n      }\n\n      if (typeof fromItem[key] === 'object' && typeof toItem[key] === 'object' && fromItem[key] !== null && toItem[key] !== null) {\n        keysChanged = keysChanged.concat(this.compareObject(fromItem[key], toItem[key], keyString));\n      } else {\n        if (fromItem[key] !== toItem[key]) {\n          keysChanged.push({\n            key: keyString,\n            oldValue: fromItemClone[key],\n            newValue: toItemClone[key]\n          });\n          fromItem[key] = StringUtils.diff(fromItem[key], toItem[key]);\n        }\n      }\n    });\n    return keysChanged;\n  }\n\n}\n/**\r\n * Trigger download of a file\r\n *\r\n * @param content File content\r\n * @param mimeType File mime type\r\n * @param fileName File name\r\n */\n\n\nfunction downloadContent(content, mimeType, fileName) {\n  const uri = `data:${mimeType},${encodeURIComponent(content)}`;\n  downloadFromUri(uri, fileName);\n}\n/**\r\n * Trigger download of a file\r\n *\r\n * @param content File content\r\n * @param mimeType File mime type\r\n * @param fileName File name\r\n */\n\n\nfunction downloadFromUri(uri, fileName) {\n  const element = document.createElement('a');\n  element.setAttribute('href', uri);\n  element.setAttribute('download', fileName);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nclass ObjectUtils {\n  static resolve(obj, key) {\n    const keysArray = key.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    let current = obj;\n\n    while (keysArray.length) {\n      if (typeof current !== 'object') {\n        return undefined;\n      }\n\n      current = current[keysArray.shift()];\n    }\n\n    return current;\n  }\n\n  static isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item) && item !== null && !(item instanceof Date);\n  }\n\n  static mergeDeep(target, source, ignoreUndefined = false) {\n    const output = Object.assign({}, target);\n\n    if (ObjectUtils.isObject(target) && ObjectUtils.isObject(source)) {\n      Object.keys(source).filter(key => !ignoreUndefined || source[key] !== undefined).forEach(key => {\n        if (ObjectUtils.isObject(source[key])) {\n          if (!(key in target)) {\n            Object.assign(output, {\n              [key]: source[key]\n            });\n          } else {\n            output[key] = ObjectUtils.mergeDeep(target[key], source[key], ignoreUndefined);\n          }\n        } else {\n          Object.assign(output, {\n            [key]: source[key]\n          });\n        }\n      });\n    }\n\n    return output;\n  }\n\n  static copyDeep(src) {\n    const target = Array.isArray(src) ? [] : {};\n\n    for (const prop in src) {\n      if (src.hasOwnProperty(prop)) {\n        const value = src[prop];\n\n        if (value && typeof value === 'object') {\n          target[prop] = this.copyDeep(value);\n        } else {\n          target[prop] = value;\n        }\n      }\n    }\n\n    return target;\n  }\n\n  static removeDuplicateCaseInsensitive(obj) {\n    const summaryCapitalizeObject = {};\n    const capitalizeObject = {};\n    const upperCaseCount = [];\n\n    for (const property in obj) {\n      if (obj.hasOwnProperty(property)) {\n        const upperCaseProperty = property.toUpperCase();\n\n        if (!summaryCapitalizeObject.hasOwnProperty(upperCaseProperty)) {\n          summaryCapitalizeObject[upperCaseProperty] = [{\n            [property]: obj[property]\n          }];\n        } else {\n          summaryCapitalizeObject[upperCaseProperty].push({\n            [property]: obj[property]\n          });\n        } // counting the number of uppercase lettersMna\n\n\n        upperCaseCount.push({\n          key: property,\n          count: property.replace(/[^A-Z]/g, '').length\n        });\n      }\n    }\n\n    for (const capitalizedProperty in summaryCapitalizeObject) {\n      if (summaryCapitalizeObject.hasOwnProperty(capitalizedProperty)) {\n        if (summaryCapitalizeObject.hasOwnProperty(capitalizedProperty)) {\n          const capitalizedPropertyObject = summaryCapitalizeObject[capitalizedProperty];\n\n          if (capitalizedPropertyObject.length === 1) {\n            // for single params (no duplicates)\n            const singlePossibility = capitalizedPropertyObject[0];\n            capitalizeObject[capitalizedProperty] = singlePossibility[Object.keys(singlePossibility)[0]];\n          } else if (capitalizedPropertyObject.length > 1) {\n            // defining the closest to lowercase property\n            const paramClosestToLowercase = upperCaseCount.filter(f => f.key.toLowerCase() === capitalizedProperty.toLowerCase()).reduce((prev, current) => {\n              return prev.y < current.y ? prev : current;\n            });\n            capitalizeObject[paramClosestToLowercase.key.toUpperCase()] = obj[paramClosestToLowercase.key];\n          }\n        }\n      }\n    }\n\n    for (const property in obj) {\n      if (obj.hasOwnProperty(property)) {\n        delete obj[property];\n      }\n    }\n\n    for (const property in capitalizeObject) {\n      if (capitalizeObject.hasOwnProperty(property)) {\n        obj[property] = capitalizeObject[property];\n      }\n    }\n  }\n\n  static removeUndefined(obj) {\n    const output = {};\n\n    if (ObjectUtils.isObject(obj)) {\n      Object.keys(obj).filter(key => obj[key] !== undefined).forEach(key => {\n        if (ObjectUtils.isObject(obj[key]) || Array.isArray(obj[key])) {\n          output[key] = ObjectUtils.removeUndefined(obj[key]);\n        } else {\n          output[key] = obj[key];\n        }\n      });\n      return output;\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(o => ObjectUtils.removeUndefined(o));\n    }\n\n    return obj;\n  }\n\n  static removeNull(obj) {\n    const output = {};\n\n    if (ObjectUtils.isObject(obj)) {\n      Object.keys(obj).filter(key => obj[key] !== null).forEach(key => {\n        if (ObjectUtils.isObject(obj[key]) || Array.isArray(obj[key])) {\n          output[key] = ObjectUtils.removeNull(obj[key]);\n        } else {\n          output[key] = obj[key];\n        }\n      });\n      return output;\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(o => ObjectUtils.removeNull(o));\n    }\n\n    return obj;\n  }\n\n  static naturalCompare(a, b, direction = 'asc', nullsFirst) {\n    if (direction === 'desc') {\n      b = [a, a = b][0];\n    } // nullsFirst = undefined : end if direction = 'asc', first if direction = 'desc'\n    // nullsFirst = true : always first\n    // nullsFirst = false : always end\n\n\n    if (a === null || a === '' || a === undefined || b === null || b === '' || b === undefined) {\n      const nullScore = a === b ? 0 : a === undefined ? 3 : b === undefined ? -3 : a === null ? 2 : b === null ? -2 : a === '' ? 1 : -1;\n\n      if (direction === 'desc') {\n        return nullsFirst !== false ? nullScore : nullScore * -1;\n      }\n\n      return nullsFirst === true ? nullScore * -1 : nullScore;\n    }\n\n    const ax = [];\n    const bx = [];\n    a = '' + a;\n    b = '' + b;\n    a.replace(/(\\d+)|(\\D+)/g, (_, $1, $2) => {\n      ax.push([$1 || Infinity, $2 || '']);\n    });\n    b.replace(/(\\d+)|(\\D+)/g, (_, $1, $2) => {\n      bx.push([$1 || Infinity, $2 || '']);\n    });\n\n    while (ax.length && bx.length) {\n      const an = ax.shift();\n      const bn = bx.shift();\n      const nn = an[0] - bn[0] || an[1].localeCompare(bn[1]);\n\n      if (nn) {\n        return nn;\n      }\n    }\n\n    return ax.length - bx.length;\n  }\n  /**\r\n   * Return true if two object are equivalent.\r\n   * Objects are considered equivalent if they have the same properties and\r\n   * if all of their properties (first-level only) share the same value.\r\n   * @param obj1 First object\r\n   * @param obj2 Second object\r\n   * @returns Whether two objects arer equivalent\r\n   */\n\n\n  static objectsAreEquivalent(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n\n    const obj1Props = Object.getOwnPropertyNames(obj1);\n    const obj2Props = Object.getOwnPropertyNames(obj2);\n\n    if (obj1Props.length !== obj2Props.length) {\n      return false;\n    }\n\n    for (const prop of obj1Props) {\n      if (obj1[prop] !== obj2[prop]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\r\n   * Return a new object with an array of keys removed\r\n   * @param obj Source object\r\n   * @param keys Keys to remove\r\n   * @returns A new object\r\n   */\n\n\n  static removeKeys(obj, keys) {\n    const newObj = Object.keys(obj).filter(key => keys.indexOf(key) < 0).reduce((_obj, key) => {\n      _obj[key] = obj[key];\n      return _obj;\n    }, {});\n    return newObj;\n  }\n\n}\n\nclass NumberUtils {\n  static roundToNDecimal(num, decimal = 3) {\n    const roundFactor = Math.pow(10, decimal);\n    return Math.round(num * roundFactor) / roundFactor;\n  }\n\n}\n/** Utility function to create a K:V from a list of strings */\n\n\nfunction strEnum(o) {\n  return o.reduce((res, key) => {\n    res[key] = key;\n    return res;\n  }, Object.create(null));\n}\n\nfunction S4() {\n  // eslint-disable-next-line no-bitwise\n  return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n}\n\nfunction uuid() {\n  const id = `${S4()}${S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`;\n  return id.toLowerCase();\n}\n\nvar SubjectStatus = /*#__PURE__*/(() => {\n  (function (SubjectStatus) {\n    SubjectStatus[SubjectStatus[\"Error\"] = 0] = \"Error\";\n    SubjectStatus[SubjectStatus[\"Done\"] = 1] = \"Done\";\n    SubjectStatus[SubjectStatus[\"Working\"] = 2] = \"Working\";\n    SubjectStatus[SubjectStatus[\"Waiting\"] = 3] = \"Waiting\";\n  })(SubjectStatus || (SubjectStatus = {}));\n\n  return SubjectStatus;\n})();\n\nclass Watcher {\n  constructor() {\n    this.status$ = new Subject();\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  set status(value) {\n    this._status = value;\n    this.status$.next(value);\n  } // eslint-disable-next-line @typescript-eslint/ban-types\n\n\n  subscribe(callback, scope) {\n    this.watch();\n    this.status$$ = this.status$.pipe(distinctUntilChanged()).subscribe(status => {\n      this.handleStatusChange(status);\n      callback.call(scope, this);\n    });\n  }\n\n  unsubscribe() {\n    this.unwatch();\n\n    if (this.status$$ !== undefined) {\n      this.status$$.unsubscribe();\n      this.status$$ = undefined;\n    }\n\n    this.status = SubjectStatus.Waiting;\n  }\n\n  handleStatusChange(status) {}\n\n}\n/*\r\n * Public API Surface of utils\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { Base64, ChangeType, ChangeUtils, Clipboard, NumberUtils, ObjectUtils, S4, StringUtils, SubjectStatus, Watcher, downloadContent, downloadFromUri, strEnum, userAgent, uuid };","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\base64.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\user-agent.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\clipboard.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\string-utils.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\change.interface.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\change.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\file.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\object-utils.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\number-utils.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\strenum.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\uuid.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\lib\\watcher.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\packages\\utils\\src\\public_api.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nconst ALPHA =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nexport class Base64 {\n  private static PADCHAR: string = '=';\n  private static ALPHA: string = ALPHA;\n\n  private static getByte(s: string, i: number): number {\n    const x = s.charCodeAt(i);\n    return x;\n  }\n\n  private static getByte64(s: string, i: number): number {\n    const idx = this.ALPHA.indexOf(s.charAt(i));\n    return idx;\n  }\n\n  public static decode(s: string): string {\n    let pads = 0,\n      i,\n      b10,\n      imax = s.length,\n      x = [];\n\n    s = String(s);\n\n    if (imax === 0) {\n      return s;\n    }\n\n    if (s.charAt(imax - 1) === this.PADCHAR) {\n      pads = 1;\n      if (s.charAt(imax - 2) === this.PADCHAR) {\n        pads = 2;\n      }\n      imax -= 4;\n    }\n\n    for (i = 0; i < imax; i += 4) {\n      b10 =\n        (this.getByte64(s, i) << 18) |\n        (this.getByte64(s, i + 1) << 12) |\n        (this.getByte64(s, i + 2) << 6) |\n        this.getByte64(s, i + 3);\n      x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 255, b10 & 255));\n    }\n\n    switch (pads) {\n      case 1:\n        b10 =\n          (this.getByte64(s, i) << 18) |\n          (this.getByte64(s, i + 1) << 12) |\n          (this.getByte64(s, i + 2) << 6);\n        x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 255));\n        break;\n      case 2:\n        b10 = (this.getByte64(s, i) << 18) | (this.getByte64(s, i + 1) << 12);\n        x.push(String.fromCharCode(b10 >> 16));\n        break;\n    }\n\n    return x.join('');\n  }\n\n  public static encode(s: string): string {\n    s = String(s);\n\n    let i,\n      b10,\n      x = [],\n      imax = s.length - s.length % 3;\n\n    if (s.length === 0) {\n      return s;\n    }\n\n    for (i = 0; i < imax; i += 3) {\n      b10 =\n        (this.getByte(s, i) << 16) |\n        (this.getByte(s, i + 1) << 8) |\n        this.getByte(s, i + 2);\n      x.push(this.ALPHA.charAt(b10 >> 18));\n      x.push(this.ALPHA.charAt((b10 >> 12) & 63));\n      x.push(this.ALPHA.charAt((b10 >> 6) & 63));\n      x.push(this.ALPHA.charAt(b10 & 63));\n    }\n\n    switch (s.length - imax) {\n      case 1:\n        b10 = this.getByte(s, i) << 16;\n        x.push(\n          this.ALPHA.charAt(b10 >> 18) +\n            this.ALPHA.charAt((b10 >> 12) & 63) +\n            this.PADCHAR +\n            this.PADCHAR\n        );\n        break;\n      case 2:\n        b10 = (this.getByte(s, i) << 16) | (this.getByte(s, i + 1) << 8);\n        x.push(\n          this.ALPHA.charAt(b10 >> 18) +\n            this.ALPHA.charAt((b10 >> 12) & 63) +\n            this.ALPHA.charAt((b10 >> 6) & 63) +\n            this.PADCHAR\n        );\n        break;\n    }\n\n    return x.join('');\n  }\n}\n","import * as Bowser from 'bowser';\n\nexport interface UserAgent extends Bowser.Parser.Parser {\n  compareVersion: (version: string) => boolean;\n}\n\nexport const userAgent = Bowser.getParser(\n  window.navigator.userAgent\n) as UserAgent;\n","import { userAgent } from './user-agent';\n\nexport class Clipboard {\n  static copy(element: HTMLTextAreaElement | string): boolean {\n    let successful = false;\n    if (typeof element === 'string') {\n      const textArea = Clipboard.createTextArea(element);\n      Clipboard.selectText(textArea);\n      successful = Clipboard.copyTextToClipboard();\n      Clipboard.destroyTextArea(textArea);\n    } else {\n      Clipboard.selectText(element);\n      successful = Clipboard.copyTextToClipboard();\n    }\n    return successful;\n  }\n\n  private static createTextArea(text: string): HTMLTextAreaElement {\n    const textArea = document.createElement('textArea') as HTMLTextAreaElement;\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    return textArea;\n  }\n\n  private static destroyTextArea(textArea) {\n    document.body.removeChild(textArea);\n  }\n\n  private static selectText(textArea) {\n    if (userAgent.getOSName() === 'iOS') {\n      const oldContentEditable = textArea.contentEditable;\n      const oldReadOnly = textArea.readOnly;\n      const range = document.createRange();\n      const selection = window.getSelection();\n\n      textArea.contenteditable = true;\n      textArea.readonly = false;\n      range.selectNodeContents(textArea);\n      selection.removeAllRanges();\n      selection.addRange(range);\n      textArea.setSelectionRange(0, 999999);\n      textArea.contentEditable = oldContentEditable;\n      textArea.readOnly = oldReadOnly;\n    } else {\n      textArea.select();\n    }\n  }\n\n  private static copyTextToClipboard(): boolean {\n    if (!(userAgent.getOSName() === 'iOS' && userAgent.compareVersion('<10'))) {\n      return document.execCommand('copy');\n    }\n    return false;\n  }\n}\n","export class StringUtils {\n  static diff(s1: string, s2: string, p = 4): string {\n    if (!s1 && !s2) {\n      return '';\n    }\n    if (!s1) {\n      return '<span class=\"inserted\">' + s2 + '</span>';\n    }\n    if (!s2) {\n      return '<span class=\"deleted\">' + s1 + '</span>';\n    }\n    s1 = s1.toString();\n    s2 = s2.toString();\n    const changeData = StringUtils.getChanges(s1, s2, '', p);\n    const nextS = s2.slice(\n      changeData.mtc.length + changeData.ins.length + changeData.sbs.length\n    ); // remaining part of \"s\"\n    const nextThis = s1.slice(\n      changeData.mtc.length + changeData.del.length + changeData.sbs.length\n    ); // remaining part of \"this\"\n    let result = ''; // the glorious result\n    if (changeData.del.length > 0) {\n      changeData.del = '<span class=\"deleted\">' + changeData.del + '</span>';\n    }\n    if (changeData.ins.length > 0) {\n      changeData.ins = '<span class=\"inserted\">' + changeData.ins + '</span>';\n    }\n    result = changeData.mtc + changeData.del + changeData.ins + changeData.sbs;\n    result +=\n      nextThis !== '' || nextS !== ''\n        ? StringUtils.diff(nextThis, nextS, p)\n        : '';\n    return result;\n  }\n\n  private static getMatchingSubstring(s, l, m) {\n    // returns the first matching substring in-between the two strings\n    let i = 0;\n    let match = false;\n    const slen = s.length;\n    const o = { fis: slen, mtc: m, sbs: '' }; // temporary object used to construct the cd (change data) object\n\n    while (i < slen) {\n      l[i] === s[i]\n        ? match\n          ? (o.sbs += s[i]) // o.sbs holds the matching substring itsef\n          : ((match = true), (o.fis = i), (o.sbs = s[i]))\n        : match\n          ? (i = slen) // stop after the first found substring\n          : (i = i);\n      ++i;\n    }\n    return o;\n  }\n\n  private static getChanges(s1, s2, m, p) {\n    const isThisLonger = s1.length >= s1.length ? true : false;\n    let [longer, shorter] = isThisLonger ? [s1, s2] : [s2, s1]; // assignment of longer and shorter by es6 destructuring\n    let bi = 0; // base index designating the index of first mismacthing character in both strings\n\n    while (shorter[bi] === longer[bi] && bi < shorter.length) {\n      ++bi;\n    } // make bi the index of first mismatching character\n    longer = longer.split('').slice(bi); // as the longer string will be rotated it is converted into array\n    shorter = shorter.slice(bi); // shorter and longer now starts from the first mismatching character\n\n    const len = longer.length; // length of the longer string\n    let cd: any = {\n      fis: shorter.length, // the index of matching string in the shorter string\n      fil: len, // the index of matching string in the longer string\n      sbs: '', // the matching substring itself\n      mtc: m + s2.slice(0, bi)\n    }; // if exists mtc holds the matching string at the front\n    let sub: any = { sbs: '' }; // returned substring per 1 character rotation of the longer string\n\n    if (shorter !== '') {\n      for (let rc = 0; rc < len && sub.sbs.length < p; rc++) {\n        // rc -> rotate count, p -> precision factor\n        sub = StringUtils.getMatchingSubstring(\n          shorter,\n          StringUtils.rotateArray(longer, rc),\n          cd.mtc\n        ); // rotate longer string 1 char and get substring\n        sub.fil =\n          rc < len - sub.fis\n            ? sub.fis + rc // mismatch is longer than the mismatch in short\n            : sub.fis - len + rc; // mismatch is shorter than the mismatch in short\n        if (sub.sbs.length > cd.sbs.length) {\n          cd = sub; // only keep the one with the longest substring.\n        }\n      }\n    }\n    // insert the mismatching delete subsrt and insert substr to the cd object and attach the previous substring\n    [cd.del, cd.ins] = isThisLonger\n      ? [longer.slice(0, cd.fil).join(''), shorter.slice(0, cd.fis)]\n      : [shorter.slice(0, cd.fis), longer.slice(0, cd.fil).join('')];\n    return cd.del.indexOf(' ') === -1 ||\n      cd.ins.indexOf(' ') === -1 ||\n      cd.del === '' ||\n      cd.ins === '' ||\n      cd.sbs === ''\n      ? cd\n      : StringUtils.getChanges(cd.del, cd.ins, cd.mtc, p);\n  }\n\n  private static rotateArray(array, n) {\n    const len = array.length;\n    const res = new Array(array.length);\n    if (n % len === 0) {\n      return array.slice();\n    } else {\n      for (let i = 0; i < len; i++) {\n        res[i] = array[(i + (len + (n % len))) % len];\n      }\n    }\n    return res;\n  }\n}\n","export enum ChangeType {\n  ADDED = 'added',\n  DELETED = 'deleted',\n  MODIFIED = 'modified'\n}\n\nexport interface Change {\n  type: ChangeType;\n  keysChanged?: {\n    key: string;\n    newValue: any;\n    oldValue: any;\n  }[];\n}\n\nexport interface GroupingChanges {\n  added: ChangeItem[];\n  deleted: ChangeItem[];\n  modified: ChangeItem[];\n}\n\nexport interface ChangeItem {\n  change: Change;\n  value: any;\n  oldValue?: any;\n  newValue?: any;\n}\n","import { StringUtils } from './string-utils';\nimport { GroupingChanges, ChangeType } from './change.interface';\n\nexport class ChangeUtils {\n  static findChanges(\n    obj1: any[],\n    obj2: any[],\n    ignoreKeys: string[] = []\n  ): GroupingChanges {\n    const items: GroupingChanges = {\n      added: [],\n      deleted: [],\n      modified: []\n    };\n\n    if (!obj1 || !obj2) {\n      return items;\n    }\n\n    const obj1Clone: any = [...obj1];\n    const obj2Clone: any = [...obj2];\n\n    for (const fromItem of obj1Clone) {\n      const index = obj2Clone.findIndex(s => s.id === fromItem.id);\n\n      if (index === -1) {\n        items.deleted.push({\n          change: { type: ChangeType.DELETED },\n          value: fromItem\n        });\n        continue;\n      }\n\n      const toItem = obj2Clone.splice(index, 1)[0];\n      const fromItemClone = JSON.parse(JSON.stringify(fromItem));\n      const toItemClone = JSON.parse(JSON.stringify(toItem));\n\n      const keysChanged = ChangeUtils.compareObject(\n        fromItemClone,\n        toItemClone,\n        undefined,\n        ignoreKeys\n      );\n\n      if (keysChanged.length) {\n        items.modified.push({\n          change: {\n            type: ChangeType.MODIFIED,\n            keysChanged\n          },\n          value: fromItemClone,\n          oldValue: fromItem,\n          newValue: toItem\n        });\n      }\n    }\n\n    items.added = obj2Clone.map(itemAdded => {\n      return {\n        change: { type: ChangeType.ADDED },\n        value: itemAdded\n      };\n    });\n\n    return items;\n  }\n\n  private static compareObject(fromItem, toItem, baseKey?, ignoreKeys = []) {\n    const fromItemClone = JSON.parse(JSON.stringify(fromItem));\n    const toItemClone = JSON.parse(JSON.stringify(toItem));\n\n    const keys: any = new Set([\n      ...Object.keys(fromItem),\n      ...Object.keys(toItem)\n    ]);\n    let keysChanged = [];\n    keys.forEach(key => {\n      const keyString = baseKey ? `${baseKey}.${key}` : key;\n      if (ignoreKeys.indexOf(keyString) !== -1) {\n        return;\n      }\n\n      if (Array.isArray(fromItem[key])) {\n        fromItem[key] = fromItem[key].join(',<br>');\n      }\n      if (Array.isArray(toItem[key])) {\n        toItem[key] = toItem[key].join(',<br>');\n      }\n\n      if (\n        typeof fromItem[key] === 'object' &&\n        typeof toItem[key] === 'object' &&\n        fromItem[key] !== null &&\n        toItem[key] !== null\n      ) {\n        keysChanged = keysChanged.concat(\n          this.compareObject(fromItem[key], toItem[key], keyString)\n        );\n      } else {\n        if (fromItem[key] !== toItem[key]) {\n          keysChanged.push({\n            key: keyString,\n            oldValue: fromItemClone[key],\n            newValue: toItemClone[key]\n          });\n          fromItem[key] = StringUtils.diff(fromItem[key], toItem[key]);\n        }\n      }\n    });\n\n    return keysChanged;\n  }\n}\n","/**\n * Trigger download of a file\n *\n * @param content File content\n * @param mimeType File mime type\n * @param fileName File name\n */\nexport function downloadContent(content: string, mimeType: string, fileName: string) {\n  const uri = `data:${mimeType},${encodeURIComponent(content)}`;\n  downloadFromUri(uri, fileName);\n}\n\n/**\n * Trigger download of a file\n *\n * @param content File content\n * @param mimeType File mime type\n * @param fileName File name\n */\nexport function downloadFromUri(uri: string, fileName: string) {\n  const element = document.createElement('a');\n  element.setAttribute('href', uri);\n  element.setAttribute('download', fileName);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n","export class ObjectUtils {\n  static resolve(obj: object, key: string): any {\n    const keysArray = key\n      .replace(/\\[/g, '.')\n      .replace(/\\]/g, '')\n      .split('.');\n    let current = obj;\n    while (keysArray.length) {\n      if (typeof current !== 'object') {\n        return undefined;\n      }\n      current = current[keysArray.shift()];\n    }\n\n    return current;\n  }\n\n  static isObject(item: object) {\n    return (\n      item &&\n      typeof item === 'object' &&\n      !Array.isArray(item) &&\n      item !== null &&\n      !(item instanceof Date)\n    );\n  }\n\n  static mergeDeep(\n    target: object,\n    source: object,\n    ignoreUndefined = false\n  ): any {\n    const output = Object.assign({}, target);\n    if (ObjectUtils.isObject(target) && ObjectUtils.isObject(source)) {\n      Object.keys(source)\n        .filter(key => !ignoreUndefined || source[key] !== undefined)\n        .forEach(key => {\n          if (ObjectUtils.isObject(source[key])) {\n            if (!(key in target)) {\n              Object.assign(output, { [key]: source[key] });\n            } else {\n              output[key] = ObjectUtils.mergeDeep(\n                target[key],\n                source[key],\n                ignoreUndefined\n              );\n            }\n          } else {\n            Object.assign(output, { [key]: source[key] });\n          }\n        });\n    }\n    return output;\n  }\n\n  static copyDeep(src): any {\n    const target = Array.isArray(src) ? [] : {};\n    for (const prop in src) {\n      if (src.hasOwnProperty(prop)) {\n        const value = src[prop];\n        if (value && typeof value === 'object') {\n          target[prop] = this.copyDeep(value);\n        } else {\n          target[prop] = value;\n        }\n      }\n    }\n    return target;\n  }\n\n  static removeDuplicateCaseInsensitive(obj: object) {\n    const summaryCapitalizeObject = {};\n    const capitalizeObject = {};\n    const upperCaseCount = [];\n\n    for (const property in obj) {\n      if (obj.hasOwnProperty(property)) {\n        const upperCaseProperty = property.toUpperCase();\n        if (!summaryCapitalizeObject.hasOwnProperty(upperCaseProperty)) {\n          summaryCapitalizeObject[upperCaseProperty] = [\n            { [property]: obj[property] }\n          ];\n        } else {\n          summaryCapitalizeObject[upperCaseProperty].push({\n            [property]: obj[property]\n          });\n        }\n        // counting the number of uppercase lettersMna\n        upperCaseCount.push({\n          key: property,\n          count: property.replace(/[^A-Z]/g, '').length\n        });\n      }\n    }\n    for (const capitalizedProperty in summaryCapitalizeObject) {\n      if (summaryCapitalizeObject.hasOwnProperty(capitalizedProperty)) {\n        if (summaryCapitalizeObject.hasOwnProperty(capitalizedProperty)) {\n          const capitalizedPropertyObject =\n            summaryCapitalizeObject[capitalizedProperty];\n          if (capitalizedPropertyObject.length === 1) {\n            // for single params (no duplicates)\n            const singlePossibility = capitalizedPropertyObject[0];\n            capitalizeObject[capitalizedProperty] =\n              singlePossibility[Object.keys(singlePossibility)[0]];\n          } else if (capitalizedPropertyObject.length > 1) {\n            // defining the closest to lowercase property\n            const paramClosestToLowercase = upperCaseCount\n              .filter(\n                f => f.key.toLowerCase() === capitalizedProperty.toLowerCase()\n              )\n              .reduce((prev, current) => {\n                return prev.y < current.y ? prev : current;\n              });\n            capitalizeObject[paramClosestToLowercase.key.toUpperCase()] =\n              obj[paramClosestToLowercase.key];\n          }\n        }\n      }\n    }\n    for (const property in obj) {\n      if (obj.hasOwnProperty(property)) {\n        delete obj[property];\n      }\n    }\n\n    for (const property in capitalizeObject) {\n      if (capitalizeObject.hasOwnProperty(property)) {\n        obj[property] = capitalizeObject[property];\n      }\n    }\n  }\n\n  static removeUndefined(obj: object): any {\n    const output = {};\n    if (ObjectUtils.isObject(obj)) {\n      Object.keys(obj)\n        .filter(key => obj[key] !== undefined)\n        .forEach(key => {\n          if (ObjectUtils.isObject(obj[key]) || Array.isArray(obj[key])) {\n            output[key] = ObjectUtils.removeUndefined(obj[key]);\n          } else {\n            output[key] = obj[key];\n          }\n        });\n\n      return output;\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(o => ObjectUtils.removeUndefined(o));\n    }\n\n    return obj;\n  }\n\n  static removeNull(obj: object): any {\n    const output = {};\n    if (ObjectUtils.isObject(obj)) {\n      Object.keys(obj)\n        .filter(key => obj[key] !== null)\n        .forEach(key => {\n          if (ObjectUtils.isObject(obj[key]) || Array.isArray(obj[key])) {\n            output[key] = ObjectUtils.removeNull(obj[key]);\n          } else {\n            output[key] = obj[key];\n          }\n        });\n\n      return output;\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(o => ObjectUtils.removeNull(o));\n    }\n\n    return obj;\n  }\n\n  static naturalCompare(a, b, direction = 'asc', nullsFirst?: boolean) {\n    if (direction === 'desc') {\n      b = [a, (a = b)][0];\n    }\n\n    // nullsFirst = undefined : end if direction = 'asc', first if direction = 'desc'\n    // nullsFirst = true : always first\n    // nullsFirst = false : always end\n    if (\n      a === null ||\n      a === '' ||\n      a === undefined ||\n      b === null ||\n      b === '' ||\n      b === undefined\n    ) {\n      const nullScore =\n        a === b\n          ? 0\n          : a === undefined\n          ? 3\n          : b === undefined\n          ? -3\n          : a === null\n          ? 2\n          : b === null\n          ? -2\n          : a === ''\n          ? 1\n          : -1;\n      if (direction === 'desc') {\n        return nullsFirst !== false ? nullScore : nullScore * -1;\n      }\n      return nullsFirst === true ? nullScore * -1 : nullScore;\n    }\n\n    const ax = [];\n    const bx = [];\n    a = '' + a;\n    b = '' + b;\n\n    a.replace(/(\\d+)|(\\D+)/g, (_, $1, $2) => {\n      ax.push([$1 || Infinity, $2 || '']);\n    });\n\n    b.replace(/(\\d+)|(\\D+)/g, (_, $1, $2) => {\n      bx.push([$1 || Infinity, $2 || '']);\n    });\n\n    while (ax.length && bx.length) {\n      const an = ax.shift();\n      const bn = bx.shift();\n      const nn = an[0] - bn[0] || an[1].localeCompare(bn[1]);\n      if (nn) {\n        return nn;\n      }\n    }\n\n    return ax.length - bx.length;\n  }\n\n  /**\n   * Return true if two object are equivalent.\n   * Objects are considered equivalent if they have the same properties and\n   * if all of their properties (first-level only) share the same value.\n   * @param obj1 First object\n   * @param obj2 Second object\n   * @returns Whether two objects arer equivalent\n   */\n  static objectsAreEquivalent(obj1: object, obj2: object): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n\n    const obj1Props = Object.getOwnPropertyNames(obj1);\n    const obj2Props = Object.getOwnPropertyNames(obj2);\n    if (obj1Props.length !== obj2Props.length) {\n      return false;\n    }\n\n    for (const prop of obj1Props) {\n      if (obj1[prop] !== obj2[prop]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Return a new object with an array of keys removed\n   * @param obj Source object\n   * @param keys Keys to remove\n   * @returns A new object\n   */\n  static removeKeys(obj: object, keys: string[]): object {\n    const newObj = Object.keys(obj)\n      .filter(key => keys.indexOf(key) < 0)\n      .reduce((_obj, key) => {\n        _obj[key] = obj[key];\n        return _obj;\n      }, {});\n\n    return newObj;\n  }\n}\n","export class NumberUtils {\n    static roundToNDecimal(num: number, decimal: number = 3): number {\n        const roundFactor = Math.pow(10, decimal);\n        return Math.round((num) * roundFactor) / roundFactor;\n    }\n}\n","/** Utility function to create a K:V from a list of strings */\nexport function strEnum<T extends string>(o: Array<T>): { [K in T]: K } {\n  return o.reduce((res, key) => {\n    res[key] = key;\n    return res;\n  }, Object.create(null));\n}\n","export function S4() {\n  // eslint-disable-next-line no-bitwise\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\nexport function uuid() {\n  const id = `${S4()}${S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`;\n  return id.toLowerCase();\n}\n","import { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nexport enum SubjectStatus {\n  Error = 0,\n  Done = 1,\n  Working = 2,\n  Waiting = 3\n}\n\nexport abstract class Watcher {\n  public status$ = new Subject<SubjectStatus>();\n  protected status$$: Subscription;\n\n  get status(): SubjectStatus {\n    return this._status;\n  }\n  set status(value: SubjectStatus) {\n    this._status = value;\n    this.status$.next(value);\n  }\n  private _status: SubjectStatus;\n\n  protected abstract watch();\n\n  protected abstract unwatch();\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  subscribe(callback: Function, scope?: any) {\n    this.watch();\n\n    this.status$$ = this.status$\n      .pipe(distinctUntilChanged())\n      .subscribe((status: SubjectStatus) => {\n        this.handleStatusChange(status);\n        callback.call(scope, this);\n      });\n  }\n\n  unsubscribe() {\n    this.unwatch();\n    if (this.status$$ !== undefined) {\n      this.status$$.unsubscribe();\n      this.status$$ = undefined;\n    }\n    this.status = SubjectStatus.Waiting;\n  }\n\n  protected handleStatusChange(status: SubjectStatus) {}\n}\n","/*\n * Public API Surface of utils\n */\n\nexport * from './lib';\n"]},"metadata":{},"sourceType":"module"}