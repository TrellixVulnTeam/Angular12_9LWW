{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/WFS\n */\n\n\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport { XML_SCHEMA_INSTANCE_URI, createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { and as andFilterFn, bbox as bboxFilterFn } from './filter.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { readNonNegativeIntegerString, readPositiveInteger, writeStringTextNode } from './xsd.js';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds')\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\n\nvar FEATURE_PREFIX = 'feature';\n/**\n * @type {string}\n */\n\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n/**\n * @type {Object<string, string>}\n */\n\nvar OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc'\n};\n/**\n * @type {Object<string, string>}\n */\n\nvar WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs'\n};\n/**\n * @type {Object<string, string>}\n */\n\nvar FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes'\n};\n/**\n * @type {Object<string, string>}\n */\n\nvar SCHEMA_LOCATIONS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n/**\n * @type {Object<string, object>}\n */\n\nvar GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2\n};\n/**\n * @const\n * @type {string}\n */\n\nvar DEFAULT_VERSION = '1.1.0';\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\n\nvar WFS = function (_super) {\n  __extends(WFS, _super);\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n\n\n  function WFS(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.version_ = options.version ? options.version : DEFAULT_VERSION;\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n\n    _this.featureType_ = options.featureType;\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n\n    _this.featureNS_ = options.featureNS;\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n\n    _this.gmlFormat_ = options.gmlFormat ? options.gmlFormat : new GML_FORMATS[_this.version_]();\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.schemaLocation_ = options.schemaLocation ? options.schemaLocation : SCHEMA_LOCATIONS[_this.version_];\n    return _this;\n  }\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n\n\n  WFS.prototype.getFeatureType = function () {\n    return this.featureType_;\n  };\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n\n\n  WFS.prototype.setFeatureType = function (featureType) {\n    this.featureType_ = featureType;\n  };\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    var objectStack = [context];\n    var featuresNS;\n\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n\n    var features = pushParseAndPop([], featuresNS, node, objectStack, this.gmlFormat_);\n\n    if (!features) {\n      features = [];\n    }\n\n    return features;\n  };\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n\n\n  WFS.prototype.readTransactionResponse = function (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(source);\n    } else {\n      return this.readTransactionResponseFromNode(source);\n    }\n  };\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n\n\n  WFS.prototype.readFeatureCollectionMetadata = function (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(source);\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(source);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n\n\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(n);\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n\n\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\n    var result = {};\n    var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(result, FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n\n\n  WFS.prototype.readTransactionResponseFromDocument = function (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(n);\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n\n\n  WFS.prototype.readTransactionResponseFromNode = function (node) {\n    return pushParseAndPop({}, TRANSACTION_RESPONSE_PARSERS, node, []);\n  };\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n\n\n  WFS.prototype.writeGetFeature = function (options) {\n    var _this = this;\n\n    var node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n\n    if (typeof options.featureTypes[0] === 'string') {\n      var filter = options.filter;\n\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n\n        filter = this.combineBboxAndFilter(options.geometryName, options.bbox, options.srsName, filter);\n      }\n\n      assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter\n      });\n      writeGetFeature(node, options.featureTypes, [context]);\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach(function (\n      /** @type {FeatureType} */\n      featureType) {\n        var completeFilter = _this.combineBboxAndFilter(featureType.geometryName, featureType.bbox, options.srsName, options.filter);\n\n        assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n\n    return node;\n  };\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [opt_srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [opt_filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n\n\n  WFS.prototype.combineBboxAndFilter = function (geometryName, extent, opt_srsName, opt_filter) {\n    var bboxFilter = bboxFilterFn(geometryName, extent, opt_srsName);\n\n    if (opt_filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(opt_filter, bboxFilter);\n    }\n\n    return bboxFilter;\n  };\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n\n\n  WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\n    var objectStack = [];\n    var version = options.version ? options.version : this.version_;\n    var node = createElementNS(WFSNS[version], 'Transaction');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    var baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATIONS[version]);\n    var request = createTransactionRequest(node, baseObj, version, options);\n\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n\n    if (options.nativeElements) {\n      serializeTransactionRequest('Native', options.nativeElements, objectStack, request);\n    }\n\n    return node;\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n\n\n  WFS.prototype.readProjectionFromDocument = function (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(n);\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n\n\n  WFS.prototype.readProjectionFromNode = function (node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 || n.childNodes.length === 1 && n.firstChild.nodeType === 3)) {\n          var objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  return WFS;\n}(XMLFeature);\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\n\n\nfunction createTransactionRequest(node, baseObj, version, options) {\n  var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n  var gmlVersion;\n\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n\n  var obj = assign({\n    node: node\n  }, {\n    version: version,\n    'featureNS': options.featureNS,\n    'featureType': options.featureType,\n    'featurePrefix': featurePrefix,\n    'gmlVersion': gmlVersion,\n    'hasZ': options.hasZ,\n    'srsName': options.srsName\n  }, baseObj);\n  return obj;\n}\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\n\n\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(request, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory(type), features, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\n\n\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser\n  }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\n\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var ns = OGCNS[version];\n  var filter = createElementNS(ns, 'Filter');\n  var child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n}\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\n\n\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':'; // The featureType already contains the prefix.\n\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n\n  var version = context['version'];\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n\n      if (value !== undefined) {\n        var name_1 = keys[i];\n\n        if (value && typeof\n        /** @type {?} */\n        value.getSimplifiedGeometry === 'function') {\n          name_1 = geometryName;\n        }\n\n        values.push({\n          name: name_1,\n          value: value\n        });\n      }\n    }\n\n    pushSerializeAndPop({\n      version: version,\n      'gmlVersion': context['gmlVersion'],\n      node: node,\n      'hasZ': context['hasZ'],\n      'srsName': context['srsName']\n    }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeProperty(node, pair, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var ns = WFSNS[version];\n  var name = createElementNS(ns, 'Name');\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n\n    if (pair.value && typeof\n    /** @type {?} */\n    pair.value.getSimplifiedGeometry === 'function') {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\n\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\n\nfunction writeQuery(node, featureType, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName; // If feature prefix is not defined, we must not use the default prefix.\n\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n\n  var typeNameAttr;\n\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n\n  node.setAttribute(typeNameAttr, typeName);\n\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n\n  var item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n  var filter = context['filter'];\n\n  if (filter) {\n    var child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeFilterCondition(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n\n  var item = {\n    node: node\n  };\n  assign(item, {\n    context: context\n  });\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeBboxFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  parent['srsName'] = filter.srsName;\n  var format = GML_FORMATS[version];\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', filter.rid);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeSpatialFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  parent['srsName'] = filter.srsName;\n  var format = GML_FORMATS[version];\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeDWithinFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  var distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n\n  node.appendChild(distance);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeDuringFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n  node.appendChild(timePeriod);\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeLogicalFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n\n  var item = {\n    node: node\n  };\n  assign(item, {\n    context: context\n  });\n  var conditions = filter.conditions;\n\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeNotFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n\n  var item = {\n    node: node\n  };\n  assign(item, {\n    context: context\n  });\n  var condition = filter.condition;\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeComparisonFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeIsNullFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  var ns = getFilterNS(version);\n  writePropertyName(version, node, filter.propertyName);\n  var lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n  var upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  var parent = objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\n\n\nfunction writeExpression(ns, tagName, node, value) {\n  var property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\n\n\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\n\n\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\n\n\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} opt_version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\n\n\nexport function writeFilter(filter, opt_version) {\n  var version = opt_version || '1.1.0';\n  var child = createElementNS(getFilterNS(version), 'Filter');\n  var context = {\n    node: child\n  };\n  assign(context, {\n    'version': version,\n    'filter': filter\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\n\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\n\nfunction getFilterNS(version) {\n  var ns;\n\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n\n  return ns;\n}\n\nexport default WFS;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/format/WFS.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","GML2","GML3","GML32","GMLBase","GMLNS","XMLFeature","XML_SCHEMA_INSTANCE_URI","createElementNS","isDocument","makeArrayPusher","makeChildAppender","makeObjectPropertySetter","makeSimpleNodeFactory","parse","parseNode","pushParseAndPop","pushSerializeAndPop","and","andFilterFn","bbox","bboxFilterFn","assert","assign","get","getProjection","readNonNegativeIntegerString","readPositiveInteger","writeStringTextNode","FEATURE_COLLECTION_PARSERS","readGeometryElement","readFeaturesInternal","TRANSACTION_SUMMARY_PARSERS","TRANSACTION_RESPONSE_PARSERS","readTransactionSummary","readInsertResults","QUERY_SERIALIZERS","TRANSACTION_SERIALIZERS","writeFeature","writeUpdate","writeDelete","writeProperty","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","DEFAULT_VERSION","WFS","_super","opt_options","_this","options","version_","version","featureType_","featureType","featureNS_","featureNS","gmlFormat_","gmlFormat","schemaLocation_","schemaLocation","getFeatureType","setFeatureType","readFeaturesFromNode","node","context","getReadOptions","objectStack","featuresNS","features","readTransactionResponse","source","undefined","doc","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","result","value","getAttribute","writeGetFeature","setAttribute","handle","outputFormat","maxFeatures","resultType","startIndex","count","viewParams","setAttributeNS","srsName","featurePrefix","propertyNames","isArray","featureTypes","filter","geometryName","combineBboxAndFilter","forEach","completeFilter","name","extent","opt_srsName","opt_filter","bboxFilter","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","request","createTransactionRequest","serializeTransactionRequest","nativeElements","readProjectionFromDocument","readProjectionFromNode","firstElementChild","nextElementSibling","childNodes","length","pop","gmlVersion","obj","hasZ","type","OGC_FID_PARSERS","fidParser","INSERT_RESULTS_PARSERS","feature","child","appendChild","writeFeatureElement","writeOgcFidFilter","fid","ns","getTypeName","prefix","indexOf","getId","typeName","getGeometryName","keys","getKeys","values","i","ii","name_1","getSimplifiedGeometry","push","pair","writeGeometryElement","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","writeQuery","writeDuringFilter","writeLogicalFilter","writeNotFilter","writeBboxFilter","writeSpatialFilter","writeDWithinFilter","writeComparisonFilter","writeIsNullFilter","writeIsBetweenFilter","writeIsLikeFilter","writeResourceIdFilter","typeNameAttr","item","getFilterNS","writeFilterCondition","getTagName","parent","format","writePropertyName","rid","geometry","distance","toString","unit","writeExpression","propertyName","timePeriod","begin","writeTimeInstant","end","conditions","condition","matchCase","writeLiteral","expression","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","pattern","tagName","property","time","timeInstant","timePosition","writeFilter","opt_version"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport { XML_SCHEMA_INSTANCE_URI, createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop, } from '../xml.js';\nimport { and as andFilterFn, bbox as bboxFilterFn } from './filter.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { readNonNegativeIntegerString, readPositiveInteger, writeStringTextNode, } from './xsd.js';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds'),\n    },\n    'http://www.opengis.net/wfs/2.0': {\n        'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n        'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n        'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n    },\n    'http://www.opengis.net/wfs/2.0': {\n        'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n        'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n        'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n        'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n    },\n    'http://www.opengis.net/wfs/2.0': {\n        'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n        'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n    },\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'PropertyName': makeChildAppender(writeStringTextNode),\n    },\n    'http://www.opengis.net/wfs/2.0': {\n        'PropertyName': makeChildAppender(writeStringTextNode),\n    },\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Insert': makeChildAppender(writeFeature),\n        'Update': makeChildAppender(writeUpdate),\n        'Delete': makeChildAppender(writeDelete),\n        'Property': makeChildAppender(writeProperty),\n        'Native': makeChildAppender(writeNative),\n    },\n    'http://www.opengis.net/wfs/2.0': {\n        'Insert': makeChildAppender(writeFeature),\n        'Update': makeChildAppender(writeUpdate),\n        'Delete': makeChildAppender(writeDelete),\n        'Property': makeChildAppender(writeProperty),\n        'Native': makeChildAppender(writeNative),\n    },\n};\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n/**\n * @type {Object<string, string>}\n */\nvar OGCNS = {\n    '2.0.0': 'http://www.opengis.net/ogc/1.1',\n    '1.1.0': 'http://www.opengis.net/ogc',\n    '1.0.0': 'http://www.opengis.net/ogc',\n};\n/**\n * @type {Object<string, string>}\n */\nvar WFSNS = {\n    '2.0.0': 'http://www.opengis.net/wfs/2.0',\n    '1.1.0': 'http://www.opengis.net/wfs',\n    '1.0.0': 'http://www.opengis.net/wfs',\n};\n/**\n * @type {Object<string, string>}\n */\nvar FESNS = {\n    '2.0.0': 'http://www.opengis.net/fes/2.0',\n    '1.1.0': 'http://www.opengis.net/fes',\n    '1.0.0': 'http://www.opengis.net/fes',\n};\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n    '2.0.0': 'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n    '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n    '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n/**\n * @type {Object<string, object>}\n */\nvar GML_FORMATS = {\n    '2.0.0': GML32,\n    '1.1.0': GML3,\n    '1.0.0': GML2,\n};\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /** @class */ (function (_super) {\n    __extends(WFS, _super);\n    /**\n     * @param {Options} [opt_options] Optional configuration object.\n     */\n    function WFS(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version ? options.version : DEFAULT_VERSION;\n        /**\n         * @private\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType_ = options.featureType;\n        /**\n         * @private\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS_ = options.featureNS;\n        /**\n         * @private\n         * @type {GMLBase}\n         */\n        _this.gmlFormat_ = options.gmlFormat\n            ? options.gmlFormat\n            : new GML_FORMATS[_this.version_]();\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.schemaLocation_ = options.schemaLocation\n            ? options.schemaLocation\n            : SCHEMA_LOCATIONS[_this.version_];\n        return _this;\n    }\n    /**\n     * @return {Array<string>|string|undefined} featureType\n     */\n    WFS.prototype.getFeatureType = function () {\n        return this.featureType_;\n    };\n    /**\n     * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n     */\n    WFS.prototype.setFeatureType = function (featureType) {\n        this.featureType_ = featureType;\n    };\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node,\n        };\n        assign(context, {\n            'featureType': this.featureType_,\n            'featureNS': this.featureNS_,\n        });\n        assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n        var objectStack = [context];\n        var featuresNS;\n        if (this.version_ === '2.0.0') {\n            featuresNS = FEATURE_COLLECTION_PARSERS;\n        }\n        else {\n            featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n        }\n        var features = pushParseAndPop([], featuresNS, node, objectStack, this.gmlFormat_);\n        if (!features) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * Read transaction response of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {TransactionResponse|undefined} Transaction response.\n     * @api\n     */\n    WFS.prototype.readTransactionResponse = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readTransactionResponseFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readTransactionResponseFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readTransactionResponseFromNode(\n            /** @type {Element} */ (source));\n        }\n    };\n    /**\n     * Read feature collection metadata of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     * @api\n     */\n    WFS.prototype.readFeatureCollectionMetadata = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureCollectionMetadataFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureCollectionMetadataFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readFeatureCollectionMetadataFromNode(\n            /** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFeatureCollectionMetadataFromNode(\n                /** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\n        var result = {};\n        var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n        result['numberOfFeatures'] = value;\n        return pushParseAndPop(\n        /** @type {FeatureCollectionMetadata} */ (result), FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromNode = function (node) {\n        return pushParseAndPop(\n        /** @type {TransactionResponse} */ ({}), TRANSACTION_RESPONSE_PARSERS, node, []);\n    };\n    /**\n     * Encode format as WFS `GetFeature` and return the Node.\n     *\n     * @param {WriteGetFeatureOptions} options Options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeGetFeature = function (options) {\n        var _this = this;\n        var node = createElementNS(WFSNS[this.version_], 'GetFeature');\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', this.version_);\n        if (options.handle) {\n            node.setAttribute('handle', options.handle);\n        }\n        if (options.outputFormat) {\n            node.setAttribute('outputFormat', options.outputFormat);\n        }\n        if (options.maxFeatures !== undefined) {\n            node.setAttribute('maxFeatures', String(options.maxFeatures));\n        }\n        if (options.resultType) {\n            node.setAttribute('resultType', options.resultType);\n        }\n        if (options.startIndex !== undefined) {\n            node.setAttribute('startIndex', String(options.startIndex));\n        }\n        if (options.count !== undefined) {\n            node.setAttribute('count', String(options.count));\n        }\n        if (options.viewParams !== undefined) {\n            node.setAttribute('viewParams', options.viewParams);\n        }\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node,\n        };\n        assign(context, {\n            'version': this.version_,\n            'srsName': options.srsName,\n            'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n            'featurePrefix': options.featurePrefix,\n            'propertyNames': options.propertyNames ? options.propertyNames : [],\n        });\n        assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n        if (typeof options.featureTypes[0] === 'string') {\n            var filter = options.filter;\n            if (options.bbox) {\n                assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n                filter = this.combineBboxAndFilter(options.geometryName, options.bbox, options.srsName, filter);\n            }\n            assign(context, {\n                'geometryName': options.geometryName,\n                'filter': filter,\n            });\n            writeGetFeature(node, \n            /** @type {!Array<string>} */ (options.featureTypes), [context]);\n        }\n        else {\n            // Write one query node per element in featuresType.\n            options.featureTypes.forEach(function (/** @type {FeatureType} */ featureType) {\n                var completeFilter = _this.combineBboxAndFilter(featureType.geometryName, featureType.bbox, options.srsName, options.filter);\n                assign(context, {\n                    'geometryName': featureType.geometryName,\n                    'filter': completeFilter,\n                });\n                writeGetFeature(node, [featureType.name], [context]);\n            });\n        }\n        return node;\n    };\n    /**\n     * Create a bbox filter and combine it with another optional filter.\n     *\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../extent.js\").Extent} extent Extent.\n     * @param {string} [opt_srsName] SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     * @param {import(\"./filter/Filter.js\").default} [opt_filter] Filter condition.\n     * @return {import(\"./filter/Filter.js\").default} The filter.\n     */\n    WFS.prototype.combineBboxAndFilter = function (geometryName, extent, opt_srsName, opt_filter) {\n        var bboxFilter = bboxFilterFn(geometryName, extent, opt_srsName);\n        if (opt_filter) {\n            // if bbox and filter are both set, combine the two into a single filter\n            return andFilterFn(opt_filter, bboxFilter);\n        }\n        return bboxFilter;\n    };\n    /**\n     * Encode format as WFS `Transaction` and return the Node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n     * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n     * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n     * @param {WriteTransactionOptions} options Write options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\n        var objectStack = [];\n        var version = options.version ? options.version : this.version_;\n        var node = createElementNS(WFSNS[version], 'Transaction');\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', version);\n        var baseObj;\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        if (options) {\n            baseObj = options.gmlOptions ? options.gmlOptions : {};\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n        }\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATIONS[version]);\n        var request = createTransactionRequest(node, baseObj, version, options);\n        if (inserts) {\n            serializeTransactionRequest('Insert', inserts, objectStack, request);\n        }\n        if (updates) {\n            serializeTransactionRequest('Update', updates, objectStack, request);\n        }\n        if (deletes) {\n            serializeTransactionRequest('Delete', deletes, objectStack, request);\n        }\n        if (options.nativeElements) {\n            serializeTransactionRequest('Native', options.nativeElements, objectStack, request);\n        }\n        return node;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    WFS.prototype.readProjectionFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readProjectionFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    WFS.prototype.readProjectionFromNode = function (node) {\n        if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n            node = node.firstElementChild.firstElementChild;\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                if (!(n.childNodes.length === 0 ||\n                    (n.childNodes.length === 1 && n.firstChild.nodeType === 3))) {\n                    var objectStack = [{}];\n                    this.gmlFormat_.readGeometryElement(n, objectStack);\n                    return getProjection(objectStack.pop().srsName);\n                }\n            }\n        }\n        return null;\n    };\n    return WFS;\n}(XMLFeature));\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n    var featurePrefix = options.featurePrefix\n        ? options.featurePrefix\n        : FEATURE_PREFIX;\n    var gmlVersion;\n    if (version === '1.0.0') {\n        gmlVersion = 2;\n    }\n    else if (version === '1.1.0') {\n        gmlVersion = 3;\n    }\n    else if (version === '2.0.0') {\n        gmlVersion = 3.2;\n    }\n    var obj = assign({ node: node }, {\n        version: version,\n        'featureNS': options.featureNS,\n        'featureType': options.featureType,\n        'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion,\n        'hasZ': options.hasZ,\n        'srsName': options.srsName,\n    }, baseObj);\n    return obj;\n}\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n    pushSerializeAndPop(request, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory(type), features, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n    return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n    'http://www.opengis.net/ogc': {\n        'FeatureId': makeArrayPusher(function (node, objectStack) {\n            return node.getAttribute('fid');\n        }),\n    },\n    'http://www.opengis.net/ogc/1.1': {\n        'FeatureId': makeArrayPusher(function (node, objectStack) {\n            return node.getAttribute('fid');\n        }),\n    },\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n    parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'Feature': fidParser,\n    },\n    'http://www.opengis.net/wfs/2.0': {\n        'Feature': fidParser,\n    },\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n    return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var gmlVersion = context['gmlVersion'];\n    var child = createElementNS(featureNS, featureType);\n    node.appendChild(child);\n    if (gmlVersion === 2) {\n        GML2.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n    else if (gmlVersion === 3) {\n        GML3.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n    else {\n        GML32.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var version = context['version'];\n    var ns = OGCNS[version];\n    var filter = createElementNS(ns, 'Filter');\n    var child = createElementNS(ns, 'FeatureId');\n    filter.appendChild(child);\n    child.setAttribute('fid', /** @type {string} */ (fid));\n    node.appendChild(filter);\n}\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n    featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n    var prefix = featurePrefix + ':';\n    // The featureType already contains the prefix.\n    if (featureType.indexOf(prefix) === 0) {\n        return featureType;\n    }\n    else {\n        return prefix + featureType;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 26); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 27); // Features must have an id set\n    var version = context['version'];\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    var geometryName = feature.getGeometryName();\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        var keys = feature.getKeys();\n        var values = [];\n        for (var i = 0, ii = keys.length; i < ii; i++) {\n            var value = feature.get(keys[i]);\n            if (value !== undefined) {\n                var name_1 = keys[i];\n                if (value &&\n                    typeof ( /** @type {?} */(value).getSimplifiedGeometry) === 'function') {\n                    name_1 = geometryName;\n                }\n                values.push({ name: name_1, value: value });\n            }\n        }\n        pushSerializeAndPop(\n        /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n            version: version,\n            'gmlVersion': context['gmlVersion'],\n            node: node,\n            'hasZ': context['hasZ'],\n            'srsName': context['srsName'],\n        }), TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var version = context['version'];\n    var ns = WFSNS[version];\n    var name = createElementNS(ns, 'Name');\n    var gmlVersion = context['gmlVersion'];\n    node.appendChild(name);\n    writeStringTextNode(name, pair.name);\n    if (pair.value !== undefined && pair.value !== null) {\n        var value = createElementNS(ns, 'Value');\n        node.appendChild(value);\n        if (pair.value &&\n            typeof ( /** @type {?} */(pair.value).getSimplifiedGeometry) ===\n                'function') {\n            if (gmlVersion === 2) {\n                GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n            else if (gmlVersion === 3) {\n                GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n            else {\n                GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n        }\n        else {\n            writeStringTextNode(value, pair.value);\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n    if (nativeElement.vendorId) {\n        node.setAttribute('vendorId', nativeElement.vendorId);\n    }\n    if (nativeElement.safeToIgnore !== undefined) {\n        node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n    }\n    if (nativeElement.value !== undefined) {\n        writeStringTextNode(node, nativeElement.value);\n    }\n}\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Query': makeChildAppender(writeQuery),\n    },\n    'http://www.opengis.net/wfs/2.0': {\n        'Query': makeChildAppender(writeQuery),\n    },\n    'http://www.opengis.net/ogc': {\n        'During': makeChildAppender(writeDuringFilter),\n        'And': makeChildAppender(writeLogicalFilter),\n        'Or': makeChildAppender(writeLogicalFilter),\n        'Not': makeChildAppender(writeNotFilter),\n        'BBOX': makeChildAppender(writeBboxFilter),\n        'Contains': makeChildAppender(writeSpatialFilter),\n        'Intersects': makeChildAppender(writeSpatialFilter),\n        'Within': makeChildAppender(writeSpatialFilter),\n        'DWithin': makeChildAppender(writeDWithinFilter),\n        'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n        'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n        'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n    },\n    'http://www.opengis.net/fes/2.0': {\n        'During': makeChildAppender(writeDuringFilter),\n        'And': makeChildAppender(writeLogicalFilter),\n        'Or': makeChildAppender(writeLogicalFilter),\n        'Not': makeChildAppender(writeNotFilter),\n        'BBOX': makeChildAppender(writeBboxFilter),\n        'Contains': makeChildAppender(writeSpatialFilter),\n        'Disjoint': makeChildAppender(writeSpatialFilter),\n        'Intersects': makeChildAppender(writeSpatialFilter),\n        'ResourceId': makeChildAppender(writeResourceIdFilter),\n        'Within': makeChildAppender(writeSpatialFilter),\n        'DWithin': makeChildAppender(writeDWithinFilter),\n        'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n        'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n        'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n    },\n};\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var version = context['version'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var propertyNames = context['propertyNames'];\n    var srsName = context['srsName'];\n    var typeName;\n    // If feature prefix is not defined, we must not use the default prefix.\n    if (featurePrefix) {\n        typeName = getTypeName(featurePrefix, featureType);\n    }\n    else {\n        typeName = featureType;\n    }\n    var typeNameAttr;\n    if (version === '2.0.0') {\n        typeNameAttr = 'typeNames';\n    }\n    else {\n        typeNameAttr = 'typeName';\n    }\n    node.setAttribute(typeNameAttr, typeName);\n    if (srsName) {\n        node.setAttribute('srsName', srsName);\n    }\n    if (featureNS) {\n        node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    }\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n    var filter = context['filter'];\n    if (filter) {\n        var child = createElementNS(getFilterNS(version), 'Filter');\n        node.appendChild(child);\n        writeFilterCondition(child, filter, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    assign(item, { context: context });\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    var version = context['version'];\n    parent['srsName'] = filter.srsName;\n    var format = GML_FORMATS[version];\n    writePropertyName(version, node, filter.geometryName);\n    format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n    node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    var version = context['version'];\n    parent['srsName'] = filter.srsName;\n    var format = GML_FORMATS[version];\n    writePropertyName(version, node, filter.geometryName);\n    format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    var version = context['version'];\n    writeSpatialFilter(node, filter, objectStack);\n    var distance = createElementNS(getFilterNS(version), 'Distance');\n    writeStringTextNode(distance, filter.distance.toString());\n    if (version === '2.0.0') {\n        distance.setAttribute('uom', filter.unit);\n    }\n    else {\n        distance.setAttribute('units', filter.unit);\n    }\n    node.appendChild(distance);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    var version = context['version'];\n    writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n    var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n    node.appendChild(timePeriod);\n    var begin = createElementNS(GMLNS, 'begin');\n    timePeriod.appendChild(begin);\n    writeTimeInstant(begin, filter.begin);\n    var end = createElementNS(GMLNS, 'end');\n    timePeriod.appendChild(end);\n    writeTimeInstant(end, filter.end);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    assign(item, { context: context });\n    var conditions = filter.conditions;\n    for (var i = 0, ii = conditions.length; i < ii; ++i) {\n        var condition = conditions[i];\n        pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    assign(item, { context: context });\n    var condition = filter.condition;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    var version = context['version'];\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writePropertyName(version, node, filter.propertyName);\n    writeLiteral(version, node, '' + filter.expression);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    var version = context['version'];\n    writePropertyName(version, node, filter.propertyName);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    var version = context['version'];\n    var ns = getFilterNS(version);\n    writePropertyName(version, node, filter.propertyName);\n    var lowerBoundary = createElementNS(ns, 'LowerBoundary');\n    node.appendChild(lowerBoundary);\n    writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n    var upperBoundary = createElementNS(ns, 'UpperBoundary');\n    node.appendChild(upperBoundary);\n    writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n    var parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var context = parent['context'];\n    var version = context['version'];\n    node.setAttribute('wildCard', filter.wildCard);\n    node.setAttribute('singleChar', filter.singleChar);\n    node.setAttribute('escapeChar', filter.escapeChar);\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writePropertyName(version, node, filter.propertyName);\n    writeLiteral(version, node, '' + filter.pattern);\n}\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n    var property = createElementNS(ns, tagName);\n    writeStringTextNode(property, value);\n    node.appendChild(property);\n}\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n    writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n    if (version === '2.0.0') {\n        writeExpression(FESNS[version], 'ValueReference', node, value);\n    }\n    else {\n        writeExpression(OGCNS[version], 'PropertyName', node, value);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n    var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n    node.appendChild(timeInstant);\n    var timePosition = createElementNS(GMLNS, 'timePosition');\n    timeInstant.appendChild(timePosition);\n    writeStringTextNode(timePosition, time);\n}\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} opt_version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, opt_version) {\n    var version = opt_version || '1.1.0';\n    var child = createElementNS(getFilterNS(version), 'Filter');\n    var context = {\n        node: child,\n    };\n    assign(context, {\n        'version': version,\n        'filter': filter,\n    });\n    writeFilterCondition(child, filter, [context]);\n    return child;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\nfunction getFilterNS(version) {\n    var ns;\n    if (version === '2.0.0') {\n        ns = FESNS[version];\n    }\n    else {\n        ns = OGCNS[version];\n    }\n    return ns;\n}\nexport default WFS;\n"]},"metadata":{},"sourceType":"module"}