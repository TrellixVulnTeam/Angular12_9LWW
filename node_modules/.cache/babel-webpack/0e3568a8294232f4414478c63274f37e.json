{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { LanguageService } from '@igo2/core';\nimport { FormService } from '@igo2/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@igo2/common\";\nimport * as i2 from \"@igo2/core\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\n\nfunction AppFormComponent_igo_form_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-form\", 2);\n    i0.ɵɵlistener(\"submitForm\", function AppFormComponent_igo_form_9_Template_igo_form_submitForm_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onSubmit($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelement(2, \"igo-form-group\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppFormComponent_igo_form_9_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.fillForm();\n    });\n    i0.ɵɵtext(5, \" Fill Form \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppFormComponent_igo_form_9_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.clearForm();\n    });\n    i0.ɵɵtext(7, \" Clear Form \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 6);\n    i0.ɵɵtext(9, \" Submit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const form_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", form_r1)(\"formData\", i0.ɵɵpipeBind1(1, 4, ctx_r0.data$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"group\", form_r1.groups[0]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.submitDisabled);\n  }\n}\n\nexport let AppFormComponent = /*#__PURE__*/(() => {\n  class AppFormComponent {\n    constructor(formService, languageService) {\n      this.formService = formService;\n      this.languageService = languageService;\n      this.form$ = new BehaviorSubject(undefined);\n      this.data$ = new BehaviorSubject(undefined);\n      this.submitDisabled = true;\n    }\n\n    ngOnInit() {\n      const fieldConfigs = [{\n        name: 'id',\n        title: 'ID',\n        options: {\n          cols: 1,\n          validator: Validators.required\n        }\n      }, {\n        name: 'name',\n        title: 'Name',\n        options: {\n          cols: 1,\n          validator: Validators.required\n        }\n      }, {\n        name: 'status',\n        title: 'Status',\n        type: 'select',\n        options: {\n          cols: 2\n        },\n        inputs: {\n          choices: [{\n            value: 1,\n            title: 'Single'\n          }, {\n            value: 2,\n            title: 'Married'\n          }]\n        }\n      }];\n      const fields = fieldConfigs.map(config => this.formService.field(config));\n      const form = this.formService.form([], [this.formService.group({\n        name: 'info'\n      }, fields)]);\n      this.valueChanges$$ = form.control.valueChanges.subscribe(() => {\n        this.submitDisabled = !form.control.valid;\n      });\n      this.form$.next(form);\n    }\n\n    ngOnDestroy() {\n      this.valueChanges$$.unsubscribe();\n    }\n\n    fillForm() {\n      this.data$.next({\n        id: 1,\n        name: 'Bob',\n        status: 2\n      });\n    }\n\n    clearForm() {\n      this.form$.value.control.reset();\n    }\n\n    onSubmit(data) {\n      alert(JSON.stringify(data));\n    }\n\n  }\n\n  AppFormComponent.ɵfac = function AppFormComponent_Factory(t) {\n    return new (t || AppFormComponent)(i0.ɵɵdirectiveInject(i1.FormService), i0.ɵɵdirectiveInject(i2.LanguageService));\n  };\n\n  AppFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppFormComponent,\n    selectors: [[\"app-form\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[\"href\", \"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/common/form\"], [3, \"form\", \"formData\", \"submitForm\", 4, \"ngIf\"], [3, \"form\", \"formData\", \"submitForm\"], [3, \"group\"], [\"formButtons\", \"\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", \"color\", \"primary\", 3, \"click\"], [\"mat-flat-button\", \"\", \"type\", \"submit\", \"color\", \"primary\", 3, \"disabled\"]],\n    template: function AppFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-subtitle\");\n        i0.ɵɵtext(2, \"Common\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵtext(6, \" See the \");\n        i0.ɵɵelementStart(7, \"a\", 0);\n        i0.ɵɵtext(8, \"code of this example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, AppFormComponent_igo_form_9_Template, 10, 6, \"igo-form\", 1);\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(10, 1, ctx.form$));\n      }\n    },\n    directives: [i3.MatCard, i3.MatCardSubtitle, i3.MatCardTitle, i3.MatCardContent, i4.NgIf, i1.FormComponent, i1.FormGroupComponent, i5.MatButton],\n    pipes: [i4.AsyncPipe],\n    styles: [\"pre[_ngcontent-%COMP%], code[_ngcontent-%COMP%] {\\n  font-family: monospace, monospace;\\n}\\n\\npre[_ngcontent-%COMP%] {\\n  overflow: auto;\\n}\\n\\npre[_ngcontent-%COMP%]    > code[_ngcontent-%COMP%] {\\n  display: block;\\n  padding: 1rem;\\n  word-wrap: normal;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsaUNBQUE7QUFDRjs7QUFDQTtFQUNFLGNBQUE7QUFFRjs7QUFBQTtFQUNFLGNBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7QUFHRiIsImZpbGUiOiJmb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsicHJlLFxuY29kZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbn1cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxucHJlID4gY29kZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAxcmVtO1xuICB3b3JkLXdyYXA6IG5vcm1hbDtcbn1cbiJdfQ== */\"]\n  });\n  return AppFormComponent;\n})();","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\common\\form\\form.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\common\\form\\form.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { LanguageService } from '@igo2/core';\nimport { Form, FormService } from '@igo2/common';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class AppFormComponent implements OnInit, OnDestroy {\n\n  form$ = new BehaviorSubject<Form>(undefined);\n\n  data$ = new BehaviorSubject<{[key: string]: any}>(undefined);\n\n  submitDisabled = true;\n\n  private valueChanges$$: Subscription;\n\n  constructor(\n    private formService: FormService,\n    private languageService: LanguageService\n  ) {}\n\n  ngOnInit() {\n    const fieldConfigs = [\n      {\n        name: 'id',\n        title: 'ID',\n        options:  {\n          cols: 1,\n          validator: Validators.required\n        }\n      },\n      {\n        name: 'name',\n        title: 'Name',\n        options:  {\n          cols: 1,\n          validator: Validators.required\n        }\n      },\n      {\n        name: 'status',\n        title: 'Status',\n        type: 'select',\n        options:  {\n          cols: 2\n        },\n        inputs: {\n          choices: [\n            {value: 1, title: 'Single'},\n            {value: 2, title: 'Married'}\n          ]\n        }\n      }\n    ];\n\n    const fields = fieldConfigs.map((config) => this.formService.field(config));\n    const form = this.formService.form([], [this.formService.group({name: 'info'}, fields)]);\n\n    this.valueChanges$$ = form.control.valueChanges.subscribe(() => {\n      this.submitDisabled = !form.control.valid;\n    });\n\n    this.form$.next(form);\n  }\n\n  ngOnDestroy() {\n    this.valueChanges$$.unsubscribe();\n  }\n\n  fillForm() {\n    this.data$.next({\n      id: 1,\n      name: 'Bob',\n      status: 2\n    });\n  }\n\n  clearForm() {\n    this.form$.value.control.reset();\n  }\n\n  onSubmit(data: {[key: string]: any}) {\n    alert(JSON.stringify(data));\n  }\n}\n","<mat-card>\n  <mat-card-subtitle>Common</mat-card-subtitle>\n  <mat-card-title>Form</mat-card-title>\n  <mat-card-content>\n    See the <a href=\"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/common/form\">code of this example</a>\n  </mat-card-content>\n\n  <igo-form\n    *ngIf=\"form$ | async as form\"\n    [form]=\"form\"\n    [formData]=\"data$ | async\"\n    (submitForm)=\"onSubmit($event)\">\n\n    <igo-form-group [group]=\"form.groups[0]\"></igo-form-group>\n\n    <div formButtons>\n      <button\n        mat-stroked-button\n        type=\"button\"\n        color=\"primary\"\n        (click)=\"fillForm()\">\n        Fill Form\n      </button>\n      <button\n        mat-stroked-button\n        type=\"button\"\n        color=\"primary\"\n        (click)=\"clearForm()\">\n        Clear Form\n      </button>\n      <button\n        mat-flat-button\n        type=\"submit\"\n        color=\"primary\"\n        [disabled]=\"submitDisabled\">\n        Submit\n      </button>\n    </div>\n  </igo-form>\n</mat-card>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}