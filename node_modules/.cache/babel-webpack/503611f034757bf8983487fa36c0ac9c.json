{"ast":null,"code":"import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token for the MatInkBar's Positioner. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\n\nconst _c1 = function (a0) {\n  return {\n    animationDuration: a0\n  };\n};\n\nconst _c2 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\n\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const tab_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n\n      const _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ctx_r11._handleClick(tab_r4, _r0, i_r5);\n    })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const i_r5 = restoredCtx.index;\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13._tabFocusChanged($event, i_r5);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16._removeTabBodyWrapperHeight();\n    })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18._setTabBodyWrapperHeight($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r15 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n  }\n}\n\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\n\nconst _MAT_INK_BAR_POSITIONER = /*#__PURE__*/new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\n\n\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n\n\nlet MatInkBar = /*#__PURE__*/(() => {\n  class MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      this._inkBarPositioner = _inkBarPositioner;\n      this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n\n\n    alignToElement(element) {\n      this.show();\n\n      if (typeof requestAnimationFrame !== 'undefined') {\n        this._ngZone.runOutsideAngular(() => {\n          requestAnimationFrame(() => this._setStyles(element));\n        });\n      } else {\n        this._setStyles(element);\n      }\n    }\n    /** Shows the ink bar. */\n\n\n    show() {\n      this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n\n\n    hide() {\n      this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n\n\n    _setStyles(element) {\n      const positions = this._inkBarPositioner(element);\n\n      const inkBar = this._elementRef.nativeElement;\n      inkBar.style.left = positions.left;\n      inkBar.style.width = positions.width;\n    }\n\n  }\n\n  MatInkBar.ɵfac = function MatInkBar_Factory(t) {\n    return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatInkBar.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatInkBar,\n    selectors: [[\"mat-ink-bar\"]],\n    hostAttrs: [1, \"mat-ink-bar\"],\n    hostVars: 2,\n    hostBindings: function MatInkBar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      }\n    }\n  });\n  return MatInkBar;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nconst MAT_TAB_CONTENT = /*#__PURE__*/new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\n\nlet MatTabContent = /*#__PURE__*/(() => {\n  class MatTabContent {\n    constructor(\n    /** Content for the tab. */\n    template) {\n      this.template = template;\n    }\n\n  }\n\n  MatTabContent.ɵfac = function MatTabContent_Factory(t) {\n    return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  MatTabContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabContent,\n    selectors: [[\"\", \"matTabContent\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_CONTENT,\n      useExisting: MatTabContent\n    }])]\n  });\n  return MatTabContent;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nconst MAT_TAB_LABEL = /*#__PURE__*/new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\n\nconst MAT_TAB = /*#__PURE__*/new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\n\nlet MatTabLabel = /*#__PURE__*/(() => {\n  class MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n      super(templateRef, viewContainerRef);\n      this._closestTab = _closestTab;\n    }\n\n  }\n\n  MatTabLabel.ɵfac = function MatTabLabel_Factory(t) {\n    return new (t || MatTabLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB, 8));\n  };\n\n  MatTabLabel.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabLabel,\n    selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_LABEL,\n      useExisting: MatTabLabel\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTabLabel;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n\n/** @docs-private */\n\n\nconst _MatTabBase = /*#__PURE__*/mixinDisabled(class {});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\n\n\nconst MAT_TAB_GROUP = /*#__PURE__*/new InjectionToken('MAT_TAB_GROUP');\nlet MatTab = /*#__PURE__*/(() => {\n  class MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n      super();\n      this._viewContainerRef = _viewContainerRef;\n      this._closestTabGroup = _closestTabGroup;\n      /** Plain text label for the tab, used when there is no template label. */\n\n      this.textLabel = '';\n      /** Portal that will be the hosted content of the tab */\n\n      this._contentPortal = null;\n      /** Emits whenever the internal state of the tab changes. */\n\n      this._stateChanges = new Subject();\n      /**\n       * The relatively indexed position where 0 represents the center, negative is left, and positive\n       * represents the right.\n       */\n\n      this.position = null;\n      /**\n       * The initial relatively index origin of the tab if it was created and selected after there\n       * was already a selected tab. Provides context of what position the tab should originate from.\n       */\n\n      this.origin = null;\n      /**\n       * Whether the tab is currently active.\n       */\n\n      this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n\n\n    get templateLabel() {\n      return this._templateLabel;\n    }\n\n    set templateLabel(value) {\n      this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n\n\n    get content() {\n      return this._contentPortal;\n    }\n\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n        this._stateChanges.next();\n      }\n    }\n\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n\n    ngOnInit() {\n      this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n\n\n    _setTemplateLabelInput(value) {\n      // Only update the label if the query managed to find one. This works around an issue where a\n      // user may have manually set `templateLabel` during creation mode, which would then get\n      // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n      // tab matches the current one so that we don't pick up labels from nested tabs.\n      if (value && value._closestTab === this) {\n        this._templateLabel = value;\n      }\n    }\n\n  }\n\n  MatTab.ɵfac = function MatTab_Factory(t) {\n    return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n  };\n\n  MatTab.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTab,\n    selectors: [[\"mat-tab\"]],\n    contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n      }\n    },\n    viewQuery: function MatTab_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      textLabel: [\"label\", \"textLabel\"],\n      ariaLabel: [\"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"]\n    },\n    exportAs: [\"matTab\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_TAB,\n      useExisting: MatTab\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatTab_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2\n  });\n  return MatTab;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\n\n\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: /*#__PURE__*/trigger('translateTab', [\n  /*#__PURE__*/\n  // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', /*#__PURE__*/style({\n    transform: 'none'\n  })),\n  /*#__PURE__*/\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', /*#__PURE__*/style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), /*#__PURE__*/state('right', /*#__PURE__*/style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), /*#__PURE__*/transition('* => left, * => right, left => center, right => center', /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), /*#__PURE__*/transition('void => left-origin-center', [/*#__PURE__*/style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), /*#__PURE__*/transition('void => right-origin-center', [/*#__PURE__*/style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n\nlet MatTabBodyPortal = /*#__PURE__*/(() => {\n  class MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n      super(componentFactoryResolver, viewContainerRef, _document);\n      this._host = _host;\n      /** Subscription to events for when the tab body begins centering. */\n\n      this._centeringSub = Subscription.EMPTY;\n      /** Subscription to events for when the tab body finishes leaving from center position. */\n\n      this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n\n\n    ngOnInit() {\n      super.ngOnInit();\n      this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n      this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n        this.detach();\n      });\n    }\n    /** Clean up centering subscription. */\n\n\n    ngOnDestroy() {\n      super.ngOnDestroy();\n\n      this._centeringSub.unsubscribe();\n\n      this._leavingSub.unsubscribe();\n    }\n\n  }\n\n  MatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {\n    return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  MatTabBodyPortal.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabBodyPortal,\n    selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTabBodyPortal;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n\n\nlet _MatTabBodyBase = /*#__PURE__*/(() => {\n  class _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      /** Subscription to the directionality change observable. */\n\n      this._dirChangeSubscription = Subscription.EMPTY;\n      /** Emits when an animation on the tab is complete. */\n\n      this._translateTabComplete = new Subject();\n      /** Event emitted when the tab begins to animate towards the center as the active tab. */\n\n      this._onCentering = new EventEmitter();\n      /** Event emitted before the centering of the tab begins. */\n\n      this._beforeCentering = new EventEmitter();\n      /** Event emitted before the centering of the tab begins. */\n\n      this._afterLeavingCenter = new EventEmitter();\n      /** Event emitted when the tab completes its animation towards the center. */\n\n      this._onCentered = new EventEmitter(true); // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n      // anyway to prevent the animations module from throwing an error if the body is used on its own.\n\n      /** Duration for the tab's animation. */\n\n      this.animationDuration = '500ms';\n\n      if (_dir) {\n        this._dirChangeSubscription = _dir.change.subscribe(dir => {\n          this._computePositionAnimationState(dir);\n\n          changeDetectorRef.markForCheck();\n        });\n      } // Ensure that we get unique animation events, because the `.done` callback can get\n      // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n\n\n      this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n        return x.fromState === y.fromState && x.toState === y.toState;\n      })).subscribe(event => {\n        // If the transition to the center is complete, emit an event.\n        if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n          this._onCentered.emit();\n        }\n\n        if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n          this._afterLeavingCenter.emit();\n        }\n      });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n\n\n    set position(position) {\n      this._positionIndex = position;\n\n      this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n\n\n    ngOnInit() {\n      if (this._position == 'center' && this.origin != null) {\n        this._position = this._computePositionFromOrigin(this.origin);\n      }\n    }\n\n    ngOnDestroy() {\n      this._dirChangeSubscription.unsubscribe();\n\n      this._translateTabComplete.complete();\n    }\n\n    _onTranslateTabStarted(event) {\n      const isCentering = this._isCenterPosition(event.toState);\n\n      this._beforeCentering.emit(isCentering);\n\n      if (isCentering) {\n        this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n      }\n    }\n    /** The text direction of the containing app. */\n\n\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n\n\n    _isCenterPosition(position) {\n      return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n\n\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n      if (this._positionIndex < 0) {\n        this._position = dir == 'ltr' ? 'left' : 'right';\n      } else if (this._positionIndex > 0) {\n        this._position = dir == 'ltr' ? 'right' : 'left';\n      } else {\n        this._position = 'center';\n      }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n\n\n    _computePositionFromOrigin(origin) {\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n        return 'left-origin-center';\n      }\n\n      return 'right-origin-center';\n    }\n\n  }\n\n  _MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) {\n    return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  _MatTabBodyBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabBodyBase,\n    inputs: {\n      animationDuration: \"animationDuration\",\n      position: \"position\",\n      _content: [\"content\", \"_content\"],\n      origin: \"origin\"\n    },\n    outputs: {\n      _onCentering: \"_onCentering\",\n      _beforeCentering: \"_beforeCentering\",\n      _afterLeavingCenter: \"_afterLeavingCenter\",\n      _onCentered: \"_onCentered\"\n    }\n  });\n  return _MatTabBodyBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n\n\nlet MatTabBody = /*#__PURE__*/(() => {\n  class MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n      super(elementRef, dir, changeDetectorRef);\n    }\n\n  }\n\n  MatTabBody.ɵfac = function MatTabBody_Factory(t) {\n    return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  MatTabBody.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTabBody,\n    selectors: [[\"mat-tab-body\"]],\n    viewQuery: function MatTabBody_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tab-body\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 6,\n    consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]],\n    template: function MatTabBody_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n          return ctx._onTranslateTabStarted($event);\n        })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n          return ctx._translateTabComplete.next($event);\n        });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n      }\n    },\n    directives: [MatTabBodyPortal],\n    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [matTabsAnimations.translateTab]\n    }\n  });\n  return MatTabBody;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to provide the default options the tabs module. */\n\n\nconst MAT_TABS_CONFIG = /*#__PURE__*/new InjectionToken('MAT_TABS_CONFIG');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID's for each tab component */\n\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\n\nclass MatTabChangeEvent {} // Boilerplate for applying mixins to MatTabGroup.\n\n/** @docs-private */\n\n\nconst _MatTabGroupMixinBase = /*#__PURE__*/mixinColor( /*#__PURE__*/mixinDisableRipple(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n\n\nlet _MatTabGroupBase = /*#__PURE__*/(() => {\n  class _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n      var _a;\n\n      super(elementRef);\n      this._changeDetectorRef = _changeDetectorRef;\n      this._animationMode = _animationMode;\n      /** All of the tabs that belong to the group. */\n\n      this._tabs = new QueryList();\n      /** The tab index that should be selected after the content has been checked. */\n\n      this._indexToSelect = 0;\n      /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n\n      this._tabBodyWrapperHeight = 0;\n      /** Subscription to tabs being added/removed. */\n\n      this._tabsSubscription = Subscription.EMPTY;\n      /** Subscription to changes in the tab labels. */\n\n      this._tabLabelSubscription = Subscription.EMPTY;\n      this._selectedIndex = null;\n      /** Position of the tab header. */\n\n      this.headerPosition = 'above';\n      /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n\n      this.selectedIndexChange = new EventEmitter();\n      /** Event emitted when focus has changed within a tab group. */\n\n      this.focusChange = new EventEmitter();\n      /** Event emitted when the body animation has completed */\n\n      this.animationDone = new EventEmitter();\n      /** Event emitted when the tab selection has changed. */\n\n      this.selectedTabChange = new EventEmitter(true);\n      this._groupId = nextId++;\n      this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n      this.contentTabIndex = (_a = defaultConfig === null || defaultConfig === void 0 ? void 0 : defaultConfig.contentTabIndex) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n\n\n    get dynamicHeight() {\n      return this._dynamicHeight;\n    }\n\n    set dynamicHeight(value) {\n      this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n\n\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n\n    set selectedIndex(value) {\n      this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n\n\n    get animationDuration() {\n      return this._animationDuration;\n    }\n\n    set animationDuration(value) {\n      this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n\n\n    get contentTabIndex() {\n      return this._contentTabIndex;\n    }\n\n    set contentTabIndex(value) {\n      this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n\n\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n\n    set backgroundColor(value) {\n      const nativeElement = this._elementRef.nativeElement;\n      nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n      if (value) {\n        nativeElement.classList.add(`mat-background-${value}`);\n      }\n\n      this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n\n\n    ngAfterContentChecked() {\n      // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n      // the amount of tabs changes before the actual change detection runs.\n      const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if\n      // the selected index has not yet been initialized.\n\n\n      if (this._selectedIndex != indexToSelect) {\n        const isFirstRun = this._selectedIndex == null;\n\n        if (!isFirstRun) {\n          this.selectedTabChange.emit(this._createChangeEvent(indexToSelect)); // Preserve the height so page doesn't scroll up during tab change.\n          // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n\n          const wrapper = this._tabBodyWrapper.nativeElement;\n          wrapper.style.minHeight = wrapper.clientHeight + 'px';\n        } // Changing these values after change detection has run\n        // since the checked content may contain references to them.\n\n\n        Promise.resolve().then(() => {\n          this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n          if (!isFirstRun) {\n            this.selectedIndexChange.emit(indexToSelect); // Clear the min-height, this was needed during tab change to avoid\n            // unnecessary scrolling.\n\n            this._tabBodyWrapper.nativeElement.style.minHeight = '';\n          }\n        });\n      } // Setup the position for each tab and optionally setup an origin on the next selected tab.\n\n\n      this._tabs.forEach((tab, index) => {\n        tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab\n        // if it doesn't have one already.\n\n        if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n          tab.origin = indexToSelect - this._selectedIndex;\n        }\n      });\n\n      if (this._selectedIndex !== indexToSelect) {\n        this._selectedIndex = indexToSelect;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n\n    ngAfterContentInit() {\n      this._subscribeToAllTabChanges();\n\n      this._subscribeToTabLabels(); // Subscribe to changes in the amount of tabs, in order to be\n      // able to re-render the content as new tabs are added or removed.\n\n\n      this._tabsSubscription = this._tabs.changes.subscribe(() => {\n        const indexToSelect = this._clampTabIndex(this._indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no\n        // explicit change that selects a different tab.\n\n\n        if (indexToSelect === this._selectedIndex) {\n          const tabs = this._tabs.toArray();\n\n          for (let i = 0; i < tabs.length; i++) {\n            if (tabs[i].isActive) {\n              // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n              // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n              // adding a tab within the `selectedIndexChange` event.\n              this._indexToSelect = this._selectedIndex = i;\n              break;\n            }\n          }\n        }\n\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /** Listens to changes in all of the tabs. */\n\n\n    _subscribeToAllTabChanges() {\n      // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n      // some that are inside of nested tab groups. We filter them out manually by checking that\n      // the closest group to the tab is the current one.\n      this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n        this._tabs.reset(tabs.filter(tab => {\n          return tab._closestTabGroup === this || !tab._closestTabGroup;\n        }));\n\n        this._tabs.notifyOnChanges();\n      });\n    }\n\n    ngOnDestroy() {\n      this._tabs.destroy();\n\n      this._tabsSubscription.unsubscribe();\n\n      this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n\n\n    realignInkBar() {\n      if (this._tabHeader) {\n        this._tabHeader._alignInkBarToSelectedTab();\n      }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n\n\n    focusTab(index) {\n      const header = this._tabHeader;\n\n      if (header) {\n        header.focusIndex = index;\n      }\n    }\n\n    _focusChanged(index) {\n      this.focusChange.emit(this._createChangeEvent(index));\n    }\n\n    _createChangeEvent(index) {\n      const event = new MatTabChangeEvent();\n      event.index = index;\n\n      if (this._tabs && this._tabs.length) {\n        event.tab = this._tabs.toArray()[index];\n      }\n\n      return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n\n\n    _subscribeToTabLabels() {\n      if (this._tabLabelSubscription) {\n        this._tabLabelSubscription.unsubscribe();\n      }\n\n      this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n\n\n    _clampTabIndex(index) {\n      // Note the `|| 0`, which ensures that values like NaN can't get through\n      // and which would otherwise throw the component into an infinite loop\n      // (since Math.max(NaN, 0) === NaN).\n      return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n\n\n    _getTabLabelId(i) {\n      return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n\n\n    _getTabContentId(i) {\n      return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n\n\n    _setTabBodyWrapperHeight(tabHeight) {\n      if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n        return;\n      }\n\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      wrapper.style.height = this._tabBodyWrapperHeight + 'px'; // This conditional forces the browser to paint the height so that\n      // the animation to the new height can have an origin.\n\n      if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n        wrapper.style.height = tabHeight + 'px';\n      }\n    }\n    /** Removes the height of the tab body wrapper. */\n\n\n    _removeTabBodyWrapperHeight() {\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      this._tabBodyWrapperHeight = wrapper.clientHeight;\n      wrapper.style.height = '';\n      this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n\n\n    _handleClick(tab, tabHeader, index) {\n      if (!tab.disabled) {\n        this.selectedIndex = tabHeader.focusIndex = index;\n      }\n    }\n    /** Retrieves the tabindex for the tab. */\n\n\n    _getTabIndex(tab, idx) {\n      if (tab.disabled) {\n        return null;\n      }\n\n      return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n\n\n    _tabFocusChanged(focusOrigin, index) {\n      // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n      // can cause the tab to be moved out from under the pointer, interrupting the\n      // click sequence (see #21898). We don't need to scroll the tab into view for\n      // such cases anyway, because it will be done when the tab becomes selected.\n      if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n        this._tabHeader.focusIndex = index;\n      }\n    }\n\n  }\n\n  _MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) {\n    return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  _MatTabGroupBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabGroupBase,\n    inputs: {\n      headerPosition: \"headerPosition\",\n      animationDuration: \"animationDuration\",\n      disablePagination: \"disablePagination\",\n      dynamicHeight: \"dynamicHeight\",\n      contentTabIndex: \"contentTabIndex\",\n      selectedIndex: \"selectedIndex\",\n      backgroundColor: \"backgroundColor\"\n    },\n    outputs: {\n      selectedIndexChange: \"selectedIndexChange\",\n      focusChange: \"focusChange\",\n      animationDone: \"animationDone\",\n      selectedTabChange: \"selectedTabChange\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatTabGroupBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n\n\nlet MatTabGroup = /*#__PURE__*/(() => {\n  class MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n      super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n\n  }\n\n  MatTabGroup.ɵfac = function MatTabGroup_Factory(t) {\n    return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatTabGroup.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTabGroup,\n    selectors: [[\"mat-tab-group\"]],\n    contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n      }\n    },\n    viewQuery: function MatTabGroup_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tab-group\"],\n    hostVars: 4,\n    hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n      }\n    },\n    inputs: {\n      color: \"color\",\n      disableRipple: \"disableRipple\"\n    },\n    exportAs: [\"matTabGroup\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_GROUP,\n      useExisting: MatTabGroup\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 7,\n    consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]],\n    template: function MatTabGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n          return ctx._focusChanged($event);\n        })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n          return ctx.selectedIndex = $event;\n        });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 9, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n      }\n    },\n    directives: function () {\n      return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody];\n    },\n    styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"],\n    encapsulation: 2\n  });\n  return MatTabGroup;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n\n/** @docs-private */\n\n\nconst _MatTabLabelWrapperBase = /*#__PURE__*/mixinDisabled(class {});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n\n\nlet MatTabLabelWrapper = /*#__PURE__*/(() => {\n  class MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n      super();\n      this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n\n\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft() {\n      return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth() {\n      return this.elementRef.nativeElement.offsetWidth;\n    }\n\n  }\n\n  MatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {\n    return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatTabLabelWrapper.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabLabelWrapper,\n    selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n    hostVars: 3,\n    hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTabLabelWrapper;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Config used to bind passive event listeners */\n\n\nconst passiveEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\n\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\n\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\n\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n\nlet MatPaginatedTabHeader = /*#__PURE__*/(() => {\n  class MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._viewportRuler = _viewportRuler;\n      this._dir = _dir;\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._animationMode = _animationMode;\n      /** The distance in pixels that the tab labels should be translated to the left. */\n\n      this._scrollDistance = 0;\n      /** Whether the header should scroll to the selected index after the view has been checked. */\n\n      this._selectedIndexChanged = false;\n      /** Emits when the component is destroyed. */\n\n      this._destroyed = new Subject();\n      /** Whether the controls for pagination should be displayed */\n\n      this._showPaginationControls = false;\n      /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n\n      this._disableScrollAfter = true;\n      /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n\n      this._disableScrollBefore = true;\n      /** Stream that will stop the automated scrolling. */\n\n      this._stopScrolling = new Subject();\n      /**\n       * Whether pagination should be disabled. This can be used to avoid unnecessary\n       * layout recalculations if it's known that pagination won't be required.\n       */\n\n      this.disablePagination = false;\n      this._selectedIndex = 0;\n      /** Event emitted when the option is selected. */\n\n      this.selectFocusedIndex = new EventEmitter();\n      /** Event emitted when a label is focused. */\n\n      this.indexFocused = new EventEmitter(); // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n\n      _ngZone.runOutsideAngular(() => {\n        fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n          this._stopInterval();\n        });\n      });\n    }\n    /** The index of the active tab. */\n\n\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n\n    set selectedIndex(value) {\n      value = coerceNumberProperty(value);\n\n      if (this._selectedIndex != value) {\n        this._selectedIndexChanged = true;\n        this._selectedIndex = value;\n\n        if (this._keyManager) {\n          this._keyManager.updateActiveItem(value);\n        }\n      }\n    }\n\n    ngAfterViewInit() {\n      // We need to handle these events manually, because we want to bind passive event listeners.\n      fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n      fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n    }\n\n    ngAfterContentInit() {\n      const dirChange = this._dir ? this._dir.change : of('ltr');\n\n      const resize = this._viewportRuler.change(150);\n\n      const realign = () => {\n        this.updatePagination();\n\n        this._alignInkBarToSelectedTab();\n      };\n\n      this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap();\n\n      this._keyManager.updateActiveItem(this._selectedIndex); // Defer the first call in order to allow for slower browsers to lay out the elements.\n      // This helps in cases where the user lands directly on a page with paginated tabs.\n\n\n      typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign(); // On dir change or window resize, realign the ink bar and update the orientation of\n      // the key manager if the direction has changed.\n\n      merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        // We need to defer this to give the browser some time to recalculate\n        // the element dimensions. The call has to be wrapped in `NgZone.run`,\n        // because the viewport change handler runs outside of Angular.\n        this._ngZone.run(() => Promise.resolve().then(realign));\n\n        this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n      }); // If there is a change in the focus key manager we need to emit the `indexFocused`\n      // event in order to provide a public event that notifies about focus changes. Also we realign\n      // the tabs container by scrolling the new focused tab into the visible section.\n\n      this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n        this.indexFocused.emit(newFocusIndex);\n\n        this._setTabFocus(newFocusIndex);\n      });\n    }\n\n    ngAfterContentChecked() {\n      // If the number of tab labels have changed, check if scrolling should be enabled\n      if (this._tabLabelCount != this._items.length) {\n        this.updatePagination();\n        this._tabLabelCount = this._items.length;\n\n        this._changeDetectorRef.markForCheck();\n      } // If the selected index has changed, scroll to the label and check if the scrolling controls\n      // should be disabled.\n\n\n      if (this._selectedIndexChanged) {\n        this._scrollToLabel(this._selectedIndex);\n\n        this._checkScrollingControls();\n\n        this._alignInkBarToSelectedTab();\n\n        this._selectedIndexChanged = false;\n\n        this._changeDetectorRef.markForCheck();\n      } // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n      // then translate the header to reflect this.\n\n\n      if (this._scrollDistanceChanged) {\n        this._updateTabScrollPosition();\n\n        this._scrollDistanceChanged = false;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n\n    ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n\n\n    _handleKeydown(event) {\n      // We don't handle any key bindings with a modifier key.\n      if (hasModifierKey(event)) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        case ENTER:\n        case SPACE:\n          if (this.focusIndex !== this.selectedIndex) {\n            this.selectFocusedIndex.emit(this.focusIndex);\n\n            this._itemSelected(event);\n          }\n\n          break;\n\n        default:\n          this._keyManager.onKeydown(event);\n\n      }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n\n\n    _onContentChanges() {\n      const textContent = this._elementRef.nativeElement.textContent; // We need to diff the text content of the header, because the MutationObserver callback\n      // will fire even if the text content didn't change which is inefficient and is prone\n      // to infinite loops if a poorly constructed expression is passed in (see #14249).\n\n      if (textContent !== this._currentTextContent) {\n        this._currentTextContent = textContent || ''; // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n\n        this._ngZone.run(() => {\n          this.updatePagination();\n\n          this._alignInkBarToSelectedTab();\n\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n\n\n    updatePagination() {\n      this._checkPaginationEnabled();\n\n      this._checkScrollingControls();\n\n      this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n\n\n    get focusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n\n\n    set focusIndex(value) {\n      if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n        return;\n      }\n\n      this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n\n\n    _isValidIndex(index) {\n      if (!this._items) {\n        return true;\n      }\n\n      const tab = this._items ? this._items.toArray()[index] : null;\n      return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n\n\n    _setTabFocus(tabIndex) {\n      if (this._showPaginationControls) {\n        this._scrollToLabel(tabIndex);\n      }\n\n      if (this._items && this._items.length) {\n        this._items.toArray()[tabIndex].focus(); // Do not let the browser manage scrolling to focus the element, this will be handled\n        // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n        // should be the full width minus the offset width.\n\n\n        const containerEl = this._tabListContainer.nativeElement;\n\n        const dir = this._getLayoutDirection();\n\n        if (dir == 'ltr') {\n          containerEl.scrollLeft = 0;\n        } else {\n          containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n        }\n      }\n    }\n    /** The layout direction of the containing app. */\n\n\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n\n\n    _updateTabScrollPosition() {\n      if (this.disablePagination) {\n        return;\n      }\n\n      const scrollDistance = this.scrollDistance;\n      const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance; // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n      // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n      // and ripples will exceed the boundaries of the visible tab bar.\n      // See: https://github.com/angular/components/issues/10276\n      // We round the `transform` here, because transforms with sub-pixel precision cause some\n      // browsers to blur the content of the element.\n\n      this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`; // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n      // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n      // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n      // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n\n      if (this._platform.TRIDENT || this._platform.EDGE) {\n        this._tabListContainer.nativeElement.scrollLeft = 0;\n      }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n\n\n    get scrollDistance() {\n      return this._scrollDistance;\n    }\n\n    set scrollDistance(value) {\n      this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n\n\n    _scrollHeader(direction) {\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth; // Move the scroll distance one-third the length of the tab list's viewport.\n\n      const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n      return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n\n\n    _handlePaginatorClick(direction) {\n      this._stopInterval();\n\n      this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n\n\n    _scrollToLabel(labelIndex) {\n      if (this.disablePagination) {\n        return;\n      }\n\n      const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n      if (!selectedLabel) {\n        return;\n      } // The view length is the visible width of the tab labels.\n\n\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      const {\n        offsetLeft,\n        offsetWidth\n      } = selectedLabel.elementRef.nativeElement;\n      let labelBeforePos, labelAfterPos;\n\n      if (this._getLayoutDirection() == 'ltr') {\n        labelBeforePos = offsetLeft;\n        labelAfterPos = labelBeforePos + offsetWidth;\n      } else {\n        labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n        labelBeforePos = labelAfterPos - offsetWidth;\n      }\n\n      const beforeVisiblePos = this.scrollDistance;\n      const afterVisiblePos = this.scrollDistance + viewLength;\n\n      if (labelBeforePos < beforeVisiblePos) {\n        // Scroll header to move label to the before direction\n        this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n      } else if (labelAfterPos > afterVisiblePos) {\n        // Scroll header to move label to the after direction\n        this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n      }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n\n\n    _checkPaginationEnabled() {\n      if (this.disablePagination) {\n        this._showPaginationControls = false;\n      } else {\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n          this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this._showPaginationControls) {\n          this._changeDetectorRef.markForCheck();\n        }\n\n        this._showPaginationControls = isEnabled;\n      }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n\n\n    _checkScrollingControls() {\n      if (this.disablePagination) {\n        this._disableScrollAfter = this._disableScrollBefore = true;\n      } else {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n\n\n    _getMaxScrollDistance() {\n      const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n\n\n    _alignInkBarToSelectedTab() {\n      const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n      const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n      if (selectedLabelWrapper) {\n        this._inkBar.alignToElement(selectedLabelWrapper);\n      } else {\n        this._inkBar.hide();\n      }\n    }\n    /** Stops the currently-running paginator interval.  */\n\n\n    _stopInterval() {\n      this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n\n\n    _handlePaginatorPress(direction, mouseEvent) {\n      // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n      // null check the `button`, but we do it so we don't break tests that use fake events.\n      if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n        return;\n      } // Avoid overlapping timers.\n\n\n      this._stopInterval(); // Start a timer after the delay and keep firing based on the interval.\n\n\n      timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL) // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n        const {\n          maxScrollDistance,\n          distance\n        } = this._scrollHeader(direction); // Stop the timer if we've reached the start or the end.\n\n\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n\n\n    _scrollTo(position) {\n      if (this.disablePagination) {\n        return {\n          maxScrollDistance: 0,\n          distance: 0\n        };\n      }\n\n      const maxScrollDistance = this._getMaxScrollDistance();\n\n      this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position)); // Mark that the scroll distance has changed so that after the view is checked, the CSS\n      // transformation can move the header.\n\n      this._scrollDistanceChanged = true;\n\n      this._checkScrollingControls();\n\n      return {\n        maxScrollDistance,\n        distance: this._scrollDistance\n      };\n    }\n\n  }\n\n  MatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n    return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatPaginatedTabHeader.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatPaginatedTabHeader,\n    inputs: {\n      disablePagination: \"disablePagination\"\n    }\n  });\n  return MatPaginatedTabHeader;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n\n\nlet _MatTabHeaderBase = /*#__PURE__*/(() => {\n  class _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n      super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n\n\n    get disableRipple() {\n      return this._disableRipple;\n    }\n\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n\n    _itemSelected(event) {\n      event.preventDefault();\n    }\n\n  }\n\n  _MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) {\n    return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  _MatTabHeaderBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabHeaderBase,\n    inputs: {\n      disableRipple: \"disableRipple\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatTabHeaderBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n\n\nlet MatTabHeader = /*#__PURE__*/(() => {\n  class MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n      super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n\n  }\n\n  MatTabHeader.ɵfac = function MatTabHeader_Factory(t) {\n    return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatTabHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTabHeader,\n    selectors: [[\"mat-tab-header\"]],\n    contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n      }\n    },\n    viewQuery: function MatTabHeader_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tab-header\"],\n    hostVars: 4,\n    hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n      }\n    },\n    inputs: {\n      selectedIndex: \"selectedIndex\"\n    },\n    outputs: {\n      selectFocusedIndex: \"selectFocusedIndex\",\n      indexFocused: \"indexFocused\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 13,\n    vars: 8,\n    consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n    template: function MatTabHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n          return ctx._handlePaginatorClick(\"before\");\n        })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) {\n          return ctx._handlePaginatorPress(\"before\", $event);\n        })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n          return ctx._stopInterval();\n        });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n          return ctx._handleKeydown($event);\n        });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n          return ctx._onContentChanges();\n        });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) {\n          return ctx._handlePaginatorPress(\"after\", $event);\n        })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n          return ctx._handlePaginatorClick(\"after\");\n        })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n          return ctx._stopInterval();\n        });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n      }\n    },\n    directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar],\n    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"],\n    encapsulation: 2\n  });\n  return MatTabHeader;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n\n\nlet _MatTabNavBase = /*#__PURE__*/(() => {\n  class _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n      super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      this._disableRipple = false;\n      /** Theme color of the nav bar. */\n\n      this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n\n\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n\n    set backgroundColor(value) {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove(`mat-background-${this.backgroundColor}`);\n\n      if (value) {\n        classList.add(`mat-background-${value}`);\n      }\n\n      this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n\n\n    get disableRipple() {\n      return this._disableRipple;\n    }\n\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n\n    _itemSelected() {// noop\n    }\n\n    ngAfterContentInit() {\n      // We need this to run before the `changes` subscription in parent to ensure that the\n      // selectedIndex is up-to-date by the time the super class starts looking for it.\n      this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n        this.updateActiveLink();\n      });\n\n      super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n\n\n    updateActiveLink() {\n      if (!this._items) {\n        return;\n      }\n\n      const items = this._items.toArray();\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].active) {\n          this.selectedIndex = i;\n\n          this._changeDetectorRef.markForCheck();\n\n          return;\n        }\n      } // The ink bar should hide itself if no items are active.\n\n\n      this.selectedIndex = -1;\n\n      this._inkBar.hide();\n    }\n\n  }\n\n  _MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) {\n    return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  _MatTabNavBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabNavBase,\n    inputs: {\n      color: \"color\",\n      backgroundColor: \"backgroundColor\",\n      disableRipple: \"disableRipple\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatTabNavBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n\n\nlet MatTabNav = /*#__PURE__*/(() => {\n  class MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n      super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n\n  }\n\n  MatTabNav.ɵfac = function MatTabNav_Factory(t) {\n    return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatTabNav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTabNav,\n    selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n    contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n      }\n    },\n    viewQuery: function MatTabNav_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"],\n    hostVars: 10,\n    hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n      }\n    },\n    inputs: {\n      color: \"color\"\n    },\n    exportAs: [\"matTabNavBar\", \"matTabNav\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c9,\n    ngContentSelectors: _c0,\n    decls: 13,\n    vars: 8,\n    consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n    template: function MatTabNav_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() {\n          return ctx._handlePaginatorClick(\"before\");\n        })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) {\n          return ctx._handlePaginatorPress(\"before\", $event);\n        })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() {\n          return ctx._stopInterval();\n        });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n          return ctx._handleKeydown($event);\n        });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n          return ctx._onContentChanges();\n        });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) {\n          return ctx._handlePaginatorPress(\"after\", $event);\n        })(\"click\", function MatTabNav_Template_div_click_10_listener() {\n          return ctx._handlePaginatorClick(\"after\");\n        })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() {\n          return ctx._stopInterval();\n        });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n      }\n    },\n    directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar],\n    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"],\n    encapsulation: 2\n  });\n  return MatTabNav;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // Boilerplate for applying mixins to MatTabLink.\n\n\nconst _MatTabLinkMixinBase = /*#__PURE__*/mixinTabIndex( /*#__PURE__*/mixinDisableRipple( /*#__PURE__*/mixinDisabled(class {})));\n/** Base class with all of the `MatTabLink` functionality. */\n\n\nlet _MatTabLinkBase = /*#__PURE__*/(() => {\n  class _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar,\n    /** @docs-private */\n    elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n      super();\n      this._tabNavBar = _tabNavBar;\n      this.elementRef = elementRef;\n      this._focusMonitor = _focusMonitor;\n      /** Whether the tab link is active or not. */\n\n      this._isActive = false;\n      this.rippleConfig = globalRippleOptions || {};\n      this.tabIndex = parseInt(tabIndex) || 0;\n\n      if (animationMode === 'NoopAnimations') {\n        this.rippleConfig.animation = {\n          enterDuration: 0,\n          exitDuration: 0\n        };\n      }\n    }\n    /** Whether the link is active. */\n\n\n    get active() {\n      return this._isActive;\n    }\n\n    set active(value) {\n      const newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._isActive) {\n        this._isActive = value;\n\n        this._tabNavBar.updateActiveLink();\n      }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n\n\n    get rippleDisabled() {\n      return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n\n\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n\n    ngAfterViewInit() {\n      this._focusMonitor.monitor(this.elementRef);\n    }\n\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n\n    _handleFocus() {\n      // Since we allow navigation through tabbing in the nav bar, we\n      // have to update the focused index whenever the link receives focus.\n      this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n\n  }\n\n  _MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) {\n    return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  _MatTabLinkBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabLinkBase,\n    inputs: {\n      active: \"active\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatTabLinkBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n\n\nlet MatTabLink = /*#__PURE__*/(() => {\n  class MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n      super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n      this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n\n      this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n      super.ngOnDestroy();\n\n      this._tabLinkRipple._removeTriggerEvents();\n    }\n\n  }\n\n  MatTabLink.ɵfac = function MatTabLink_Factory(t) {\n    return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatTabLink.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabLink,\n    selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n    hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"],\n    hostVars: 7,\n    hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      disableRipple: \"disableRipple\",\n      tabIndex: \"tabIndex\"\n    },\n    exportAs: [\"matTabLink\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTabLink;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet MatTabsModule = /*#__PURE__*/(() => {\n  class MatTabsModule {}\n\n  MatTabsModule.ɵfac = function MatTabsModule_Factory(t) {\n    return new (t || MatTabsModule)();\n  };\n\n  MatTabsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatTabsModule\n  });\n  MatTabsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule], MatCommonModule]\n  });\n  return MatTabsModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, {\n    declarations: function () {\n      return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule];\n    },\n    exports: function () {\n      return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@angular/material/fesm2015/tabs.js"],"names":["FocusKeyManager","FocusMonitor","A11yModule","ObserversModule","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalModule","DOCUMENT","CommonModule","InjectionToken","Directive","ElementRef","NgZone","Inject","Optional","TemplateRef","ViewContainerRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChild","ViewChild","Input","ComponentFactoryResolver","forwardRef","EventEmitter","ChangeDetectorRef","Output","QueryList","ContentChildren","Attribute","NgModule","mixinDisabled","mixinColor","mixinDisableRipple","mixinTabIndex","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","Subject","Subscription","merge","fromEvent","of","timer","Directionality","trigger","state","style","transition","animate","startWith","distinctUntilChanged","takeUntil","coerceBooleanProperty","coerceNumberProperty","ViewportRuler","normalizePassiveListenerOptions","Platform","hasModifierKey","SPACE","ENTER","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","ɵngcc7","ɵngcc8","MatTab_ng_template_0_Template","rf","ctx","ɵɵprojection","_c0","MatTabBody_ng_template_2_Template","_c1","a0","animationDuration","_c2","a1","value","params","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","ɵɵtemplate","tab_r4","ɵɵnextContext","$implicit","ɵɵproperty","templateLabel","MatTabGroup_div_2_ng_template_3_Template","ɵɵtext","ɵɵtextInterpolate","textLabel","MatTabGroup_div_2_Template","_r12","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatTabGroup_div_2_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","i_r5","index","ctx_r11","_r0","ɵɵreference","_handleClick","MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener","$event","ctx_r13","_tabFocusChanged","ɵɵelementEnd","ctx_r1","ɵɵclassProp","selectedIndex","_getTabLabelId","disabled","disableRipple","ɵɵattribute","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","ɵɵadvance","MatTabGroup_mat_tab_body_5_Template","_r17","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener","ctx_r16","_removeTabBodyWrapperHeight","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener","ctx_r18","_setTabBodyWrapperHeight","tab_r14","i_r15","ctx_r3","content","position","origin","contentTabIndex","_c5","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","visibility","hide","positions","inkBar","ɵfac","MatInkBar_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatInkBar_HostBindings","ngDevMode","MAT_TAB_CONTENT","MatTabContent","template","MatTabContent_Factory","features","ɵɵProvidersFeature","provide","useExisting","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","templateRef","viewContainerRef","_closestTab","MatTabLabel_Factory","ɵɵInheritDefinitionFeature","_MatTabBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","_contentPortal","_stateChanges","isActive","_templateLabel","_setTemplateLabelInput","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","MatTab_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatTab_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatTab_Query","ɵɵviewQuery","inputs","exportAs","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","MatTab_Template","ɵɵprojectionDef","encapsulation","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_document","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBodyPortal_Factory","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","_MatTabBodyBase_Factory","outputs","elementRef","MatTabBody_Factory","MatTabBody_Query","_portalHost","consts","MatTabBody_Template","MatTabBody_Template_div_animation_translateTab_start_0_listener","MatTabBody_Template_div_animation_translateTab_done_0_listener","ɵɵpureFunction2","ɵɵpureFunction1","directives","styles","data","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_a","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","dynamicHeight","_dynamicHeight","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","classList","remove","add","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","Promise","resolve","then","forEach","tab","ngAfterContentInit","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","_allTabs","reset","filter","notifyOnChanges","destroy","realignInkBar","_tabHeader","_alignInkBarToSelectedTab","focusTab","header","focusIndex","_focusChanged","map","Math","min","max","tabHeight","height","offsetHeight","tabHeader","idx","focusOrigin","_MatTabGroupBase_Factory","MatTabGroup","animationMode","MatTabGroup_Factory","MatTabGroup_ContentQueries","MatTabGroup_Query","MatTabGroup_HostBindings","color","MatTabGroup_Template","MatTabGroup_Template_mat_tab_header_indexFocused_0_listener","MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener","MatTabHeader","NgForOf","MatTabLabelWrapper","MatRipple","CdkMonitorFocus","NgIf","_MatTabLabelWrapperBase","focus","getOffsetLeft","getOffsetWidth","MatTabLabelWrapper_Factory","MatTabLabelWrapper_HostBindings","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","run","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","maxScrollDistance","distance","MatPaginatedTabHeader_Factory","_MatTabHeaderBase","viewportRuler","ngZone","platform","_disableRipple","preventDefault","_MatTabHeaderBase_Factory","MatTabHeader_Factory","MatTabHeader_ContentQueries","MatTabHeader_Query","MatTabHeader_HostBindings","MatTabHeader_Template","MatTabHeader_Template_div_click_0_listener","MatTabHeader_Template_div_mousedown_0_listener","MatTabHeader_Template_div_touchend_0_listener","ɵɵelement","MatTabHeader_Template_div_keydown_3_listener","MatTabHeader_Template_div_cdkObserveContent_5_listener","MatTabHeader_Template_div_mousedown_10_listener","MatTabHeader_Template_div_click_10_listener","MatTabHeader_Template_div_touchend_10_listener","CdkObserveContent","_MatTabNavBase","updateActiveLink","items","active","_MatTabNavBase_Factory","MatTabNav","MatTabNav_Factory","MatTabNav_ContentQueries","MatTabLink","MatTabNav_Query","MatTabNav_HostBindings","attrs","MatTabNav_Template","MatTabNav_Template_div_click_0_listener","MatTabNav_Template_div_mousedown_0_listener","MatTabNav_Template_div_touchend_0_listener","MatTabNav_Template_div_keydown_3_listener","MatTabNav_Template_div_cdkObserveContent_5_listener","MatTabNav_Template_div_mousedown_10_listener","MatTabNav_Template_div_click_10_listener","MatTabNav_Template_div_touchend_10_listener","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","enterDuration","exitDuration","newValue","rippleDisabled","monitor","stopMonitoring","_handleFocus","indexOf","_MatTabLinkBase_Factory","ɵɵinjectAttribute","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabLink_Factory","MatTabLink_HostBindings","MatTabLink_focus_HostBindingHandler","MatTabsModule","MatTabsModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","ɵangular_material_src_material_tabs_tabs_a","ɵangular_material_src_material_tabs_tabs_b","ɵangular_material_src_material_tabs_tabs_c","ɵangular_material_src_material_tabs_tabs_d"],"mappings":"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","sourcesContent":["import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const i_r5 = restoredCtx.index; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._tabFocusChanged($event, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r15 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return new (t || MatTabLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB, 8)); };\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabel.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB, useExisting: MatTab }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }, { type: Optional }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab',\n                providers: [{ provide: MAT_TAB, useExisting: MatTab }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }, {\n                type: Optional\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _a;\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = (_a = defaultConfig === null || defaultConfig === void 0 ? void 0 : defaultConfig.contentTabIndex) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() { return this._contentTabIndex; }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", contentTabIndex: \"contentTabIndex\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    contentTabIndex: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], contentTabIndex: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 9, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() { return ctx._handleFocus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                    '(focus)': '_handleFocus()'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n"]},"metadata":{},"sourceType":"module"}