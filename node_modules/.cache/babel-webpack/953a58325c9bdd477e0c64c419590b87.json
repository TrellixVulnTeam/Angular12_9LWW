{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/ZoomToExtent\n */\n\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\n\nvar ZoomToExtent = function (_super) {\n  __extends(ZoomToExtent, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function ZoomToExtent(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    }) || this;\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n\n    _this.extent = options.extent ? options.extent : null;\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n    button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n    return _this;\n  }\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n\n\n  ZoomToExtent.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n  /**\n   * @protected\n   */\n\n\n  ZoomToExtent.prototype.handleZoomToExtent = function () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  };\n\n  return ZoomToExtent;\n}(Control);\n\nexport default ZoomToExtent;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/control/ZoomToExtent.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Control","EventType","CLASS_CONTROL","CLASS_UNSELECTABLE","fromExtent","polygonFromExtent","ZoomToExtent","_super","opt_options","_this","options","element","document","createElement","target","extent","className","undefined","label","tipLabel","button","setAttribute","title","appendChild","createTextNode","addEventListener","CLICK","handleClick_","bind","cssClasses","event","preventDefault","handleZoomToExtent","map","getMap","view","getView","getProjection","getExtent","fitInternal"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */ (function (_super) {\n    __extends(ZoomToExtent, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function ZoomToExtent(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /**\n         * @type {?import(\"../extent.js\").Extent}\n         * @protected\n         */\n        _this.extent = options.extent ? options.extent : null;\n        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n        var label = options.label !== undefined ? options.label : 'E';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    ZoomToExtent.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleZoomToExtent();\n    };\n    /**\n     * @protected\n     */\n    ZoomToExtent.prototype.handleZoomToExtent = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        var extent = !this.extent\n            ? view.getProjection().getExtent()\n            : this.extent;\n        view.fitInternal(polygonFromExtent(extent));\n    };\n    return ZoomToExtent;\n}(Control));\nexport default ZoomToExtent;\n"]},"metadata":{},"sourceType":"module"}