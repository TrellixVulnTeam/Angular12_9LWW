{"ast":null,"code":"/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\n\nvar BrowserStringUtils = function () {\n  function BrowserStringUtils() {}\n  /**\r\n   * Converts string to Uint8Array\r\n   * @param sDOMStr\r\n   */\n\n\n  BrowserStringUtils.stringToUtf8Arr = function (sDOMStr) {\n    var nChr;\n    var nArrLen = 0;\n    var nStrLen = sDOMStr.length;\n    /* mapping... */\n\n    for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n      nChr = sDOMStr.charCodeAt(nMapIdx);\n      nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\n    }\n\n    var aBytes = new Uint8Array(nArrLen);\n    /* transcription... */\n\n    for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n      nChr = sDOMStr.charCodeAt(nChrIdx);\n\n      if (nChr < 128) {\n        /* one byte */\n        aBytes[nIdx++] = nChr;\n      } else if (nChr < 0x800) {\n        /* two bytes */\n        aBytes[nIdx++] = 192 + (nChr >>> 6);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x10000) {\n        /* three bytes */\n        aBytes[nIdx++] = 224 + (nChr >>> 12);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x200000) {\n        /* four bytes */\n        aBytes[nIdx++] = 240 + (nChr >>> 18);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x4000000) {\n        /* five bytes */\n        aBytes[nIdx++] = 248 + (nChr >>> 24);\n        aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else\n        /* if (nChr <= 0x7fffffff) */\n        {\n          /* six bytes */\n          aBytes[nIdx++] = 252 + (nChr >>> 30);\n          aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\n          aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n          aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n          aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n          aBytes[nIdx++] = 128 + (nChr & 63);\n        }\n    }\n\n    return aBytes;\n  };\n  /**\r\n   * Converst string to ArrayBuffer\r\n   * @param dataString\r\n   */\n\n\n  BrowserStringUtils.stringToArrayBuffer = function (dataString) {\n    var data = new ArrayBuffer(dataString.length);\n    var dataView = new Uint8Array(data);\n\n    for (var i = 0; i < dataString.length; i++) {\n      dataView[i] = dataString.charCodeAt(i);\n    }\n\n    return data;\n  };\n  /**\r\n   * Converts Uint8Array to a string\r\n   * @param aBytes\r\n   */\n\n\n  BrowserStringUtils.utf8ArrToString = function (aBytes) {\n    var sView = \"\";\n\n    for (var nPart = void 0, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n      nPart = aBytes[nIdx];\n      sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen ?\n      /* six bytes */\n\n      /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n      (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ?\n      /* five bytes */\n      (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ?\n      /* four bytes */\n      (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ?\n      /* three bytes */\n      (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ?\n      /* two bytes */\n      (nPart - 192 << 6) + aBytes[++nIdx] - 128 :\n      /* nPart < 127 ? */\n\n      /* one byte */\n      nPart);\n    }\n\n    return sView;\n  };\n\n  return BrowserStringUtils;\n}();\n\nexport { BrowserStringUtils };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.js"],"names":["BrowserStringUtils","stringToUtf8Arr","sDOMStr","nChr","nArrLen","nStrLen","length","nMapIdx","charCodeAt","aBytes","Uint8Array","nIdx","nChrIdx","stringToArrayBuffer","dataString","data","ArrayBuffer","dataView","i","utf8ArrToString","sView","nPart","nLen","String","fromCharCode"],"mappings":"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","sourcesContent":["/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar BrowserStringUtils = /** @class */ (function () {\r\n    function BrowserStringUtils() {\r\n    }\r\n    /**\r\n     * Converts string to Uint8Array\r\n     * @param sDOMStr\r\n     */\r\n    BrowserStringUtils.stringToUtf8Arr = function (sDOMStr) {\r\n        var nChr;\r\n        var nArrLen = 0;\r\n        var nStrLen = sDOMStr.length;\r\n        /* mapping... */\r\n        for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n        var aBytes = new Uint8Array(nArrLen);\r\n        /* transcription... */\r\n        for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            }\r\n            else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n        return aBytes;\r\n    };\r\n    /**\r\n     * Converst string to ArrayBuffer\r\n     * @param dataString\r\n     */\r\n    BrowserStringUtils.stringToArrayBuffer = function (dataString) {\r\n        var data = new ArrayBuffer(dataString.length);\r\n        var dataView = new Uint8Array(data);\r\n        for (var i = 0; i < dataString.length; i++) {\r\n            dataView[i] = dataString.charCodeAt(i);\r\n        }\r\n        return data;\r\n    };\r\n    /**\r\n     * Converts Uint8Array to a string\r\n     * @param aBytes\r\n     */\r\n    BrowserStringUtils.utf8ArrToString = function (aBytes) {\r\n        var sView = \"\";\r\n        for (var nPart = void 0, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                    (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                        (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                            (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart);\r\n        }\r\n        return sView;\r\n    };\r\n    return BrowserStringUtils;\r\n}());\n\nexport { BrowserStringUtils };\n"]},"metadata":{},"sourceType":"module"}