{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/filter/IsLike\n */\n\n\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\n\nvar IsLike = function (_super) {\n  __extends(IsLike, _super);\n  /**\n   * [constructor description]\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} pattern Text pattern.\n   * @param {string} [opt_wildCard] Pattern character which matches any sequence of\n   *    zero or more string characters. Default is '*'.\n   * @param {string} [opt_singleChar] pattern character which matches any single\n   *    string character. Default is '.'.\n   * @param {string} [opt_escapeChar] Escape character which can be used to escape\n   *    the pattern characters. Default is '!'.\n   * @param {boolean} [opt_matchCase] Case-sensitive?\n   */\n\n\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    var _this = _super.call(this, 'PropertyIsLike', propertyName) || this;\n    /**\n     * @type {!string}\n     */\n\n\n    _this.pattern = pattern;\n    /**\n     * @type {!string}\n     */\n\n    _this.wildCard = opt_wildCard !== undefined ? opt_wildCard : '*';\n    /**\n     * @type {!string}\n     */\n\n    _this.singleChar = opt_singleChar !== undefined ? opt_singleChar : '.';\n    /**\n     * @type {!string}\n     */\n\n    _this.escapeChar = opt_escapeChar !== undefined ? opt_escapeChar : '!';\n    /**\n     * @type {boolean|undefined}\n     */\n\n    _this.matchCase = opt_matchCase;\n    return _this;\n  }\n\n  return IsLike;\n}(Comparison);\n\nexport default IsLike;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/format/filter/IsLike.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Comparison","IsLike","_super","propertyName","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","opt_matchCase","_this","wildCard","undefined","singleChar","escapeChar","matchCase"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnB,QAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;AACJF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASW,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBb,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;AACH,GAND;AAOH,CAd2C,EAA5C;AAeA;AACA;AACA;;;AACA,OAAOG,UAAP,MAAuB,iBAAvB;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAkB,UAAUC,MAAV,EAAkB;AAC1CnB,EAAAA,SAAS,CAACkB,MAAD,EAASC,MAAT,CAAT;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,WAASD,MAAT,CAAgBE,YAAhB,EAA8BC,OAA9B,EAAuCC,YAAvC,EAAqDC,cAArD,EAAqEC,cAArE,EAAqFC,aAArF,EAAoG;AAChG,QAAIC,KAAK,GAAGP,MAAM,CAACR,IAAP,CAAY,IAAZ,EAAkB,gBAAlB,EAAoCS,YAApC,KAAqD,IAAjE;AACA;AACR;AACA;;;AACQM,IAAAA,KAAK,CAACL,OAAN,GAAgBA,OAAhB;AACA;AACR;AACA;;AACQK,IAAAA,KAAK,CAACC,QAAN,GAAiBL,YAAY,KAAKM,SAAjB,GAA6BN,YAA7B,GAA4C,GAA7D;AACA;AACR;AACA;;AACQI,IAAAA,KAAK,CAACG,UAAN,GAAmBN,cAAc,KAAKK,SAAnB,GAA+BL,cAA/B,GAAgD,GAAnE;AACA;AACR;AACA;;AACQG,IAAAA,KAAK,CAACI,UAAN,GAAmBN,cAAc,KAAKI,SAAnB,GAA+BJ,cAA/B,GAAgD,GAAnE;AACA;AACR;AACA;;AACQE,IAAAA,KAAK,CAACK,SAAN,GAAkBN,aAAlB;AACA,WAAOC,KAAP;AACH;;AACD,SAAOR,MAAP;AACH,CAvC2B,CAuC1BD,UAvC0B,CAA5B;;AAwCA,eAAeC,MAAf","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = /** @class */ (function (_super) {\n    __extends(IsLike, _super);\n    /**\n     * [constructor description]\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} pattern Text pattern.\n     * @param {string} [opt_wildCard] Pattern character which matches any sequence of\n     *    zero or more string characters. Default is '*'.\n     * @param {string} [opt_singleChar] pattern character which matches any single\n     *    string character. Default is '.'.\n     * @param {string} [opt_escapeChar] Escape character which can be used to escape\n     *    the pattern characters. Default is '!'.\n     * @param {boolean} [opt_matchCase] Case-sensitive?\n     */\n    function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n        var _this = _super.call(this, 'PropertyIsLike', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.pattern = pattern;\n        /**\n         * @type {!string}\n         */\n        _this.wildCard = opt_wildCard !== undefined ? opt_wildCard : '*';\n        /**\n         * @type {!string}\n         */\n        _this.singleChar = opt_singleChar !== undefined ? opt_singleChar : '.';\n        /**\n         * @type {!string}\n         */\n        _this.escapeChar = opt_escapeChar !== undefined ? opt_escapeChar : '!';\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return IsLike;\n}(Comparison));\nexport default IsLike;\n"]},"metadata":{},"sourceType":"module"}