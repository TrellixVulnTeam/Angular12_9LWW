{"ast":null,"code":"import { LanguageService } from '@igo2/core';\nimport { IgoMap, DataSourceService, LayerService, FeatureStore, FeatureStoreLoadingStrategy, FeatureStoreSelectionStrategy, FeatureMotion } from '@igo2/geo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@igo2/core\";\nimport * as i2 from \"@igo2/geo\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@igo2/common\";\nexport let AppFeatureComponent = /*#__PURE__*/(() => {\n  class AppFeatureComponent {\n    constructor(languageService, dataSourceService, layerService) {\n      this.languageService = languageService;\n      this.dataSourceService = dataSourceService;\n      this.layerService = layerService;\n      this.map = new IgoMap({\n        controls: {\n          attribution: {\n            collapsed: true\n          }\n        }\n      });\n      this.view = {\n        center: [-73, 47.2],\n        zoom: 6\n      };\n      this.tableTemplate = {\n        selection: true,\n        selectMany: true,\n        sort: true,\n        columns: [{\n          name: 'properties.id',\n          title: 'ID'\n        }, {\n          name: 'properties.name',\n          title: 'Name'\n        }, {\n          name: 'properties.description',\n          title: 'Description'\n        }]\n      };\n      this.store = new FeatureStore([], {\n        map: this.map\n      });\n    }\n\n    ngOnInit() {\n      const loadingStrategy = new FeatureStoreLoadingStrategy({});\n      this.store.addStrategy(loadingStrategy);\n      const selectionStrategy = new FeatureStoreSelectionStrategy({\n        map: this.map,\n        motion: FeatureMotion.Default\n      });\n      this.store.addStrategy(selectionStrategy);\n      this.store.load([{\n        meta: {\n          id: 1\n        },\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-72, 47.8]\n        },\n        projection: 'EPSG:4326',\n        properties: {\n          id: 1,\n          name: 'Name 1',\n          description: 'Description 1'\n        }\n      }, {\n        meta: {\n          id: 2\n        },\n        type: 'Feature',\n        geometry: {\n          type: 'LineString',\n          coordinates: [[-72, 47.8], [-73.5, 47.4], [-72.4, 48.6]]\n        },\n        projection: 'EPSG:4326',\n        properties: {\n          id: 2,\n          name: 'Name 2',\n          description: 'Description 2'\n        }\n      }, {\n        meta: {\n          id: 3\n        },\n        type: 'Feature',\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[[-71, 46.8], [-73, 47], [-71.2, 46.6]]]\n        },\n        projection: 'EPSG:4326',\n        properties: {\n          id: 3,\n          name: 'Name 3',\n          description: 'Description 3'\n        }\n      }]);\n      this.layerService.createAsyncLayer({\n        title: 'MVT test',\n        visible: true,\n        sourceOptions: {\n          type: 'mvt',\n          url: 'https://ahocevar.com/geoserver/gwc/service/tms/1.0.0/ne:ne_10m_admin_0_countries@EPSG:900913@pbf/{z}/{x}/{-y}.pbf',\n          queryable: true\n        },\n        mapboxStyle: {\n          url: 'assets/mapboxStyleExample-vectortile.json',\n          source: 'ahocevar'\n        }\n      }).subscribe(l => this.map.addLayer(l));\n      this.dataSourceService.createAsyncDataSource({\n        type: 'vector'\n      }).subscribe(dataSource => {\n        const layer = this.layerService.createLayer({\n          title: 'Vector Layer',\n          source: dataSource,\n          animation: {\n            duration: 2000\n          },\n          mapboxStyle: {\n            url: 'assets/mapboxStyleExample-feature.json',\n            source: 'source_nameX'\n          }\n        });\n        this.map.addLayer(layer);\n        this.store.bindLayer(layer);\n        loadingStrategy.activate();\n        selectionStrategy.activate();\n      });\n    }\n\n    ngOnDestroy() {\n      this.store.destroy();\n    }\n\n  }\n\n  AppFeatureComponent.ɵfac = function AppFeatureComponent_Factory(t) {\n    return new (t || AppFeatureComponent)(i0.ɵɵdirectiveInject(i1.LanguageService), i0.ɵɵdirectiveInject(i2.DataSourceService), i0.ɵɵdirectiveInject(i2.LayerService));\n  };\n\n  AppFeatureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppFeatureComponent,\n    selectors: [[\"app-feature\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[\"href\", \"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/geom/feature\"], [3, \"map\", \"view\"], [\"color\", \"primary\", 3, \"map\"], [3, \"store\", \"template\"]],\n    template: function AppFeatureComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-subtitle\");\n        i0.ɵɵtext(2, \"Geo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Feature\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵtext(6, \" See the \");\n        i0.ɵɵelementStart(7, \"a\", 0);\n        i0.ɵɵtext(8, \"code of this example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"igo-map-browser\", 1);\n        i0.ɵɵelement(10, \"igo-zoom-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"igo-entity-table\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"map\", ctx.map)(\"view\", ctx.view);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"map\", ctx.map);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"store\", ctx.store)(\"template\", ctx.tableTemplate);\n      }\n    },\n    directives: [i3.MatCard, i3.MatCardSubtitle, i3.MatCardTitle, i3.MatCardContent, i2.MapBrowserComponent, i2.ZoomButtonComponent, i4.EntityTableComponent],\n    styles: [\"igo-map-browser[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 300px;\\n}\\n\\nigo-panel[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZlYXR1cmUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGlCQUFBO0FBQ0YiLCJmaWxlIjoiZmVhdHVyZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlnby1tYXAtYnJvd3NlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDMwMHB4O1xufVxuXG5pZ28tcGFuZWwge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy10b3A6IDEwcHg7XG59XG4iXX0= */\"]\n  });\n  return AppFeatureComponent;\n})();","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\demo\\src\\app\\geo\\feature\\feature.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\demo\\src\\app\\geo\\feature\\feature.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { LanguageService } from '@igo2/core';\nimport {\n  IgoMap,\n  DataSourceService,\n  LayerService,\n  VectorLayer,\n  FeatureStore,\n  FeatureStoreLoadingStrategy,\n  FeatureStoreSelectionStrategy,\n  FeatureMotion\n} from '@igo2/geo';\n\n@Component({\n  selector: 'app-feature',\n  templateUrl: './feature.component.html',\n  styleUrls: ['./feature.component.scss']\n})\nexport class AppFeatureComponent implements OnInit, OnDestroy {\n  public map = new IgoMap({\n    controls: {\n      attribution: {\n        collapsed: true\n      }\n    }\n  });\n\n  public view = {\n    center: [-73, 47.2],\n    zoom: 6\n  };\n\n  public tableTemplate = {\n    selection: true,\n    selectMany: true,\n    sort: true,\n    columns: [\n      {\n        name: 'properties.id',\n        title: 'ID'\n      },\n      {\n        name: 'properties.name',\n        title: 'Name'\n      },\n      {\n        name: 'properties.description',\n        title: 'Description'\n      }\n    ]\n  };\n\n  public store = new FeatureStore([], { map: this.map });\n\n  constructor(\n    private languageService: LanguageService,\n    private dataSourceService: DataSourceService,\n    private layerService: LayerService\n  ) {}\n\n  ngOnInit() {\n    const loadingStrategy = new FeatureStoreLoadingStrategy({});\n    this.store.addStrategy(loadingStrategy);\n\n    const selectionStrategy = new FeatureStoreSelectionStrategy({\n      map: this.map,\n      motion: FeatureMotion.Default\n    });\n    this.store.addStrategy(selectionStrategy);\n\n    this.store.load([\n      {\n        meta: { id: 1 },\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-72, 47.8]\n        },\n        projection: 'EPSG:4326',\n        properties: {\n          id: 1,\n          name: 'Name 1',\n          description: 'Description 1'\n        }\n      },\n      {\n        meta: { id: 2 },\n        type: 'Feature',\n        geometry: {\n          type: 'LineString',\n          coordinates: [[-72, 47.8], [-73.5, 47.4], [-72.4, 48.6]]\n        },\n        projection: 'EPSG:4326',\n        properties: {\n          id: 2,\n          name: 'Name 2',\n          description: 'Description 2'\n        }\n      },\n      {\n        meta: { id: 3 },\n        type: 'Feature',\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[[-71, 46.8], [-73, 47], [-71.2, 46.6]]]\n        },\n        projection: 'EPSG:4326',\n        properties: {\n          id: 3,\n          name: 'Name 3',\n          description: 'Description 3'\n        }\n      }\n    ]);\n\n    this.layerService\n      .createAsyncLayer({\n        title: 'MVT test',\n        visible: true,\n        sourceOptions: {\n          type: 'mvt',\n          url:\n            'https://ahocevar.com/geoserver/gwc/service/tms/1.0.0/ne:ne_10m_admin_0_countries@EPSG:900913@pbf/{z}/{x}/{-y}.pbf',\n          queryable: true\n        },\n        mapboxStyle: {\n          url: 'assets/mapboxStyleExample-vectortile.json',\n          source: 'ahocevar'\n        }\n      } as any)\n      .subscribe(l => this.map.addLayer(l));\n\n    this.dataSourceService\n      .createAsyncDataSource({\n        type: 'vector'\n      })\n      .subscribe(dataSource => {\n        const layer = this.layerService.createLayer({\n          title: 'Vector Layer',\n          source: dataSource,\n          animation: {\n            duration: 2000\n          },\n          mapboxStyle: {\n            url: 'assets/mapboxStyleExample-feature.json',\n            source: 'source_nameX'\n          }\n        }) as VectorLayer;\n        this.map.addLayer(layer);\n        this.store.bindLayer(layer);\n        loadingStrategy.activate();\n        selectionStrategy.activate();\n      });\n  }\n\n  ngOnDestroy() {\n    this.store.destroy();\n  }\n}\n","<mat-card>\n  <mat-card-subtitle>Geo</mat-card-subtitle>\n  <mat-card-title>Feature</mat-card-title>\n  <mat-card-content>\n    See the <a href=\"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/geom/feature\">code of this example</a>\n  </mat-card-content>\n\n  <igo-map-browser [map]=\"map\" [view]=\"view\">\n    <igo-zoom-button [map]=\"map\" color=\"primary\"></igo-zoom-button>\n  </igo-map-browser>\n\n  <igo-entity-table\n    [store]=\"store\"\n    [template]=\"tableTemplate\">\n  </igo-entity-table>\n</mat-card>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}