{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Base\n */\n\n\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\n\nvar BaseLayer = function (_super) {\n  __extends(BaseLayer, _super);\n  /**\n   * @param {Options} options Layer options.\n   */\n\n\n  function BaseLayer(options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n\n\n    _this.on;\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * @type {Object<string, *>}\n     */\n\n    var properties = assign({}, options);\n\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] = options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] = options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] = options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] = options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] = options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] = options.maxZoom !== undefined ? options.maxZoom : Infinity;\n    /**\n     * @type {string}\n     * @private\n     */\n\n    _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    _this.setProperties(properties);\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n\n\n    _this.state_ = null;\n    return _this;\n  }\n  /**\n   * @return {string} CSS class name.\n   */\n\n\n  BaseLayer.prototype.getClassName = function () {\n    return this.className_;\n  };\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n\n\n  BaseLayer.prototype.getLayerState = function (opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || {\n      layer: this,\n      managed: opt_managed === undefined ? true : opt_managed\n    };\n    var zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n    return state;\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n\n\n  BaseLayer.prototype.getLayersArray = function (opt_array) {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n\n\n  BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n    return abstract();\n  };\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getExtent = function () {\n    return this.get(LayerProperty.EXTENT);\n  };\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMaxResolution = function () {\n    return this.get(LayerProperty.MAX_RESOLUTION);\n  };\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMinResolution = function () {\n    return this.get(LayerProperty.MIN_RESOLUTION);\n  };\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMinZoom = function () {\n    return this.get(LayerProperty.MIN_ZOOM);\n  };\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMaxZoom = function () {\n    return this.get(LayerProperty.MAX_ZOOM);\n  };\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getOpacity = function () {\n    return this.get(LayerProperty.OPACITY);\n  };\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n\n\n  BaseLayer.prototype.getSourceState = function () {\n    return abstract();\n  };\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getVisible = function () {\n    return this.get(LayerProperty.VISIBLE);\n  };\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getZIndex = function () {\n    return this.get(LayerProperty.Z_INDEX);\n  };\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setExtent = function (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMinResolution = function (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  };\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMinZoom = function (minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  };\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setOpacity = function (opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setVisible = function (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setZIndex = function (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n  /**\n   * Clean up.\n   */\n\n\n  BaseLayer.prototype.disposeInternal = function () {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n\n    _super.prototype.disposeInternal.call(this);\n  };\n\n  return BaseLayer;\n}(BaseObject);\n\nexport default BaseLayer;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/layer/Base.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","BaseObject","LayerProperty","abstract","assert","assign","clamp","BaseLayer","_super","options","_this","on","once","un","properties","OPACITY","opacity","undefined","VISIBLE","visible","Z_INDEX","zIndex","MAX_RESOLUTION","maxResolution","Infinity","MIN_RESOLUTION","minResolution","MIN_ZOOM","minZoom","MAX_ZOOM","maxZoom","className_","className","setProperties","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","Math","round","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getMaxResolution","max","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","get","EXTENT","setExtent","set","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","disposeInternal"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {BaseLayerOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        if (typeof options.properties === 'object') {\n            delete properties.properties;\n            assign(properties, options.properties);\n        }\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean} [opt_managed] Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n"]},"metadata":{},"sourceType":"module"}