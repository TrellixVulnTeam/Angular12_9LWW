{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n  }\n}\n\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7._changePageSize($event.value);\n    });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n  }\n}\n\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n  }\n}\n\nfunction MatPaginator_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n  }\n}\n\nfunction MatPaginator_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.firstPage();\n    });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n  }\n}\n\nfunction MatPaginator_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.lastPage();\n    });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n  }\n}\n\nlet MatPaginatorIntl = /*#__PURE__*/(() => {\n  class MatPaginatorIntl {\n    constructor() {\n      /**\n       * Stream to emit from when labels are changed. Use this to notify components when the labels have\n       * changed after initialization.\n       */\n      this.changes = new Subject();\n      /** A label for the page size selector. */\n\n      this.itemsPerPageLabel = 'Items per page:';\n      /** A label for the button that increments the current page. */\n\n      this.nextPageLabel = 'Next page';\n      /** A label for the button that decrements the current page. */\n\n      this.previousPageLabel = 'Previous page';\n      /** A label for the button that moves to the first page. */\n\n      this.firstPageLabel = 'First page';\n      /** A label for the button that moves to the last page. */\n\n      this.lastPageLabel = 'Last page';\n      /** A label for the range of items within the current page and the length of the whole list. */\n\n      this.getRangeLabel = (page, pageSize, length) => {\n        if (length == 0 || pageSize == 0) {\n          return `0 of ${length}`;\n        }\n\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize; // If the start index exceeds the list length, do not try and fix the end index to the end.\n\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n        return `${startIndex + 1} – ${endIndex} of ${length}`;\n      };\n    }\n\n  }\n\n  MatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) {\n    return new (t || MatPaginatorIntl)();\n  };\n\n  MatPaginatorIntl.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MatPaginatorIntl_Factory() {\n      return new MatPaginatorIntl();\n    },\n    token: MatPaginatorIntl,\n    providedIn: \"root\"\n  });\n  return MatPaginatorIntl;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\n\n\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\n\n\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The default page size if there is no page size and there are no provided page size options. */\n\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\n\nclass PageEvent {}\n/** Injection token that can be used to provide the default options for the paginator module. */\n\n\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS'); // Boilerplate for applying mixins to _MatPaginatorBase.\n\n/** @docs-private */\n\nconst _MatPaginatorMixinBase = /*#__PURE__*/mixinDisabled( /*#__PURE__*/mixinInitialized(class {}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\n\n\nlet _MatPaginatorBase = /*#__PURE__*/(() => {\n  class _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n      super();\n      this._intl = _intl;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._pageIndex = 0;\n      this._length = 0;\n      this._pageSizeOptions = [];\n      this._hidePageSize = false;\n      this._showFirstLastButtons = false;\n      /** Event emitted when the paginator changes the page size or page index. */\n\n      this.page = new EventEmitter();\n      this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n\n      if (defaults) {\n        const {\n          pageSize,\n          pageSizeOptions,\n          hidePageSize,\n          showFirstLastButtons\n        } = defaults;\n\n        if (pageSize != null) {\n          this._pageSize = pageSize;\n        }\n\n        if (pageSizeOptions != null) {\n          this._pageSizeOptions = pageSizeOptions;\n        }\n\n        if (hidePageSize != null) {\n          this._hidePageSize = hidePageSize;\n        }\n\n        if (showFirstLastButtons != null) {\n          this._showFirstLastButtons = showFirstLastButtons;\n        }\n      }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n\n\n    get pageIndex() {\n      return this._pageIndex;\n    }\n\n    set pageIndex(value) {\n      this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n\n\n    get length() {\n      return this._length;\n    }\n\n    set length(value) {\n      this._length = coerceNumberProperty(value);\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n\n\n    get pageSize() {\n      return this._pageSize;\n    }\n\n    set pageSize(value) {\n      this._pageSize = Math.max(coerceNumberProperty(value), 0);\n\n      this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n\n\n    get pageSizeOptions() {\n      return this._pageSizeOptions;\n    }\n\n    set pageSizeOptions(value) {\n      this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n\n      this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n\n\n    get hidePageSize() {\n      return this._hidePageSize;\n    }\n\n    set hidePageSize(value) {\n      this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n\n\n    get showFirstLastButtons() {\n      return this._showFirstLastButtons;\n    }\n\n    set showFirstLastButtons(value) {\n      this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n\n    ngOnInit() {\n      this._initialized = true;\n\n      this._updateDisplayedPageSizeOptions();\n\n      this._markInitialized();\n    }\n\n    ngOnDestroy() {\n      this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n\n\n    nextPage() {\n      if (!this.hasNextPage()) {\n        return;\n      }\n\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex++;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n\n\n    previousPage() {\n      if (!this.hasPreviousPage()) {\n        return;\n      }\n\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex--;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n\n\n    firstPage() {\n      // hasPreviousPage being false implies at the start\n      if (!this.hasPreviousPage()) {\n        return;\n      }\n\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = 0;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n\n\n    lastPage() {\n      // hasNextPage being false implies at the end\n      if (!this.hasNextPage()) {\n        return;\n      }\n\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = this.getNumberOfPages() - 1;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n\n\n    hasPreviousPage() {\n      return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n\n\n    hasNextPage() {\n      const maxPageIndex = this.getNumberOfPages() - 1;\n      return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n\n\n    getNumberOfPages() {\n      if (!this.pageSize) {\n        return 0;\n      }\n\n      return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n\n\n    _changePageSize(pageSize) {\n      // Current page needs to be updated to reflect the new page size. Navigate to the page\n      // containing the previous page's first item.\n      const startIndex = this.pageIndex * this.pageSize;\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n      this.pageSize = pageSize;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n\n\n    _nextButtonsDisabled() {\n      return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n\n\n    _previousButtonsDisabled() {\n      return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n\n\n    _updateDisplayedPageSizeOptions() {\n      if (!this._initialized) {\n        return;\n      } // If no page size is provided, use the first page size option or the default page size.\n\n\n      if (!this.pageSize) {\n        this._pageSize = this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n      }\n\n      this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n      if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n        this._displayedPageSizeOptions.push(this.pageSize);\n      } // Sort the numbers using a number-specific sort function.\n\n\n      this._displayedPageSizeOptions.sort((a, b) => a - b);\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n\n\n    _emitPageEvent(previousPageIndex) {\n      this.page.emit({\n        previousPageIndex,\n        pageIndex: this.pageIndex,\n        pageSize: this.pageSize,\n        length: this.length\n      });\n    }\n\n  }\n\n  _MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) {\n    return new (t || _MatPaginatorBase)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined));\n  };\n\n  _MatPaginatorBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatPaginatorBase,\n    inputs: {\n      pageIndex: \"pageIndex\",\n      length: \"length\",\n      pageSize: \"pageSize\",\n      pageSizeOptions: \"pageSizeOptions\",\n      hidePageSize: \"hidePageSize\",\n      showFirstLastButtons: \"showFirstLastButtons\",\n      color: \"color\"\n    },\n    outputs: {\n      page: \"page\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatPaginatorBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\n\n\nlet MatPaginator = /*#__PURE__*/(() => {\n  class MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n      super(intl, changeDetectorRef, defaults);\n\n      if (defaults && defaults.formFieldAppearance != null) {\n        this._formFieldAppearance = defaults.formFieldAppearance;\n      }\n    }\n\n  }\n\n  MatPaginator.ɵfac = function MatPaginator_Factory(t) {\n    return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8));\n  };\n\n  MatPaginator.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatPaginator,\n    selectors: [[\"mat-paginator\"]],\n    hostAttrs: [\"role\", \"group\", 1, \"mat-paginator\"],\n    inputs: {\n      disabled: \"disabled\"\n    },\n    exportAs: [\"matPaginator\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 14,\n    vars: 14,\n    consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],\n    template: function MatPaginator_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() {\n          return ctx.previousPage();\n        });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() {\n          return ctx.nextPage();\n        });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption],\n    styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatPaginator;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet MatPaginatorModule = /*#__PURE__*/(() => {\n  class MatPaginatorModule {}\n\n  MatPaginatorModule.ɵfac = function MatPaginatorModule_Factory(t) {\n    return new (t || MatPaginatorModule)();\n  };\n\n  MatPaginatorModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatPaginatorModule\n  });\n  MatPaginatorModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n    imports: [[CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule]]\n  });\n  return MatPaginatorModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, {\n    declarations: function () {\n      return [MatPaginator];\n    },\n    imports: function () {\n      return [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule];\n    },\n    exports: function () {\n      return [MatPaginator];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/@angular/material/fesm2015/paginator.js"],"names":["CommonModule","i0","Injectable","Optional","SkipSelf","InjectionToken","EventEmitter","Directive","ChangeDetectorRef","Input","Output","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","NgModule","mixinDisabled","mixinInitialized","MatCommonModule","MatButtonModule","MatSelectModule","MatTooltipModule","coerceNumberProperty","coerceBooleanProperty","Subject","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","pageSizeOption_r6","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","MatPaginator_div_2_mat_form_field_3_Template","_r8","ɵɵgetCurrentView","ɵɵlistener","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","$event","ɵɵrestoreView","ctx_r7","ɵɵnextContext","_changePageSize","value","ɵɵtemplate","ctx_r3","_formFieldAppearance","color","pageSize","disabled","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","ɵɵtextInterpolate","MatPaginator_div_2_Template","ctx_r0","length","MatPaginator_button_6_Template","_r10","MatPaginator_button_6_Template_button_click_0_listener","ctx_r9","firstPage","ɵɵnamespaceSVG","ɵɵelement","ctx_r1","firstPageLabel","_previousButtonsDisabled","ɵɵattribute","MatPaginator_button_13_Template","_r12","ɵɵnamespaceHTML","MatPaginator_button_13_Template_button_click_0_listener","ctx_r11","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","constructor","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","max","startIndex","endIndex","min","ɵfac","MatPaginatorIntl_Factory","t","ɵprov","ɵɵdefineInjectable","factory","token","providedIn","ngDevMode","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","_changeDetectorRef","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","pageIndex","_updateDisplayedPageSizeOptions","map","p","ngOnInit","_initialized","_markInitialized","ngOnDestroy","unsubscribe","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","push","sort","a","b","emit","_MatPaginatorBase_Factory","ɵɵdirectiveInject","undefined","ɵdir","ɵɵdefineDirective","type","inputs","outputs","features","ɵɵInheritDefinitionFeature","MatPaginator","intl","changeDetectorRef","formFieldAppearance","MatPaginator_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","exportAs","decls","vars","consts","template","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","MatPaginator_Template_button_click_10_listener","directives","NgIf","MatButton","MatTooltip","MatFormField","MatSelect","NgForOf","MatOption","styles","encapsulation","changeDetection","MatPaginatorModule","MatPaginatorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\nMatPaginatorIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons, } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() { return this._pageIndex; }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() { return this._length; }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() { return this._pageSize; }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() { return this._hidePageSize; }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) { return new (t || _MatPaginatorBase)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined)); };\n_MatPaginatorBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatPaginatorBase, inputs: { pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatPaginatorBase.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined }\n];\n_MatPaginatorBase.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatPaginatorBase, [{\n        type: Directive\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-paginator\"], inputs: { disabled: \"disabled\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator',\n                    'role': 'group'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); };\nMatPaginatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                    MatCommonModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatCommonModule]; }, exports: function () { return [MatPaginator]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n\n"]},"metadata":{},"sourceType":"module"}