{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/VectorTile\n */\n\n\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nvar VectorTile = function (_super) {\n  __extends(VectorTile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n\n\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n    var _this = _super.call(this, tileCoord, state, opt_options) || this;\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n\n\n    _this.extent = null;\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n\n    _this.format_ = format;\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n\n    _this.features_ = null;\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n\n    _this.loader_;\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n\n    _this.projection = null;\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n\n    _this.resolution;\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n\n    _this.tileLoadFunction_ = tileLoadFunction;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.url_ = src;\n    _this.key = src;\n    return _this;\n  }\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n\n\n  VectorTile.prototype.getFormat = function () {\n    return this.format_;\n  };\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n\n\n  VectorTile.prototype.getFeatures = function () {\n    return this.features_;\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  VectorTile.prototype.load = function () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  };\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n\n\n  VectorTile.prototype.onLoad = function (features, dataProjection) {\n    this.setFeatures(features);\n  };\n  /**\n   * Handler for tile load errors.\n   */\n\n\n  VectorTile.prototype.onError = function () {\n    this.setState(TileState.ERROR);\n  };\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n\n\n  VectorTile.prototype.setFeatures = function (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n\n\n  VectorTile.prototype.setLoader = function (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile);\n\nexport default VectorTile;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/VectorTile.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Tile","TileState","VectorTile","_super","tileCoord","state","src","format","tileLoadFunction","opt_options","_this","extent","format_","features_","loader_","projection","resolution","tileLoadFunction_","url_","key","getFormat","getFeatures","load","IDLE","setState","LOADING","onLoad","features","dataProjection","setFeatures","onError","ERROR","LOADED","setLoader","loader"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Data source url.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n     */\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * Extent of this tile; set by the source.\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = null;\n        /**\n         * @private\n         * @type {import(\"./format/Feature.js\").default}\n         */\n        _this.format_ = format;\n        /**\n         * @private\n         * @type {Array<import(\"./Feature.js\").default>}\n         */\n        _this.features_ = null;\n        /**\n         * @private\n         * @type {import(\"./featureloader.js\").FeatureLoader}\n         */\n        _this.loader_;\n        /**\n         * Feature projection of this tile; set by the source.\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection = null;\n        /**\n         * Resolution of this tile; set by the source.\n         * @type {number}\n         */\n        _this.resolution;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = src;\n        _this.key = src;\n        return _this;\n    }\n    /**\n     * Get the feature format assigned for reading this tile's features.\n     * @return {import(\"./format/Feature.js\").default} Feature format.\n     * @api\n     */\n    VectorTile.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    VectorTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.setState(TileState.LOADING);\n            this.tileLoadFunction_(this, this.url_);\n            if (this.loader_) {\n                this.loader_(this.extent, this.resolution, this.projection);\n            }\n        }\n    };\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n    VectorTile.prototype.onLoad = function (features, dataProjection) {\n        this.setFeatures(features);\n    };\n    /**\n     * Handler for tile load errors.\n     */\n    VectorTile.prototype.onError = function () {\n        this.setState(TileState.ERROR);\n    };\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n    VectorTile.prototype.setFeatures = function (features) {\n        this.features_ = features;\n        this.setState(TileState.LOADED);\n    };\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n    VectorTile.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    return VectorTile;\n}(Tile));\nexport default VectorTile;\n"]},"metadata":{},"sourceType":"module"}