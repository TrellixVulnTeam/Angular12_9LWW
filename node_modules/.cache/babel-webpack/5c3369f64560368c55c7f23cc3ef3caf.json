{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/style/Icon\n */\n\n\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\n\nvar Icon = function (_super) {\n  __extends(Icon, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function Icon(opt_options) {\n    var _this = this;\n\n    var options = opt_options || {};\n    /**\n     * @type {number}\n     */\n\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n    /**\n     * @type {number}\n     */\n\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n\n    var scale = options.scale !== undefined ? options.scale : 1;\n    /**\n     * @type {boolean}\n     */\n\n    var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n    _this = _super.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView\n    }) || this;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.normalizedAnchor_ = null;\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n\n    _this.anchorOrigin_ = options.anchorOrigin !== undefined ? options.anchorOrigin : IconOrigin.TOP_LEFT;\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n\n    _this.anchorXUnits_ = options.anchorXUnits !== undefined ? options.anchorXUnits : IconAnchorUnits.FRACTION;\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n\n    _this.anchorYUnits_ = options.anchorYUnits !== undefined ? options.anchorYUnits : IconAnchorUnits.FRACTION;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    var image = options.img !== undefined ? options.img : null;\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n    /**\n     * @type {string|undefined}\n     */\n\n    var src = options.src;\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n\n    assert(!image || image && imgSize, 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src =\n      /** @type {HTMLImageElement} */\n      image.src || getUid(image);\n    }\n\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n\n    var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n\n    _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n\n    _this.iconImage_ = getIconImage(image, src, imgSize, _this.crossOrigin_, imageState, _this.color_);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n\n    _this.offsetOrigin_ = options.offsetOrigin !== undefined ? options.offsetOrigin : IconOrigin.TOP_LEFT;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.origin_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    _this.size_ = options.size !== undefined ? options.size : null;\n    return _this;\n  }\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n\n\n  Icon.prototype.clone = function () {\n    var scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: this.color_ && this.color_.slice ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n\n\n  Icon.prototype.getAnchor = function () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n\n    var anchor = this.anchor_;\n    var size = this.getSize();\n\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION || this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n\n      anchor = this.anchor_.slice();\n\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT || this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT || this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n\n    var displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n\n\n  Icon.prototype.setAnchor = function (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n\n\n  Icon.prototype.getColor = function () {\n    return this.color_;\n  };\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n\n\n  Icon.prototype.getImage = function (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n\n\n  Icon.prototype.getPixelRatio = function (pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  Icon.prototype.getImageSize = function () {\n    return this.iconImage_.getSize();\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  Icon.prototype.getImageState = function () {\n    return this.iconImage_.getImageState();\n  };\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n\n\n  Icon.prototype.getHitDetectionImage = function () {\n    return this.iconImage_.getHitDetectionImage();\n  };\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n\n\n  Icon.prototype.getOrigin = function () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n\n      if (!size || !iconImageSize) {\n        return null;\n      }\n\n      offset = offset.slice();\n\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT || this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT || this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n\n    this.origin_ = offset;\n    return this.origin_;\n  };\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n\n\n  Icon.prototype.getSrc = function () {\n    return this.iconImage_.getSrc();\n  };\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n\n\n  Icon.prototype.getSize = function () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  Icon.prototype.listenImageChange = function (listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  };\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n\n\n  Icon.prototype.load = function () {\n    this.iconImage_.load();\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  Icon.prototype.unlistenImageChange = function (listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  };\n\n  return Icon;\n}(ImageStyle);\n\nexport default Icon;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/style/Icon.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","EventType","IconAnchorUnits","IconOrigin","ImageState","ImageStyle","asArray","assert","get","getIconImage","getUid","Icon","_super","opt_options","_this","options","opacity","undefined","rotation","scale","rotateWithView","displacement","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","TOP_LEFT","anchorXUnits_","anchorXUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","crossOrigin","image","img","imgSize","src","length","imageState","IDLE","LOADED","color_","color","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","origin_","size_","size","clone","getScale","slice","getSrc","getOpacity","isArray","getRotation","getRotateWithView","getAnchor","getSize","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","getDisplacement","setAnchor","getColor","getImage","pixelRatio","getPixelRatio","getImageSize","getImageState","getHitDetectionImage","getOrigin","iconImageSize","listenImageChange","listener","addEventListener","CHANGE","load","unlistenImageChange","removeEventListener"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        var displacement = this.getDisplacement();\n        anchor[0] -= displacement[0];\n        anchor[1] += displacement[1];\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}