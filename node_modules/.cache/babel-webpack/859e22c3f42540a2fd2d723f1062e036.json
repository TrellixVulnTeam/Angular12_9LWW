{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@igo2/common\";\nimport * as i3 from \"@angular/material/button\";\nexport let AppSalutationComponent = /*#__PURE__*/(() => {\n  class AppSalutationComponent {\n    constructor(cdRef) {\n      this.cdRef = cdRef;\n    }\n\n    onUpdateInputs() {\n      this.cdRef.detectChanges();\n    }\n\n  }\n\n  AppSalutationComponent.ɵfac = function AppSalutationComponent_Factory(t) {\n    return new (t || AppSalutationComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  AppSalutationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppSalutationComponent,\n    selectors: [[\"app-salutation-component\"]],\n    inputs: {\n      name: \"name\"\n    },\n    decls: 2,\n    vars: 1,\n    template: function AppSalutationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Hello, my name is \", ctx.name, \".\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return AppSalutationComponent;\n})();\nexport let AppExplanationComponent = /*#__PURE__*/(() => {\n  class AppExplanationComponent {\n    constructor(cdRef) {\n      this.cdRef = cdRef;\n    }\n\n    onUpdateInputs() {\n      this.cdRef.detectChanges();\n    }\n\n  }\n\n  AppExplanationComponent.ɵfac = function AppExplanationComponent_Factory(t) {\n    return new (t || AppExplanationComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  AppExplanationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppExplanationComponent,\n    selectors: [[\"app-explanation-component\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppExplanationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"I am a dynamic component, rendered into an IgoDynamicOutlet.\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return AppExplanationComponent;\n})();\nexport let AppDynamicComponentComponent = /*#__PURE__*/(() => {\n  class AppDynamicComponentComponent {\n    constructor() {\n      this.component = AppSalutationComponent;\n      this.inputs = {\n        name: 'Bob'\n      };\n    }\n\n    toggleComponent() {\n      this.component = this.component === AppSalutationComponent ? AppExplanationComponent : AppSalutationComponent;\n    }\n\n  }\n\n  AppDynamicComponentComponent.ɵfac = function AppDynamicComponentComponent_Factory(t) {\n    return new (t || AppDynamicComponentComponent)();\n  };\n\n  AppDynamicComponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppDynamicComponentComponent,\n    selectors: [[\"app-dynamic-component\"]],\n    decls: 12,\n    vars: 2,\n    consts: [[\"href\", \"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/common/dynamic-component\"], [3, \"component\", \"inputs\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function AppDynamicComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-subtitle\");\n        i0.ɵɵtext(2, \"Common\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Dynamic Component\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵtext(6, \" See the \");\n        i0.ɵɵelementStart(7, \"a\", 0);\n        i0.ɵɵtext(8, \"code of this example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"igo-dynamic-outlet\", 1);\n        i0.ɵɵelementStart(10, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AppDynamicComponentComponent_Template_button_click_10_listener() {\n          return ctx.toggleComponent();\n        });\n        i0.ɵɵtext(11, \"Toggle Component\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"component\", ctx.component)(\"inputs\", ctx.inputs);\n      }\n    },\n    directives: [i1.MatCard, i1.MatCardSubtitle, i1.MatCardTitle, i1.MatCardContent, i2.DynamicOutletComponent, i3.MatButton],\n    styles: [\"pre[_ngcontent-%COMP%], code[_ngcontent-%COMP%] {\\n  font-family: monospace, monospace;\\n}\\n\\npre[_ngcontent-%COMP%] {\\n  overflow: auto;\\n}\\n\\npre[_ngcontent-%COMP%]    > code[_ngcontent-%COMP%] {\\n  display: block;\\n  padding: 1rem;\\n  word-wrap: normal;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImR5bmFtaWMtY29tcG9uZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLGlDQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxjQUFBO0FBRUY7O0FBQUE7RUFDRSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGlCQUFBO0FBR0YiLCJmaWxlIjoiZHluYW1pYy1jb21wb25lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwcmUsXG5jb2RlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xufVxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5wcmUgPiBjb2RlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDFyZW07XG4gIHdvcmQtd3JhcDogbm9ybWFsO1xufVxuIl19 */\"]\n  });\n  return AppDynamicComponentComponent;\n})();","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\common\\dynamic-component\\dynamic-component.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\common\\dynamic-component\\dynamic-component.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\nimport { OnUpdateInputs } from '@igo2/common';\n\n@Component({\n  selector: 'app-salutation-component',\n  template: '<p>Hello, my name is {{name}}.</p>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppSalutationComponent implements OnUpdateInputs {\n\n  @Input() name: string;\n\n  constructor(private cdRef: ChangeDetectorRef) {}\n\n  onUpdateInputs() {\n    this.cdRef.detectChanges();\n  }\n\n}\n\n@Component({\n  selector: 'app-explanation-component',\n  template: '<p>I am a dynamic component, rendered into an IgoDynamicOutlet.</p>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppExplanationComponent implements OnUpdateInputs {\n\n  constructor(private cdRef: ChangeDetectorRef) {}\n\n  onUpdateInputs() {\n    this.cdRef.detectChanges();\n  }\n\n}\n\n@Component({\n  selector: 'app-dynamic-component',\n  templateUrl: './dynamic-component.component.html',\n  styleUrls: ['./dynamic-component.component.scss']\n})\nexport class AppDynamicComponentComponent {\n\n  component: any = AppSalutationComponent;\n\n  inputs = {name: 'Bob'};\n\n  toggleComponent() {\n    this.component = this.component === AppSalutationComponent ?\n      AppExplanationComponent :\n      AppSalutationComponent;\n  }\n\n}\n","<mat-card>\n  <mat-card-subtitle>Common</mat-card-subtitle>\n  <mat-card-title>Dynamic Component</mat-card-title>\n  <mat-card-content>\n    See the <a href=\"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/common/dynamic-component\">code of this example</a>\n  </mat-card-content>\n\n  <igo-dynamic-outlet\n    [component]=\"component\"\n    [inputs]=\"inputs\">\n  </igo-dynamic-outlet>\n\n  <button mat-flat-button color=\"primary\" (click)=\"toggleComponent()\">Toggle Component</button>\n</mat-card>\n\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}