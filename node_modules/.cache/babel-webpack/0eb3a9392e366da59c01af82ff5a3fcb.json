{"ast":null,"code":"/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { StringUtils, UrlString } from '@azure/msal-common';\nimport { InteractionHandler } from './InteractionHandler.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { TemporaryCacheKeys, BrowserConstants } from '../utils/BrowserConstants.js';\nimport { PopupUtils } from '../utils/PopupUtils.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\n\nvar PopupHandler = function (_super) {\n  __extends(PopupHandler, _super);\n\n  function PopupHandler(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger) {\n    var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, browserRequestLogger) || this; // Properly sets this reference for the unload event.\n\n\n    _this.popupUtils = new PopupUtils(storageImpl, browserRequestLogger);\n    return _this;\n  }\n  /**\r\n   * Opens a popup window with given request Url.\r\n   * @param requestUrl\r\n   */\n\n\n  PopupHandler.prototype.initiateAuthRequest = function (requestUrl, params) {\n    // Check that request url is not empty.\n    if (!StringUtils.isEmpty(requestUrl)) {\n      // Set interaction status in the library.\n      this.browserStorage.setTemporaryCache(TemporaryCacheKeys.INTERACTION_STATUS_KEY, BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, true);\n      this.browserRequestLogger.infoPii(\"Navigate to: \" + requestUrl); // Open the popup window to requestUrl.\n\n      return this.popupUtils.openPopup(requestUrl, params.popupName, params.popup);\n    } else {\n      // Throw error if request URL is empty.\n      this.browserRequestLogger.error(\"Navigate url is empty\");\n      throw BrowserAuthError.createEmptyNavigationUriError();\n    }\n  };\n  /**\r\n   * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n   * @param popupWindow - window that is being monitored\r\n   * @param timeout - milliseconds until timeout\r\n   */\n\n\n  PopupHandler.prototype.monitorPopupForHash = function (popupWindow) {\n    var _this = this;\n\n    return this.popupUtils.monitorPopupForSameOrigin(popupWindow).then(function () {\n      var contentHash = popupWindow.location.hash;\n      BrowserUtils.clearHash(popupWindow);\n\n      _this.popupUtils.cleanPopup(popupWindow);\n\n      if (!contentHash) {\n        throw BrowserAuthError.createEmptyHashError(popupWindow.location.href);\n      }\n\n      if (UrlString.hashContainsKnownProperties(contentHash)) {\n        return contentHash;\n      } else {\n        throw BrowserAuthError.createHashDoesNotContainKnownPropertiesError();\n      }\n    });\n  };\n\n  return PopupHandler;\n}(InteractionHandler);\n\nexport { PopupHandler };","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/@azure/msal-browser/dist/interaction_handler/PopupHandler.js"],"names":["__extends","StringUtils","UrlString","InteractionHandler","BrowserAuthError","TemporaryCacheKeys","BrowserConstants","PopupUtils","BrowserUtils","PopupHandler","_super","authCodeModule","storageImpl","authCodeRequest","browserRequestLogger","_this","call","popupUtils","prototype","initiateAuthRequest","requestUrl","params","isEmpty","browserStorage","setTemporaryCache","INTERACTION_STATUS_KEY","INTERACTION_IN_PROGRESS_VALUE","infoPii","openPopup","popupName","popup","error","createEmptyNavigationUriError","monitorPopupForHash","popupWindow","monitorPopupForSameOrigin","then","contentHash","location","hash","clearHash","cleanPopup","createEmptyHashError","href","hashContainsKnownProperties","createHashDoesNotContainKnownPropertiesError"],"mappings":"AAAA;AACA;;AACA,SAASA,SAAT,QAA0B,uBAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,8BAArD;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAkB,UAAUC,MAAV,EAAkB;AAChDV,EAAAA,SAAS,CAACS,YAAD,EAAeC,MAAf,CAAT;;AACA,WAASD,YAAT,CAAsBE,cAAtB,EAAsCC,WAAtC,EAAmDC,eAAnD,EAAoEC,oBAApE,EAA0F;AACtF,QAAIC,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAY,IAAZ,EAAkBL,cAAlB,EAAkCC,WAAlC,EAA+CC,eAA/C,EAAgEC,oBAAhE,KAAyF,IAArG,CADsF,CAEtF;;;AACAC,IAAAA,KAAK,CAACE,UAAN,GAAmB,IAAIV,UAAJ,CAAeK,WAAf,EAA4BE,oBAA5B,CAAnB;AACA,WAAOC,KAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIN,EAAAA,YAAY,CAACS,SAAb,CAAuBC,mBAAvB,GAA6C,UAAUC,UAAV,EAAsBC,MAAtB,EAA8B;AACvE;AACA,QAAI,CAACpB,WAAW,CAACqB,OAAZ,CAAoBF,UAApB,CAAL,EAAsC;AAClC;AACA,WAAKG,cAAL,CAAoBC,iBAApB,CAAsCnB,kBAAkB,CAACoB,sBAAzD,EAAiFnB,gBAAgB,CAACoB,6BAAlG,EAAiI,IAAjI;AACA,WAAKZ,oBAAL,CAA0Ba,OAA1B,CAAkC,kBAAkBP,UAApD,EAHkC,CAIlC;;AACA,aAAO,KAAKH,UAAL,CAAgBW,SAAhB,CAA0BR,UAA1B,EAAsCC,MAAM,CAACQ,SAA7C,EAAwDR,MAAM,CAACS,KAA/D,CAAP;AACH,KAND,MAOK;AACD;AACA,WAAKhB,oBAAL,CAA0BiB,KAA1B,CAAgC,uBAAhC;AACA,YAAM3B,gBAAgB,CAAC4B,6BAAjB,EAAN;AACH;AACJ,GAdD;AAeA;AACJ;AACA;AACA;AACA;;;AACIvB,EAAAA,YAAY,CAACS,SAAb,CAAuBe,mBAAvB,GAA6C,UAAUC,WAAV,EAAuB;AAChE,QAAInB,KAAK,GAAG,IAAZ;;AACA,WAAO,KAAKE,UAAL,CAAgBkB,yBAAhB,CAA0CD,WAA1C,EAAuDE,IAAvD,CAA4D,YAAY;AAC3E,UAAIC,WAAW,GAAGH,WAAW,CAACI,QAAZ,CAAqBC,IAAvC;AACA/B,MAAAA,YAAY,CAACgC,SAAb,CAAuBN,WAAvB;;AACAnB,MAAAA,KAAK,CAACE,UAAN,CAAiBwB,UAAjB,CAA4BP,WAA5B;;AACA,UAAI,CAACG,WAAL,EAAkB;AACd,cAAMjC,gBAAgB,CAACsC,oBAAjB,CAAsCR,WAAW,CAACI,QAAZ,CAAqBK,IAA3D,CAAN;AACH;;AACD,UAAIzC,SAAS,CAAC0C,2BAAV,CAAsCP,WAAtC,CAAJ,EAAwD;AACpD,eAAOA,WAAP;AACH,OAFD,MAGK;AACD,cAAMjC,gBAAgB,CAACyC,4CAAjB,EAAN;AACH;AACJ,KAbM,CAAP;AAcH,GAhBD;;AAiBA,SAAOpC,YAAP;AACH,CAlDiC,CAkDhCN,kBAlDgC,CAAlC;;AAoDA,SAASM,YAAT","sourcesContent":["/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { StringUtils, UrlString } from '@azure/msal-common';\nimport { InteractionHandler } from './InteractionHandler.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { TemporaryCacheKeys, BrowserConstants } from '../utils/BrowserConstants.js';\nimport { PopupUtils } from '../utils/PopupUtils.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\r\nvar PopupHandler = /** @class */ (function (_super) {\r\n    __extends(PopupHandler, _super);\r\n    function PopupHandler(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, browserRequestLogger) || this;\r\n        // Properly sets this reference for the unload event.\r\n        _this.popupUtils = new PopupUtils(storageImpl, browserRequestLogger);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    PopupHandler.prototype.initiateAuthRequest = function (requestUrl, params) {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.INTERACTION_STATUS_KEY, BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, true);\r\n            this.browserRequestLogger.infoPii(\"Navigate to: \" + requestUrl);\r\n            // Open the popup window to requestUrl.\r\n            return this.popupUtils.openPopup(requestUrl, params.popupName, params.popup);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.browserRequestLogger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    };\r\n    /**\r\n     * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - milliseconds until timeout\r\n     */\r\n    PopupHandler.prototype.monitorPopupForHash = function (popupWindow) {\r\n        var _this = this;\r\n        return this.popupUtils.monitorPopupForSameOrigin(popupWindow).then(function () {\r\n            var contentHash = popupWindow.location.hash;\r\n            BrowserUtils.clearHash(popupWindow);\r\n            _this.popupUtils.cleanPopup(popupWindow);\r\n            if (!contentHash) {\r\n                throw BrowserAuthError.createEmptyHashError(popupWindow.location.href);\r\n            }\r\n            if (UrlString.hashContainsKnownProperties(contentHash)) {\r\n                return contentHash;\r\n            }\r\n            else {\r\n                throw BrowserAuthError.createHashDoesNotContainKnownPropertiesError();\r\n            }\r\n        });\r\n    };\r\n    return PopupHandler;\r\n}(InteractionHandler));\n\nexport { PopupHandler };\n"]},"metadata":{},"sourceType":"module"}