{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/Layer\n */\n\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\n\nvar LayerRenderer = function (_super) {\n  __extends(LayerRenderer, _super);\n  /**\n   * @param {LayerType} layer Layer.\n   */\n\n\n  function LayerRenderer(layer) {\n    var _this = _super.call(this) || this;\n    /** @private */\n\n\n    _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n\n    _this.layer_ = layer;\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n\n    _this.declutterExecutorGroup = null;\n    return _this;\n  }\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n\n\n  LayerRenderer.prototype.getFeatures = function (pixel) {\n    return abstract();\n  };\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n\n\n  LayerRenderer.prototype.prepareFrame = function (frameState) {\n    return abstract();\n  };\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n\n\n  LayerRenderer.prototype.renderFrame = function (frameState, target) {\n    return abstract();\n  };\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n\n\n  LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  };\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n\n\n  LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  };\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n\n\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n    return undefined;\n  };\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n\n\n  LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n    return null;\n  };\n  /**\n   * @return {LayerType} Layer.\n   */\n\n\n  LayerRenderer.prototype.getLayer = function () {\n    return this.layer_;\n  };\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n\n\n  LayerRenderer.prototype.handleFontsChanged = function () {};\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n\n\n  LayerRenderer.prototype.handleImageChange_ = function (event) {\n    var image = event.target;\n\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n\n\n  LayerRenderer.prototype.loadImage = function (image) {\n    var imageState = image.getState();\n\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n\n    return imageState == ImageState.LOADED;\n  };\n  /**\n   * @protected\n   */\n\n\n  LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n    var layer = this.getLayer();\n\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  };\n\n  return LayerRenderer;\n}(Observable);\n\nexport default LayerRenderer;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/renderer/Layer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","EventType","ImageState","Observable","SourceState","abstract","LayerRenderer","_super","layer","_this","boundHandleImageChange_","handleImageChange_","bind","layer_","declutterExecutorGroup","getFeatures","pixel","prepareFrame","frameState","renderFrame","target","loadedTileCallback","tiles","zoom","tile","tileCoord","toString","undefined","createLoadedTileFinder","source","projection","tileRange","callback","forEachLoadedTile","forEachFeatureAtCoordinate","coordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","event","image","getState","LOADED","renderIfReadyAndVisible","loadImage","imageState","ERROR","addEventListener","CHANGE","IDLE","load","getVisible","getSourceState","READY","changed"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return null;\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n"]},"metadata":{},"sourceType":"module"}