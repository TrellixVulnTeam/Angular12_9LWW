{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, ElementRef, NgModule, InjectionToken, Injectable, Inject, ComponentFactoryResolver, ApplicationRef, SecurityContext, Injector, NgZone, Component, HostBinding, HostListener } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\nconst _c0 = [\"toast-component\", \"\"];\n\nfunction Toast_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function Toast_button_0_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.remove();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 6);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction Toast_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n  }\n}\n\nfunction Toast_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, Toast_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.options.titleClass);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\n\nfunction Toast_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r2.options.messageClass);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r2.message, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction Toast_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.options.messageClass);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n  }\n}\n\nfunction Toast_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n  }\n}\n\nfunction ToastNoAnimation_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function ToastNoAnimation_button_0_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.remove();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 6);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastNoAnimation_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n  }\n}\n\nfunction ToastNoAnimation_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, ToastNoAnimation_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.options.titleClass);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\n\nfunction ToastNoAnimation_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r2.options.messageClass);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r2.message, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ToastNoAnimation_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.options.messageClass);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n  }\n}\n\nfunction ToastNoAnimation_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n  }\n}\n\nlet ToastContainerDirective = /*#__PURE__*/(() => {\n  class ToastContainerDirective {\n    constructor(el) {\n      this.el = el;\n    }\n\n    getContainerElement() {\n      return this.el.nativeElement;\n    }\n\n  }\n\n  ToastContainerDirective.ɵfac = function ToastContainerDirective_Factory(t) {\n    return new (t || ToastContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ToastContainerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ToastContainerDirective,\n    selectors: [[\"\", \"toastContainer\", \"\"]],\n    exportAs: [\"toastContainer\"]\n  });\n  return ToastContainerDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToastContainerModule = /*#__PURE__*/(() => {\n  class ToastContainerModule {}\n\n  ToastContainerModule.ɵfac = function ToastContainerModule_Factory(t) {\n    return new (t || ToastContainerModule)();\n  };\n\n  ToastContainerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ToastContainerModule\n  });\n  ToastContainerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return ToastContainerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastContainerModule, {\n    declarations: [ToastContainerDirective],\n    exports: [ToastContainerDirective]\n  });\n})();\n/**\n * Everything a toast needs to launch\n */\n\n\nclass ToastPackage {\n  constructor(toastId, config, message, title, toastType, toastRef) {\n    this.toastId = toastId;\n    this.config = config;\n    this.message = message;\n    this.title = title;\n    this.toastType = toastType;\n    this.toastRef = toastRef;\n    this._onTap = new Subject();\n    this._onAction = new Subject();\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n\n      this._onTap.complete();\n    });\n  }\n  /** Fired on click */\n\n\n  triggerTap() {\n    this._onTap.next();\n\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n\n  onTap() {\n    return this._onTap.asObservable();\n  }\n  /** available for use in custom toast */\n\n\n  triggerAction(action) {\n    this._onAction.next(action);\n  }\n\n  onAction() {\n    return this._onAction.asObservable();\n  }\n\n}\n\nconst DefaultNoComponentGlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  countDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  includeTitleDuplicates: false,\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning'\n  },\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'ngx-toastr',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing'\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\n\nclass ComponentPortal {\n  constructor(component, injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n  /** Attach this portal to a host. */\n\n\n  attach(host, newestOnTop) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n  /** Detach this portal from its host */\n\n\n  detach() {\n    const host = this._attachedHost;\n\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n  /** Whether this portal is attached to a host. */\n\n\n  get isAttached() {\n    return this._attachedHost != null;\n  }\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n\n\n  setAttachedHost(host) {\n    this._attachedHost = host;\n  }\n\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\n\n\nclass BasePortalHost {\n  attach(portal, newestOnTop) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n\n    this._attachedPortal = undefined;\n\n    if (this._disposeFn) {\n      this._disposeFn();\n\n      this._disposeFn = undefined;\n    }\n  }\n\n  setDisposeFn(fn) {\n    this._disposeFn = fn;\n  }\n\n}\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\n\n\nclass DomPortalHost extends BasePortalHost {\n  constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n    super();\n    this._hostDomElement = _hostDomElement;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n\n\n  attachComponentPortal(portal, newestOnTop) {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n\n    let componentRef; // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n\n    componentRef = componentFactory.create(portal.injector); // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n\n      componentRef.destroy();\n    }); // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n\n    return componentRef;\n  }\n  /** Gets the root HTMLElement for an instantiated component. */\n\n\n  _getComponentRootNode(componentRef) {\n    return componentRef.hostView.rootNodes[0];\n  }\n\n}\n/** Container inside which all toasts will render. */\n\n\nlet OverlayContainer = /*#__PURE__*/(() => {\n  class OverlayContainer {\n    constructor(_document) {\n      this._document = _document;\n    }\n\n    ngOnDestroy() {\n      if (this._containerElement && this._containerElement.parentNode) {\n        this._containerElement.parentNode.removeChild(this._containerElement);\n      }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n\n\n    getContainerElement() {\n      if (!this._containerElement) {\n        this._createContainer();\n      }\n\n      return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n\n\n    _createContainer() {\n      const container = this._document.createElement('div');\n\n      container.classList.add('overlay-container');\n\n      this._document.body.appendChild(container);\n\n      this._containerElement = container;\n    }\n\n  }\n\n  OverlayContainer.ɵfac = function OverlayContainer_Factory(t) {\n    return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT));\n  };\n\n  OverlayContainer.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function OverlayContainer_Factory() {\n      return new OverlayContainer(i0.ɵɵinject(i1.DOCUMENT));\n    },\n    token: OverlayContainer,\n    providedIn: \"root\"\n  });\n  return OverlayContainer;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\n\n\nclass OverlayRef {\n  constructor(_portalHost) {\n    this._portalHost = _portalHost;\n  }\n\n  attach(portal, newestOnTop = true) {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n\n\n  detach() {\n    return this._portalHost.detach();\n  }\n\n}\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n\n\nlet Overlay = /*#__PURE__*/(() => {\n  class Overlay {\n    constructor(_overlayContainer, _componentFactoryResolver, _appRef, _document) {\n      this._overlayContainer = _overlayContainer;\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._appRef = _appRef;\n      this._document = _document; // Namespace panes by overlay container\n\n      this._paneElements = new Map();\n    }\n    /**\n     * Creates an overlay.\n     * @returns A reference to the created overlay.\n     */\n\n\n    create(positionClass, overlayContainer) {\n      // get existing pane if possible\n      return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    }\n\n    getPaneElement(positionClass = '', overlayContainer) {\n      if (!this._paneElements.get(overlayContainer)) {\n        this._paneElements.set(overlayContainer, {});\n      }\n\n      if (!this._paneElements.get(overlayContainer)[positionClass]) {\n        this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n      }\n\n      return this._paneElements.get(overlayContainer)[positionClass];\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n\n\n    _createPaneElement(positionClass, overlayContainer) {\n      const pane = this._document.createElement('div');\n\n      pane.id = 'toast-container';\n      pane.classList.add(positionClass);\n      pane.classList.add('toast-container');\n\n      if (!overlayContainer) {\n        this._overlayContainer.getContainerElement().appendChild(pane);\n      } else {\n        overlayContainer.getContainerElement().appendChild(pane);\n      }\n\n      return pane;\n    }\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n\n\n    _createPortalHost(pane) {\n      return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    }\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n\n\n    _createOverlayRef(pane) {\n      return new OverlayRef(this._createPortalHost(pane));\n    }\n\n  }\n\n  Overlay.ɵfac = function Overlay_Factory(t) {\n    return new (t || Overlay)(ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(DOCUMENT));\n  };\n\n  Overlay.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function Overlay_Factory() {\n      return new Overlay(i0.ɵɵinject(OverlayContainer), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i1.DOCUMENT));\n    },\n    token: Overlay,\n    providedIn: \"root\"\n  });\n  return Overlay;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Reference to a toast opened via the Toastr service.\n */\n\n\nclass ToastRef {\n  constructor(_overlayRef) {\n    this._overlayRef = _overlayRef;\n    /** Count of duplicates of this toast */\n\n    this.duplicatesCount = 0;\n    /** Subject for notifying the user that the toast has finished closing. */\n\n    this._afterClosed = new Subject();\n    /** triggered when toast is activated */\n\n    this._activate = new Subject();\n    /** notifies the toast that it should close before the timeout */\n\n    this._manualClose = new Subject();\n    /** notifies the toast that it should reset the timeouts */\n\n    this._resetTimeout = new Subject();\n    /** notifies the toast that it should count a duplicate toast */\n\n    this._countDuplicate = new Subject();\n  }\n\n  manualClose() {\n    this._manualClose.next();\n\n    this._manualClose.complete();\n  }\n\n  manualClosed() {\n    return this._manualClose.asObservable();\n  }\n\n  timeoutReset() {\n    return this._resetTimeout.asObservable();\n  }\n\n  countDuplicate() {\n    return this._countDuplicate.asObservable();\n  }\n  /**\n   * Close the toast.\n   */\n\n\n  close() {\n    this._overlayRef.detach();\n\n    this._afterClosed.next();\n\n    this._manualClose.next();\n\n    this._afterClosed.complete();\n\n    this._manualClose.complete();\n\n    this._activate.complete();\n\n    this._resetTimeout.complete();\n\n    this._countDuplicate.complete();\n  }\n  /** Gets an observable that is notified when the toast is finished closing. */\n\n\n  afterClosed() {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n\n    this._activate.complete();\n  }\n  /** Gets an observable that is notified when the toast has started opening. */\n\n\n  afterActivate() {\n    return this._activate.asObservable();\n  }\n  /** Reset the toast timouts and count duplicates */\n\n\n  onDuplicate(resetTimeout, countDuplicate) {\n    if (resetTimeout) {\n      this._resetTimeout.next();\n    }\n\n    if (countDuplicate) {\n      this._countDuplicate.next(++this.duplicatesCount);\n    }\n  }\n\n}\n/** Custom injector type specifically for instantiating components with a toast. */\n\n\nclass ToastInjector {\n  constructor(_toastPackage, _parentInjector) {\n    this._toastPackage = _toastPackage;\n    this._parentInjector = _parentInjector;\n  }\n\n  get(token, notFoundValue, flags) {\n    if (token === ToastPackage) {\n      return this._toastPackage;\n    }\n\n    return this._parentInjector.get(token, notFoundValue, flags);\n  }\n\n}\n\nlet ToastrService = /*#__PURE__*/(() => {\n  class ToastrService {\n    constructor(token, overlay, _injector, sanitizer, ngZone) {\n      this.overlay = overlay;\n      this._injector = _injector;\n      this.sanitizer = sanitizer;\n      this.ngZone = ngZone;\n      this.currentlyActive = 0;\n      this.toasts = [];\n      this.index = 0;\n      this.toastrConfig = Object.assign(Object.assign({}, token.default), token.config);\n\n      if (token.config.iconClasses) {\n        this.toastrConfig.iconClasses = Object.assign(Object.assign({}, token.default.iconClasses), token.config.iconClasses);\n      }\n    }\n    /** show toast */\n\n\n    show(message, title, override = {}, type = '') {\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show successful toast */\n\n\n    success(message, title, override = {}) {\n      const type = this.toastrConfig.iconClasses.success || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show error toast */\n\n\n    error(message, title, override = {}) {\n      const type = this.toastrConfig.iconClasses.error || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show info toast */\n\n\n    info(message, title, override = {}) {\n      const type = this.toastrConfig.iconClasses.info || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show warning toast */\n\n\n    warning(message, title, override = {}) {\n      const type = this.toastrConfig.iconClasses.warning || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /**\n     * Remove all or a single toast by id\n     */\n\n\n    clear(toastId) {\n      // Call every toastRef manualClose function\n      for (const toast of this.toasts) {\n        if (toastId !== undefined) {\n          if (toast.toastId === toastId) {\n            toast.toastRef.manualClose();\n            return;\n          }\n        } else {\n          toast.toastRef.manualClose();\n        }\n      }\n    }\n    /**\n     * Remove and destroy a single toast by id\n     */\n\n\n    remove(toastId) {\n      const found = this._findToast(toastId);\n\n      if (!found) {\n        return false;\n      }\n\n      found.activeToast.toastRef.close();\n      this.toasts.splice(found.index, 1);\n      this.currentlyActive = this.currentlyActive - 1;\n\n      if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n        return false;\n      }\n\n      if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n        const p = this.toasts[this.currentlyActive].toastRef;\n\n        if (!p.isInactive()) {\n          this.currentlyActive = this.currentlyActive + 1;\n          p.activate();\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Determines if toast message is already shown\n     */\n\n\n    findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n      const {\n        includeTitleDuplicates\n      } = this.toastrConfig;\n\n      for (const toast of this.toasts) {\n        const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n\n        if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n          toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n          return toast;\n        }\n      }\n\n      return null;\n    }\n    /** create a clone of global config and apply individual settings */\n\n\n    applyConfig(override = {}) {\n      return Object.assign(Object.assign({}, this.toastrConfig), override);\n    }\n    /**\n     * Find toast object by id\n     */\n\n\n    _findToast(toastId) {\n      for (let i = 0; i < this.toasts.length; i++) {\n        if (this.toasts[i].toastId === toastId) {\n          return {\n            index: i,\n            activeToast: this.toasts[i]\n          };\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n\n\n    _preBuildNotification(toastType, message, title, config) {\n      if (config.onActivateTick) {\n        return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n      }\n\n      return this._buildNotification(toastType, message, title, config);\n    }\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n\n\n    _buildNotification(toastType, message, title, config) {\n      if (!config.toastComponent) {\n        throw new Error('toastComponent required');\n      } // max opened and auto dismiss = true\n      // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n      // a timeout at all\n\n\n      const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n\n      if ((this.toastrConfig.includeTitleDuplicates && title || message) && this.toastrConfig.preventDuplicates && duplicate !== null) {\n        return duplicate;\n      }\n\n      this.previousToastMessage = message;\n      let keepInactive = false;\n\n      if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n        keepInactive = true;\n\n        if (this.toastrConfig.autoDismiss) {\n          this.clear(this.toasts[0].toastId);\n        }\n      }\n\n      const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n      this.index = this.index + 1;\n      let sanitizedMessage = message;\n\n      if (message && config.enableHtml) {\n        sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n      }\n\n      const toastRef = new ToastRef(overlayRef);\n      const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n      const toastInjector = new ToastInjector(toastPackage, this._injector);\n      const component = new ComponentPortal(config.toastComponent, toastInjector);\n      const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n      toastRef.componentInstance = portal.instance;\n      const ins = {\n        toastId: this.index,\n        title: title || '',\n        message: message || '',\n        toastRef,\n        onShown: toastRef.afterActivate(),\n        onHidden: toastRef.afterClosed(),\n        onTap: toastPackage.onTap(),\n        onAction: toastPackage.onAction(),\n        portal\n      };\n\n      if (!keepInactive) {\n        this.currentlyActive = this.currentlyActive + 1;\n        setTimeout(() => {\n          ins.toastRef.activate();\n        });\n      }\n\n      this.toasts.push(ins);\n      return ins;\n    }\n\n  }\n\n  ToastrService.ɵfac = function ToastrService_Factory(t) {\n    return new (t || ToastrService)(ɵngcc0.ɵɵinject(TOAST_CONFIG), ɵngcc0.ɵɵinject(Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  ToastrService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ToastrService_Factory() {\n      return new ToastrService(i0.ɵɵinject(TOAST_CONFIG), i0.ɵɵinject(Overlay), i0.ɵɵinject(i0.INJECTOR), i0.ɵɵinject(i3.DomSanitizer), i0.ɵɵinject(i0.NgZone));\n    },\n    token: ToastrService,\n    providedIn: \"root\"\n  });\n  return ToastrService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet Toast = /*#__PURE__*/(() => {\n  class Toast {\n    constructor(toastrService, toastPackage, ngZone) {\n      this.toastrService = toastrService;\n      this.toastPackage = toastPackage;\n      this.ngZone = ngZone;\n      /** width of progress bar */\n\n      this.width = -1;\n      /** a combination of toast type and options.toastClass */\n\n      this.toastClasses = '';\n      /** controls animation */\n\n      this.state = {\n        value: 'inactive',\n        params: {\n          easeTime: this.toastPackage.config.easeTime,\n          easing: 'ease-in'\n        }\n      };\n      this.message = toastPackage.message;\n      this.title = toastPackage.title;\n      this.options = toastPackage.config;\n      this.originalTimeout = toastPackage.config.timeOut;\n      this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n      this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n        this.activateToast();\n      });\n      this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n        this.remove();\n      });\n      this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n        this.resetTimeout();\n      });\n      this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n        this.duplicatesCount = count;\n      });\n    }\n    /** hides component when waiting to be displayed */\n\n\n    get displayStyle() {\n      if (this.state.value === 'inactive') {\n        return 'none';\n      }\n\n      return;\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n      this.sub1.unsubscribe();\n      this.sub2.unsubscribe();\n      this.sub3.unsubscribe();\n      clearInterval(this.intervalId);\n      clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n\n\n    activateToast() {\n      this.state = Object.assign(Object.assign({}, this.state), {\n        value: 'active'\n      });\n\n      if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n        this.outsideTimeout(() => this.remove(), this.options.timeOut);\n        this.hideTime = new Date().getTime() + this.options.timeOut;\n\n        if (this.options.progressBar) {\n          this.outsideInterval(() => this.updateProgress(), 10);\n        }\n      }\n    }\n    /**\n     * updates progress bar width\n     */\n\n\n    updateProgress() {\n      if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n        return;\n      }\n\n      const now = new Date().getTime();\n      const remaining = this.hideTime - now;\n      this.width = remaining / this.options.timeOut * 100;\n\n      if (this.options.progressAnimation === 'increasing') {\n        this.width = 100 - this.width;\n      }\n\n      if (this.width <= 0) {\n        this.width = 0;\n      }\n\n      if (this.width >= 100) {\n        this.width = 100;\n      }\n    }\n\n    resetTimeout() {\n      clearTimeout(this.timeout);\n      clearInterval(this.intervalId);\n      this.state = Object.assign(Object.assign({}, this.state), {\n        value: 'active'\n      });\n      this.outsideTimeout(() => this.remove(), this.originalTimeout);\n      this.options.timeOut = this.originalTimeout;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width = -1;\n\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n\n\n    remove() {\n      if (this.state.value === 'removed') {\n        return;\n      }\n\n      clearTimeout(this.timeout);\n      this.state = Object.assign(Object.assign({}, this.state), {\n        value: 'removed'\n      });\n      this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n    }\n\n    tapToast() {\n      if (this.state.value === 'removed') {\n        return;\n      }\n\n      this.toastPackage.triggerTap();\n\n      if (this.options.tapToDismiss) {\n        this.remove();\n      }\n    }\n\n    stickAround() {\n      if (this.state.value === 'removed') {\n        return;\n      }\n\n      clearTimeout(this.timeout);\n      this.options.timeOut = 0;\n      this.hideTime = 0; // disable progressBar\n\n      clearInterval(this.intervalId);\n      this.width = 0;\n    }\n\n    delayedHideToast() {\n      if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state.value === 'removed') {\n        return;\n      }\n\n      this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n      this.options.timeOut = this.options.extendedTimeOut;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width = -1;\n\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n\n    outsideTimeout(func, timeout) {\n      if (this.ngZone) {\n        this.ngZone.runOutsideAngular(() => this.timeout = setTimeout(() => this.runInsideAngular(func), timeout));\n      } else {\n        this.timeout = setTimeout(() => func(), timeout);\n      }\n    }\n\n    outsideInterval(func, timeout) {\n      if (this.ngZone) {\n        this.ngZone.runOutsideAngular(() => this.intervalId = setInterval(() => this.runInsideAngular(func), timeout));\n      } else {\n        this.intervalId = setInterval(() => func(), timeout);\n      }\n    }\n\n    runInsideAngular(func) {\n      if (this.ngZone) {\n        this.ngZone.run(() => func());\n      } else {\n        func();\n      }\n    }\n\n  }\n\n  Toast.ɵfac = function Toast_Factory(t) {\n    return new (t || Toast)(ɵngcc0.ɵɵdirectiveInject(ToastrService), ɵngcc0.ɵɵdirectiveInject(ToastPackage), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  Toast.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: Toast,\n    selectors: [[\"\", \"toast-component\", \"\"]],\n    hostVars: 5,\n    hostBindings: function Toast_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function Toast_click_HostBindingHandler() {\n          return ctx.tapToast();\n        })(\"mouseenter\", function Toast_mouseenter_HostBindingHandler() {\n          return ctx.stickAround();\n        })(\"mouseleave\", function Toast_mouseleave_HostBindingHandler() {\n          return ctx.delayedHideToast();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@flyInOut\", ctx.state);\n        ɵngcc0.ɵɵclassMap(ctx.toastClasses);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n      }\n    },\n    attrs: _c0,\n    decls: 5,\n    vars: 5,\n    consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"innerHTML\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\"], [1, \"toast-progress\"]],\n    template: function Toast_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, Toast_button_0_Template, 3, 0, \"button\", 0);\n        ɵngcc0.ɵɵtemplate(1, Toast_div_1_Template, 3, 5, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, Toast_div_2_Template, 1, 3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, Toast_div_3_Template, 2, 4, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, Toast_div_4_Template, 2, 2, \"div\", 4);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('flyInOut', [state('inactive', style({\n        opacity: 0\n      })), state('active', style({\n        opacity: 1\n      })), state('removed', style({\n        opacity: 0\n      })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])]\n    }\n  });\n  return Toast;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst DefaultGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), {\n  toastComponent: Toast\n});\nlet ToastrModule = /*#__PURE__*/(() => {\n  class ToastrModule {\n    static forRoot(config = {}) {\n      return {\n        ngModule: ToastrModule,\n        providers: [{\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultGlobalConfig,\n            config\n          }\n        }]\n      };\n    }\n\n  }\n\n  ToastrModule.ɵfac = function ToastrModule_Factory(t) {\n    return new (t || ToastrModule)();\n  };\n\n  ToastrModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ToastrModule\n  });\n  ToastrModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ToastrModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastrModule, {\n    declarations: function () {\n      return [Toast];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [Toast];\n    }\n  });\n})();\n\nlet ToastrComponentlessModule = /*#__PURE__*/(() => {\n  class ToastrComponentlessModule {\n    static forRoot(config = {}) {\n      return {\n        ngModule: ToastrModule,\n        providers: [{\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoComponentGlobalConfig,\n            config\n          }\n        }]\n      };\n    }\n\n  }\n\n  ToastrComponentlessModule.ɵfac = function ToastrComponentlessModule_Factory(t) {\n    return new (t || ToastrComponentlessModule)();\n  };\n\n  ToastrComponentlessModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ToastrComponentlessModule\n  });\n  ToastrComponentlessModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ToastrComponentlessModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastrComponentlessModule, {\n    imports: function () {\n      return [CommonModule];\n    }\n  });\n})();\n\nlet ToastNoAnimation = /*#__PURE__*/(() => {\n  class ToastNoAnimation {\n    constructor(toastrService, toastPackage, appRef) {\n      this.toastrService = toastrService;\n      this.toastPackage = toastPackage;\n      this.appRef = appRef;\n      /** width of progress bar */\n\n      this.width = -1;\n      /** a combination of toast type and options.toastClass */\n\n      this.toastClasses = '';\n      /** controls animation */\n\n      this.state = 'inactive';\n      this.message = toastPackage.message;\n      this.title = toastPackage.title;\n      this.options = toastPackage.config;\n      this.originalTimeout = toastPackage.config.timeOut;\n      this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n      this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n        this.activateToast();\n      });\n      this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n        this.remove();\n      });\n      this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n        this.resetTimeout();\n      });\n      this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n        this.duplicatesCount = count;\n      });\n    }\n    /** hides component when waiting to be displayed */\n\n\n    get displayStyle() {\n      if (this.state === 'inactive') {\n        return 'none';\n      }\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n      this.sub1.unsubscribe();\n      this.sub2.unsubscribe();\n      this.sub3.unsubscribe();\n      clearInterval(this.intervalId);\n      clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n\n\n    activateToast() {\n      this.state = 'active';\n\n      if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n        this.timeout = setTimeout(() => {\n          this.remove();\n        }, this.options.timeOut);\n        this.hideTime = new Date().getTime() + this.options.timeOut;\n\n        if (this.options.progressBar) {\n          this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n      }\n\n      if (this.options.onActivateTick) {\n        this.appRef.tick();\n      }\n    }\n    /**\n     * updates progress bar width\n     */\n\n\n    updateProgress() {\n      if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n        return;\n      }\n\n      const now = new Date().getTime();\n      const remaining = this.hideTime - now;\n      this.width = remaining / this.options.timeOut * 100;\n\n      if (this.options.progressAnimation === 'increasing') {\n        this.width = 100 - this.width;\n      }\n\n      if (this.width <= 0) {\n        this.width = 0;\n      }\n\n      if (this.width >= 100) {\n        this.width = 100;\n      }\n    }\n\n    resetTimeout() {\n      clearTimeout(this.timeout);\n      clearInterval(this.intervalId);\n      this.state = 'active';\n      this.options.timeOut = this.originalTimeout;\n      this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n      this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n      this.width = -1;\n\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n\n\n    remove() {\n      if (this.state === 'removed') {\n        return;\n      }\n\n      clearTimeout(this.timeout);\n      this.state = 'removed';\n      this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n    }\n\n    tapToast() {\n      if (this.state === 'removed') {\n        return;\n      }\n\n      this.toastPackage.triggerTap();\n\n      if (this.options.tapToDismiss) {\n        this.remove();\n      }\n    }\n\n    stickAround() {\n      if (this.state === 'removed') {\n        return;\n      }\n\n      clearTimeout(this.timeout);\n      this.options.timeOut = 0;\n      this.hideTime = 0; // disable progressBar\n\n      clearInterval(this.intervalId);\n      this.width = 0;\n    }\n\n    delayedHideToast() {\n      if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state === 'removed') {\n        return;\n      }\n\n      this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n      this.options.timeOut = this.options.extendedTimeOut;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width = -1;\n\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n\n  }\n\n  ToastNoAnimation.ɵfac = function ToastNoAnimation_Factory(t) {\n    return new (t || ToastNoAnimation)(ɵngcc0.ɵɵdirectiveInject(ToastrService), ɵngcc0.ɵɵdirectiveInject(ToastPackage), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n  };\n\n  ToastNoAnimation.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ToastNoAnimation,\n    selectors: [[\"\", \"toast-component\", \"\"]],\n    hostVars: 4,\n    hostBindings: function ToastNoAnimation_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ToastNoAnimation_click_HostBindingHandler() {\n          return ctx.tapToast();\n        })(\"mouseenter\", function ToastNoAnimation_mouseenter_HostBindingHandler() {\n          return ctx.stickAround();\n        })(\"mouseleave\", function ToastNoAnimation_mouseleave_HostBindingHandler() {\n          return ctx.delayedHideToast();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.toastClasses);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n      }\n    },\n    attrs: _c0,\n    decls: 5,\n    vars: 5,\n    consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"innerHTML\"], [\"role\", \"alert\", \"aria-live\", \"polite\"], [1, \"toast-progress\"]],\n    template: function ToastNoAnimation_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ToastNoAnimation_button_0_Template, 3, 0, \"button\", 0);\n        ɵngcc0.ɵɵtemplate(1, ToastNoAnimation_div_1_Template, 3, 5, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, ToastNoAnimation_div_2_Template, 1, 3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, ToastNoAnimation_div_3_Template, 2, 4, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, ToastNoAnimation_div_4_Template, 2, 2, \"div\", 4);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    encapsulation: 2\n  });\n  return ToastNoAnimation;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst DefaultNoAnimationsGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), {\n  toastComponent: ToastNoAnimation\n});\nlet ToastNoAnimationModule = /*#__PURE__*/(() => {\n  class ToastNoAnimationModule {\n    static forRoot(config = {}) {\n      return {\n        ngModule: ToastNoAnimationModule,\n        providers: [{\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoAnimationsGlobalConfig,\n            config\n          }\n        }]\n      };\n    }\n\n  }\n\n  ToastNoAnimationModule.ɵfac = function ToastNoAnimationModule_Factory(t) {\n    return new (t || ToastNoAnimationModule)();\n  };\n\n  ToastNoAnimationModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ToastNoAnimationModule\n  });\n  ToastNoAnimationModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ToastNoAnimationModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastNoAnimationModule, {\n    declarations: function () {\n      return [ToastNoAnimation];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ToastNoAnimation];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastContainerModule, ToastInjector, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService };","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ngx-toastr/fesm2015/ngx-toastr.js"],"names":["i0","Directive","ElementRef","NgModule","InjectionToken","Injectable","Inject","ComponentFactoryResolver","ApplicationRef","SecurityContext","Injector","NgZone","Component","HostBinding","HostListener","trigger","state","style","transition","animate","Subject","i3","DomSanitizer","i1","DOCUMENT","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","_c0","Toast_button_0_Template","rf","ctx","_r6","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","Toast_button_0_Template_button_click_0_listener","ɵɵrestoreView","ctx_r5","ɵɵnextContext","remove","ɵɵtext","ɵɵelementEnd","Toast_div_1_ng_container_2_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r7","ɵɵadvance","ɵɵtextInterpolate1","duplicatesCount","Toast_div_1_Template","ɵɵtemplate","ctx_r1","ɵɵclassMap","options","titleClass","ɵɵattribute","title","ɵɵproperty","Toast_div_2_Template","ɵɵelement","ctx_r2","messageClass","message","ɵɵsanitizeHtml","Toast_div_3_Template","ctx_r3","Toast_div_4_Template","ctx_r4","ɵɵstyleProp","width","ToastNoAnimation_button_0_Template","ToastNoAnimation_button_0_Template_button_click_0_listener","ToastNoAnimation_div_1_ng_container_2_Template","ToastNoAnimation_div_1_Template","ToastNoAnimation_div_2_Template","ToastNoAnimation_div_3_Template","ToastNoAnimation_div_4_Template","ToastContainerDirective","constructor","el","getContainerElement","nativeElement","ɵfac","ToastContainerDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","exportAs","ngDevMode","ToastContainerModule","ToastContainerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","ToastPackage","toastId","config","toastType","toastRef","_onTap","_onAction","afterClosed","subscribe","complete","triggerTap","next","tapToDismiss","onTap","asObservable","triggerAction","action","onAction","DefaultNoComponentGlobalConfig","maxOpened","autoDismiss","newestOnTop","preventDuplicates","countDuplicates","resetTimeoutOnDuplicate","includeTitleDuplicates","iconClasses","error","info","success","warning","closeButton","disableTimeOut","timeOut","extendedTimeOut","enableHtml","progressBar","toastClass","positionClass","easing","easeTime","onActivateTick","progressAnimation","TOAST_CONFIG","ComponentPortal","component","injector","attach","host","_attachedHost","detach","undefined","isAttached","setAttachedHost","BasePortalHost","portal","_attachedPortal","attachComponentPortal","_disposeFn","setDisposeFn","fn","DomPortalHost","_hostDomElement","_componentFactoryResolver","_appRef","componentFactory","resolveComponentFactory","componentRef","create","attachView","hostView","detachView","destroy","insertBefore","_getComponentRootNode","firstChild","appendChild","rootNodes","OverlayContainer","_document","ngOnDestroy","_containerElement","parentNode","removeChild","_createContainer","container","createElement","classList","add","body","OverlayContainer_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","factory","token","providedIn","OverlayRef","_portalHost","Overlay","_overlayContainer","_paneElements","Map","overlayContainer","_createOverlayRef","getPaneElement","get","set","_createPaneElement","pane","id","_createPortalHost","Overlay_Factory","ToastRef","_overlayRef","_afterClosed","_activate","_manualClose","_resetTimeout","_countDuplicate","manualClose","manualClosed","timeoutReset","countDuplicate","close","isInactive","isStopped","activate","afterActivate","onDuplicate","resetTimeout","ToastInjector","_toastPackage","_parentInjector","notFoundValue","flags","ToastrService","overlay","_injector","sanitizer","ngZone","currentlyActive","toasts","index","toastrConfig","Object","assign","default","show","override","_preBuildNotification","applyConfig","clear","toast","found","_findToast","activeToast","splice","length","p","findDuplicate","resetOnDuplicate","hasDuplicateTitle","i","run","_buildNotification","toastComponent","Error","duplicate","previousToastMessage","keepInactive","overlayRef","sanitizedMessage","sanitize","HTML","toastPackage","toastInjector","componentInstance","instance","ins","onShown","onHidden","setTimeout","push","ToastrService_Factory","INJECTOR","Toast","toastrService","toastClasses","value","params","originalTimeout","sub","activateToast","sub1","sub2","sub3","count","displayStyle","unsubscribe","clearInterval","intervalId","clearTimeout","timeout","outsideTimeout","hideTime","Date","getTime","outsideInterval","updateProgress","now","remaining","tapToast","stickAround","delayedHideToast","func","runOutsideAngular","runInsideAngular","setInterval","Toast_Factory","ɵcmp","ɵɵdefineComponent","hostVars","hostBindings","Toast_HostBindings","Toast_click_HostBindingHandler","Toast_mouseenter_HostBindingHandler","Toast_mouseleave_HostBindingHandler","ɵɵsyntheticHostProperty","attrs","decls","vars","consts","template","Toast_Template","directives","NgIf","encapsulation","data","animation","opacity","DefaultGlobalConfig","ToastrModule","forRoot","ngModule","providers","provide","useValue","ToastrModule_Factory","imports","ToastrComponentlessModule","ToastrComponentlessModule_Factory","ToastNoAnimation","appRef","tick","ToastNoAnimation_Factory","ToastNoAnimation_HostBindings","ToastNoAnimation_click_HostBindingHandler","ToastNoAnimation_mouseenter_HostBindingHandler","ToastNoAnimation_mouseleave_HostBindingHandler","ToastNoAnimation_Template","DefaultNoAnimationsGlobalConfig","ToastNoAnimationModule","ToastNoAnimationModule_Factory"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, ElementRef, NgModule, InjectionToken, Injectable, Inject, ComponentFactoryResolver, ApplicationRef, SecurityContext, Injector, NgZone, Component, HostBinding, HostListener } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"toast-component\", \"\"];\nfunction Toast_button_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function Toast_button_0_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.remove(); });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 6);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction Toast_div_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n} }\nfunction Toast_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, Toast_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.options.titleClass);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n} }\nfunction Toast_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r2.options.messageClass);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r2.message, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction Toast_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.options.messageClass);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n} }\nfunction Toast_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n} }\nfunction ToastNoAnimation_button_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function ToastNoAnimation_button_0_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.remove(); });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 6);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction ToastNoAnimation_div_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n} }\nfunction ToastNoAnimation_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, ToastNoAnimation_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.options.titleClass);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n} }\nfunction ToastNoAnimation_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r2.options.messageClass);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r2.message, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction ToastNoAnimation_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.options.messageClass);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n} }\nfunction ToastNoAnimation_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n} }\nclass ToastContainerDirective {\n    constructor(el) {\n        this.el = el;\n    }\n    getContainerElement() {\n        return this.el.nativeElement;\n    }\n}\nToastContainerDirective.ɵfac = function ToastContainerDirective_Factory(t) { return new (t || ToastContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nToastContainerDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ToastContainerDirective, selectors: [[\"\", \"toastContainer\", \"\"]], exportAs: [\"toastContainer\"] });\nToastContainerDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastContainerDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[toastContainer]',\n                exportAs: 'toastContainer'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nclass ToastContainerModule {\n}\nToastContainerModule.ɵfac = function ToastContainerModule_Factory(t) { return new (t || ToastContainerModule)(); };\nToastContainerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ToastContainerModule });\nToastContainerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastContainerModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ToastContainerDirective],\n                exports: [ToastContainerDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastContainerModule, { declarations: [ToastContainerDirective], exports: [ToastContainerDirective] }); })();\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n    constructor(toastId, config, message, title, toastType, toastRef) {\n        this.toastId = toastId;\n        this.config = config;\n        this.message = message;\n        this.title = title;\n        this.toastType = toastType;\n        this.toastRef = toastRef;\n        this._onTap = new Subject();\n        this._onAction = new Subject();\n        this.toastRef.afterClosed().subscribe(() => {\n            this._onAction.complete();\n            this._onTap.complete();\n        });\n    }\n    /** Fired on click */\n    triggerTap() {\n        this._onTap.next();\n        if (this.config.tapToDismiss) {\n            this._onTap.complete();\n        }\n    }\n    onTap() {\n        return this._onTap.asObservable();\n    }\n    /** available for use in custom toast */\n    triggerAction(action) {\n        this._onAction.next(action);\n    }\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nconst DefaultNoComponentGlobalConfig = {\n    maxOpened: 0,\n    autoDismiss: false,\n    newestOnTop: true,\n    preventDuplicates: false,\n    countDuplicates: false,\n    resetTimeoutOnDuplicate: false,\n    includeTitleDuplicates: false,\n    iconClasses: {\n        error: 'toast-error',\n        info: 'toast-info',\n        success: 'toast-success',\n        warning: 'toast-warning',\n    },\n    // Individual\n    closeButton: false,\n    disableTimeOut: false,\n    timeOut: 5000,\n    extendedTimeOut: 1000,\n    enableHtml: false,\n    progressBar: false,\n    toastClass: 'ngx-toastr',\n    positionClass: 'toast-top-right',\n    titleClass: 'toast-title',\n    messageClass: 'toast-message',\n    easing: 'ease-in',\n    easeTime: 300,\n    tapToDismiss: true,\n    onActivateTick: false,\n    progressAnimation: 'decreasing',\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n    constructor(component, injector) {\n        this.component = component;\n        this.injector = injector;\n    }\n    /** Attach this portal to a host. */\n    attach(host, newestOnTop) {\n        this._attachedHost = host;\n        return host.attach(this, newestOnTop);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        const host = this._attachedHost;\n        if (host) {\n            this._attachedHost = undefined;\n            return host.detach();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n    attach(portal, newestOnTop) {\n        this._attachedPortal = portal;\n        return this.attachComponentPortal(portal, newestOnTop);\n    }\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost();\n        }\n        this._attachedPortal = undefined;\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = undefined;\n        }\n    }\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n}\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n    constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n        super();\n        this._hostDomElement = _hostDomElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     */\n    attachComponentPortal(portal, newestOnTop) {\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the ChangeDetector for that component to the application (which\n        // happens automatically when using a ViewContainer).\n        componentRef = componentFactory.create(portal.injector);\n        // When creating a component outside of a ViewContainer, we need to manually register\n        // its ChangeDetector with the application. This API is unfortunately not yet published\n        // in Angular core. The change detector must also be deregistered when the component\n        // is destroyed to prevent memory leaks.\n        this._appRef.attachView(componentRef.hostView);\n        this.setDisposeFn(() => {\n            this._appRef.detachView(componentRef.hostView);\n            componentRef.destroy();\n        });\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        if (newestOnTop) {\n            this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n        }\n        else {\n            this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        }\n        return componentRef;\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/** Container inside which all toasts will render. */\nclass OverlayContainer {\n    constructor(_document) {\n        this._document = _document;\n    }\n    ngOnDestroy() {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const container = this._document.createElement('div');\n        container.classList.add('overlay-container');\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayContainer.ɵprov = i0.ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(i0.ɵɵinject(i1.DOCUMENT)); }, token: OverlayContainer, providedIn: \"root\" });\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalHost) {\n        this._portalHost = _portalHost;\n    }\n    attach(portal, newestOnTop = true) {\n        return this._portalHost.attach(portal, newestOnTop);\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns Resolves when the overlay has been detached.\n     */\n    detach() {\n        return this._portalHost.detach();\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(_overlayContainer, _componentFactoryResolver, _appRef, _document) {\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._document = _document;\n        // Namespace panes by overlay container\n        this._paneElements = new Map();\n    }\n    /**\n     * Creates an overlay.\n     * @returns A reference to the created overlay.\n     */\n    create(positionClass, overlayContainer) {\n        // get existing pane if possible\n        return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    }\n    getPaneElement(positionClass = '', overlayContainer) {\n        if (!this._paneElements.get(overlayContainer)) {\n            this._paneElements.set(overlayContainer, {});\n        }\n        if (!this._paneElements.get(overlayContainer)[positionClass]) {\n            this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n        }\n        return this._paneElements.get(overlayContainer)[positionClass];\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(positionClass, overlayContainer) {\n        const pane = this._document.createElement('div');\n        pane.id = 'toast-container';\n        pane.classList.add(positionClass);\n        pane.classList.add('toast-container');\n        if (!overlayContainer) {\n            this._overlayContainer.getContainerElement().appendChild(pane);\n        }\n        else {\n            overlayContainer.getContainerElement().appendChild(pane);\n        }\n        return pane;\n    }\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n    _createPortalHost(pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    }\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n    _createOverlayRef(pane) {\n        return new OverlayRef(this._createPortalHost(pane));\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlay.ɵprov = i0.ɵɵdefineInjectable({ factory: function Overlay_Factory() { return new Overlay(i0.ɵɵinject(OverlayContainer), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i1.DOCUMENT)); }, token: Overlay, providedIn: \"root\" });\nOverlay.ctorParameters = () => [\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n    constructor(_overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Count of duplicates of this toast */\n        this.duplicatesCount = 0;\n        /** Subject for notifying the user that the toast has finished closing. */\n        this._afterClosed = new Subject();\n        /** triggered when toast is activated */\n        this._activate = new Subject();\n        /** notifies the toast that it should close before the timeout */\n        this._manualClose = new Subject();\n        /** notifies the toast that it should reset the timeouts */\n        this._resetTimeout = new Subject();\n        /** notifies the toast that it should count a duplicate toast */\n        this._countDuplicate = new Subject();\n    }\n    manualClose() {\n        this._manualClose.next();\n        this._manualClose.complete();\n    }\n    manualClosed() {\n        return this._manualClose.asObservable();\n    }\n    timeoutReset() {\n        return this._resetTimeout.asObservable();\n    }\n    countDuplicate() {\n        return this._countDuplicate.asObservable();\n    }\n    /**\n     * Close the toast.\n     */\n    close() {\n        this._overlayRef.detach();\n        this._afterClosed.next();\n        this._manualClose.next();\n        this._afterClosed.complete();\n        this._manualClose.complete();\n        this._activate.complete();\n        this._resetTimeout.complete();\n        this._countDuplicate.complete();\n    }\n    /** Gets an observable that is notified when the toast is finished closing. */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    isInactive() {\n        return this._activate.isStopped;\n    }\n    activate() {\n        this._activate.next();\n        this._activate.complete();\n    }\n    /** Gets an observable that is notified when the toast has started opening. */\n    afterActivate() {\n        return this._activate.asObservable();\n    }\n    /** Reset the toast timouts and count duplicates */\n    onDuplicate(resetTimeout, countDuplicate) {\n        if (resetTimeout) {\n            this._resetTimeout.next();\n        }\n        if (countDuplicate) {\n            this._countDuplicate.next(++this.duplicatesCount);\n        }\n    }\n}\n/** Custom injector type specifically for instantiating components with a toast. */\nclass ToastInjector {\n    constructor(_toastPackage, _parentInjector) {\n        this._toastPackage = _toastPackage;\n        this._parentInjector = _parentInjector;\n    }\n    get(token, notFoundValue, flags) {\n        if (token === ToastPackage) {\n            return this._toastPackage;\n        }\n        return this._parentInjector.get(token, notFoundValue, flags);\n    }\n}\n\nclass ToastrService {\n    constructor(token, overlay, _injector, sanitizer, ngZone) {\n        this.overlay = overlay;\n        this._injector = _injector;\n        this.sanitizer = sanitizer;\n        this.ngZone = ngZone;\n        this.currentlyActive = 0;\n        this.toasts = [];\n        this.index = 0;\n        this.toastrConfig = Object.assign(Object.assign({}, token.default), token.config);\n        if (token.config.iconClasses) {\n            this.toastrConfig.iconClasses = Object.assign(Object.assign({}, token.default.iconClasses), token.config.iconClasses);\n        }\n    }\n    /** show toast */\n    show(message, title, override = {}, type = '') {\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show successful toast */\n    success(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.success || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show error toast */\n    error(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.error || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show info toast */\n    info(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.info || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show warning toast */\n    warning(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.warning || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /**\n     * Remove all or a single toast by id\n     */\n    clear(toastId) {\n        // Call every toastRef manualClose function\n        for (const toast of this.toasts) {\n            if (toastId !== undefined) {\n                if (toast.toastId === toastId) {\n                    toast.toastRef.manualClose();\n                    return;\n                }\n            }\n            else {\n                toast.toastRef.manualClose();\n            }\n        }\n    }\n    /**\n     * Remove and destroy a single toast by id\n     */\n    remove(toastId) {\n        const found = this._findToast(toastId);\n        if (!found) {\n            return false;\n        }\n        found.activeToast.toastRef.close();\n        this.toasts.splice(found.index, 1);\n        this.currentlyActive = this.currentlyActive - 1;\n        if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n            return false;\n        }\n        if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n            const p = this.toasts[this.currentlyActive].toastRef;\n            if (!p.isInactive()) {\n                this.currentlyActive = this.currentlyActive + 1;\n                p.activate();\n            }\n        }\n        return true;\n    }\n    /**\n     * Determines if toast message is already shown\n     */\n    findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n        const { includeTitleDuplicates } = this.toastrConfig;\n        for (const toast of this.toasts) {\n            const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n            if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n                toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n                return toast;\n            }\n        }\n        return null;\n    }\n    /** create a clone of global config and apply individual settings */\n    applyConfig(override = {}) {\n        return Object.assign(Object.assign({}, this.toastrConfig), override);\n    }\n    /**\n     * Find toast object by id\n     */\n    _findToast(toastId) {\n        for (let i = 0; i < this.toasts.length; i++) {\n            if (this.toasts[i].toastId === toastId) {\n                return { index: i, activeToast: this.toasts[i] };\n            }\n        }\n        return null;\n    }\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n    _preBuildNotification(toastType, message, title, config) {\n        if (config.onActivateTick) {\n            return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n        }\n        return this._buildNotification(toastType, message, title, config);\n    }\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n    _buildNotification(toastType, message, title, config) {\n        if (!config.toastComponent) {\n            throw new Error('toastComponent required');\n        }\n        // max opened and auto dismiss = true\n        // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n        // a timeout at all\n        const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n        if (((this.toastrConfig.includeTitleDuplicates && title) || message) &&\n            this.toastrConfig.preventDuplicates &&\n            duplicate !== null) {\n            return duplicate;\n        }\n        this.previousToastMessage = message;\n        let keepInactive = false;\n        if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n            keepInactive = true;\n            if (this.toastrConfig.autoDismiss) {\n                this.clear(this.toasts[0].toastId);\n            }\n        }\n        const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n        this.index = this.index + 1;\n        let sanitizedMessage = message;\n        if (message && config.enableHtml) {\n            sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n        }\n        const toastRef = new ToastRef(overlayRef);\n        const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n        const toastInjector = new ToastInjector(toastPackage, this._injector);\n        const component = new ComponentPortal(config.toastComponent, toastInjector);\n        const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n        toastRef.componentInstance = portal.instance;\n        const ins = {\n            toastId: this.index,\n            title: title || '',\n            message: message || '',\n            toastRef,\n            onShown: toastRef.afterActivate(),\n            onHidden: toastRef.afterClosed(),\n            onTap: toastPackage.onTap(),\n            onAction: toastPackage.onAction(),\n            portal,\n        };\n        if (!keepInactive) {\n            this.currentlyActive = this.currentlyActive + 1;\n            setTimeout(() => {\n                ins.toastRef.activate();\n            });\n        }\n        this.toasts.push(ins);\n        return ins;\n    }\n}\nToastrService.ɵfac = function ToastrService_Factory(t) { return new (t || ToastrService)(ɵngcc0.ɵɵinject(TOAST_CONFIG), ɵngcc0.ɵɵinject(Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nToastrService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ToastrService_Factory() { return new ToastrService(i0.ɵɵinject(TOAST_CONFIG), i0.ɵɵinject(Overlay), i0.ɵɵinject(i0.INJECTOR), i0.ɵɵinject(i3.DomSanitizer), i0.ɵɵinject(i0.NgZone)); }, token: ToastrService, providedIn: \"root\" });\nToastrService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [TOAST_CONFIG,] }] },\n    { type: Overlay },\n    { type: Injector },\n    { type: DomSanitizer },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastrService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [TOAST_CONFIG]\n            }] }, { type: Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc1.DomSanitizer }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass Toast {\n    constructor(toastrService, toastPackage, ngZone) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.ngZone = ngZone;\n        /** width of progress bar */\n        this.width = -1;\n        /** a combination of toast type and options.toastClass */\n        this.toastClasses = '';\n        /** controls animation */\n        this.state = {\n            value: 'inactive',\n            params: {\n                easeTime: this.toastPackage.config.easeTime,\n                easing: 'ease-in'\n            }\n        };\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n    }\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state.value === 'inactive') {\n            return 'none';\n        }\n        return;\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'active' });\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n            this.outsideTimeout(() => this.remove(), this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.outsideInterval(() => this.updateProgress(), 10);\n            }\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'active' });\n        this.outsideTimeout(() => this.remove(), this.originalTimeout);\n        this.options.timeOut = this.originalTimeout;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'removed' });\n        this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n    }\n    tapToast() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state.value === 'removed') {\n            return;\n        }\n        this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    outsideTimeout(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.timeout = setTimeout(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.timeout = setTimeout(() => func(), timeout);\n        }\n    }\n    outsideInterval(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.intervalId = setInterval(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.intervalId = setInterval(() => func(), timeout);\n        }\n    }\n    runInsideAngular(func) {\n        if (this.ngZone) {\n            this.ngZone.run(() => func());\n        }\n        else {\n            func();\n        }\n    }\n}\nToast.ɵfac = function Toast_Factory(t) { return new (t || Toast)(ɵngcc0.ɵɵdirectiveInject(ToastrService), ɵngcc0.ɵɵdirectiveInject(ToastPackage), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nToast.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Toast, selectors: [[\"\", \"toast-component\", \"\"]], hostVars: 5, hostBindings: function Toast_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function Toast_click_HostBindingHandler() { return ctx.tapToast(); })(\"mouseenter\", function Toast_mouseenter_HostBindingHandler() { return ctx.stickAround(); })(\"mouseleave\", function Toast_mouseleave_HostBindingHandler() { return ctx.delayedHideToast(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@flyInOut\", ctx.state);\n        ɵngcc0.ɵɵclassMap(ctx.toastClasses);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n    } }, attrs: _c0, decls: 5, vars: 5, consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"innerHTML\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\"], [1, \"toast-progress\"]], template: function Toast_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, Toast_button_0_Template, 3, 0, \"button\", 0);\n        ɵngcc0.ɵɵtemplate(1, Toast_div_1_Template, 3, 5, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, Toast_div_2_Template, 1, 3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, Toast_div_3_Template, 2, 4, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, Toast_div_4_Template, 2, 2, \"div\", 4);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n    } }, directives: [ɵngcc2.NgIf], encapsulation: 2, data: { animation: [\n            trigger('flyInOut', [\n                state('inactive', style({ opacity: 0 })),\n                state('active', style({ opacity: 1 })),\n                state('removed', style({ opacity: 0 })),\n                transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\n            ])\n        ] } });\nToast.ctorParameters = () => [\n    { type: ToastrService },\n    { type: ToastPackage },\n    { type: NgZone }\n];\nToast.propDecorators = {\n    toastClasses: [{ type: HostBinding, args: ['class',] }],\n    state: [{ type: HostBinding, args: ['@flyInOut',] }],\n    displayStyle: [{ type: HostBinding, args: ['style.display',] }],\n    tapToast: [{ type: HostListener, args: ['click',] }],\n    stickAround: [{ type: HostListener, args: ['mouseenter',] }],\n    delayedHideToast: [{ type: HostListener, args: ['mouseleave',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Toast, [{\n        type: Component,\n        args: [{\n                selector: '[toast-component]',\n                template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n                animations: [\n                    trigger('flyInOut', [\n                        state('inactive', style({ opacity: 0 })),\n                        state('active', style({ opacity: 1 })),\n                        state('removed', style({ opacity: 0 })),\n                        transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                        transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\n                    ])\n                ],\n                preserveWhitespaces: false\n            }]\n    }], function () { return [{ type: ToastrService }, { type: ToastPackage }, { type: ɵngcc0.NgZone }]; }, { toastClasses: [{\n            type: HostBinding,\n            args: ['class']\n        }], state: [{\n            type: HostBinding,\n            args: ['@flyInOut']\n        }], displayStyle: [{\n            type: HostBinding,\n            args: ['style.display']\n        }], tapToast: [{\n            type: HostListener,\n            args: ['click']\n        }], stickAround: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }], delayedHideToast: [{\n            type: HostListener,\n            args: ['mouseleave']\n        }] }); })();\n\nconst DefaultGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), { toastComponent: Toast });\nclass ToastrModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastrModule.ɵfac = function ToastrModule_Factory(t) { return new (t || ToastrModule)(); };\nToastrModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ToastrModule });\nToastrModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastrModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [Toast],\n                exports: [Toast],\n                entryComponents: [Toast]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastrModule, { declarations: function () { return [Toast]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Toast]; } }); })();\nclass ToastrComponentlessModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoComponentGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastrComponentlessModule.ɵfac = function ToastrComponentlessModule_Factory(t) { return new (t || ToastrComponentlessModule)(); };\nToastrComponentlessModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ToastrComponentlessModule });\nToastrComponentlessModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastrComponentlessModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastrComponentlessModule, { imports: function () { return [CommonModule]; } }); })();\n\nclass ToastNoAnimation {\n    constructor(toastrService, toastPackage, appRef) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.appRef = appRef;\n        /** width of progress bar */\n        this.width = -1;\n        /** a combination of toast type and options.toastClass */\n        this.toastClasses = '';\n        /** controls animation */\n        this.state = 'inactive';\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n    }\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state === 'inactive') {\n            return 'none';\n        }\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state = 'active';\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n            this.timeout = setTimeout(() => {\n                this.remove();\n            }, this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.intervalId = setInterval(() => this.updateProgress(), 10);\n            }\n        }\n        if (this.options.onActivateTick) {\n            this.appRef.tick();\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = 'active';\n        this.options.timeOut = this.originalTimeout;\n        this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n        this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = 'removed';\n        this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n    }\n    tapToast() {\n        if (this.state === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state === 'removed') {\n            return;\n        }\n        this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n}\nToastNoAnimation.ɵfac = function ToastNoAnimation_Factory(t) { return new (t || ToastNoAnimation)(ɵngcc0.ɵɵdirectiveInject(ToastrService), ɵngcc0.ɵɵdirectiveInject(ToastPackage), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef)); };\nToastNoAnimation.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ToastNoAnimation, selectors: [[\"\", \"toast-component\", \"\"]], hostVars: 4, hostBindings: function ToastNoAnimation_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ToastNoAnimation_click_HostBindingHandler() { return ctx.tapToast(); })(\"mouseenter\", function ToastNoAnimation_mouseenter_HostBindingHandler() { return ctx.stickAround(); })(\"mouseleave\", function ToastNoAnimation_mouseleave_HostBindingHandler() { return ctx.delayedHideToast(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.toastClasses);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n    } }, attrs: _c0, decls: 5, vars: 5, consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"innerHTML\"], [\"role\", \"alert\", \"aria-live\", \"polite\"], [1, \"toast-progress\"]], template: function ToastNoAnimation_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ToastNoAnimation_button_0_Template, 3, 0, \"button\", 0);\n        ɵngcc0.ɵɵtemplate(1, ToastNoAnimation_div_1_Template, 3, 5, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, ToastNoAnimation_div_2_Template, 1, 3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, ToastNoAnimation_div_3_Template, 2, 4, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, ToastNoAnimation_div_4_Template, 2, 2, \"div\", 4);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n    } }, directives: [ɵngcc2.NgIf], encapsulation: 2 });\nToastNoAnimation.ctorParameters = () => [\n    { type: ToastrService },\n    { type: ToastPackage },\n    { type: ApplicationRef }\n];\nToastNoAnimation.propDecorators = {\n    toastClasses: [{ type: HostBinding, args: ['class',] }],\n    displayStyle: [{ type: HostBinding, args: ['style.display',] }],\n    tapToast: [{ type: HostListener, args: ['click',] }],\n    stickAround: [{ type: HostListener, args: ['mouseenter',] }],\n    delayedHideToast: [{ type: HostListener, args: ['mouseleave',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastNoAnimation, [{\n        type: Component,\n        args: [{\n                selector: '[toast-component]',\n                template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `\n            }]\n    }], function () { return [{ type: ToastrService }, { type: ToastPackage }, { type: ɵngcc0.ApplicationRef }]; }, { toastClasses: [{\n            type: HostBinding,\n            args: ['class']\n        }], displayStyle: [{\n            type: HostBinding,\n            args: ['style.display']\n        }], tapToast: [{\n            type: HostListener,\n            args: ['click']\n        }], stickAround: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }], delayedHideToast: [{\n            type: HostListener,\n            args: ['mouseleave']\n        }] }); })();\nconst DefaultNoAnimationsGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), { toastComponent: ToastNoAnimation });\nclass ToastNoAnimationModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastNoAnimationModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoAnimationsGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastNoAnimationModule.ɵfac = function ToastNoAnimationModule_Factory(t) { return new (t || ToastNoAnimationModule)(); };\nToastNoAnimationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ToastNoAnimationModule });\nToastNoAnimationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastNoAnimationModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [ToastNoAnimation],\n                exports: [ToastNoAnimation],\n                entryComponents: [ToastNoAnimation]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastNoAnimationModule, { declarations: function () { return [ToastNoAnimation]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ToastNoAnimation]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastContainerModule, ToastInjector, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService };\n\n"]},"metadata":{},"sourceType":"module"}