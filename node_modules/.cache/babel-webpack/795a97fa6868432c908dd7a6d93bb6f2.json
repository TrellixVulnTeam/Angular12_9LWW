{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragZoom\n */\n\n\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\n\nvar DragZoom = function (_super) {\n  __extends(DragZoom, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function DragZoom(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    _this = _super.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea\n    }) || this;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.out_ = options.out !== undefined ? options.out : false;\n    return _this;\n  }\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n\n\n  DragZoom.prototype.onBoxEnd = function (event) {\n    var map = this.getMap();\n    var view = map.getView();\n    var geometry = this.getGeometry();\n\n    if (this.out_) {\n      var rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      var resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      var factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  return DragZoom;\n}(DragBox);\n\nexport default DragZoom;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/interaction/DragZoom.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","DragBox","easeOut","shiftKeyOnly","DragZoom","_super","opt_options","_this","options","condition","className","minArea","duration_","duration","undefined","out_","out","onBoxEnd","event","map","getMap","view","getView","geometry","getGeometry","rotatedExtent","rotatedExtentForGeometry","resolution","getResolutionForExtentInternal","factor","getResolution","clone","scale","fitInternal","easing"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var geometry = this.getGeometry();\n        if (this.out_) {\n            var rotatedExtent = view.rotatedExtentForGeometry(geometry);\n            var resolution = view.getResolutionForExtentInternal(rotatedExtent);\n            var factor = view.getResolution() / resolution;\n            geometry = geometry.clone();\n            geometry.scale(factor * factor);\n        }\n        view.fitInternal(geometry, {\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n"]},"metadata":{},"sourceType":"module"}