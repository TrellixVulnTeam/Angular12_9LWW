{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/reproj/Image\n */\n\n\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\n\nvar ReprojImage = function (_super) {\n  __extends(ReprojImage, _super);\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n\n\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, opt_contextOptions) {\n    var _this = this;\n\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n    var limitedTargetExtent = maxTargetExtent ? getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n    var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n    _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n\n    _this.targetProj_ = targetProj;\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n\n    _this.maxSourceExtent_ = maxSourceExtent;\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n\n    _this.triangulation_ = triangulation;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.targetResolution_ = targetResolution;\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n\n    _this.targetExtent_ = targetExtent;\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n\n    _this.sourceImage_ = sourceImage;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.sourcePixelRatio_ = sourcePixelRatio;\n    /**\n     * @private\n     * @type {object}\n     */\n\n    _this.contextOptions_ = opt_contextOptions;\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    _this.canvas_ = null;\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n\n    _this.sourceListenerKey_ = null;\n    return _this;\n  }\n  /**\n   * Clean up.\n   */\n\n\n  ReprojImage.prototype.disposeInternal = function () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n\n    _super.prototype.disposeInternal.call(this);\n  };\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n\n\n  ReprojImage.prototype.getImage = function () {\n    return this.canvas_;\n  };\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n\n\n  ReprojImage.prototype.getProjection = function () {\n    return this.targetProj_;\n  };\n  /**\n   * @private\n   */\n\n\n  ReprojImage.prototype.reproject_ = function () {\n    var sourceState = this.sourceImage_.getState();\n\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n        extent: this.sourceImage_.getExtent(),\n        image: this.sourceImage_.getImage()\n      }], 0, undefined, this.contextOptions_);\n    }\n\n    this.state = sourceState;\n    this.changed();\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  ReprojImage.prototype.load = function () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      var sourceState = this.sourceImage_.getState();\n\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n          var sourceState = this.sourceImage_.getState();\n\n          if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n            this.unlistenSource_();\n            this.reproject_();\n          }\n        }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  ReprojImage.prototype.unlistenSource_ = function () {\n    unlistenByKey(this.sourceListenerKey_);\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase);\n\nexport default ReprojImage;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/reproj/Image.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","ERROR_THRESHOLD","EventType","ImageBase","ImageState","Triangulation","calculateSourceResolution","render","renderReprojected","getCenter","getHeight","getIntersection","getWidth","listen","unlistenByKey","ReprojImage","_super","sourceProj","targetProj","targetExtent","targetResolution","pixelRatio","getImageFunction","opt_contextOptions","_this","maxSourceExtent","getExtent","maxTargetExtent","limitedTargetExtent","targetCenter","sourceResolution","errorThresholdInPixels","triangulation","sourceExtent","calculateSourceExtent","sourceImage","state","IDLE","EMPTY","sourcePixelRatio","getPixelRatio","targetProj_","maxSourceExtent_","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","contextOptions_","canvas_","sourceListenerKey_","disposeInternal","LOADING","unlistenSource_","getImage","getProjection","reproject_","sourceState","getState","LOADED","width","height","getResolution","extent","image","undefined","changed","load","ERROR","CHANGE","e"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected, } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, opt_contextOptions) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [\n                {\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage(),\n                },\n            ], 0, undefined, this.contextOptions_);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED ||\n                        sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(\n        /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n"]},"metadata":{},"sourceType":"module"}