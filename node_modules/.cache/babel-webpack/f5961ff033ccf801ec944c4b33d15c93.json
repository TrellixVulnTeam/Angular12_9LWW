{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Optional, Component, Input, NgModule, Directive, EventEmitter, ChangeDetectionStrategy, Output, Self, HostListener } from '@angular/core';\nimport * as i3$1 from '@angular/material/form-field';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i3$2 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport * as i7$1 from '@angular/material/menu';\nimport { MatMenuModule } from '@angular/material/menu';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i6 from '@angular/material/button-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport * as i11 from '@angular/material/core';\nimport { MatOptionModule } from '@angular/material/core';\nimport * as i14 from '@angular/material/divider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport * as i12 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i8 from '@angular/material/checkbox';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport * as i3$4 from '@angular/material/tabs';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport * as i6$2 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i3 from '@igo2/core';\nimport { IgoLanguageModule } from '@igo2/core';\nimport * as i4 from '@angular/forms';\nimport { Validators, FormsModule, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { Observable, BehaviorSubject, Subject, of, merge, ReplaySubject, EMPTY, timer, combineLatest } from 'rxjs';\nimport { skip, first, catchError, tap, map, mergeMap, debounceTime, take, filter, buffer, debounce } from 'rxjs/operators';\nimport * as olStyle from 'ol/style';\nimport * as i1$1 from '@igo2/geo';\nimport { FeatureDataSource, VectorLayer, ClusterDataSource, moveToOlFeatures, FeatureMotion, IgoFeatureModule } from '@igo2/geo';\nimport { downloadContent, ObjectUtils, uuid, Clipboard } from '@igo2/utils';\nimport olPoint from 'ol/geom/Point';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Cluster from 'ol/source/Cluster';\nimport olVectorSource from 'ol/source/Vector';\nimport * as i1 from '@angular/common/http';\nimport * as i2 from '@igo2/auth';\nimport { IgoAuthModule } from '@igo2/auth';\nimport * as i5$1 from '@igo2/common';\nimport { IgoSpinnerModule, ActionStore, ActionbarMode, IgoConfirmDialogModule, IgoStopPropagationModule, IgoListModule, IgoKeyValueModule, IgoCollapsibleModule, IgoActionbarModule, getEntityTitle, IgoPanelModule, IgoFlexibleModule } from '@igo2/common';\nimport * as i6$1 from '@ngx-translate/core';\nimport * as i9$1 from '@angular/material/autocomplete';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as i1$2 from '@angular/material/dialog';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport * as i9 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i3$3 from '@angular/material/list';\nimport { MatListModule } from '@angular/material/list';\nimport * as i6$3 from '@angular/material/radio';\nimport { MatRadioModule } from '@angular/material/radio';\nimport * as olproj from 'ol/proj';\nimport * as oleasing from 'ol/easing';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i2$1 from '@angular/material/sidenav';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport * as i1$3 from '@angular/platform-browser';\n\nclass ExportError extends Error {}\n\nclass ExportInvalidFileError extends ExportError {\n  constructor() {\n    super('Invalid context');\n    Object.setPrototypeOf(this, ExportInvalidFileError.prototype);\n  }\n\n}\n\nclass ExportNothingToExportError extends ExportError {\n  constructor() {\n    super('Nothing to export');\n    Object.setPrototypeOf(this, ExportNothingToExportError.prototype);\n  }\n\n}\n\nfunction handleFileExportError(error, messageService, languageService) {\n  if (error instanceof ExportNothingToExportError) {\n    this.handleNothingToExportError(messageService, languageService);\n    return;\n  }\n\n  const translate = languageService.translate;\n  const title = translate.instant('igo.context.contextImportExport.export.failed.title');\n  const message = translate.instant('igo.context.contextImportExport.export.failed.text');\n  messageService.error(message, title);\n}\n\nfunction handleFileExportSuccess(messageService, languageService) {\n  const translate = languageService.translate;\n  const title = translate.instant('igo.context.contextImportExport.export.success.title');\n  const message = translate.instant('igo.context.contextImportExport.export.success.text');\n  messageService.success(message, title);\n}\n\nfunction handleNothingToExportError(messageService, languageService) {\n  const translate = languageService.translate;\n  const title = translate.instant('igo.context.contextImportExport.export.nothing.title');\n  const message = translate.instant('igo.context.contextImportExport.export.nothing.text');\n  messageService.error(message, title);\n}\n\nfunction handleFileImportSuccess(file, context, messageService, languageService, contextService) {\n  if (Object.keys(context).length <= 0) {\n    handleNothingToImportError(file, messageService, languageService);\n    return;\n  }\n\n  const contextTitle = computeLayerTitleFromFile(file);\n  addContextToContextList(context, contextTitle, contextService);\n  const translate = languageService.translate;\n  const messageTitle = translate.instant('igo.context.contextImportExport.import.success.title');\n  const message = translate.instant('igo.context.contextImportExport.import.success.text', {\n    value: contextTitle\n  });\n  messageService.success(message, messageTitle);\n}\n\nfunction handleFileImportError(file, error, messageService, languageService, sizeMb) {\n  sizeMb = sizeMb ? sizeMb : 30;\n  const errMapping = {\n    'Invalid file': handleInvalidFileImportError,\n    'File is too large': handleSizeFileImportError,\n    'Failed to read file': handleUnreadbleFileImportError\n  };\n  errMapping[error.message](file, error, messageService, languageService, sizeMb);\n}\n\nfunction handleInvalidFileImportError(file, error, messageService, languageService) {\n  const translate = languageService.translate;\n  const title = translate.instant('igo.context.contextImportExport.import.invalid.title');\n  const message = translate.instant('igo.context.contextImportExport.import.invalid.text', {\n    value: file.name,\n    mimeType: file.type\n  });\n  messageService.error(message, title);\n}\n\nfunction handleSizeFileImportError(file, error, messageService, languageService, sizeMb) {\n  const translate = languageService.translate;\n  const title = translate.instant('igo.context.contextImportExport.import.tooLarge.title');\n  const message = translate.instant('igo.context.contextImportExport.import.tooLarge.text', {\n    value: file.name,\n    size: sizeMb\n  });\n  messageService.error(message, title);\n}\n\nfunction handleUnreadbleFileImportError(file, error, messageService, languageService) {\n  const translate = languageService.translate;\n  const title = translate.instant('igo.context.contextImportExport.import.unreadable.title');\n  const message = translate.instant('igo.context.contextImportExport.import.unreadable.text', {\n    value: file.name\n  });\n  messageService.error(message, title);\n}\n\nfunction handleNothingToImportError(file, messageService, languageService) {\n  const translate = languageService.translate;\n  const title = translate.instant('igo.context.contextImportExport.import.empty.title');\n  const message = translate.instant('igo.context.contextImportExport.import.empty.text', {\n    value: file.name\n  });\n  messageService.error(message, title);\n}\n\nfunction addContextToContextList(context, contextTitle, contextService) {\n  context.title = contextTitle;\n  context.imported = true;\n  contextService.contexts$.value.ours.unshift(context);\n  contextService.contexts$.next(contextService.contexts$.value);\n  contextService.importedContext.unshift(context);\n  contextService.loadContext(context.uri);\n}\n\nfunction getFileExtension(file) {\n  return file.name.split('.').pop().toLowerCase();\n}\n\nfunction computeLayerTitleFromFile(file) {\n  return file.name.substr(0, file.name.lastIndexOf('.'));\n}\n\nfunction addImportedFeaturesToMap(olFeatures, map, layerTitle) {\n  const r = Math.floor(Math.random() * 255);\n  const g = Math.floor(Math.random() * 255);\n  const b = Math.floor(Math.random() * 255);\n  const stroke = new olStyle.Stroke({\n    color: [r, g, b, 1],\n    width: 2\n  });\n  const fill = new olStyle.Fill({\n    color: [r, g, b, 0.4]\n  });\n  const sourceOptions = {\n    type: 'vector',\n    queryable: true\n  };\n  const source = new FeatureDataSource(sourceOptions);\n  source.ol.addFeatures(olFeatures);\n  const layer = new VectorLayer({\n    title: layerTitle,\n    source,\n    style: new olStyle.Style({\n      stroke,\n      fill,\n      image: new olStyle.Circle({\n        radius: 5,\n        stroke,\n        fill\n      })\n    })\n  });\n  map.addLayer(layer);\n  return layer;\n}\n\nfunction addImportedFeaturesStyledToMap(olFeatures, map, layerTitle, styleListService, styleService) {\n  let style;\n  let distance;\n\n  if (styleListService.getStyleList(layerTitle.toString() + '.styleByAttribute')) {\n    const styleByAttribute = styleListService.getStyleList(layerTitle.toString() + '.styleByAttribute');\n\n    style = feature => {\n      return styleService.createStyleByAttribute(feature, styleByAttribute);\n    };\n  } else if (styleListService.getStyleList(layerTitle.toString() + '.clusterStyle')) {\n    const clusterParam = styleListService.getStyleList(layerTitle.toString() + '.clusterParam');\n    distance = styleListService.getStyleList(layerTitle.toString() + '.distance');\n    const baseStyle = styleService.createStyle(styleListService.getStyleList(layerTitle.toString() + '.clusterStyle'));\n\n    style = feature => {\n      return styleService.createClusterStyle(feature, clusterParam, baseStyle);\n    };\n  } else if (styleListService.getStyleList(layerTitle.toString() + '.style')) {\n    style = styleService.createStyle(styleListService.getStyleList(layerTitle.toString() + '.style'));\n  } else {\n    style = styleService.createStyle(styleListService.getStyleList('default.style'));\n  }\n\n  let source;\n\n  if (styleListService.getStyleList(layerTitle.toString() + '.clusterStyle')) {\n    const sourceOptions = {\n      distance,\n      type: 'cluster',\n      queryable: true\n    };\n    source = new ClusterDataSource(sourceOptions);\n    source.ol.source.addFeatures(olFeatures);\n  } else {\n    const sourceOptions = {\n      type: 'vector',\n      queryable: true\n    };\n    source = new FeatureDataSource(sourceOptions);\n    source.ol.addFeatures(olFeatures);\n  }\n\n  const layer = new VectorLayer({\n    title: layerTitle,\n    source,\n    style\n  });\n  map.addLayer(layer);\n  return layer;\n}\n\nclass ImportError extends Error {}\n\nclass ImportInvalidFileError extends ImportError {\n  constructor() {\n    super('Invalid file');\n    Object.setPrototypeOf(this, ImportInvalidFileError.prototype);\n  }\n\n}\n\nclass ImportUnreadableFileError extends ImportError {\n  constructor() {\n    super('Failed to read file');\n    Object.setPrototypeOf(this, ImportUnreadableFileError.prototype);\n  }\n\n}\n\nclass ImportNothingToImportError extends ImportError {\n  constructor() {\n    super('Nothing to import');\n    Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\n  }\n\n}\n\nclass ImportSizeError extends ImportError {\n  constructor() {\n    super('File is too large');\n    Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\n  }\n\n}\n\nclass ImportSRSError extends ImportError {\n  constructor() {\n    super('Invalid SRS definition');\n    Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\n  }\n\n}\n\nlet ContextImportService = /*#__PURE__*/(() => {\n  class ContextImportService {\n    constructor(config) {\n      this.config = config;\n      const configFileSizeMb = this.config.getConfig('importExport.clientSideFileSizeMaxMb');\n      this.clientSideFileSizeMax = (configFileSizeMb ? configFileSizeMb : 30) * Math.pow(1024, 2);\n    }\n\n    import(file) {\n      return this.importAsync(file);\n    }\n\n    getFileImporter(file) {\n      const extension = getFileExtension(file);\n      const mimeType = file.type;\n      const allowedMimeTypes = [...ContextImportService.allowedMimeTypes];\n      const allowedExtensions = ContextImportService.allowedExtensions;\n\n      if (allowedMimeTypes.indexOf(mimeType) < 0 && allowedExtensions.indexOf(extension) < 0) {\n        return undefined;\n      } else if (mimeType === 'application/json' || extension === ContextImportService.allowedExtensions) {\n        return this.importFile;\n      }\n\n      return undefined;\n    }\n\n    importAsync(file) {\n      const doImport = observer => {\n        if (file.size >= this.clientSideFileSizeMax) {\n          observer.error(new ImportSizeError());\n          return;\n        }\n\n        const importer = this.getFileImporter(file);\n\n        if (importer === undefined) {\n          observer.error(new ImportInvalidFileError());\n          return;\n        }\n\n        importer.call(this, file, observer);\n      };\n\n      return new Observable(doImport);\n    }\n\n    importFile(file, observer) {\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        try {\n          const context = this.parseContextFromFile(file, event.target.result);\n          observer.next(context);\n        } catch (e) {\n          observer.error(new ImportUnreadableFileError());\n        }\n\n        observer.complete();\n      };\n\n      reader.onerror = evt => {\n        observer.error(new ImportUnreadableFileError());\n      };\n\n      reader.readAsText(file, 'UTF-8');\n    }\n\n    parseContextFromFile(file, data) {\n      const context = JSON.parse(data);\n      return context;\n    }\n\n  }\n\n  ContextImportService.allowedMimeTypes = ['application/json'];\n  ContextImportService.allowedExtensions = 'json';\n\n  ContextImportService.ɵfac = function ContextImportService_Factory(t) {\n    return new (t || ContextImportService)(i0.ɵɵinject(i3.ConfigService));\n  };\n\n  ContextImportService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContextImportService,\n    factory: ContextImportService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContextImportService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ContextExportService = /*#__PURE__*/(() => {\n  class ContextExportService {\n    export(res) {\n      return this.exportAsync(res);\n    }\n\n    exportAsync(res) {\n      const doExport = observer => {\n        const nothingToExport = this.nothingToExport(res);\n\n        if (nothingToExport === true) {\n          observer.error(new ExportNothingToExportError());\n          return;\n        }\n\n        const contextJSON = JSON.stringify(res);\n        downloadContent(contextJSON, 'text/json;charset=utf-8', `${res.uri}.json`);\n        observer.complete();\n      };\n\n      return new Observable(doExport);\n    }\n\n    nothingToExport(res) {\n      if (res.map === undefined) {\n        return true;\n      }\n\n      return false;\n    }\n\n  }\n\n  ContextExportService.ɵfac = function ContextExportService_Factory(t) {\n    return new (t || ContextExportService)();\n  };\n\n  ContextExportService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContextExportService,\n    factory: ContextExportService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContextExportService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar TypePermission = /*#__PURE__*/(() => {\n  (function (TypePermission) {\n    TypePermission[TypePermission[\"null\"] = 0] = \"null\";\n    TypePermission[TypePermission[\"read\"] = 1] = \"read\";\n    TypePermission[TypePermission[\"write\"] = 2] = \"write\";\n  })(TypePermission || (TypePermission = {}));\n\n  return TypePermission;\n})();\nvar Scope = /*#__PURE__*/(() => {\n  (function (Scope) {\n    Scope[Scope[\"public\"] = 0] = \"public\";\n    Scope[Scope[\"protected\"] = 1] = \"protected\";\n    Scope[Scope[\"private\"] = 2] = \"private\";\n  })(Scope || (Scope = {}));\n\n  return Scope;\n})();\nlet ContextService = /*#__PURE__*/(() => {\n  class ContextService {\n    constructor(http, authService, languageService, config, messageService, route) {\n      this.http = http;\n      this.authService = authService;\n      this.languageService = languageService;\n      this.config = config;\n      this.messageService = messageService;\n      this.route = route;\n      this.context$ = new BehaviorSubject(undefined);\n      this.contexts$ = new BehaviorSubject({\n        ours: []\n      });\n      this.defaultContextId$ = new BehaviorSubject(undefined);\n      this.editedContext$ = new BehaviorSubject(undefined);\n      this.importedContext = [];\n      this.toolsChanged$ = new Subject();\n      this.mapViewFromRoute = {};\n      this.options = Object.assign({\n        basePath: 'contexts',\n        contextListFile: '_contexts.json',\n        defaultContextUri: '_default'\n      }, this.config.getConfig('context'));\n      this.baseUrl = this.options.url;\n      this.readParamsFromRoute();\n\n      if (this.authService.hasAuthService) {\n        this.authService.logged$.subscribe(logged => {\n          if (logged) {\n            this.contexts$.pipe(skip(1), first()).subscribe(c => {\n              this.handleContextsChange();\n            });\n            this.loadContexts();\n          }\n        });\n      } else {\n        this.loadContexts();\n        this.handleContextsChange(false);\n      }\n    }\n\n    get defaultContextUri() {\n      return this._defaultContextUri || this.options.defaultContextUri;\n    }\n\n    set defaultContextUri(uri) {\n      this._defaultContextUri = uri;\n    }\n\n    get(permissions, hidden) {\n      let url = this.baseUrl + '/contexts';\n\n      if (permissions && this.authService.authenticated) {\n        url += '?permission=' + permissions.join();\n\n        if (hidden) {\n          url += '&hidden=true';\n        }\n      }\n\n      return this.http.get(url);\n    }\n\n    getById(id) {\n      const url = this.baseUrl + '/contexts/' + id;\n      return this.http.get(url);\n    }\n\n    getDetails(id) {\n      const url = `${this.baseUrl}/contexts/${id}/details`;\n      return this.http.get(url).pipe(catchError(res => {\n        this.handleError(res, id);\n        throw res;\n      }));\n    }\n\n    getDefault() {\n      const url = this.baseUrl + '/contexts/default';\n      return this.http.get(url).pipe(tap(context => {\n        this.defaultContextId$.next(context.id);\n      }));\n    }\n\n    getProfilByUser() {\n      if (this.baseUrl) {\n        const url = this.baseUrl + '/profils?';\n        return this.http.get(url);\n      }\n\n      return of([]);\n    }\n\n    setDefault(id) {\n      const url = this.baseUrl + '/contexts/default';\n      return this.http.post(url, {\n        defaultContextId: id\n      });\n    }\n\n    hideContext(id) {\n      const url = this.baseUrl + '/contexts/' + id + '/hide';\n      return this.http.post(url, {});\n    }\n\n    showContext(id) {\n      const url = this.baseUrl + '/contexts/' + id + '/show';\n      return this.http.post(url, {});\n    }\n\n    delete(id, imported = false) {\n      const contexts = {\n        ours: []\n      };\n      Object.keys(this.contexts$.value).forEach(key => contexts[key] = this.contexts$.value[key].filter(c => c.id !== id));\n\n      if (imported) {\n        this.importedContext = this.importedContext.filter(c => c.id !== id);\n        return of(this.contexts$.next(contexts));\n      }\n\n      const url = this.baseUrl + '/contexts/' + id;\n      return this.http.delete(url).pipe(tap(res => {\n        this.contexts$.next(contexts);\n      }));\n    }\n\n    create(context) {\n      const url = this.baseUrl + '/contexts';\n      return this.http.post(url, context).pipe(map(contextCreated => {\n        if (this.authService.authenticated) {\n          contextCreated.permission = TypePermission[TypePermission.write];\n        } else {\n          contextCreated.permission = TypePermission[TypePermission.read];\n        }\n\n        this.contexts$.value.ours.unshift(contextCreated);\n        this.contexts$.next(this.contexts$.value);\n        return contextCreated;\n      }));\n    }\n\n    clone(id, properties = {}) {\n      const url = this.baseUrl + '/contexts/' + id + '/clone';\n      return this.http.post(url, properties).pipe(map(contextCloned => {\n        contextCloned.permission = TypePermission[TypePermission.write];\n        this.contexts$.value.ours.unshift(contextCloned);\n        this.contexts$.next(this.contexts$.value);\n        return contextCloned;\n      }));\n    }\n\n    update(id, context) {\n      const url = this.baseUrl + '/contexts/' + id;\n      return this.http.patch(url, context);\n    } // =================================================================\n\n\n    addToolAssociation(contextId, toolId) {\n      const url = `${this.baseUrl}/contexts/${contextId}/tools`;\n      const association = {\n        toolId\n      };\n      return this.http.post(url, association);\n    }\n\n    deleteToolAssociation(contextId, toolId) {\n      const url = `${this.baseUrl}/contexts/${contextId}/tools/${toolId}`;\n      return this.http.delete(url);\n    }\n\n    getPermissions(id) {\n      const url = this.baseUrl + '/contexts/' + id + '/permissions';\n      return this.http.get(url);\n    }\n\n    addPermissionAssociation(contextId, profil, type) {\n      const url = `${this.baseUrl}/contexts/${contextId}/permissions`;\n      const association = {\n        profil,\n        typePermission: type\n      };\n      return this.http.post(url, association).pipe(catchError(res => {\n        this.handleError(res, undefined, true);\n        throw [res]; // TODO Not sure about this.\n      }));\n    }\n\n    deletePermissionAssociation(contextId, permissionId) {\n      const url = `${this.baseUrl}/contexts/${contextId}/permissions/${permissionId}`;\n      return this.http.delete(url);\n    } // ======================================================================\n\n\n    getLocalContexts() {\n      const url = this.getPath(this.options.contextListFile);\n      return this.http.get(url).pipe(map(res => {\n        return {\n          ours: res\n        };\n      }));\n    }\n\n    getLocalContext(uri) {\n      const url = this.getPath(`${uri}.json`);\n      return this.http.get(url).pipe(mergeMap(res => {\n        if (!res.base) {\n          return of(res);\n        }\n\n        const urlBase = this.getPath(`${res.base}.json`);\n        return this.http.get(urlBase).pipe(map(resBase => {\n          const resMerge = res;\n          resMerge.map = ObjectUtils.mergeDeep(resBase.map, res.map);\n          resMerge.layers = (resBase.layers || []).concat(res.layers || []).reverse().filter((l, index, self) => !l.id || self.findIndex(l2 => l2.id === l.id) === index).reverse();\n          resMerge.toolbar = res.toolbar || resBase.toolbar;\n          resMerge.message = res.message || resBase.message;\n          resMerge.messages = res.messages || resBase.messages;\n          resMerge.tools = (res.tools || []).concat(resBase.tools || []).filter((t, index, self) => self.findIndex(t2 => t2.name === t.name) === index);\n          return resMerge;\n        }), catchError(err => {\n          this.handleError(err, uri);\n          throw err;\n        }));\n      }), catchError(err2 => {\n        this.handleError(err2, uri);\n        throw err2;\n      }));\n    }\n\n    loadContexts(permissions, hidden) {\n      let request;\n\n      if (this.baseUrl) {\n        request = this.get(permissions, hidden);\n      } else {\n        request = this.getLocalContexts();\n      }\n\n      request.subscribe(contexts => {\n        contexts.ours = this.importedContext.concat(contexts.ours);\n        this.contexts$.next(contexts);\n      });\n    }\n\n    loadDefaultContext() {\n      const loadFct = (direct = false) => {\n        if (!direct && this.baseUrl && this.authService.authenticated) {\n          this.getDefault().subscribe(_context => {\n            this.defaultContextUri = _context.uri;\n            this.addContextToList(_context);\n            this.setContext(_context);\n          }, () => {\n            this.defaultContextId$.next(undefined);\n            this.loadContext(this.defaultContextUri);\n          });\n        } else {\n          this.loadContext(this.defaultContextUri);\n        }\n      };\n\n      if (this.route && this.route.options.contextKey) {\n        this.route.queryParams.pipe(debounceTime(100)).subscribe(params => {\n          const contextParam = params[this.route.options.contextKey];\n          let direct = false;\n\n          if (contextParam) {\n            this.defaultContextUri = contextParam;\n            direct = true;\n          }\n\n          loadFct(direct);\n        });\n      } else {\n        loadFct();\n      }\n    }\n\n    loadContext(uri) {\n      const context = this.context$.value;\n\n      if (context && context.uri === uri) {\n        return;\n      }\n\n      this.getContextByUri(uri).pipe(first()).subscribe(_context => {\n        this.addContextToList(_context);\n        this.setContext(_context);\n      }, err => {\n        if (uri !== this.options.defaultContextUri) {\n          this.loadContext(this.options.defaultContextUri);\n        }\n      });\n    }\n\n    setContext(context) {\n      this.handleContextMessage(context);\n      const currentContext = this.context$.value;\n\n      if (currentContext && context && context.id === currentContext.id) {\n        if (context.map.view.keepCurrentView === undefined) {\n          context.map.view.keepCurrentView = true;\n        }\n\n        this.context$.next(context);\n        return;\n      }\n\n      if (!context.map) {\n        context.map = {\n          view: {}\n        };\n      }\n\n      Object.assign(context.map.view, this.mapViewFromRoute);\n      this.context$.next(context);\n    }\n\n    loadEditedContext(uri) {\n      this.getContextByUri(uri).subscribe(_context => {\n        this.setEditedContext(_context);\n      });\n    }\n\n    setEditedContext(context) {\n      this.editedContext$.next(context);\n    }\n\n    getContextFromMap(igoMap, empty) {\n      const view = igoMap.ol.getView();\n      const proj = view.getProjection().getCode();\n      const center = new olPoint(view.getCenter()).transform(proj, 'EPSG:4326');\n      const context = {\n        uri: uuid(),\n        title: '',\n        scope: 'private',\n        map: {\n          view: {\n            center: center.getCoordinates(),\n            zoom: view.getZoom(),\n            projection: proj,\n            maxZoomOnExtent: igoMap.viewController.maxZoomOnExtent\n          }\n        },\n        layers: [],\n        tools: []\n      };\n      let layers = [];\n\n      if (empty === true) {\n        layers = igoMap.layers$.getValue().filter(lay => lay.baseLayer === true || lay.options.id === 'searchPointerSummaryId').sort((a, b) => a.zIndex - b.zIndex);\n      } else {\n        layers = igoMap.layers$.getValue().filter(lay => !lay.id.includes('WfsWorkspaceTableDest')).sort((a, b) => a.zIndex - b.zIndex);\n      }\n\n      let i = 0;\n\n      for (const l of layers) {\n        const layer = l;\n        const opts = {\n          id: layer.options.id ? String(layer.options.id) : undefined,\n          layerOptions: {\n            title: layer.options.title,\n            zIndex: ++i,\n            visible: layer.visible\n          },\n          sourceOptions: {\n            type: layer.dataSource.options.type,\n            params: layer.dataSource.options.params,\n            url: layer.dataSource.options.url,\n            queryable: layer.queryable\n          }\n        };\n\n        if (opts.sourceOptions.type) {\n          context.layers.push(opts);\n        }\n      }\n\n      context.tools = this.tools.map(tool => {\n        return {\n          id: String(tool.id),\n          global: tool.global\n        };\n      });\n      return context;\n    }\n\n    getContextFromLayers(igoMap, layers, name) {\n      const currentContext = this.context$.getValue();\n      const view = igoMap.ol.getView();\n      const proj = view.getProjection().getCode();\n      const center = new olPoint(view.getCenter()).transform(proj, 'EPSG:4326');\n      const context = {\n        uri: name,\n        title: name,\n        map: {\n          view: {\n            center: center.getCoordinates(),\n            zoom: view.getZoom(),\n            projection: proj\n          }\n        },\n        layers: [],\n        toolbar: [],\n        tools: [],\n        extraFeatures: []\n      };\n      const currentLayers = igoMap.layers$.getValue();\n      context.layers = currentLayers.filter(l => l.baseLayer).map(l => {\n        return {\n          baseLayer: true,\n          sourceOptions: l.options.sourceOptions,\n          title: l.options.title,\n          visible: l.visible\n        };\n      });\n      layers.forEach(layer => {\n        const layerFound = currentContext.layers.find(contextLayer => layer.id === contextLayer.source.id && !contextLayer.baseLayer);\n\n        if (layerFound) {\n          let layerStyle = layerFound[`style`];\n\n          if (layerFound[`styleByAttribute`]) {\n            layerStyle = undefined;\n          } else if (layerFound[`clusterBaseStyle`]) {\n            layerStyle = undefined;\n            delete layerFound.sourceOptions[`source`];\n            delete layerFound.sourceOptions[`format`];\n          }\n\n          const opts = {\n            baseLayer: layerFound.baseLayer,\n            title: layer.options.title,\n            zIndex: layer.zIndex,\n            styleByAttribute: layerFound[`styleByAttribute`],\n            clusterBaseStyle: layerFound[`clusterBaseStyle`],\n            style: layerStyle,\n            clusterParam: layerFound[`clusterParam`],\n            visible: layer.visible,\n            opacity: layer.opacity,\n            sourceOptions: layerFound.sourceOptions\n          };\n          context.layers.push(opts);\n        } else {\n          if (!(layer.ol.getSource() instanceof olVectorSource)) {\n            const catalogLayer = layer.options;\n            catalogLayer.zIndex = layer.zIndex;\n            delete catalogLayer.source;\n            context.layers.push(catalogLayer);\n          } else {\n            let features;\n            const writer = new GeoJSON();\n\n            if (layer.ol.getSource() instanceof Cluster) {\n              const clusterSource = layer.ol.getSource();\n              features = writer.writeFeatures(clusterSource.getFeatures(), {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              });\n            } else {\n              const source = layer.ol.getSource();\n              features = writer.writeFeatures(source.getFeatures(), {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              });\n            }\n\n            features = JSON.parse(features);\n            features.name = layer.options.title;\n            context.extraFeatures.push(features);\n          }\n        }\n      });\n      context.toolbar = this.toolbar;\n      context.tools = this.tools;\n      return context;\n    }\n\n    setTools(tools) {\n      this.tools = tools;\n    }\n\n    setToolbar(toolbar) {\n      this.toolbar = toolbar;\n    }\n\n    handleContextMessage(context) {\n      if (this.context$.value && context.uri && this.context$.value.uri !== context.uri) {\n        this.messageService.removeAllAreNotError();\n      }\n\n      context.messages = context.messages ? context.messages : [];\n      context.messages.push(context.message);\n      context.messages.map(message => {\n        if (message) {\n          message.title = message.title ? this.languageService.translate.instant(message.title) : undefined;\n          message.text = message.text ? this.languageService.translate.instant(message.text) : undefined;\n          this.messageService.message(message);\n        }\n      });\n    }\n\n    getContextByUri(uri) {\n      if (this.baseUrl) {\n        let contextToLoad;\n\n        for (const key of Object.keys(this.contexts$.value)) {\n          contextToLoad = this.contexts$.value[key].find(c => {\n            return c.uri === uri;\n          });\n\n          if (contextToLoad) {\n            break;\n          }\n        }\n\n        if (contextToLoad && contextToLoad.imported) {\n          return of(contextToLoad);\n        } // TODO : use always id or uri\n\n\n        const id = contextToLoad ? contextToLoad.id : uri;\n        return this.getDetails(id);\n      }\n\n      const importedContext = this.contexts$.value.ours.find(currentContext => {\n        return currentContext.uri === uri && currentContext.imported === true;\n      });\n\n      if (importedContext) {\n        return of(importedContext);\n      } else {\n        return this.getLocalContext(uri);\n      }\n    }\n\n    getContextLayers(igoMap) {\n      const layers = [];\n      const mapLayers = igoMap.layers$.getValue();\n      mapLayers.forEach(layer => {\n        if (!layer.baseLayer && layer.options.id !== 'searchPointerSummaryId') {\n          layers.push(layer);\n        }\n      });\n      return layers;\n    }\n\n    readParamsFromRoute() {\n      if (!this.route) {\n        return;\n      }\n\n      this.route.queryParams.subscribe(params => {\n        const centerKey = this.route.options.centerKey;\n\n        if (centerKey && params[centerKey]) {\n          const centerParams = params[centerKey];\n          this.mapViewFromRoute.center = centerParams.split(',').map(Number);\n          this.mapViewFromRoute.geolocate = false;\n        }\n\n        const projectionKey = this.route.options.projectionKey;\n\n        if (projectionKey && params[projectionKey]) {\n          const projectionParam = params[projectionKey];\n          this.mapViewFromRoute.projection = projectionParam;\n        }\n\n        const zoomKey = this.route.options.zoomKey;\n\n        if (zoomKey && params[zoomKey]) {\n          const zoomParam = params[zoomKey];\n          this.mapViewFromRoute.zoom = Number(zoomParam);\n        }\n      });\n    }\n\n    getPath(file) {\n      const basePath = this.options.basePath.replace(/\\/$/, '');\n      return `${basePath}/${file}`;\n    }\n\n    handleError(error, uri, permissionError) {\n      const context = this.contexts$.value.ours.find(obj => obj.uri === uri);\n      const titleContext = context ? context.title : uri;\n      error.error.title = this.languageService.translate.instant('igo.context.contextManager.invalid.title');\n      error.error.message = this.languageService.translate.instant('igo.context.contextManager.invalid.text', {\n        value: titleContext\n      });\n      error.error.toDisplay = true;\n\n      if (permissionError) {\n        error.error.title = this.languageService.translate.instant('igo.context.contextManager.errors.addPermissionTitle');\n        error.error.message = this.languageService.translate.instant('igo.context.contextManager.errors.addPermission');\n      }\n\n      this.messageService.error(error.error.message, error.error.title);\n    }\n\n    handleContextsChange(keepCurrentContext = true) {\n      const context = this.context$.value;\n      const editedContext = this.editedContext$.value;\n\n      if (!context || context.uri === this.options.defaultContextUri) {\n        keepCurrentContext = false;\n      }\n\n      if (!keepCurrentContext || !this.findContext(context)) {\n        this.defaultContextUri = undefined;\n        this.loadDefaultContext();\n      } else {\n        this.getContextByUri(context.uri).pipe(first()).subscribe(newContext => {\n          this.toolsChanged$.next(newContext);\n        });\n\n        if (this.baseUrl && this.authService.authenticated) {\n          this.getDefault().subscribe();\n        }\n      }\n\n      const editedFound = this.findContext(editedContext);\n\n      if (!editedFound || editedFound.permission !== 'write') {\n        this.setEditedContext(undefined);\n      }\n    }\n\n    addContextToList(context) {\n      const contextFound = this.findContext(context);\n\n      if (!contextFound) {\n        const contextSimplifie = {\n          id: context.id,\n          uri: context.uri,\n          title: context.title,\n          scope: context.scope,\n          permission: TypePermission[TypePermission.read]\n        };\n\n        if (this.contexts$.value && this.contexts$.value.public) {\n          this.contexts$.value.public.push(contextSimplifie);\n          this.contexts$.next(this.contexts$.value);\n        }\n      }\n    }\n\n    findContext(context) {\n      if (!context) {\n        return false;\n      }\n\n      const contexts = this.contexts$.value;\n      let found;\n\n      for (const key of Object.keys(contexts)) {\n        const value = contexts[key];\n        found = value.find(c => context.id && c.id === context.id || context.uri && c.uri === context.uri);\n\n        if (found) {\n          break;\n        }\n      }\n\n      return found;\n    }\n\n  }\n\n  ContextService.ɵfac = function ContextService_Factory(t) {\n    return new (t || ContextService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.LanguageService), i0.ɵɵinject(i3.ConfigService), i0.ɵɵinject(i3.MessageService), i0.ɵɵinject(i3.RouteService, 8));\n  };\n\n  ContextService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContextService,\n    factory: ContextService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContextService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst _c0$2 = function (a0) {\n  return {\n    size: a0\n  };\n};\n\nfunction ContextImportExportComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"form\", 5);\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ContextImportExportComponent_div_8_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n\n      const _r2 = i0.ɵɵreference(10);\n\n      return _r2.click();\n    });\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"igo-spinner\", 8);\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵelementStart(9, \"input\", 9, 10);\n    i0.ɵɵlistener(\"click\", function ContextImportExportComponent_div_8_Template_input_click_9_listener() {\n      i0.ɵɵrestoreView(_r4);\n\n      const _r2 = i0.ɵɵreference(10);\n\n      return _r2.value = null;\n    })(\"change\", function ContextImportExportComponent_div_8_Template_input_change_9_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.importFiles($event.target.files);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"section\", 11);\n    i0.ɵɵelementStart(12, \"h4\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ul\");\n    i0.ɵɵelementStart(16, \"li\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", i0.ɵɵpipeBind1(4, 7, ctx_r0.loading$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 9, \"igo.geo.importExportForm.importButton\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"shown\", i0.ɵɵpipeBind1(8, 11, ctx_r0.loading$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"display\", \"none\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 13, \"igo.geo.importExportForm.importClarifications\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(18, 15, \"igo.geo.importExportForm.importSizeMax\", i0.ɵɵpureFunction1(18, _c0$2, ctx_r0.fileSizeMb)));\n  }\n}\n\nfunction ContextImportExportComponent_form_9_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const layer_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", layer_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(layer_r9.title);\n  }\n}\n\nfunction ContextImportExportComponent_form_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 12);\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵelementStart(2, \"mat-form-field\", 14);\n    i0.ɵɵelementStart(3, \"mat-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 13);\n    i0.ɵɵelementStart(8, \"mat-form-field\");\n    i0.ɵɵelementStart(9, \"mat-label\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-select\", 16);\n    i0.ɵɵelementStart(13, \"mat-option\", 17, 18);\n    i0.ɵɵlistener(\"click\", function ContextImportExportComponent_form_9_Template_mat_option_click_13_listener() {\n      i0.ɵɵrestoreView(_r11);\n\n      const _r7 = i0.ɵɵreference(14);\n\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.selectAll(_r7);\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"mat-divider\");\n    i0.ɵɵtemplate(18, ContextImportExportComponent_form_9_mat_option_18_Template, 2, 2, \"mat-option\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 6);\n    i0.ɵɵelementStart(20, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ContextImportExportComponent_form_9_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.handleExportFormSubmit(ctx_r12.form.value);\n    });\n    i0.ɵɵpipe(21, \"async\");\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"igo-spinner\", 8);\n    i0.ɵɵpipe(25, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 9, \"igo.context.contextImportExport.export.exportContextName\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 11, \"igo.context.contextImportExport.export.exportPlaceHolder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(16, 13, \"igo.context.contextImportExport.export.exportSelectAll\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.userControlledLayerList);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.form.valid || i0.ɵɵpipeBind1(21, 15, ctx_r1.loading$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(23, 17, \"igo.geo.importExportForm.exportButton\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"shown\", i0.ɵɵpipeBind1(25, 19, ctx_r1.loading$));\n  }\n}\n\nlet ContextImportExportComponent = /*#__PURE__*/(() => {\n  class ContextImportExportComponent {\n    constructor(contextImportService, contextExportService, languageService, messageService, formBuilder, config, contextService) {\n      this.contextImportService = contextImportService;\n      this.contextExportService = contextExportService;\n      this.languageService = languageService;\n      this.messageService = messageService;\n      this.formBuilder = formBuilder;\n      this.config = config;\n      this.contextService = contextService;\n      this.inputProj = 'EPSG:4326';\n      this.loading$ = new BehaviorSubject(false);\n      this.forceNaming = false;\n      this.activeImportExport = 'import';\n      this.buildForm();\n    }\n\n    ngOnInit() {\n      const configFileSizeMb = this.config.getConfig('importExport.clientSideFileSizeMaxMb');\n      this.clientSideFileSizeMax = (configFileSizeMb ? configFileSizeMb : 30) * Math.pow(1024, 2);\n      this.fileSizeMb = this.clientSideFileSizeMax / Math.pow(1024, 2);\n      this.layerList = this.contextService.getContextLayers(this.map);\n      this.userControlledLayerList = this.layerList.filter(layer => layer.showInLayerList);\n    }\n\n    importFiles(files) {\n      this.loading$.next(true);\n\n      for (const file of files) {\n        this.contextImportService.import(file).pipe(take(1)).subscribe(context => this.onFileImportSuccess(file, context), error => this.onFileImportError(file, error), () => {\n          this.loading$.next(false);\n        });\n      }\n    }\n\n    handleExportFormSubmit(contextOptions) {\n      this.loading$.next(true);\n      this.res = this.contextService.getContextFromLayers(this.map, contextOptions.layers, contextOptions.name);\n      this.res.imported = true;\n      this.contextExportService.export(this.res).pipe(take(1)).subscribe(() => {}, error => this.onFileExportError(error), () => {\n        this.onFileExportSuccess();\n        this.loading$.next(false);\n      });\n    }\n\n    buildForm() {\n      this.form = this.formBuilder.group({\n        layers: ['', [Validators.required]],\n        name: ['', [Validators.required]]\n      });\n    }\n\n    onFileImportSuccess(file, context) {\n      handleFileImportSuccess(file, context, this.messageService, this.languageService, this.contextService);\n    }\n\n    onFileImportError(file, error) {\n      this.loading$.next(false);\n      handleFileImportError(file, error, this.messageService, this.languageService, this.fileSizeMb);\n    }\n\n    onFileExportError(error) {\n      this.loading$.next(false);\n      handleFileExportError(error, this.messageService, this.languageService);\n    }\n\n    onFileExportSuccess() {\n      handleFileExportSuccess(this.messageService, this.languageService);\n    }\n\n    selectAll(e) {\n      if (e._selected) {\n        this.form.controls.layers.setValue(this.userControlledLayerList);\n        e._selected = true;\n      }\n\n      if (e._selected === false) {\n        this.form.controls.layers.setValue([]);\n      }\n    }\n\n    onImportExportChange(event) {\n      this.activeImportExport = event.value;\n    }\n\n  }\n\n  ContextImportExportComponent.ɵfac = function ContextImportExportComponent_Factory(t) {\n    return new (t || ContextImportExportComponent)(i0.ɵɵdirectiveInject(ContextImportService), i0.ɵɵdirectiveInject(ContextExportService), i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i3.ConfigService), i0.ɵɵdirectiveInject(ContextService));\n  };\n\n  ContextImportExportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextImportExportComponent,\n    selectors: [[\"igo-context-import-export\"]],\n    inputs: {\n      map: \"map\"\n    },\n    decls: 10,\n    vars: 11,\n    consts: [[1, \"import-export-toggle\", \"mat-typography\"], [3, \"value\", \"change\"], [3, \"value\"], [4, \"ngIf\"], [\"class\", \"igo-form\", 3, \"formGroup\", 4, \"ngIf\"], [1, \"igo-form\"], [1, \"igo-form-button-group\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"click\"], [3, \"shown\"], [\"type\", \"file\", 3, \"click\", \"change\"], [\"fileInput\", \"\"], [1, \"mat-typography\"], [1, \"igo-form\", 3, \"formGroup\"], [1, \"igo-input-container\"], [1, \"example-full-width\"], [\"formControlName\", \"name\", \"matInput\", \"\", 3, \"value\"], [\"formControlName\", \"layers\", \"multiple\", \"\"], [3, \"value\", \"click\"], [\"e\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function ContextImportExportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-button-toggle-group\", 1);\n        i0.ɵɵlistener(\"change\", function ContextImportExportComponent_Template_mat_button_toggle_group_change_1_listener($event) {\n          return ctx.onImportExportChange($event);\n        });\n        i0.ɵɵelementStart(2, \"mat-button-toggle\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-button-toggle\", 2);\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, ContextImportExportComponent_div_8_Template, 19, 20, \"div\", 3);\n        i0.ɵɵtemplate(9, ContextImportExportComponent_form_9_Template, 26, 21, \"form\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.activeImportExport);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"import\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 7, \"igo.geo.importExportForm.importTabTitle\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"export\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 9, \"igo.geo.importExportForm.exportTabTitle\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeImportExport === \"import\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeImportExport === \"export\");\n      }\n    },\n    directives: [i6.MatButtonToggleGroup, i6.MatButtonToggle, i7.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.MatButton, i5$1.SpinnerComponent, i4.FormGroupDirective, i3$1.MatFormField, i3$1.MatLabel, i4.DefaultValueAccessor, i3$2.MatInput, i4.NgControlStatus, i4.FormControlName, i12.MatSelect, i11.MatOption, i14.MatDivider, i7.NgForOf],\n    pipes: [i6$1.TranslatePipe, i7.AsyncPipe],\n    styles: [\".import-export-toggle[_ngcontent-%COMP%]{padding:10px;text-align:center}.import-export-toggle[_ngcontent-%COMP%]   mat-button-toggle-group[_ngcontent-%COMP%]{width:100%}.import-export-toggle[_ngcontent-%COMP%]   mat-button-toggle-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]{width:50%}.igo-input-container[_ngcontent-%COMP%]{padding:10px}.igo-input-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}h4[_ngcontent-%COMP%]{padding:0 5px}.igo-form[_ngcontent-%COMP%]{padding:15px 5px}.igo-form-button-group[_ngcontent-%COMP%]{text-align:center;padding-top:10px}igo-spinner[_ngcontent-%COMP%]{position:absolute;padding-left:10px}\"]\n  });\n  return ContextImportExportComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoContextImportExportModule = /*#__PURE__*/(() => {\n  class IgoContextImportExportModule {\n    static forRoot() {\n      return {\n        ngModule: IgoContextImportExportModule\n      };\n    }\n\n  }\n\n  IgoContextImportExportModule.ɵfac = function IgoContextImportExportModule_Factory(t) {\n    return new (t || IgoContextImportExportModule)();\n  };\n\n  IgoContextImportExportModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoContextImportExportModule\n  });\n  IgoContextImportExportModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[FormsModule, ReactiveFormsModule, CommonModule, MatButtonModule, MatButtonToggleModule, MatDividerModule, MatTabsModule, MatSelectModule, MatOptionModule, MatFormFieldModule, MatInputModule, MatCheckboxModule, IgoLanguageModule, IgoSpinnerModule, MatTooltipModule]]\n  });\n  return IgoContextImportExportModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoContextImportExportModule, {\n    declarations: [ContextImportExportComponent],\n    imports: [FormsModule, ReactiveFormsModule, CommonModule, MatButtonModule, MatButtonToggleModule, MatDividerModule, MatTabsModule, MatSelectModule, MatOptionModule, MatFormFieldModule, MatInputModule, MatCheckboxModule, IgoLanguageModule, IgoSpinnerModule, MatTooltipModule],\n    exports: [ContextImportExportComponent]\n  });\n})();\n\nlet MapContextDirective = /*#__PURE__*/(() => {\n  class MapContextDirective {\n    constructor(component, contextService, mediaService) {\n      this.contextService = contextService;\n      this.mediaService = mediaService;\n      this.component = component;\n    }\n\n    get map() {\n      return this.component.map;\n    }\n\n    ngOnInit() {\n      this.context$$ = this.contextService.context$.pipe(filter(context => context !== undefined)).subscribe(context => this.handleContextChange(context));\n    }\n\n    ngOnDestroy() {\n      this.context$$.unsubscribe();\n    }\n\n    handleContextChange(context) {\n      if (context.map === undefined) {\n        return;\n      } // This creates a new ol.Map when the context changes. Doing that\n      // allows the print tool to work properly even when the map's canvas\n      // has been tainted (CORS) with the layers of another context. This could\n      // have some side effects such as unbinding all listeners on the first map.\n      // A better solution would be to create a new map (preview) before\n      // printing and avoid the tainted canvas issue. This will come later so\n      // this snippet of code is kept here in case it takes too long becomes\n      // an issue\n      // const target = this.component.map.ol.getTarget();\n      // this.component.map.ol.setTarget(undefined);\n      // this.component.map.init();\n      // this.component.map.ol.setTarget(target);\n\n\n      const viewContext = context.map.view;\n\n      if (!this.component.view || viewContext.keepCurrentView !== true) {\n        this.component.view = viewContext;\n      }\n\n      const controlsContext = context.map.controls;\n\n      if (!this.component.controls && controlsContext) {\n        if (this.mediaService.isMobile()) {\n          if (typeof controlsContext.scaleLine !== 'boolean') {\n            const scaleLineOption = controlsContext.scaleLine;\n\n            if (!scaleLineOption.minWidth) {\n              scaleLineOption.minWidth = Math.min(64, scaleLineOption.minWidth);\n              controlsContext.scaleLine = scaleLineOption;\n            }\n          }\n        }\n\n        this.component.controls = controlsContext;\n      }\n    }\n\n  }\n\n  MapContextDirective.ɵfac = function MapContextDirective_Factory(t) {\n    return new (t || MapContextDirective)(i0.ɵɵdirectiveInject(i1$1.MapBrowserComponent), i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i3.MediaService));\n  };\n\n  MapContextDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: MapContextDirective,\n    selectors: [[\"\", \"igoMapContext\", \"\"]]\n  });\n  return MapContextDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet LayerContextDirective = /*#__PURE__*/(() => {\n  class LayerContextDirective {\n    constructor(component, contextService, layerService, configService, styleListService, styleService, route) {\n      this.component = component;\n      this.contextService = contextService;\n      this.layerService = layerService;\n      this.configService = configService;\n      this.styleListService = styleListService;\n      this.styleService = styleService;\n      this.route = route;\n      this.contextLayers = [];\n      this.removeLayersOnContextChange = true;\n    }\n\n    get map() {\n      return this.component.map;\n    }\n\n    ngOnInit() {\n      this.context$$ = this.contextService.context$.pipe(filter(context => context !== undefined)).subscribe(context => this.handleContextChange(context));\n\n      if (this.route && this.route.options.visibleOnLayersKey && this.route.options.visibleOffLayersKey && this.route.options.contextKey) {\n        const queryParams$$ = this.route.queryParams.subscribe(params => {\n          if (Object.keys(params).length > 0) {\n            this.queryParams = params;\n            queryParams$$.unsubscribe();\n          }\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      this.context$$.unsubscribe();\n    }\n\n    handleContextChange(context) {\n      if (context.layers === undefined) {\n        return;\n      }\n\n      if (this.removeLayersOnContextChange === true) {\n        this.map.removeAllLayers();\n      } else {\n        this.map.removeLayers(this.contextLayers);\n      }\n\n      this.contextLayers = [];\n      const layersAndIndex$ = merge(...context.layers.map((layerOptions, index) => {\n        return this.layerService.createAsyncLayer(layerOptions, context.uri);\n      }));\n      layersAndIndex$.pipe(buffer(layersAndIndex$.pipe(debounceTime(500)))).subscribe(layers => {\n        layers = layers.filter(layer => layer !== undefined).map(layer => {\n          layer.visible = this.computeLayerVisibilityFromUrl(layer);\n          layer.zIndex = layer.zIndex;\n          return layer;\n        });\n        this.contextLayers.concat(layers);\n        this.map.addLayers(layers);\n\n        if (context.extraFeatures) {\n          context.extraFeatures.forEach(featureCollection => {\n            const format = new GeoJSON();\n            const title = featureCollection.name;\n            featureCollection = JSON.stringify(featureCollection);\n            featureCollection = format.readFeatures(featureCollection, {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n\n            if (!this.configService.getConfig('importWithStyle')) {\n              addImportedFeaturesToMap(featureCollection, this.map, title);\n            } else {\n              addImportedFeaturesStyledToMap(featureCollection, this.map, title, this.styleListService, this.styleService);\n            }\n          });\n        }\n      });\n    }\n\n    computeLayerVisibilityFromUrl(layer) {\n      const params = this.queryParams;\n      const currentContext = this.contextService.context$.value.uri;\n      const currentLayerid = layer.id;\n      let visible = layer.visible;\n\n      if (!params || !currentLayerid) {\n        return visible;\n      }\n\n      const contextParams = params[this.route.options.contextKey];\n\n      if (contextParams === currentContext || !contextParams) {\n        let visibleOnLayersParams = '';\n        let visibleOffLayersParams = '';\n        let visiblelayers = [];\n        let invisiblelayers = [];\n\n        if (this.route.options.visibleOnLayersKey && params[this.route.options.visibleOnLayersKey]) {\n          visibleOnLayersParams = params[this.route.options.visibleOnLayersKey];\n        }\n\n        if (this.route.options.visibleOffLayersKey && params[this.route.options.visibleOffLayersKey]) {\n          visibleOffLayersParams = params[this.route.options.visibleOffLayersKey];\n        }\n        /* This order is important because to control whichever\r\n         the order of * param. First whe open and close everything.*/\n\n\n        if (visibleOnLayersParams === '*') {\n          visible = true;\n        }\n\n        if (visibleOffLayersParams === '*') {\n          visible = false;\n        } // After, managing named layer by id (context.json OR id from datasource)\n\n\n        visiblelayers = visibleOnLayersParams.split(',');\n        invisiblelayers = visibleOffLayersParams.split(',');\n\n        if (visiblelayers.indexOf(currentLayerid) > -1 || visiblelayers.indexOf(currentLayerid.toString()) > -1) {\n          visible = true;\n        }\n\n        if (invisiblelayers.indexOf(currentLayerid) > -1 || invisiblelayers.indexOf(currentLayerid.toString()) > -1) {\n          visible = false;\n        }\n      }\n\n      return visible;\n    }\n\n  }\n\n  LayerContextDirective.ɵfac = function LayerContextDirective_Factory(t) {\n    return new (t || LayerContextDirective)(i0.ɵɵdirectiveInject(i1$1.MapBrowserComponent), i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i1$1.LayerService), i0.ɵɵdirectiveInject(i3.ConfigService), i0.ɵɵdirectiveInject(i1$1.StyleListService), i0.ɵɵdirectiveInject(i1$1.StyleService), i0.ɵɵdirectiveInject(i3.RouteService, 8));\n  };\n\n  LayerContextDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: LayerContextDirective,\n    selectors: [[\"\", \"igoLayerContext\", \"\"]],\n    inputs: {\n      removeLayersOnContextChange: \"removeLayersOnContextChange\"\n    }\n  });\n  return LayerContextDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ContextListControlsEnum = /*#__PURE__*/(() => {\n  (function (ContextListControlsEnum) {\n    ContextListControlsEnum[\"always\"] = \"always\";\n    ContextListControlsEnum[\"never\"] = \"never\";\n    ContextListControlsEnum[\"default\"] = \"default\";\n  })(ContextListControlsEnum || (ContextListControlsEnum = {}));\n\n  return ContextListControlsEnum;\n})();\nlet BookmarkDialogComponent = /*#__PURE__*/(() => {\n  class BookmarkDialogComponent {\n    constructor(dialogRef) {\n      this.dialogRef = dialogRef;\n    }\n\n  }\n\n  BookmarkDialogComponent.ɵfac = function BookmarkDialogComponent_Factory(t) {\n    return new (t || BookmarkDialogComponent)(i0.ɵɵdirectiveInject(i1$2.MatDialogRef));\n  };\n\n  BookmarkDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookmarkDialogComponent,\n    selectors: [[\"igo-bookmark-dialog\"]],\n    decls: 14,\n    vars: 14,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"mat-typography\"], [\"mat-dialog-content\", \"\", 1, \"mat-typography\"], [\"matInput\", \"\", \"required\", \"\", \"autocomplete\", \"off\", \"maxlength\", \"128\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function BookmarkDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"mat-form-field\");\n        i0.ɵɵelementStart(5, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function BookmarkDialogComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.title = $event;\n        });\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function BookmarkDialogComponent_Template_button_click_8_listener() {\n          return ctx.dialogRef.close(ctx.title);\n        });\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function BookmarkDialogComponent_Template_button_click_11_listener() {\n          return ctx.dialogRef.close(false);\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 6, \"igo.context.bookmarkButton.dialog.title\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(6, 8, \"igo.context.bookmarkButton.dialog.placeholder\"))(\"ngModel\", ctx.title);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(10, 10, \"igo.common.confirmDialog.confirmBtn\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 12, \"igo.common.confirmDialog.cancelBtn\"), \" \");\n      }\n    },\n    directives: [i1$2.MatDialogTitle, i1$2.MatDialogContent, i3$1.MatFormField, i3$2.MatInput, i4.DefaultValueAccessor, i4.RequiredValidator, i4.MaxLengthValidator, i4.NgControlStatus, i4.NgModel, i1$2.MatDialogActions, i5.MatButton],\n    pipes: [i6$1.TranslatePipe],\n    encapsulation: 2\n  });\n  return BookmarkDialogComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction ContextItemComponent_button_1_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"svgIcon\", ctx_r2.context.icon ? ctx_r2.context.icon : ctx_r2.context.scope === \"public\" ? \"earth\" : \"star\");\n  }\n}\n\nfunction ContextItemComponent_button_1_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r3.context.iconImage, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ContextItemComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.favoriteClick(ctx_r4.context);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtemplate(2, ContextItemComponent_button_1_mat_icon_2_Template, 1, 1, \"mat-icon\", 5);\n    i0.ɵɵtemplate(3, ContextItemComponent_button_1_img_3_Template, 1, 1, \"img\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r0.auth.authenticated ? i0.ɵɵpipeBind1(1, 4, \"igo.context.contextManager.favorite\") : \"\")(\"color\", ctx_r0.default ? \"primary\" : \"default\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.context.iconImage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.context.iconImage);\n  }\n}\n\nfunction ContextItemComponent_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_div_4_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.save.emit(ctx_r14.context);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"igo.context.contextManager.save\"))(\"color\", ctx_r6.color);\n  }\n}\n\nfunction ContextItemComponent_div_4_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_div_4_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.managePermissions.emit(ctx_r16.context);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"igo.context.contextManager.managePermissions\"))(\"color\", ctx_r8.color);\n  }\n}\n\nfunction ContextItemComponent_div_4_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_div_4_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.clone.emit(ctx_r18.context);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"igo.context.contextManager.clone\"))(\"color\", ctx_r9.color);\n  }\n}\n\nfunction ContextItemComponent_div_4_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_div_4_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return ctx_r20.edit.emit(ctx_r20.context);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 27);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"color\", ctx_r10.color)(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"igo.context.contextManager.edit\"));\n  }\n}\n\nfunction ContextItemComponent_div_4_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_div_4_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.hide.emit(ctx_r22.context);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"color\", ctx_r11.color)(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"igo.context.contextManager.hide\"));\n  }\n}\n\nfunction ContextItemComponent_div_4_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_div_4_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.show.emit(ctx_r24.context);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"color\", ctx_r12.color)(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"igo.context.contextManager.show\"));\n  }\n}\n\nfunction ContextItemComponent_div_4_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_div_4_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return ctx_r26.delete.emit(ctx_r26.context);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 1, \"igo.context.contextManager.delete\"));\n  }\n}\n\nfunction ContextItemComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ContextItemComponent_div_4_button_1_Template, 3, 4, \"button\", 10);\n    i0.ɵɵelementStart(2, \"div\", 11, 12);\n    i0.ɵɵtemplate(4, ContextItemComponent_div_4_button_4_Template, 3, 4, \"button\", 13);\n    i0.ɵɵtemplate(5, ContextItemComponent_div_4_button_5_Template, 3, 4, \"button\", 14);\n    i0.ɵɵtemplate(6, ContextItemComponent_div_4_button_6_Template, 3, 4, \"button\", 15);\n    i0.ɵɵtemplate(7, ContextItemComponent_div_4_button_7_Template, 3, 4, \"button\", 16);\n    i0.ɵɵtemplate(8, ContextItemComponent_div_4_button_8_Template, 3, 4, \"button\", 16);\n    i0.ɵɵtemplate(9, ContextItemComponent_div_4_button_9_Template, 3, 3, \"button\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ContextItemComponent_div_4_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.collapsed = !ctx_r28.collapsed;\n    });\n    i0.ɵɵelement(11, \"mat-icon\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r7 = i0.ɵɵreference(3);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.collapsed && ctx_r1.selected && (ctx_r1.context.permission === ctx_r1.typePermission[ctx_r1.typePermission.write] || ctx_r1.context.imported));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.canShare && !ctx_r1.context.imported);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.context.imported);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.context.permission === ctx_r1.typePermission[ctx_r1.typePermission.write] && !ctx_r1.context.imported);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.context.hidden && !ctx_r1.context.imported);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.context.hidden && !ctx_r1.context.imported);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.context.permission === ctx_r1.typePermission[ctx_r1.typePermission.write] || ctx_r1.context.imported);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r1.color)(\"target\", _r7)(\"collapsed\", ctx_r1.collapsed);\n  }\n}\n\nconst _c0$1 = function (a0) {\n  return {\n    \"mat-list-item-light\": a0\n  };\n};\n\nlet ContextItemComponent = /*#__PURE__*/(() => {\n  class ContextItemComponent {\n    constructor(auth, storageService) {\n      this.auth = auth;\n      this.storageService = storageService;\n      this.typePermission = TypePermission;\n      this.color = 'primary';\n      this.collapsed = true;\n      this._default = false;\n      this.edit = new EventEmitter();\n      this.delete = new EventEmitter();\n      this.save = new EventEmitter();\n      this.clone = new EventEmitter();\n      this.hide = new EventEmitter();\n      this.show = new EventEmitter();\n      this.favorite = new EventEmitter();\n      this.managePermissions = new EventEmitter();\n      this.manageTools = new EventEmitter();\n    }\n\n    get context() {\n      return this._context;\n    }\n\n    set context(value) {\n      this._context = value;\n    }\n\n    get default() {\n      return this._default;\n    }\n\n    set default(value) {\n      this._default = value;\n    }\n\n    get hidden() {\n      return this.context.hidden;\n    }\n\n    get canShare() {\n      return this.storageService.get('canShare') === true;\n    }\n\n    favoriteClick(context) {\n      if (this.auth.authenticated) {\n        this.favorite.emit(context);\n      }\n    }\n\n  }\n\n  ContextItemComponent.ɵfac = function ContextItemComponent_Factory(t) {\n    return new (t || ContextItemComponent)(i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.StorageService));\n  };\n\n  ContextItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextItemComponent,\n    selectors: [[\"igo-context-item\"]],\n    inputs: {\n      context: \"context\",\n      default: \"default\",\n      selected: \"selected\"\n    },\n    outputs: {\n      edit: \"edit\",\n      delete: \"delete\",\n      save: \"save\",\n      clone: \"clone\",\n      hide: \"hide\",\n      show: \"show\",\n      favorite: \"favorite\",\n      managePermissions: \"managePermissions\",\n      manageTools: \"manageTools\"\n    },\n    decls: 5,\n    vars: 6,\n    consts: [[1, \"mat-list-item\", 3, \"ngClass\"], [\"mat-list-avatar\", \"\", \"mat-icon-button\", \"\", \"igoStopPropagation\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"color\", \"click\", 4, \"ngIf\"], [\"matLine\", \"\"], [\"igoStopPropagation\", \"\", \"class\", \"igo-actions-container\", 4, \"ngIf\"], [\"mat-list-avatar\", \"\", \"mat-icon-button\", \"\", \"igoStopPropagation\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"color\", \"click\"], [3, \"svgIcon\", 4, \"ngIf\"], [3, \"src\", 4, \"ngIf\"], [3, \"svgIcon\"], [3, \"src\"], [\"igoStopPropagation\", \"\", 1, \"igo-actions-container\"], [\"class\", \"save-button\", \"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"color\", \"click\", 4, \"ngIf\"], [1, \"igo-actions-expand-container\"], [\"actions\", \"\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"color\", \"click\", 4, \"ngIf\"], [\"class\", \"clone-button\", \"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"color\", \"click\", 4, \"ngIf\"], [\"class\", \"edit-button\", \"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"color\", \"matTooltip\", \"click\", 4, \"ngIf\"], [\"class\", \"hide-button\", \"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"color\", \"matTooltip\", \"click\", 4, \"ngIf\"], [\"class\", \"delete-button\", \"mat-icon-button\", \"\", \"color\", \"warn\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"igoCollapse\", \"\", 1, \"actions-button\", 3, \"color\", \"target\", \"collapsed\", \"click\"], [\"svgIcon\", \"dots-horizontal\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 1, \"save-button\", 3, \"matTooltip\", \"color\", \"click\"], [\"svgIcon\", \"content-save\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"color\", \"click\"], [\"svgIcon\", \"account-arrow-right\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 1, \"clone-button\", 3, \"matTooltip\", \"color\", \"click\"], [\"svgIcon\", \"content-copy\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 1, \"edit-button\", 3, \"color\", \"matTooltip\", \"click\"], [\"svgIcon\", \"pencil\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 1, \"hide-button\", 3, \"color\", \"matTooltip\", \"click\"], [\"svgIcon\", \"eye\"], [\"svgIcon\", \"eye-off\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", \"matTooltipShowDelay\", \"500\", 1, \"delete-button\", 3, \"matTooltip\", \"click\"], [\"svgIcon\", \"delete\"]],\n    template: function ContextItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-list-item\", 0);\n        i0.ɵɵtemplate(1, ContextItemComponent_button_1_Template, 4, 6, \"button\", 1);\n        i0.ɵɵelementStart(2, \"h4\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, ContextItemComponent_div_4_Template, 12, 10, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0$1, ctx.hidden));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.auth.authenticated);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.context.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.auth.authenticated);\n      }\n    },\n    directives: [i3$3.MatListItem, i7.NgClass, i7.NgIf, i11.MatLine, i5.MatButton, i3$3.MatListAvatarCssMatStyler, i5$1.StopPropagationDirective, i6$2.MatTooltip, i9.MatIcon, i5$1.CollapseDirective],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\"[_nghost-%COMP%]{overflow:hidden}.igo-actions-container[_ngcontent-%COMP%]{flex-shrink:0}.igo-actions-expand-container[_ngcontent-%COMP%]{display:inline-flex}mat-list-item[_ngcontent-%COMP%]     .mat-list-item-content .mat-list-text{padding:0}mat-icon.disabled[_ngcontent-%COMP%]{color:#00000061}mat-list-item.mat-list-item-light[_ngcontent-%COMP%]     .mat-list-item-content{color:#969696}\"],\n    changeDetection: 0\n  });\n  return ContextItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction ContextListComponent_mat_form_field_1_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ContextListComponent_mat_form_field_1_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.clearFilter();\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 15);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContextListComponent_mat_form_field_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 11);\n    i0.ɵɵelementStart(1, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function ContextListComponent_mat_form_field_1_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.term = $event;\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ContextListComponent_mat_form_field_1_button_3_Template, 2, 0, \"button\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.auth.authenticated && ctx_r0.configService.getConfig(\"context\") ? \"context-filter-min-width\" : \"context-filter-max-width\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(2, 4, \"igo.context.contextManager.filterPlaceHolder\"))(\"ngModel\", ctx_r0.term);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.term.length);\n  }\n}\n\nfunction ContextListComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ContextListComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.toggleSort(true);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 1, \"igo.context.contextManager.sortAlphabetically\"));\n  }\n}\n\nfunction ContextListComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ContextListComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.toggleSort(false);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 1, \"igo.context.contextManager.sortContextOrder\"));\n  }\n}\n\nfunction ContextListComponent_igo_actionbar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-actionbar\", 19);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"iconColor\", ctx_r3.color)(\"store\", ctx_r3.actionStore)(\"withIcon\", true)(\"withTitle\", ctx_r3.actionbarMode === \"overlay\")(\"horizontal\", false)(\"mode\", ctx_r3.actionbarMode);\n  }\n}\n\nfunction ContextListComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(7);\n\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 2, \"igo.context.contextManager.filterUser\"))(\"matMenuTriggerFor\", _r5);\n  }\n}\n\nfunction ContextListComponent_ng_container_8_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r17 = i0.ɵɵnextContext().$implicit;\n\n    const _r20 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r17.title, \" \");\n  }\n}\n\nfunction ContextListComponent_ng_container_8_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r17.title, \" \");\n  }\n}\n\nfunction ContextListComponent_ng_container_8_mat_checkbox_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-checkbox\", 8);\n    i0.ɵɵlistener(\"click\", function ContextListComponent_ng_container_8_mat_checkbox_7_Template_mat_checkbox_click_0_listener($event) {\n      return $event.stopPropagation();\n    })(\"change\", function ContextListComponent_ng_container_8_mat_checkbox_7_Template_mat_checkbox_change_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const child_r24 = restoredCtx.$implicit;\n      const user_r17 = i0.ɵɵnextContext().$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.userSelection(child_r24, user_r17);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const child_r24 = ctx.$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"checked\", ctx_r21.getPermission(child_r24).checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", child_r24.title, \" \");\n  }\n}\n\nfunction ContextListComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 7);\n    i0.ɵɵelementStart(2, \"mat-checkbox\", 22);\n    i0.ɵɵlistener(\"click\", function ContextListComponent_ng_container_8_Template_mat_checkbox_click_2_listener($event) {\n      return $event.stopPropagation();\n    })(\"change\", function ContextListComponent_ng_container_8_Template_mat_checkbox_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const user_r17 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.userSelection(user_r17);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ContextListComponent_ng_container_8_button_3_Template, 2, 2, \"button\", 23);\n    i0.ɵɵtemplate(4, ContextListComponent_ng_container_8_button_4_Template, 2, 1, \"button\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-menu\", null, 25);\n    i0.ɵɵtemplate(7, ContextListComponent_ng_container_8_mat_checkbox_7_Template, 2, 2, \"mat-checkbox\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const user_r17 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", ctx_r6.getPermission(user_r17).checked)(\"indeterminate\", ctx_r6.getPermission(user_r17).indeterminate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r17.childs);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !user_r17.childs);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", user_r17.childs);\n  }\n}\n\nfunction ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-context-item\", 31);\n    i0.ɵɵlistener(\"edit\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_edit_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r37 = i0.ɵɵnextContext(3);\n      return ctx_r37.edit.emit(context_r36);\n    })(\"delete\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_delete_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r39 = i0.ɵɵnextContext(3);\n      return ctx_r39.delete.emit(context_r36);\n    })(\"clone\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_clone_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r40 = i0.ɵɵnextContext(3);\n      return ctx_r40.clone.emit(context_r36);\n    })(\"save\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_save_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r41 = i0.ɵɵnextContext(3);\n      return ctx_r41.save.emit(context_r36);\n    })(\"hide\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_hide_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(3);\n      return ctx_r42.hideContext(context_r36);\n    })(\"show\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_show_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r43 = i0.ɵɵnextContext(3);\n      return ctx_r43.showContext(context_r36);\n    })(\"favorite\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_favorite_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r44 = i0.ɵɵnextContext(3);\n      return ctx_r44.favorite.emit(context_r36);\n    })(\"manageTools\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_manageTools_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r45 = i0.ɵɵnextContext(3);\n      return ctx_r45.manageTools.emit(context_r36);\n    })(\"managePermissions\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_managePermissions_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r46 = i0.ɵɵnextContext(3);\n      return ctx_r46.managePermissions.emit(context_r36);\n    })(\"select\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r47 = i0.ɵɵnextContext(3);\n      return ctx_r47.select.emit(context_r36);\n    })(\"unselect\", function ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template_igo_context_item_unselect_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const context_r36 = restoredCtx.$implicit;\n      const ctx_r48 = i0.ɵɵnextContext(3);\n      return ctx_r48.unselect.emit(context_r36);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const context_r36 = ctx.$implicit;\n    const ctx_r35 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"selected\", ctx_r35.selectedContext && ctx_r35.selectedContext.uri === context_r36.uri)(\"context\", context_r36)(\"default\", context_r36.id && ctx_r35.defaultContextId && ctx_r35.defaultContextId === context_r36.id);\n  }\n}\n\nfunction ContextListComponent_ng_template_14_igo_collapsible_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-collapsible\", 30);\n    i0.ɵɵlistener(\"toggle\", function ContextListComponent_ng_template_14_igo_collapsible_0_Template_igo_collapsible_toggle_0_listener($event) {\n      i0.ɵɵrestoreView(_r50);\n      const groupContexts_r32 = i0.ɵɵnextContext().$implicit;\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.collapsed[ctx_r49.titleMapping[groupContexts_r32.key]] = $event;\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtemplate(2, ContextListComponent_ng_template_14_igo_collapsible_0_ng_template_2_Template, 1, 3, \"ng-template\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const groupContexts_r32 = i0.ɵɵnextContext().$implicit;\n    const ctx_r33 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 3, ctx_r33.titleMapping[groupContexts_r32.key]))(\"collapsed\", ctx_r33.collapsed[ctx_r33.titleMapping[groupContexts_r32.key]]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", groupContexts_r32.value);\n  }\n}\n\nfunction ContextListComponent_ng_template_14_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-context-item\", 32);\n    i0.ɵɵlistener(\"select\", function ContextListComponent_ng_template_14_1_ng_template_0_Template_igo_context_item_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r56);\n      const context_r54 = restoredCtx.$implicit;\n      const ctx_r55 = i0.ɵɵnextContext(3);\n      return ctx_r55.select.emit(context_r54);\n    })(\"unselect\", function ContextListComponent_ng_template_14_1_ng_template_0_Template_igo_context_item_unselect_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r56);\n      const context_r54 = restoredCtx.$implicit;\n      const ctx_r57 = i0.ɵɵnextContext(3);\n      return ctx_r57.unselect.emit(context_r54);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const context_r54 = ctx.$implicit;\n    const ctx_r53 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"selected\", ctx_r53.selectedContext && ctx_r53.selectedContext.uri === context_r54.uri)(\"context\", context_r54)(\"default\", ctx_r53.defaultContextId === context_r54.id);\n  }\n}\n\nfunction ContextListComponent_ng_template_14_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContextListComponent_ng_template_14_1_ng_template_0_Template, 1, 3, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const groupContexts_r32 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngForOf\", groupContexts_r32.value);\n  }\n}\n\nfunction ContextListComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContextListComponent_ng_template_14_igo_collapsible_0_Template, 3, 5, \"igo-collapsible\", 28);\n    i0.ɵɵtemplate(1, ContextListComponent_ng_template_14_1_Template, 1, 1, undefined, 29);\n  }\n\n  if (rf & 2) {\n    const groupContexts_r32 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", groupContexts_r32.value.length && ctx_r7.auth.authenticated);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", groupContexts_r32.value.length && !ctx_r7.auth.authenticated);\n  }\n}\n\nlet ContextListComponent = /*#__PURE__*/(() => {\n  class ContextListComponent {\n    constructor(cdRef, contextService, configService, auth, dialog, languageService, storageService) {\n      this.cdRef = cdRef;\n      this.contextService = contextService;\n      this.configService = configService;\n      this.auth = auth;\n      this.dialog = dialog;\n      this.languageService = languageService;\n      this.storageService = storageService;\n      this.contextsInitial = {\n        ours: []\n      };\n      this.contexts$ = new BehaviorSubject(this.contextsInitial);\n      this.change$ = new ReplaySubject(1);\n      this._contexts = {\n        ours: []\n      };\n      this.collapsed = [];\n      this.select = new EventEmitter();\n      this.unselect = new EventEmitter();\n      this.edit = new EventEmitter();\n      this.delete = new EventEmitter();\n      this.save = new EventEmitter();\n      this.clone = new EventEmitter();\n      this.create = new EventEmitter();\n      this.hide = new EventEmitter();\n      this.show = new EventEmitter();\n      this.showHiddenContexts = new EventEmitter();\n      this.favorite = new EventEmitter();\n      this.managePermissions = new EventEmitter();\n      this.manageTools = new EventEmitter();\n      this.filterPermissionsChanged = new EventEmitter();\n      this.titleMapping = {\n        ours: 'igo.context.contextManager.ourContexts',\n        shared: 'igo.context.contextManager.sharedContexts',\n        public: 'igo.context.contextManager.publicContexts'\n      };\n      this.permissions = [];\n      this.actionStore = new ActionStore([]);\n      this.actionbarMode = ActionbarMode.Overlay;\n      this.color = 'primary';\n      this.showHidden = false;\n      this._term = '';\n      this._sortedAlpha = undefined;\n      this.showContextFilter = ContextListControlsEnum.always;\n      this.thresholdToFilter = 5;\n    }\n\n    get contexts() {\n      return this._contexts;\n    }\n\n    set contexts(value) {\n      this._contexts = value;\n      this.cdRef.detectChanges();\n      this.next();\n    }\n\n    get selectedContext() {\n      return this._selectedContext;\n    }\n\n    set selectedContext(value) {\n      this._selectedContext = value;\n      this.cdRef.detectChanges();\n    }\n\n    get map() {\n      return this._map;\n    }\n\n    set map(value) {\n      this._map = value;\n    }\n\n    get defaultContextId() {\n      return this._defaultContextId;\n    }\n\n    set defaultContextId(value) {\n      this._defaultContextId = value;\n    }\n    /**\r\n     * Context filter term\r\n     */\n\n\n    set term(value) {\n      this._term = value;\n      this.next();\n    }\n\n    get term() {\n      return this._term;\n    }\n\n    get sortedAlpha() {\n      return this._sortedAlpha;\n    }\n\n    set sortedAlpha(value) {\n      this._sortedAlpha = value;\n      this.next();\n    }\n\n    ngOnInit() {\n      this.change$$ = this.change$.pipe(debounce(() => {\n        return this.contexts.ours.length === 0 ? EMPTY : timer(50);\n      })).subscribe(() => {\n        this.contexts$.next(this.filterContextsList(this.contexts));\n      });\n      this.actionStore.load([{\n        id: 'emptyContext',\n        title: this.languageService.translate.instant('igo.context.contextManager.emptyContext'),\n        icon: 'map-outline',\n        tooltip: this.languageService.translate.instant('igo.context.contextManager.emptyContextTooltip'),\n        handler: () => {\n          this.createContext(true);\n        }\n      }, {\n        id: 'contextFromMap',\n        title: this.languageService.translate.instant('igo.context.contextManager.contextMap'),\n        icon: 'map-check',\n        tooltip: this.languageService.translate.instant('igo.context.contextManager.contextMapTooltip'),\n        handler: () => {\n          this.createContext(false);\n        }\n      }]);\n    }\n\n    next() {\n      this.change$.next();\n    }\n\n    filterContextsList(contexts) {\n      if (this.term === '') {\n        if (this.sortedAlpha) {\n          contexts = this.sortContextsList(contexts);\n        }\n\n        return contexts;\n      } else {\n        const ours = contexts.ours.filter(context => {\n          const filterNormalized = this.term.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n          const contextTitleNormalized = context.title.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n          return contextTitleNormalized.includes(filterNormalized);\n        });\n        let updateContexts = {\n          ours\n        };\n\n        if (this.contexts.public) {\n          const publics = contexts.public.filter(context => {\n            const filterNormalized = this.term.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n            const contextTitleNormalized = context.title.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n            return contextTitleNormalized.includes(filterNormalized);\n          });\n          updateContexts.public = publics;\n        }\n\n        if (this.contexts.shared) {\n          const shared = contexts.shared.filter(context => {\n            const filterNormalized = this.term.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n            const contextTitleNormalized = context.title.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n            return contextTitleNormalized.includes(filterNormalized);\n          });\n          updateContexts.shared = shared;\n        }\n\n        if (this.sortedAlpha) {\n          updateContexts = this.sortContextsList(updateContexts);\n        }\n\n        return updateContexts;\n      }\n    }\n\n    ngOnDestroy() {\n      this.change$$.unsubscribe();\n    }\n\n    showFilter() {\n      switch (this.showContextFilter) {\n        case ContextListControlsEnum.always:\n          return true;\n\n        case ContextListControlsEnum.never:\n          return false;\n\n        default:\n          let totalLength = this.contexts.ours.length;\n          this.contexts.public ? totalLength += this.contexts.public.length : totalLength += 0;\n          this.contexts.shared ? totalLength += this.contexts.shared.length : totalLength += 0;\n\n          if (totalLength >= this.thresholdToFilter) {\n            return true;\n          }\n\n          return false;\n      }\n    }\n\n    sortContextsList(contexts) {\n      if (contexts) {\n        const contextsList = JSON.parse(JSON.stringify(contexts));\n        contextsList.ours.sort((a, b) => {\n          if (this.normalize(a.title) < this.normalize(b.title)) {\n            return -1;\n          }\n\n          if (this.normalize(a.title) > this.normalize(b.title)) {\n            return 1;\n          }\n\n          return 0;\n        });\n\n        if (contextsList.shared) {\n          contextsList.shared.sort((a, b) => {\n            if (this.normalize(a.title) < this.normalize(b.title)) {\n              return -1;\n            }\n\n            if (this.normalize(a.title) > this.normalize(b.title)) {\n              return 1;\n            }\n\n            return 0;\n          });\n        } else if (contextsList.public) {\n          contextsList.public.sort((a, b) => {\n            if (this.normalize(a.title) < this.normalize(b.title)) {\n              return -1;\n            }\n\n            if (this.normalize(a.title) > this.normalize(b.title)) {\n              return 1;\n            }\n\n            return 0;\n          });\n        }\n\n        return contextsList;\n      }\n    }\n\n    normalize(str) {\n      return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').toLowerCase();\n    }\n\n    toggleSort(sortAlpha) {\n      this.sortedAlpha = sortAlpha;\n    }\n\n    clearFilter() {\n      this.term = '';\n    }\n\n    createContext(empty) {\n      this.dialog.open(BookmarkDialogComponent, {\n        disableClose: false\n      }).afterClosed().pipe(take(1)).subscribe(title => {\n        if (title) {\n          this.create.emit({\n            title,\n            empty\n          });\n        }\n      });\n    }\n\n    getPermission(user) {\n      if (user) {\n        const permission = this.permissions.find(p => p.name === user.name);\n        return permission;\n      }\n    }\n\n    userSelection(user, parent) {\n      const permission = this.getPermission(user);\n\n      if (permission) {\n        permission.checked = !permission.checked;\n        this.storageService.set('contexts.permissions.' + permission.name, permission.checked);\n        permission.indeterminate = false;\n      }\n\n      if (parent) {\n        let indeterminate = false;\n\n        for (const c of parent.childs) {\n          const cPermission = this.getPermission(c);\n\n          if (cPermission.checked !== permission.checked) {\n            indeterminate = true;\n            break;\n          }\n        }\n\n        const parentPermission = this.getPermission(parent);\n\n        if (parentPermission) {\n          parentPermission.checked = permission.checked;\n          this.storageService.set('contexts.permissions.' + parentPermission.name, permission.checked);\n          parentPermission.indeterminate = indeterminate;\n        }\n      }\n\n      if (user.childs) {\n        for (const c of user.childs) {\n          const childrenPermission = this.getPermission(c);\n\n          if (childrenPermission && childrenPermission.checked !== permission.checked) {\n            childrenPermission.checked = permission.checked;\n            this.storageService.set('contexts.permissions.' + childrenPermission.name, permission.checked);\n          }\n        }\n      }\n\n      this.filterPermissionsChanged.emit(this.permissions);\n    }\n\n    hideContext(context) {\n      context.hidden = true;\n\n      if (!this.showHidden) {\n        const contexts = {\n          ours: [],\n          shared: [],\n          public: []\n        };\n        contexts.ours = this.contexts.ours.filter(c => c.id !== context.id);\n        contexts.shared = this.contexts.shared.filter(c => c.id !== context.id);\n        contexts.public = this.contexts.public.filter(c => c.id !== context.id);\n        this.contexts = contexts;\n      }\n\n      this.hide.emit(context);\n    }\n\n    showContext(context) {\n      context.hidden = false;\n      this.show.emit(context);\n    }\n\n  }\n\n  ContextListComponent.ɵfac = function ContextListComponent_Factory(t) {\n    return new (t || ContextListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i3.ConfigService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i1$2.MatDialog), i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i3.StorageService));\n  };\n\n  ContextListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextListComponent,\n    selectors: [[\"igo-context-list\"]],\n    inputs: {\n      contexts: \"contexts\",\n      selectedContext: \"selectedContext\",\n      map: \"map\",\n      defaultContextId: \"defaultContextId\",\n      term: \"term\"\n    },\n    outputs: {\n      select: \"select\",\n      unselect: \"unselect\",\n      edit: \"edit\",\n      delete: \"delete\",\n      save: \"save\",\n      clone: \"clone\",\n      create: \"create\",\n      hide: \"hide\",\n      show: \"show\",\n      showHiddenContexts: \"showHiddenContexts\",\n      favorite: \"favorite\",\n      managePermissions: \"managePermissions\",\n      manageTools: \"manageTools\",\n      filterPermissionsChanged: \"filterPermissionsChanged\"\n    },\n    decls: 17,\n    vars: 16,\n    consts: [[3, \"navigation\"], [3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"sort-alpha\", \"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"click\", 4, \"ngIf\"], [\"class\", \"add-context-button\", \"icon\", \"plus\", 3, \"iconColor\", \"store\", \"withIcon\", \"withTitle\", \"horizontal\", \"mode\", 4, \"ngIf\"], [\"class\", \"users-filter\", \"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", \"matMenuTriggerFor\", 4, \"ngIf\"], [\"accountMenu\", \"matMenu\"], [4, \"ngFor\", \"ngForOf\"], [1, \"profilsMenu\"], [1, \"mat-menu-item\", 3, \"checked\", \"click\", \"change\"], [\"mat-menu-item\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"ngClass\"], [\"matInput\", \"\", \"type\", \"text\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"mat-button\", \"\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", \"class\", \"clear-button\", \"aria-label\", \"Clear\", \"color\", \"warn\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", \"aria-label\", \"Clear\", \"color\", \"warn\", 1, \"clear-button\", 3, \"click\"], [\"svgIcon\", \"close\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 1, \"sort-alpha\", 3, \"matTooltip\", \"click\"], [\"color\", \"primary\", \"svgIcon\", \"sort-alphabetical-variant\"], [\"color\", \"warn\", \"svgIcon\", \"sort-variant-remove\"], [\"icon\", \"plus\", 1, \"add-context-button\", 3, \"iconColor\", \"store\", \"withIcon\", \"withTitle\", \"horizontal\", \"mode\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", 1, \"users-filter\", 3, \"matTooltip\", \"matMenuTriggerFor\"], [\"color\", \"primary\", \"svgIcon\", \"filter-menu\"], [1, \"mat-menu-item\", 3, \"checked\", \"indeterminate\", \"click\", \"change\"], [\"mat-menu-item\", \"\", 3, \"matMenuTriggerFor\", 4, \"ngIf\"], [\"mat-menu-item\", \"\", 4, \"ngIf\"], [\"subAccountMenu\", \"matMenu\"], [\"class\", \"mat-menu-item\", 3, \"checked\", \"click\", \"change\", 4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 3, \"matMenuTriggerFor\"], [3, \"title\", \"collapsed\", \"toggle\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"title\", \"collapsed\", \"toggle\"], [\"igoListItem\", \"\", \"color\", \"accent\", 3, \"selected\", \"context\", \"default\", \"edit\", \"delete\", \"clone\", \"save\", \"hide\", \"show\", \"favorite\", \"manageTools\", \"managePermissions\", \"select\", \"unselect\"], [\"igoListItem\", \"\", \"color\", \"accent\", 3, \"selected\", \"context\", \"default\", \"select\", \"unselect\"]],\n    template: function ContextListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"igo-list\", 0);\n        i0.ɵɵtemplate(1, ContextListComponent_mat_form_field_1_Template, 4, 6, \"mat-form-field\", 1);\n        i0.ɵɵtemplate(2, ContextListComponent_button_2_Template, 3, 3, \"button\", 2);\n        i0.ɵɵtemplate(3, ContextListComponent_button_3_Template, 3, 3, \"button\", 2);\n        i0.ɵɵtemplate(4, ContextListComponent_igo_actionbar_4_Template, 1, 6, \"igo-actionbar\", 3);\n        i0.ɵɵtemplate(5, ContextListComponent_button_5_Template, 3, 4, \"button\", 4);\n        i0.ɵɵelementStart(6, \"mat-menu\", null, 5);\n        i0.ɵɵtemplate(8, ContextListComponent_ng_container_8_Template, 8, 5, \"ng-container\", 6);\n        i0.ɵɵelementStart(9, \"span\", 7);\n        i0.ɵɵelementStart(10, \"mat-checkbox\", 8);\n        i0.ɵɵlistener(\"click\", function ContextListComponent_Template_mat_checkbox_click_10_listener($event) {\n          return $event.stopPropagation();\n        })(\"change\", function ContextListComponent_Template_mat_checkbox_change_10_listener() {\n          return ctx.showHiddenContexts.emit();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 9);\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, ContextListComponent_ng_template_14_Template, 2, 2, \"ng-template\", 10);\n        i0.ɵɵpipe(15, \"keyvalue\");\n        i0.ɵɵpipe(16, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"navigation\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showFilter());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.sortedAlpha);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sortedAlpha);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.auth.authenticated && ctx.configService.getConfig(\"context\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.auth.authenticated && ctx.configService.getConfig(\"context\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"checked\", ctx.showHidden);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 10, \"igo.context.contextManager.showHidden\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(15, 12, i0.ɵɵpipeBind1(16, 14, ctx.contexts$)));\n      }\n    },\n    directives: [i5$1.ListComponent, i7.NgIf, i7$1.MatMenu, i7.NgForOf, i8.MatCheckbox, i7$1.MatMenuItem, i3$1.MatFormField, i7.NgClass, i3$2.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatButton, i3$1.MatSuffix, i9.MatIcon, i6$2.MatTooltip, i5$1.ActionbarComponent, i7$1.MatMenuTrigger, i5$1.CollapsibleComponent, ContextItemComponent, i5$1.ListItemDirective],\n    pipes: [i6$1.TranslatePipe, i5$1.KeyValuePipe, i7.AsyncPipe],\n    styles: [\".context-filter-max-width[_ngcontent-%COMP%]{width:calc(100% - 100px);margin:5px;padding-left:6px}.context-filter-min-width[_ngcontent-%COMP%]{width:calc(100% - 135px);margin:5px;padding-left:6px}.clear-button[_ngcontent-%COMP%]{padding-right:5px}mat-form-field[_ngcontent-%COMP%]{height:40px}.profilsMenu[_ngcontent-%COMP%]{display:flex}.profilsMenu[_ngcontent-%COMP%] > mat-checkbox[_ngcontent-%COMP%]{width:8px}.add-context-button[_ngcontent-%COMP%]{margin:0;width:40px;display:inline-flex;overflow:hidden}\"],\n    changeDetection: 0\n  });\n  return ContextListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ContextListBindingDirective = /*#__PURE__*/(() => {\n  class ContextListBindingDirective {\n    constructor(component, contextService, mapService, languageService, confirmDialogService, messageService, auth, storageService) {\n      this.contextService = contextService;\n      this.mapService = mapService;\n      this.languageService = languageService;\n      this.confirmDialogService = confirmDialogService;\n      this.messageService = messageService;\n      this.auth = auth;\n      this.storageService = storageService;\n      this.component = component;\n    }\n\n    onSelect(context) {\n      this.contextService.loadContext(context.uri);\n    }\n\n    onEdit(context) {\n      this.contextService.loadEditedContext(context.uri);\n    }\n\n    onSave(context) {\n      const map = this.mapService.getMap();\n      const contextFromMap = this.contextService.getContextFromMap(map);\n\n      const msgSuccess = () => {\n        const translate = this.languageService.translate;\n        const message = translate.instant('igo.context.contextManager.dialog.saveMsg', {\n          value: context.title\n        });\n        const title = translate.instant('igo.context.contextManager.dialog.saveTitle');\n        this.messageService.success(message, title);\n      };\n\n      if (context.imported) {\n        contextFromMap.title = context.title;\n        this.contextService.delete(context.id, true);\n        this.contextService.create(contextFromMap).subscribe(contextCreated => {\n          this.contextService.loadContext(contextCreated.uri);\n          msgSuccess();\n        });\n        return;\n      }\n\n      const changes = {\n        layers: contextFromMap.layers,\n        map: {\n          view: contextFromMap.map.view\n        }\n      };\n      this.contextService.update(context.id, changes).subscribe(() => {\n        msgSuccess();\n      });\n    }\n\n    onFavorite(context) {\n      this.contextService.setDefault(context.id).subscribe(() => {\n        this.contextService.defaultContextId$.next(context.id);\n        const translate = this.languageService.translate;\n        const message = translate.instant('igo.context.contextManager.dialog.favoriteMsg', {\n          value: context.title\n        });\n        const title = translate.instant('igo.context.contextManager.dialog.favoriteTitle');\n        this.messageService.success(message, title);\n      });\n    }\n\n    onManageTools(context) {\n      this.contextService.loadEditedContext(context.uri);\n    }\n\n    onManagePermissions(context) {\n      this.contextService.loadEditedContext(context.uri);\n    }\n\n    onDelete(context) {\n      const translate = this.languageService.translate;\n      this.confirmDialogService.open(translate.instant('igo.context.contextManager.dialog.confirmDelete')).subscribe(confirm => {\n        if (confirm) {\n          this.contextService.delete(context.id, context.imported).subscribe(() => {\n            const message = translate.instant('igo.context.contextManager.dialog.deleteMsg', {\n              value: context.title\n            });\n            const title = translate.instant('igo.context.contextManager.dialog.deleteTitle');\n            this.messageService.info(message, title);\n          });\n        }\n      });\n    }\n\n    onClone(context) {\n      const properties = {\n        title: context.title + '-copy',\n        uri: context.uri + '-copy'\n      };\n      this.contextService.clone(context.id, properties).subscribe(() => {\n        const translate = this.languageService.translate;\n        const message = translate.instant('igo.context.contextManager.dialog.cloneMsg', {\n          value: context.title\n        });\n        const title = translate.instant('igo.context.contextManager.dialog.cloneTitle');\n        this.messageService.success(message, title);\n      });\n    }\n\n    onCreate(opts) {\n      const {\n        title,\n        empty\n      } = opts;\n      const context = this.contextService.getContextFromMap(this.component.map, empty);\n      context.title = title;\n      this.contextService.create(context).subscribe(() => {\n        const translate = this.languageService.translate;\n        const titleD = translate.instant('igo.context.bookmarkButton.dialog.createTitle');\n        const message = translate.instant('igo.context.bookmarkButton.dialog.createMsg', {\n          value: context.title\n        });\n        this.messageService.success(message, titleD);\n        this.contextService.loadContext(context.uri);\n      });\n    }\n\n    loadContexts() {\n      const permissions = ['none'];\n\n      for (const p of this.component.permissions) {\n        if (p.checked === true || p.indeterminate === true) {\n          permissions.push(p.name);\n        }\n      }\n\n      this.component.showHidden ? this.contextService.loadContexts(permissions, true) : this.contextService.loadContexts(permissions, false);\n    }\n\n    showHiddenContexts() {\n      this.component.showHidden = !this.component.showHidden;\n      this.storageService.set('contexts.showHidden', this.component.showHidden);\n      this.loadContexts();\n    }\n\n    onShowContext(context) {\n      this.contextService.showContext(context.id).subscribe();\n    }\n\n    onHideContext(context) {\n      this.contextService.hideContext(context.id).subscribe();\n    }\n\n    ngOnInit() {\n      // Override input contexts\n      this.component.contexts = {\n        ours: []\n      };\n      this.component.showHidden = this.storageService.get('contexts.showHidden');\n      this.contexts$$ = this.contextService.contexts$.subscribe(contexts => this.handleContextsChange(contexts));\n      this.defaultContextId$$ = this.contextService.defaultContextId$.subscribe(id => {\n        this.component.defaultContextId = id;\n      }); // See feature-list.component for an explanation about the debounce time\n\n      this.selectedContext$$ = this.contextService.context$.pipe(debounceTime(100)).subscribe(context => this.component.selectedContext = context);\n      this.auth.authenticate$.subscribe(authenticate => {\n        if (authenticate) {\n          this.contextService.getProfilByUser().subscribe(profils => {\n            this.component.users = profils;\n            this.component.permissions = [];\n            const profilsAcc = this.component.users.reduce((acc, cur) => {\n              acc = acc.concat(cur);\n              acc = cur.childs ? acc.concat(cur.childs) : acc;\n              return acc;\n            }, []);\n\n            for (const user of profilsAcc) {\n              const permission = {\n                name: user.name,\n                checked: this.storageService.get('contexts.permissions.' + user.name)\n              };\n\n              if (permission.checked === null) {\n                permission.checked = true;\n              }\n\n              this.component.permissions.push(permission);\n            }\n\n            const permissions = ['none'];\n\n            for (const p of this.component.permissions) {\n              if (p.checked === true || p.indeterminate === true) {\n                permissions.push(p.name);\n              }\n            }\n\n            this.component.showHidden ? this.contextService.loadContexts(permissions, true) : this.contextService.loadContexts(permissions, false);\n          });\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.contexts$$.unsubscribe();\n      this.selectedContext$$.unsubscribe();\n      this.defaultContextId$$.unsubscribe();\n    }\n\n    handleContextsChange(contexts) {\n      this.component.contexts = contexts;\n    }\n\n  }\n\n  ContextListBindingDirective.ɵfac = function ContextListBindingDirective_Factory(t) {\n    return new (t || ContextListBindingDirective)(i0.ɵɵdirectiveInject(ContextListComponent, 2), i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i1$1.MapService), i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i5$1.ConfirmDialogService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.StorageService));\n  };\n\n  ContextListBindingDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ContextListBindingDirective,\n    selectors: [[\"\", \"igoContextListBinding\", \"\"]],\n    hostBindings: function ContextListBindingDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"select\", function ContextListBindingDirective_select_HostBindingHandler($event) {\n          return ctx.onSelect($event);\n        })(\"edit\", function ContextListBindingDirective_edit_HostBindingHandler($event) {\n          return ctx.onEdit($event);\n        })(\"save\", function ContextListBindingDirective_save_HostBindingHandler($event) {\n          return ctx.onSave($event);\n        })(\"favorite\", function ContextListBindingDirective_favorite_HostBindingHandler($event) {\n          return ctx.onFavorite($event);\n        })(\"manageTools\", function ContextListBindingDirective_manageTools_HostBindingHandler($event) {\n          return ctx.onManageTools($event);\n        })(\"managePermissions\", function ContextListBindingDirective_managePermissions_HostBindingHandler($event) {\n          return ctx.onManagePermissions($event);\n        })(\"delete\", function ContextListBindingDirective_delete_HostBindingHandler($event) {\n          return ctx.onDelete($event);\n        })(\"clone\", function ContextListBindingDirective_clone_HostBindingHandler($event) {\n          return ctx.onClone($event);\n        })(\"create\", function ContextListBindingDirective_create_HostBindingHandler($event) {\n          return ctx.onCreate($event);\n        })(\"filterPermissionsChanged\", function ContextListBindingDirective_filterPermissionsChanged_HostBindingHandler() {\n          return ctx.loadContexts();\n        })(\"showHiddenContexts\", function ContextListBindingDirective_showHiddenContexts_HostBindingHandler() {\n          return ctx.showHiddenContexts();\n        })(\"show\", function ContextListBindingDirective_show_HostBindingHandler($event) {\n          return ctx.onShowContext($event);\n        })(\"hide\", function ContextListBindingDirective_hide_HostBindingHandler($event) {\n          return ctx.onHideContext($event);\n        });\n      }\n    }\n  });\n  return ContextListBindingDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction ContextFormComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.prefix, \"-\");\n  }\n}\n\nlet ContextFormComponent = /*#__PURE__*/(() => {\n  class ContextFormComponent {\n    constructor(formBuilder, languageService, messageService) {\n      this.formBuilder = formBuilder;\n      this.languageService = languageService;\n      this.messageService = messageService;\n      this._disabled = false; // TODO: replace any by ContextOptions or Context\n\n      this.submitForm = new EventEmitter();\n      this.clone = new EventEmitter();\n      this.delete = new EventEmitter();\n    }\n\n    get btnSubmitText() {\n      return this._btnSubmitText;\n    }\n\n    set btnSubmitText(value) {\n      this._btnSubmitText = value;\n    }\n\n    get context() {\n      return this._context;\n    }\n\n    set context(value) {\n      this._context = value;\n      this.buildForm();\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = value;\n    }\n\n    ngOnInit() {\n      this.buildForm();\n    }\n\n    handleFormSubmit(value) {\n      let inputs = Object.assign({}, value);\n      inputs = ObjectUtils.removeNull(inputs);\n      inputs.uri = inputs.uri.replace(' ', '');\n\n      if (inputs.uri) {\n        inputs.uri = this.prefix + '-' + inputs.uri;\n      } else {\n        inputs.uri = this.prefix;\n      }\n\n      this.submitForm.emit(inputs);\n    }\n\n    copyTextToClipboard() {\n      const text = this.prefix + '-' + this.form.value.uri.replace(' ', '');\n      const successful = Clipboard.copy(text);\n\n      if (successful) {\n        const translate = this.languageService.translate;\n        const title = translate.instant('igo.context.contextManager.dialog.copyTitle');\n        const msg = translate.instant('igo.context.contextManager.dialog.copyMsg');\n        this.messageService.success(msg, title);\n      }\n    }\n\n    buildForm() {\n      const context = this.context || {};\n      const uriSplit = context.uri.split('-');\n      this.prefix = uriSplit.shift();\n      const uri = uriSplit.join('-');\n      this.form = this.formBuilder.group({\n        title: [context.title],\n        uri: [uri || ' ']\n      });\n    }\n\n  }\n\n  ContextFormComponent.ɵfac = function ContextFormComponent_Factory(t) {\n    return new (t || ContextFormComponent)(i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i3.MessageService));\n  };\n\n  ContextFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextFormComponent,\n    selectors: [[\"igo-context-form\"]],\n    inputs: {\n      btnSubmitText: \"btnSubmitText\",\n      context: \"context\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      submitForm: \"submitForm\",\n      clone: \"clone\",\n      delete: \"delete\"\n    },\n    decls: 19,\n    vars: 18,\n    consts: [[1, \"igo-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"full-width\"], [\"matInput\", \"\", \"required\", \"\", \"maxlength\", \"128\", \"formControlName\", \"title\", 3, \"placeholder\"], [\"id\", \"uriInput\", 1, \"full-width\"], [\"class\", \"prefix\", 4, \"ngIf\"], [1, \"fieldWrapper\"], [\"matInput\", \"\", \"maxlength\", \"64\", \"floatLabel\", \"always\", \"formControlName\", \"uri\", 3, \"placeholder\"], [\"id\", \"copyButton\", \"type\", \"button\", \"mat-icon-button\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", \"color\", \"primary\", 3, \"matTooltip\", \"click\"], [\"svgIcon\", \"content-copy\"], [1, \"igo-form-button-group\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"], [1, \"prefix\"]],\n    template: function ContextFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ContextFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.handleFormSubmit(ctx.form.value);\n        });\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementStart(4, \"mat-error\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵtemplate(8, ContextFormComponent_span_8_Template, 2, 1, \"span\", 4);\n        i0.ɵɵelementStart(9, \"span\", 5);\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ContextFormComponent_Template_button_click_12_listener() {\n          return ctx.copyTextToClipboard();\n        });\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelement(14, \"mat-icon\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 9);\n        i0.ɵɵelementStart(16, \"button\", 10);\n        i0.ɵɵtext(17);\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(3, 8, \"igo.context.contextManager.form.title\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 10, \"igo.context.contextManager.form.titleRequired\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.prefix);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(11, 12, \"igo.context.contextManager.form.uri\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(13, 14, \"igo.context.contextManager.form.copy\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid || ctx.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(18, 16, \"igo.context.contextManager.form.edit\"), \" \");\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i3$1.MatFormField, i3$2.MatInput, i4.DefaultValueAccessor, i4.RequiredValidator, i4.MaxLengthValidator, i4.NgControlStatus, i4.FormControlName, i3$1.MatError, i7.NgIf, i5.MatButton, i6$2.MatTooltip, i9.MatIcon],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\"form[_ngcontent-%COMP%]{margin:10px}.full-width[_ngcontent-%COMP%]{width:100%}#uriInput[_ngcontent-%COMP%]   .fieldWrapper[_ngcontent-%COMP%]{display:block;overflow:hidden}#uriInput[_ngcontent-%COMP%]   .prefix[_ngcontent-%COMP%]{float:left}#copyButton[_ngcontent-%COMP%]{width:24px;float:right;position:relative;top:-58px;left:5px}\"]\n  });\n  return ContextFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction ContextEditComponent_igo_context_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-context-form\", 1);\n    i0.ɵɵlistener(\"submitForm\", function ContextEditComponent_igo_context_form_0_Template_igo_context_form_submitForm_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.submitForm.emit($event);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"btnSubmitText\", i0.ɵɵpipeBind1(1, 2, \"igo.context.contextManager.save\"))(\"context\", ctx_r0.context);\n  }\n}\n\nlet ContextEditComponent = /*#__PURE__*/(() => {\n  class ContextEditComponent {\n    constructor(cd) {\n      this.cd = cd;\n      this.submitForm = new EventEmitter();\n    }\n\n    get context() {\n      return this._context;\n    }\n\n    set context(value) {\n      this._context = value;\n      this.refresh();\n    }\n\n    refresh() {\n      this.cd.detectChanges();\n    }\n\n  }\n\n  ContextEditComponent.ɵfac = function ContextEditComponent_Factory(t) {\n    return new (t || ContextEditComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ContextEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextEditComponent,\n    selectors: [[\"igo-context-edit\"]],\n    inputs: {\n      context: \"context\"\n    },\n    outputs: {\n      submitForm: \"submitForm\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"btnSubmitText\", \"context\", \"submitForm\", 4, \"ngIf\"], [3, \"btnSubmitText\", \"context\", \"submitForm\"]],\n    template: function ContextEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ContextEditComponent_igo_context_form_0_Template, 2, 4, \"igo-context-form\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.context);\n      }\n    },\n    directives: [i7.NgIf, ContextFormComponent],\n    pipes: [i6$1.TranslatePipe],\n    encapsulation: 2\n  });\n  return ContextEditComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ContextEditBindingDirective = /*#__PURE__*/(() => {\n  class ContextEditBindingDirective {\n    constructor(component, contextService, messageService, languageService) {\n      this.contextService = contextService;\n      this.messageService = messageService;\n      this.languageService = languageService;\n      this.submitSuccessed = new EventEmitter();\n      this.component = component;\n    }\n\n    onEdit(context) {\n      const id = this.component.context.id;\n      this.contextService.update(id, context).subscribe(() => {\n        const translate = this.languageService.translate;\n        const message = translate.instant('igo.context.contextManager.dialog.saveMsg', {\n          value: context.title || this.component.context.title\n        });\n        const title = translate.instant('igo.context.contextManager.dialog.saveTitle');\n        this.messageService.success(message, title);\n        this.contextService.setEditedContext(undefined);\n        this.submitSuccessed.emit(context);\n      });\n    }\n\n    ngOnInit() {\n      this.editedContext$$ = this.contextService.editedContext$.subscribe(context => this.handleEditedContextChange(context));\n    }\n\n    ngOnDestroy() {\n      this.editedContext$$.unsubscribe();\n    }\n\n    handleEditedContextChange(context) {\n      this.component.context = context;\n    }\n\n  }\n\n  ContextEditBindingDirective.ɵfac = function ContextEditBindingDirective_Factory(t) {\n    return new (t || ContextEditBindingDirective)(i0.ɵɵdirectiveInject(ContextEditComponent, 2), i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.LanguageService));\n  };\n\n  ContextEditBindingDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ContextEditBindingDirective,\n    selectors: [[\"\", \"igoContextEditBinding\", \"\"]],\n    hostBindings: function ContextEditBindingDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"submitForm\", function ContextEditBindingDirective_submitForm_HostBindingHandler($event) {\n          return ctx.onEdit($event);\n        });\n      }\n    },\n    outputs: {\n      submitSuccessed: \"submitSuccessed\"\n    }\n  });\n  return ContextEditBindingDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction ContextPermissionsComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, \"igo.context.permission.readOnlyTitle\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 4, \"igo.context.permission.readOnlyMsg\"));\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_div_2_mat_radio_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"igo.context.permission.scope.public\"), \" \");\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"mat-radio-group\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function ContextPermissionsComponent_div_0_div_2_Template_mat_radio_group_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.context.scope = $event;\n    })(\"change\", function ContextPermissionsComponent_div_0_div_2_Template_mat_radio_group_change_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.scopeChanged.emit(ctx_r8.context);\n    });\n    i0.ɵɵelementStart(2, \"mat-radio-button\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-radio-button\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ContextPermissionsComponent_div_0_div_2_mat_radio_button_8_Template, 3, 3, \"mat-radio-button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.context.scope);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 4, \"igo.context.permission.scope.private\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 6, \"igo.context.permission.scope.shared\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.authService.isAdmin);\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_form_3_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"small\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const profil_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", profil_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", profil_r11.title, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(profil_r11.name);\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function ContextPermissionsComponent_div_0_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.handleFormSubmit(ctx_r12.form.value);\n    });\n    i0.ɵɵelementStart(1, \"mat-form-field\", 10);\n    i0.ɵɵelement(2, \"input\", 11);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"mat-autocomplete\", 12, 13);\n    i0.ɵɵlistener(\"optionSelected\", function ContextPermissionsComponent_div_0_form_3_Template_mat_autocomplete_optionSelected_4_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onProfilSelected($event.option.value);\n    });\n    i0.ɵɵtemplate(6, ContextPermissionsComponent_div_0_form_3_mat_option_6_Template, 5, 3, \"mat-option\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-error\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-radio-group\", 15);\n    i0.ɵɵelementStart(11, \"mat-radio-button\", 16);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"mat-radio-button\", 17);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 18);\n    i0.ɵɵelementStart(18, \"button\", 19);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(5);\n\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.form);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(3, 11, \"igo.context.permission.user\"))(\"formControl\", ctx_r3.formControl)(\"matAutocomplete\", _r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"displayWith\", ctx_r3.displayFn);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.profils);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 13, \"igo.context.permission.profilRequired\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 15, \"igo.context.permission.read\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(16, 17, \"igo.context.permission.write\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r3.form.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 19, \"igo.context.permission.addBtn\"), \" \");\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_igo_collapsible_0_ng_template_2_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_igo_collapsible_0_ng_template_2_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const permission_r19 = i0.ɵɵnextContext().$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(5);\n      return ctx_r21.removePermission.emit(permission_r19);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 1, \"igo.context.permission.delete\"));\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_igo_collapsible_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelement(1, \"mat-icon\", 25);\n    i0.ɵɵelementStart(2, \"h4\", 26);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"small\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 27);\n    i0.ɵɵtemplate(7, ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_igo_collapsible_0_ng_template_2_button_7_Template, 3, 3, \"button\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const permission_r19 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", permission_r19.profilTitle, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(permission_r19.profil);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.canWrite || permission_r19.profil === ctx_r18.authService.decodeToken().user.sourceId);\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_igo_collapsible_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"igo-collapsible\", 24);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtemplate(2, ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_igo_collapsible_0_ng_template_2_Template, 8, 3, \"ng-template\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const groupPermissions_r16 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 2, \"igo.context.permission.\" + groupPermissions_r16.key));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", groupPermissions_r16.value);\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_igo_collapsible_0_Template, 3, 4, \"igo-collapsible\", 23);\n  }\n\n  if (rf & 2) {\n    const groupPermissions_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", groupPermissions_r16.value.length);\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_igo_list_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"igo-list\");\n    i0.ɵɵtemplate(1, ContextPermissionsComponent_div_0_igo_list_4_ng_template_1_Template, 1, 1, \"ng-template\", 22);\n    i0.ɵɵpipe(2, \"keyvalue\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r4.permissions));\n  }\n}\n\nfunction ContextPermissionsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ContextPermissionsComponent_div_0_div_1_Template, 7, 6, \"div\", 1);\n    i0.ɵɵtemplate(2, ContextPermissionsComponent_div_0_div_2_Template, 9, 8, \"div\", 1);\n    i0.ɵɵtemplate(3, ContextPermissionsComponent_div_0_form_3_Template, 21, 21, \"form\", 2);\n    i0.ɵɵtemplate(4, ContextPermissionsComponent_div_0_igo_list_4_Template, 3, 3, \"igo-list\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.canWrite);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.canWrite);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.context.scope !== \"private\" && ctx_r0.canWrite);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.permissions && ctx_r0.context.scope !== \"private\");\n  }\n}\n\nlet ContextPermissionsComponent = /*#__PURE__*/(() => {\n  class ContextPermissionsComponent {\n    constructor(formBuilder, cd, http, authService, config) {\n      this.formBuilder = formBuilder;\n      this.cd = cd;\n      this.http = http;\n      this.authService = authService;\n      this.config = config;\n      this._profils = [];\n      this.formControl = new FormControl();\n      this.addPermission = new EventEmitter();\n      this.removePermission = new EventEmitter();\n      this.scopeChanged = new EventEmitter();\n    }\n\n    get context() {\n      return this._context;\n    }\n\n    set context(value) {\n      this._context = value;\n      this.cd.detectChanges();\n    }\n\n    get permissions() {\n      return this._permissions;\n    }\n\n    set permissions(value) {\n      this._permissions = value;\n      this.cd.detectChanges();\n    }\n\n    get profils() {\n      return this._profils;\n    }\n\n    set profils(value) {\n      this._profils = value;\n      this.cd.detectChanges();\n    }\n\n    get canWrite() {\n      return this.context.permission === TypePermission[TypePermission.write];\n    }\n\n    ngOnInit() {\n      this.buildForm();\n      this.baseUrlProfils = this.config.getConfig('context.url') + '/profils-users?';\n      this.formValueChanges$$ = this.formControl.valueChanges.subscribe(value => {\n        if (value.length) {\n          this.http.get(this.baseUrlProfils + 'q=' + value).subscribe(profils => {\n            this.profils = profils;\n          });\n          this.profils.filter(profil => {\n            const filterNormalized = value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n            const profilTitleNormalized = profil.title.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n            const profilNameNormalized = profil.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n            const profilNormalized = profilNameNormalized + profilTitleNormalized;\n            return profilNormalized.includes(filterNormalized);\n          });\n        } else {\n          this.profils = [];\n        }\n      });\n    }\n\n    displayFn(profil) {\n      return profil ? profil.title : undefined;\n    }\n\n    handleFormSubmit(value) {\n      this.addPermission.emit(value);\n    }\n\n    buildForm() {\n      this.form = this.formBuilder.group({\n        profil: [],\n        typePermission: ['read']\n      });\n    }\n\n    onProfilSelected(value) {\n      this.form.setValue({\n        profil: value.name,\n        typePermission: this.form.value.typePermission\n      });\n    }\n\n  }\n\n  ContextPermissionsComponent.ɵfac = function ContextPermissionsComponent_Factory(t) {\n    return new (t || ContextPermissionsComponent)(i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ConfigService));\n  };\n\n  ContextPermissionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContextPermissionsComponent,\n    selectors: [[\"igo-context-permissions\"]],\n    inputs: {\n      context: \"context\",\n      permissions: \"permissions\"\n    },\n    outputs: {\n      addPermission: \"addPermission\",\n      removePermission: \"removePermission\",\n      scopeChanged: \"scopeChanged\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"class\", \"scopeForm\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"scopeForm\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"private\"], [\"value\", \"protected\"], [\"value\", \"public\", 4, \"ngIf\"], [\"value\", \"public\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"full-width\"], [\"matInput\", \"\", \"required\", \"\", 3, \"placeholder\", \"formControl\", \"matAutocomplete\"], [3, \"displayWith\", \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"typePermission\"], [\"value\", \"read\"], [\"value\", \"write\"], [1, \"igo-form-button-group\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"], [1, \"mat-typography\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"title\", 4, \"ngIf\"], [3, \"title\"], [\"mat-list-avatar\", \"\", \"svgIcon\", \"account-outline\"], [\"mat-line\", \"\"], [\"igoStopPropagation\", \"\", 1, \"igo-actions-container\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", \"color\", \"warn\", 3, \"matTooltip\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"matTooltipShowDelay\", \"500\", \"color\", \"warn\", 3, \"matTooltip\", \"click\"], [\"svgIcon\", \"delete\"]],\n    template: function ContextPermissionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ContextPermissionsComponent_div_0_Template, 5, 4, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.context);\n      }\n    },\n    directives: [i7.NgIf, i6$3.MatRadioGroup, i4.NgControlStatus, i4.NgModel, i6$3.MatRadioButton, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i3$1.MatFormField, i3$2.MatInput, i4.DefaultValueAccessor, i9$1.MatAutocompleteTrigger, i4.RequiredValidator, i4.FormControlDirective, i9$1.MatAutocomplete, i7.NgForOf, i3$1.MatError, i4.FormControlName, i5.MatButton, i11.MatOption, i5$1.ListComponent, i5$1.CollapsibleComponent, i3$3.MatListItem, i9.MatIcon, i3$3.MatListAvatarCssMatStyler, i11.MatLine, i5$1.StopPropagationDirective, i6$2.MatTooltip],\n    pipes: [i6$1.TranslatePipe, i5$1.KeyValuePipe],\n    styles: [\"[_nghost-%COMP%]{margin:10px}.full-width[_ngcontent-%COMP%]{width:100%}mat-radio-button[_ngcontent-%COMP%]{padding:14px 14px 14px 0}.scopeForm[_ngcontent-%COMP%], form[_ngcontent-%COMP%]{padding:5px}mat-option[_ngcontent-%COMP%]     .mat-option-text{line-height:normal;line-height:initial}\"]\n  });\n  return ContextPermissionsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ContextPermissionsBindingDirective = /*#__PURE__*/(() => {\n  class ContextPermissionsBindingDirective {\n    constructor(component, contextService, languageService, messageService, cd) {\n      this.contextService = contextService;\n      this.languageService = languageService;\n      this.messageService = messageService;\n      this.cd = cd;\n      this.component = component;\n    }\n\n    onAddPermission(permission) {\n      const translate = this.languageService.translate;\n\n      if (!permission.profil) {\n        const message = translate.instant('igo.context.contextManager.errors.addPermissionEmpty');\n        const title = translate.instant('igo.context.contextManager.errors.addPermissionTitle');\n        this.messageService.error(message, title);\n        return;\n      }\n\n      const contextId = this.component.context.id;\n      this.contextService.addPermissionAssociation(contextId, permission.profil, permission.typePermission).subscribe(profils => {\n        for (const p of profils) {\n          this.component.permissions[permission.typePermission].push(p);\n        }\n\n        const profil = permission.profil;\n        const message = translate.instant('igo.context.permission.dialog.addMsg', {\n          value: profil\n        });\n        const title = translate.instant('igo.context.permission.dialog.addTitle');\n        this.messageService.success(message, title);\n        this.cd.detectChanges();\n      });\n    }\n\n    onRemovePermission(permission) {\n      const contextId = this.component.context.id;\n      this.contextService.deletePermissionAssociation(contextId, permission.id).subscribe(() => {\n        const index = this.component.permissions[permission.typePermission].findIndex(p => {\n          return p.id === permission.id;\n        });\n        this.component.permissions[permission.typePermission].splice(index, 1);\n        const profil = permission.profil;\n        const translate = this.languageService.translate;\n        const message = translate.instant('igo.context.permission.dialog.deleteMsg', {\n          value: profil\n        });\n        const title = translate.instant('igo.context.permission.dialog.deleteTitle');\n        this.messageService.success(message, title);\n        this.cd.detectChanges();\n      });\n    }\n\n    onScopeChanged(context) {\n      const scope = context.scope;\n      this.contextService.update(context.id, {\n        scope\n      }).subscribe(() => {\n        const translate = this.languageService.translate;\n        const message = translate.instant('igo.context.permission.dialog.scopeChangedMsg', {\n          value: translate.instant('igo.context.permission.scope.' + scope)\n        });\n        const title = translate.instant('igo.context.permission.dialog.scopeChangedTitle');\n        this.messageService.success(message, title);\n      });\n    }\n\n    ngOnInit() {\n      this.editedContext$$ = this.contextService.editedContext$.subscribe(context => this.handleEditedContextChange(context));\n    }\n\n    ngOnDestroy() {\n      this.editedContext$$.unsubscribe();\n      this.contextService.editedContext$.next(undefined);\n    }\n\n    handleEditedContextChange(context) {\n      this.component.context = context;\n\n      if (context) {\n        this.contextService.getPermissions(context.id).subscribe(permissionsArray => {\n          permissionsArray = permissionsArray || [];\n          const permissions = {\n            read: permissionsArray.filter(p => {\n              return p.typePermission.toString() === 'read';\n            }),\n            write: permissionsArray.filter(p => {\n              return p.typePermission.toString() === 'write';\n            })\n          };\n          return this.component.permissions = permissions;\n        });\n      }\n    }\n\n  }\n\n  ContextPermissionsBindingDirective.ɵfac = function ContextPermissionsBindingDirective_Factory(t) {\n    return new (t || ContextPermissionsBindingDirective)(i0.ɵɵdirectiveInject(ContextPermissionsComponent, 2), i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ContextPermissionsBindingDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ContextPermissionsBindingDirective,\n    selectors: [[\"\", \"igoContextPermissionsBinding\", \"\"]],\n    hostBindings: function ContextPermissionsBindingDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"addPermission\", function ContextPermissionsBindingDirective_addPermission_HostBindingHandler($event) {\n          return ctx.onAddPermission($event);\n        })(\"removePermission\", function ContextPermissionsBindingDirective_removePermission_HostBindingHandler($event) {\n          return ctx.onRemovePermission($event);\n        })(\"scopeChanged\", function ContextPermissionsBindingDirective_scopeChanged_HostBindingHandler($event) {\n          return ctx.onScopeChanged($event);\n        });\n      }\n    }\n  });\n  return ContextPermissionsBindingDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet BookmarkButtonComponent = /*#__PURE__*/(() => {\n  class BookmarkButtonComponent {\n    constructor(dialog, contextService, languageService, messageService) {\n      this.dialog = dialog;\n      this.contextService = contextService;\n      this.languageService = languageService;\n      this.messageService = messageService;\n    }\n\n    get map() {\n      return this._map;\n    }\n\n    set map(value) {\n      this._map = value;\n    }\n\n    get color() {\n      return this._color;\n    }\n\n    set color(value) {\n      this._color = value;\n    }\n\n    createContext() {\n      this.dialog.open(BookmarkDialogComponent, {\n        disableClose: false\n      }).afterClosed().pipe(take(1)).subscribe(title => {\n        if (title) {\n          const context = this.contextService.getContextFromMap(this.map);\n          context.title = title;\n          this.contextService.create(context).subscribe(() => {\n            const translate = this.languageService.translate;\n            const titleD = translate.instant('igo.context.bookmarkButton.dialog.createTitle');\n            const message = translate.instant('igo.context.bookmarkButton.dialog.createMsg', {\n              value: context.title\n            });\n            this.messageService.success(message, titleD);\n            this.contextService.loadContext(context.uri);\n          });\n        }\n      });\n    }\n\n  }\n\n  BookmarkButtonComponent.ɵfac = function BookmarkButtonComponent_Factory(t) {\n    return new (t || BookmarkButtonComponent)(i0.ɵɵdirectiveInject(i1$2.MatDialog), i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i3.MessageService));\n  };\n\n  BookmarkButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookmarkButtonComponent,\n    selectors: [[\"igo-bookmark-button\"]],\n    inputs: {\n      map: \"map\",\n      color: \"color\"\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[1, \"igo-bookmark-button-container\"], [\"mat-icon-button\", \"\", \"matTooltipPosition\", \"above\", 3, \"matTooltip\", \"color\", \"click\"], [\"svgIcon\", \"star\"]],\n    template: function BookmarkButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function BookmarkButtonComponent_Template_button_click_1_listener() {\n          return ctx.createContext();\n        });\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelement(3, \"mat-icon\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(2, 2, \"igo.context.bookmarkButton.create\"))(\"color\", ctx.color);\n      }\n    },\n    directives: [i5.MatButton, i6$2.MatTooltip, i9.MatIcon],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\".igo-bookmark-button-container[_ngcontent-%COMP%]{width:40px}.igo-bookmark-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#fff}.igo-bookmark-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#efefef}button[_ngcontent-%COMP%], [_nghost-%COMP%]     button .mat-button-ripple-round{border-radius:0}\"]\n  });\n  return BookmarkButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PoiDialogComponent = /*#__PURE__*/(() => {\n  class PoiDialogComponent {\n    constructor(dialogRef) {\n      this.dialogRef = dialogRef;\n    }\n\n  }\n\n  PoiDialogComponent.ɵfac = function PoiDialogComponent_Factory(t) {\n    return new (t || PoiDialogComponent)(i0.ɵɵdirectiveInject(i1$2.MatDialogRef));\n  };\n\n  PoiDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PoiDialogComponent,\n    selectors: [[\"igo-poi-dialog\"]],\n    decls: 14,\n    vars: 14,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"mat-typography\"], [\"mat-dialog-content\", \"\"], [\"matInput\", \"\", \"required\", \"\", \"autocomplete\", \"off\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function PoiDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"mat-form-field\");\n        i0.ɵɵelementStart(5, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function PoiDialogComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.title = $event;\n        });\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function PoiDialogComponent_Template_button_click_8_listener() {\n          return ctx.dialogRef.close(ctx.title);\n        });\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function PoiDialogComponent_Template_button_click_11_listener() {\n          return ctx.dialogRef.close(false);\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 6, \"igo.context.poiButton.dialog.title\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(6, 8, \"igo.context.poiButton.dialog.placeholder\"))(\"ngModel\", ctx.title);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(10, 10, \"igo.common.confirmDialog.confirmBtn\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 12, \"igo.common.confirmDialog.cancelBtn\"), \" \");\n      }\n    },\n    directives: [i1$2.MatDialogTitle, i1$2.MatDialogContent, i3$1.MatFormField, i3$2.MatInput, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i1$2.MatDialogActions, i5.MatButton],\n    pipes: [i6$1.TranslatePipe],\n    encapsulation: 2\n  });\n  return PoiDialogComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PoiService = /*#__PURE__*/(() => {\n  class PoiService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n      this.baseUrl = this.config.getConfig('context.url');\n    }\n\n    get() {\n      if (!this.baseUrl) {\n        return EMPTY;\n      }\n\n      const url = this.baseUrl + '/pois';\n      return this.http.get(url);\n    }\n\n    delete(id) {\n      const url = this.baseUrl + '/pois/' + id;\n      return this.http.delete(url);\n    }\n\n    create(context) {\n      const url = this.baseUrl + '/pois';\n      return this.http.post(url, context);\n    }\n\n  }\n\n  PoiService.ɵfac = function PoiService_Factory(t) {\n    return new (t || PoiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i3.ConfigService));\n  };\n\n  PoiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PoiService,\n    factory: PoiService.ɵfac\n  });\n  return PoiService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction PoiButtonComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵlistener(\"click\", function PoiButtonComponent_mat_option_8_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const poi_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.zoomOnPoi(poi_r1.id);\n    });\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function PoiButtonComponent_mat_option_8_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const poi_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.deletePoi(poi_r1);\n    });\n    i0.ɵɵelement(4, \"mat-icon\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const poi_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", poi_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(poi_r1.title);\n  }\n}\n\nlet PoiButtonComponent = /*#__PURE__*/(() => {\n  class PoiButtonComponent {\n    constructor(dialog, authService, poiService, messageService, languageService, confirmDialogService) {\n      this.dialog = dialog;\n      this.authService = authService;\n      this.poiService = poiService;\n      this.messageService = messageService;\n      this.languageService = languageService;\n      this.confirmDialogService = confirmDialogService;\n    }\n\n    get map() {\n      return this._map;\n    }\n\n    set map(value) {\n      this._map = value;\n    }\n\n    get color() {\n      return this._color;\n    }\n\n    set color(value) {\n      this._color = value;\n    }\n\n    ngOnInit() {\n      this.authenticate$$ = this.authService.authenticate$.subscribe(auth => {\n        if (auth) {\n          this.getPois();\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.authenticate$$.unsubscribe();\n    }\n\n    deletePoi(poi) {\n      if (poi && poi.id) {\n        const translate = this.languageService.translate;\n        this.confirmDialogService.open(translate.instant('igo.context.poiButton.dialog.confirmDelete')).subscribe(confirm => {\n          if (confirm) {\n            this.poiService.delete(poi.id).subscribe(() => {\n              const title = translate.instant('igo.context.poiButton.dialog.deleteTitle');\n              const message = translate.instant('igo.context.poiButton.dialog.deleteMsg', {\n                value: poi.title\n              });\n              this.messageService.info(message, title);\n              this.pois = this.pois.filter(p => p.id !== poi.id);\n            }, err => {\n              err.error.title = 'DELETE Pois';\n              this.messageService.showError(err);\n            });\n          }\n        });\n      }\n    }\n\n    getPois() {\n      this.poiService.get().pipe(take(1)).subscribe(rep => {\n        this.pois = rep;\n      }, err => {\n        err.error.title = 'GET Pois';\n        this.messageService.showError(err);\n      });\n    }\n\n    createPoi() {\n      const view = this.map.ol.getView();\n      const proj = view.getProjection().getCode();\n      const center = new olPoint(view.getCenter()).transform(proj, 'EPSG:4326');\n      const poi = {\n        title: '',\n        x: center.getCoordinates()[0],\n        y: center.getCoordinates()[1],\n        zoom: view.getZoom()\n      };\n      this.dialog.open(PoiDialogComponent, {\n        disableClose: false\n      }).afterClosed().subscribe(title => {\n        if (title) {\n          poi.title = title;\n          this.poiService.create(poi).subscribe(newPoi => {\n            const translate = this.languageService.translate;\n            const titleD = translate.instant('igo.context.poiButton.dialog.createTitle');\n            const message = translate.instant('igo.context.poiButton.dialog.createMsg', {\n              value: poi.title\n            });\n            this.messageService.success(message, titleD);\n            poi.id = newPoi.id;\n            this.pois.push(poi);\n          }, err => {\n            err.error.title = 'POST Pois';\n            this.messageService.showError(err);\n          });\n        }\n      });\n    }\n\n    zoomOnPoi(id) {\n      const poi = this.pois.find(p => p.id === id);\n      const center = olproj.fromLonLat([Number(poi.x), Number(poi.y)], this.map.projection);\n      this.map.ol.getView().animate({\n        center,\n        zoom: poi.zoom,\n        duration: 500,\n        easing: oleasing.easeOut\n      });\n    }\n\n  }\n\n  PoiButtonComponent.ɵfac = function PoiButtonComponent_Factory(t) {\n    return new (t || PoiButtonComponent)(i0.ɵɵdirectiveInject(i1$2.MatDialog), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(PoiService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i5$1.ConfirmDialogService));\n  };\n\n  PoiButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PoiButtonComponent,\n    selectors: [[\"igo-poi-button\"]],\n    inputs: {\n      map: \"map\",\n      color: \"color\"\n    },\n    decls: 9,\n    vars: 7,\n    consts: [[\"floatPlaceholder\", \"never\", 3, \"placeholder\"], [3, \"click\"], [1, \"titlePoi\"], [\"igoStopPropagation\", \"\", \"mat-icon-button\", \"\", \"color\", \"primary\", 1, \"addPoi\", \"buttonPoi\", 3, \"click\"], [\"svgIcon\", \"plus-circle\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"click\"], [\"igoStopPropagation\", \"\", \"mat-icon-button\", \"\", \"color\", \"warn\", 1, \"deletePoi\", \"buttonPoi\", 3, \"click\"], [\"svgIcon\", \"delete\"]],\n    template: function PoiButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-select\", 0);\n        i0.ɵɵpipe(1, \"translate\");\n        i0.ɵɵelementStart(2, \"mat-option\", 1);\n        i0.ɵɵlistener(\"click\", function PoiButtonComponent_Template_mat_option_click_2_listener() {\n          return ctx.createPoi();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function PoiButtonComponent_Template_button_click_6_listener() {\n          return ctx.createPoi();\n        });\n        i0.ɵɵelement(7, \"mat-icon\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, PoiButtonComponent_mat_option_8_Template, 5, 2, \"mat-option\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(1, 3, \"igo.context.poiButton.placeholder\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 5, \"igo.context.poiButton.create\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pois);\n      }\n    },\n    directives: [i12.MatSelect, i11.MatOption, i5.MatButton, i5$1.StopPropagationDirective, i9.MatIcon, i7.NgForOf],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\"mat-select[_ngcontent-%COMP%]{width:150px;background-color:#fff;height:40px;padding-top:0}mat-select[_ngcontent-%COMP%]     .mat-select-trigger{height:40px}mat-select[_ngcontent-%COMP%]     .mat-select-value-text, mat-select[_ngcontent-%COMP%]     .mat-select-placeholder{padding:5px;top:12px;position:relative}.mat-option[_ngcontent-%COMP%]{text-overflow:inherit}.titlePoi[_ngcontent-%COMP%]{max-width:135px;overflow:hidden;text-overflow:ellipsis;float:left}.buttonPoi[_ngcontent-%COMP%]{float:right;margin:4px -10px 4px 0}.buttonPoi[_ngcontent-%COMP%]     .mat-icon{margin:0 8px}\"]\n  });\n  return PoiButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet UserDialogComponent = /*#__PURE__*/(() => {\n  class UserDialogComponent {\n    constructor(dialogRef, auth, storageService) {\n      this.dialogRef = dialogRef;\n      this.auth = auth;\n      this.storageService = storageService;\n      const decodeToken = this.auth.decodeToken();\n      this.user = decodeToken.user;\n      this.exp = new Date(decodeToken.exp * 1000).toLocaleString();\n    }\n\n    clearPreferences() {\n      this.storageService.clear();\n    }\n\n  }\n\n  UserDialogComponent.ɵfac = function UserDialogComponent_Factory(t) {\n    return new (t || UserDialogComponent)(i0.ɵɵdirectiveInject(i1$2.MatDialogRef), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.StorageService));\n  };\n\n  UserDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserDialogComponent,\n    selectors: [[\"igo-user-dialog\"]],\n    decls: 20,\n    vars: 18,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"mat-typography\"], [\"mat-dialog-content\", \"\", 1, \"mat-typography\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-dialog-actions\", \"\", 2, \"justify-content\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function UserDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function UserDialogComponent_Template_button_click_13_listener() {\n          return ctx.clearPreferences();\n        });\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 3);\n        i0.ɵɵelementStart(18, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function UserDialogComponent_Template_button_click_18_listener() {\n          return ctx.dialogRef.close(false);\n        });\n        i0.ɵɵtext(19, \" OK \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 8, \"igo.context.userButton.infoTitle\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(6, 10, \"igo.context.userButton.dialog.user\"), \": \", ctx.user.sourceId, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(9, 12, \"igo.context.userButton.dialog.email\"), \": \", ctx.user.email, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(12, 14, \"igo.context.userButton.dialog.expiration\"), \": \", ctx.exp, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 16, \"igo.context.userButton.dialog.clearPreferences\"), \" \");\n      }\n    },\n    directives: [i1$2.MatDialogTitle, i1$2.MatDialogContent, i5.MatButton, i1$2.MatDialogActions],\n    pipes: [i6$1.TranslatePipe],\n    encapsulation: 2\n  });\n  return UserDialogComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction userButtonSlideInOut() {\n  return trigger('userButtonState', [state('collapse', style({\n    width: '0',\n    overflow: 'hidden',\n    display: 'none'\n  })), state('expand', style({\n    overflow: 'hidden',\n    display: 'display'\n  })), transition('collapse => expand', animate('200ms')), transition('expand => collapse', animate('200ms'))]);\n}\n\nfunction UserButtonComponent_div_0_igo_poi_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-poi-button\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"color\", ctx_r1.color)(\"map\", ctx_r1.map);\n  }\n}\n\nfunction UserButtonComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtemplate(2, UserButtonComponent_div_0_igo_poi_button_2_Template, 1, 2, \"igo-poi-button\", 3);\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function UserButtonComponent_div_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.infoUser();\n    });\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelement(5, \"mat-icon\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function UserButtonComponent_div_0_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.logout();\n    });\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelement(8, \"mat-icon\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function UserButtonComponent_div_0_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.accountClick();\n    });\n    i0.ɵɵelement(10, \"mat-icon\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@userButtonState\", ctx_r0.expand ? \"expand\" : \"collapse\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.hasApi);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(4, 7, \"igo.context.userButton.infoTitle\"))(\"color\", ctx_r0.color);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(7, 9, \"igo.context.userButton.logout\"))(\"color\", ctx_r0.color);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"color\", ctx_r0.auth.authenticated ? ctx_r0.color : \"warn\");\n  }\n}\n\nlet UserButtonComponent = /*#__PURE__*/(() => {\n  class UserButtonComponent {\n    constructor(dialog, config, auth) {\n      this.dialog = dialog;\n      this.config = config;\n      this.auth = auth;\n      this.expand = false;\n      this.visible = false;\n      this.hasApi = false;\n      this.visible = this.config.getConfig('auth') ? true : false;\n      this.hasApi = this.config.getConfig('context.url') !== undefined;\n    }\n\n    get map() {\n      return this._map;\n    }\n\n    set map(value) {\n      this._map = value;\n    }\n\n    get color() {\n      return this._color;\n    }\n\n    set color(value) {\n      this._color = value;\n    }\n\n    accountClick() {\n      if (this.auth.authenticated) {\n        this.expand = !this.expand;\n      } else {\n        this.auth.logout();\n      }\n    }\n\n    logout() {\n      this.expand = false;\n      this.auth.logout();\n    }\n\n    infoUser() {\n      this.dialog.open(UserDialogComponent, {\n        disableClose: false\n      });\n    }\n\n  }\n\n  UserButtonComponent.ɵfac = function UserButtonComponent_Factory(t) {\n    return new (t || UserButtonComponent)(i0.ɵɵdirectiveInject(i1$2.MatDialog), i0.ɵɵdirectiveInject(i3.ConfigService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  UserButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserButtonComponent,\n    selectors: [[\"igo-user-button\"]],\n    inputs: {\n      map: \"map\",\n      color: \"color\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"igo-user-button-container\", 4, \"ngIf\"], [1, \"igo-user-button-container\"], [1, \"igo-user-button-more-container\"], [3, \"color\", \"map\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"matTooltipPosition\", \"above\", 3, \"matTooltip\", \"color\", \"click\"], [\"svgIcon\", \"information-outline\"], [\"svgIcon\", \"power\"], [\"mat-icon-button\", \"\", 3, \"color\", \"click\"], [\"svgIcon\", \"account-box\"], [3, \"color\", \"map\"]],\n    template: function UserButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, UserButtonComponent_div_0_Template, 11, 11, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.visible);\n      }\n    },\n    directives: [i7.NgIf, i5.MatButton, i6$2.MatTooltip, i9.MatIcon, PoiButtonComponent],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\".igo-user-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#fff}.igo-user-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#efefef}@media only screen and (orientation:portrait) and (max-width: 599px),only screen and (orientation:landscape) and (max-width: 959px){.igo-user-button-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:absolute;bottom:0}}.igo-user-button-more-container[_ngcontent-%COMP%]{float:left;height:40px}.igo-user-button-more-container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{margin-right:2px;float:left}@media only screen and (orientation:portrait) and (max-width: 599px),only screen and (orientation:landscape) and (max-width: 959px){.igo-user-button-more-container[_ngcontent-%COMP%]{height:80px;width:150px;position:relative;left:24px}}button[_ngcontent-%COMP%], [_nghost-%COMP%]     button .mat-button-ripple-round{border-radius:0}\"],\n    data: {\n      animation: [userButtonSlideInOut()]\n    }\n  });\n  return UserButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoContextMapButtonModule = /*#__PURE__*/(() => {\n  class IgoContextMapButtonModule {\n    static forRoot() {\n      return {\n        ngModule: IgoContextMapButtonModule\n      };\n    }\n\n  }\n\n  IgoContextMapButtonModule.ɵfac = function IgoContextMapButtonModule_Factory(t) {\n    return new (t || IgoContextMapButtonModule)();\n  };\n\n  IgoContextMapButtonModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoContextMapButtonModule\n  });\n  IgoContextMapButtonModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [PoiService],\n    imports: [[CommonModule, IgoLanguageModule, IgoConfirmDialogModule, IgoStopPropagationModule, IgoAuthModule, FormsModule, MatIconModule, MatButtonModule, MatSelectModule, MatOptionModule, MatTooltipModule, MatFormFieldModule, MatDialogModule, MatInputModule]]\n  });\n  return IgoContextMapButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoContextMapButtonModule, {\n    declarations: [BookmarkButtonComponent, BookmarkDialogComponent, PoiButtonComponent, PoiDialogComponent, UserButtonComponent, UserDialogComponent],\n    imports: [CommonModule, IgoLanguageModule, IgoConfirmDialogModule, IgoStopPropagationModule, IgoAuthModule, FormsModule, MatIconModule, MatButtonModule, MatSelectModule, MatOptionModule, MatTooltipModule, MatFormFieldModule, MatDialogModule, MatInputModule],\n    exports: [BookmarkButtonComponent, PoiButtonComponent, UserButtonComponent, BookmarkDialogComponent]\n  });\n})();\n\nconst CONTEXT_DIRECTIVES = [MapContextDirective, LayerContextDirective];\nlet IgoContextManagerModule = /*#__PURE__*/(() => {\n  class IgoContextManagerModule {\n    static forRoot() {\n      return {\n        ngModule: IgoContextManagerModule\n      };\n    }\n\n  }\n\n  IgoContextManagerModule.ɵfac = function IgoContextManagerModule_Factory(t) {\n    return new (t || IgoContextManagerModule)();\n  };\n\n  IgoContextManagerModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoContextManagerModule\n  });\n  IgoContextManagerModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatIconModule, MatButtonModule, MatTooltipModule, MatListModule, MatCheckboxModule, MatRadioModule, MatDialogModule, MatMenuModule, MatOptionModule, MatAutocompleteModule, IgoAuthModule, IgoListModule, IgoKeyValueModule, IgoCollapsibleModule, IgoStopPropagationModule, IgoLanguageModule, IgoContextImportExportModule, IgoContextMapButtonModule, IgoActionbarModule]]\n  });\n  return IgoContextManagerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoContextManagerModule, {\n    declarations: [ContextListComponent, ContextListBindingDirective, ContextItemComponent, ContextFormComponent, ContextEditComponent, ContextEditBindingDirective, ContextPermissionsComponent, ContextPermissionsBindingDirective, MapContextDirective, LayerContextDirective],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatIconModule, MatButtonModule, MatTooltipModule, MatListModule, MatCheckboxModule, MatRadioModule, MatDialogModule, MatMenuModule, MatOptionModule, MatAutocompleteModule, IgoAuthModule, IgoListModule, IgoKeyValueModule, IgoCollapsibleModule, IgoStopPropagationModule, IgoLanguageModule, IgoContextImportExportModule, IgoContextMapButtonModule, IgoActionbarModule],\n    exports: [ContextListComponent, ContextListBindingDirective, ContextItemComponent, ContextFormComponent, ContextEditComponent, ContextEditBindingDirective, ContextPermissionsComponent, ContextPermissionsBindingDirective, MapContextDirective, LayerContextDirective]\n  });\n})();\n\nlet ShareMapService = /*#__PURE__*/(() => {\n  class ShareMapService {\n    constructor(contextService, messageService, route) {\n      this.contextService = contextService;\n      this.messageService = messageService;\n      this.route = route;\n    }\n\n    getUrlWithApi(formValues) {\n      return `${location.origin + location.pathname}?context=${formValues.uri}`;\n    }\n\n    createContextShared(map, formValues) {\n      const context = this.contextService.getContextFromMap(map);\n      context.scope = 'public';\n      context.title = formValues.title;\n      context.uri = formValues.uri;\n      return this.contextService.create(context);\n    }\n\n    updateContextShared(map, formValues, id) {\n      const context = this.contextService.getContextFromMap(map);\n      return this.contextService.update(id, {\n        title: formValues.title,\n        map: context.map\n      });\n    }\n\n    getUrlWithoutApi(map, publicShareOption) {\n      if (!this.route || !this.route.options.visibleOnLayersKey || !this.route.options.visibleOffLayersKey || !map.viewController.getZoom()) {\n        return;\n      }\n\n      const llc = publicShareOption.layerlistControls.querystring;\n      let visibleKey = this.route.options.visibleOnLayersKey;\n      let invisibleKey = this.route.options.visibleOffLayersKey;\n      const layers = map.layers;\n      const visibleLayers = layers.filter(lay => lay.visible && !lay.isIgoInternalLayer);\n      const invisibleLayers = layers.filter(lay => !lay.visible && !lay.isIgoInternalLayer);\n\n      if (visibleLayers.length === 0) {\n        visibleKey = '';\n      }\n\n      if (invisibleLayers.length === 0) {\n        invisibleKey = '';\n      }\n\n      let layersUrl = '';\n      let layersToLoop = [];\n\n      if (visibleLayers.length > invisibleLayers.length) {\n        layersUrl = `${visibleKey}=*&${invisibleKey}=`;\n        layersToLoop = invisibleLayers;\n      } else {\n        layersUrl = `${invisibleKey}=*&${visibleKey}=`;\n        layersToLoop = visibleLayers;\n      }\n\n      for (const layer of layersToLoop) {\n        if (layer.id) {\n          layersUrl += layer.id + ',';\n        }\n      }\n\n      const contextLayersID = [];\n      const contextLayers = this.contextService.context$.value.layers;\n\n      for (const contextLayer of contextLayers) {\n        if (typeof contextLayer.id !== 'undefined' || typeof contextLayer.source !== 'undefined') {\n          contextLayersID.push(contextLayer.id || contextLayer.source.id);\n        }\n      }\n\n      const addedLayersQueryParamsWms = this.makeLayersByService(layers, contextLayersID, 'wms');\n      const addedLayersQueryParamsWmts = this.makeLayersByService(layers, contextLayersID, 'wmts');\n      const addedLayersQueryParamsArcgisRest = this.makeLayersByService(layers, contextLayersID, 'arcgisrest');\n      const addedLayersQueryParamsImageArcgisRest = this.makeLayersByService(layers, contextLayersID, 'imagearcgisrest');\n      const addedLayersQueryParamsTileArcgisRest = this.makeLayersByService(layers, contextLayersID, 'tilearcgisrest');\n      layersUrl = layersUrl.substr(0, layersUrl.length - 1);\n      const zoomKey = this.route.options.zoomKey;\n      const centerKey = this.route.options.centerKey;\n      const contextKey = this.route.options.contextKey;\n      const zoom = `${zoomKey}=${map.viewController.getZoom()}`;\n      const arrayCenter = map.viewController.getCenter('EPSG:4326') || [];\n      const long = arrayCenter[0].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\n      const lat = arrayCenter[1].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\n      const center = `${centerKey}=${long},${lat}`.replace(/.00000/g, '');\n      let context = '';\n\n      if (this.contextService.context$.value) {\n        context = `${contextKey}=${this.contextService.context$.value.uri}`;\n      }\n\n      let url = `${location.origin}${location.pathname}?${context}&${zoom}&${center}&${layersUrl}&${llc}&${addedLayersQueryParamsWms}&${llc}&${addedLayersQueryParamsWmts}&${addedLayersQueryParamsArcgisRest}&${addedLayersQueryParamsImageArcgisRest}&${addedLayersQueryParamsTileArcgisRest}`;\n\n      for (let i = 0; i < 5; i++) {\n        url = url.replace(/&&/g, '&');\n        url = url.endsWith('&') ? url.slice(0, -1) : url;\n      }\n\n      url = url.endsWith('&') ? url.slice(0, -1) : url;\n      url = url.replace('?&wm', '&wm');\n      url = url.replace('?&', '?');\n      return url;\n    }\n\n    makeLayersByService(layers, contextLayersID, typeService) {\n      const addedLayersByService = [];\n\n      for (const layer of layers.filter(l => {\n        var _a;\n\n        return ((_a = l.dataSource.options) === null || _a === void 0 ? void 0 : _a.type) === typeService;\n      })) {\n        if (contextLayersID.indexOf(layer.id) === -1) {\n          let linkUrl = encodeURIComponent(layer.dataSource.options.url);\n          let addedLayer = '';\n          let layerVersion;\n\n          switch (layer.dataSource.options.type.toLowerCase()) {\n            case 'wms':\n              const datasourceOptions = layer.dataSource.options;\n              addedLayer = encodeURIComponent(datasourceOptions.params.LAYERS);\n              layerVersion = datasourceOptions.params.VERSION === '1.3.0' ? layerVersion : datasourceOptions.params.VERSION;\n              break;\n\n            case 'wmts':\n            case 'arcgisrest':\n            case 'imagearcgisrest':\n            case 'tilearcgisrest':\n              addedLayer = encodeURIComponent(layer.dataSource.options.layer);\n              break;\n          }\n\n          const addedLayerPosition = `${addedLayer}:igoz${layer.zIndex}`;\n          let version = '';\n\n          if (layerVersion) {\n            const operator = layer.dataSource.options.url.indexOf('?') === -1 ? '?' : '&';\n            version = encodeURIComponent(`${operator}VERSION=${layerVersion}`);\n          }\n\n          linkUrl = `${linkUrl}${version}`;\n\n          if (!addedLayersByService.find(definedUrl => definedUrl.url === linkUrl)) {\n            addedLayersByService.push({\n              url: linkUrl,\n              layers: [addedLayerPosition]\n            });\n          } else {\n            addedLayersByService.forEach(service => {\n              if (service.url === linkUrl) {\n                service.layers.push(addedLayerPosition);\n              }\n            });\n          }\n        }\n      }\n\n      let addedLayersQueryParams = '';\n\n      if (addedLayersByService.length >= 1) {\n        let linkUrlKey;\n        let layersKey;\n        /*\r\n        const linkUrlKey = (typeService === 'wms') ? this.route.options.wmsUrlKey :\r\n          (typeService === 'wmts') ? this.route.options.wmtsUrlKey : '' ;\r\n        const layersKey = (typeService === 'wms') ? this.route.options.wmsLayersKey :\r\n          (typeService === 'wmts') ? this.route.options.wmtsLayersKey : '' ;\r\n        */\n\n        switch (typeService.toLowerCase()) {\n          case 'wms':\n            linkUrlKey = this.route.options.wmsUrlKey;\n            layersKey = this.route.options.wmsLayersKey;\n            break;\n\n          case 'wmts':\n            linkUrlKey = this.route.options.wmtsUrlKey;\n            layersKey = this.route.options.wmtsLayersKey;\n            break;\n\n          case 'arcgisrest':\n            linkUrlKey = this.route.options.arcgisUrlKey;\n            layersKey = this.route.options.arcgisLayersKey;\n            break;\n\n          case 'imagearcgisrest':\n            linkUrlKey = this.route.options.iarcgisUrlKey;\n            layersKey = this.route.options.iarcgisLayersKey;\n            break;\n\n          case 'tilearcgisrest':\n            linkUrlKey = this.route.options.tarcgisUrlKey;\n            layersKey = this.route.options.tarcgisLayersKey;\n            break;\n\n          default:\n            linkUrlKey = '';\n            layersKey = '';\n        }\n\n        let linkUrlQueryParams = '';\n        let layersQueryParams = '';\n        addedLayersByService.forEach(service => {\n          linkUrlQueryParams += `${service.url},`;\n          layersQueryParams += `(${service.layers.join(',')}),`;\n        });\n        linkUrlQueryParams = linkUrlQueryParams.endsWith(',') ? linkUrlQueryParams.slice(0, -1) : linkUrlQueryParams;\n        layersQueryParams = layersQueryParams.endsWith(',') ? layersQueryParams.slice(0, -1) : layersQueryParams;\n        addedLayersQueryParams = `${linkUrlKey}=${linkUrlQueryParams}&${layersKey}=${layersQueryParams}`;\n      }\n\n      return addedLayersQueryParams;\n    }\n\n  }\n\n  ShareMapService.ɵfac = function ShareMapService_Factory(t) {\n    return new (t || ShareMapService)(i0.ɵɵinject(ContextService), i0.ɵɵinject(i3.MessageService), i0.ɵɵinject(i3.RouteService, 8));\n  };\n\n  ShareMapService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ShareMapService,\n    factory: ShareMapService.ɵfac,\n    providedIn: 'root'\n  });\n  return ShareMapService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction ShareMapApiComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.userId, \"-\");\n  }\n}\n\nfunction ShareMapApiComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.form.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"igo.context.shareMap.button\"), \" \");\n  }\n}\n\nfunction ShareMapApiComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ShareMapApiComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateContextShared(ctx_r4.form.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.refreshBtn\"), \" \");\n  }\n}\n\nfunction ShareMapApiComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"mat-form-field\");\n    i0.ɵɵelement(2, \"textarea\", 15, 16);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementStart(5, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ShareMapApiComponent_div_20_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r8);\n\n      const _r6 = i0.ɵɵreference(3);\n\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.copyTextToClipboard(_r6);\n    });\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelement(7, \"mat-icon\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"div\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(4, 3, \"igo.context.shareMap.placeholderLink\"))(\"value\", ctx_r3.url);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(6, 5, \"igo.context.shareMap.copy\"));\n  }\n}\n\nlet ShareMapApiComponent = /*#__PURE__*/(() => {\n  class ShareMapApiComponent {\n    constructor(languageService, messageService, auth, shareMapService, formBuilder) {\n      this.languageService = languageService;\n      this.messageService = messageService;\n      this.auth = auth;\n      this.shareMapService = shareMapService;\n      this.formBuilder = formBuilder;\n    }\n\n    ngOnInit() {\n      this.auth.authenticate$.subscribe(auth => {\n        const decodeToken = this.auth.decodeToken();\n        this.userId = decodeToken.user ? decodeToken.user.id : undefined;\n        this.buildForm();\n      });\n    }\n\n    createUrl(values = {}) {\n      const inputs = Object.assign({}, values);\n      inputs.uri = this.userId ? `${this.userId}-${values.uri}` : values.uri;\n      this.url = this.shareMapService.getUrlWithApi(inputs);\n      this.shareMapService.createContextShared(this.map, inputs).subscribe(rep => {\n        this.idContextShared = rep.id;\n        const title = this.languageService.translate.instant('igo.context.contextManager.dialog.saveTitle');\n        const msg = this.languageService.translate.instant('igo.context.contextManager.dialog.saveMsg', {\n          value: inputs.title\n        });\n        this.messageService.success(msg, title);\n      }, err => {\n        err.error.title = this.languageService.translate.instant('igo.context.shareMap.errorTitle');\n        this.messageService.showError(err);\n      });\n    }\n\n    updateContextShared(values = {}) {\n      const inputs = Object.assign({}, values);\n      inputs.uri = this.userId ? `${this.userId}-${values.uri}` : values.uri;\n      this.shareMapService.updateContextShared(this.map, inputs, this.idContextShared).subscribe(rep => {\n        const title = this.languageService.translate.instant('igo.context.contextManager.dialog.saveTitle');\n        const msg = this.languageService.translate.instant('igo.context.contextManager.dialog.saveMsg', {\n          value: inputs.title\n        });\n        this.messageService.success(msg, title);\n      }, err => {\n        err.error.title = this.languageService.translate.instant('igo.context.shareMap.errorTitle');\n        this.messageService.showError(err);\n      });\n    }\n\n    copyTextToClipboard(textArea) {\n      const successful = Clipboard.copy(textArea);\n\n      if (successful) {\n        const translate = this.languageService.translate;\n        const title = translate.instant('igo.context.shareMap.dialog.copyTitle');\n        const msg = translate.instant('igo.context.shareMap.dialog.copyMsg');\n        this.messageService.success(msg, title);\n      }\n    }\n\n    buildForm() {\n      this.url = undefined;\n      const id = uuid();\n      let title = 'Partage ';\n      title += this.userId ? `(${this.userId}-${id})` : `(${id})`;\n      this.form = this.formBuilder.group({\n        title: [title],\n        uri: [id]\n      });\n    }\n\n  }\n\n  ShareMapApiComponent.ɵfac = function ShareMapApiComponent_Factory(t) {\n    return new (t || ShareMapApiComponent)(i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(ShareMapService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n\n  ShareMapApiComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShareMapApiComponent,\n    selectors: [[\"igo-share-map-api\"]],\n    inputs: {\n      map: \"map\"\n    },\n    decls: 21,\n    vars: 18,\n    consts: [[1, \"igo-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"igo-input-container\"], [\"matInput\", \"\", \"required\", \"\", \"formControlName\", \"title\", 3, \"placeholder\"], [\"id\", \"uriInput\", 1, \"igo-input-container\"], [\"class\", \"prefix\", 4, \"ngIf\"], [1, \"fieldWrapper\"], [\"matInput\", \"\", \"required\", \"\", \"formControlName\", \"uri\", 3, \"readonly\", \"placeholder\"], [1, \"igo-form-button-group\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"igo-input-container linkToShare\", 4, \"ngIf\"], [1, \"prefix\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"], [1, \"igo-input-container\", \"linkToShare\"], [\"matInput\", \"\", \"readonly\", \"\", \"rows\", \"3\", 1, \"textAreaWithButton\", 3, \"placeholder\", \"value\"], [\"textArea\", \"\"], [\"mat-icon-button\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", \"color\", \"primary\", 3, \"matTooltip\", \"click\"], [\"svgIcon\", \"content-copy\"]],\n    template: function ShareMapApiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ShareMapApiComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.createUrl(ctx.form.value);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"mat-form-field\");\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementStart(5, \"mat-error\");\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelementStart(9, \"mat-form-field\");\n        i0.ɵɵtemplate(10, ShareMapApiComponent_span_10_Template, 2, 1, \"span\", 4);\n        i0.ɵɵelementStart(11, \"span\", 5);\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-error\");\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 7);\n        i0.ɵɵtemplate(18, ShareMapApiComponent_button_18_Template, 3, 4, \"button\", 8);\n        i0.ɵɵtemplate(19, ShareMapApiComponent_button_19_Template, 3, 3, \"button\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, ShareMapApiComponent_div_20_Template, 9, 7, \"div\", 10);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(4, 10, \"igo.context.contextManager.form.title\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 12, \"igo.context.contextManager.form.titleRequired\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.userId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"readonly\", !ctx.userId)(\"placeholder\", i0.ɵɵpipeBind1(13, 14, \"igo.context.contextManager.form.uri\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(16, 16, \"igo.context.contextManager.form.uriRequired\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.url);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.url);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.url);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i3$1.MatFormField, i3$2.MatInput, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.FormControlName, i3$1.MatError, i7.NgIf, i5.MatButton, i6$2.MatTooltip, i9.MatIcon],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\"@charset \\\"UTF-8\\\";mat-form-field[_ngcontent-%COMP%]{width:100%}#uriInput[_ngcontent-%COMP%]   .fieldWrapper[_ngcontent-%COMP%]{display:block;overflow:hidden}#uriInput[_ngcontent-%COMP%]   .prefix[_ngcontent-%COMP%]{float:left}.linkToShare\\\\a0[_ngcontent-%COMP%] {padding:25px 5px 5px}.linkToShare\\\\a0[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{resize:none;width:100%;line-height:1.3;height:40px;overflow-y:hidden;word-wrap:normal;word-break:break-all}.linkToShare\\\\a0[_ngcontent-%COMP%]   textarea.textAreaWithButton[_ngcontent-%COMP%]{width:calc(100% - 60px)}.linkToShare\\\\a0[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{float:right;margin:-10px 0}.igo-form[_ngcontent-%COMP%]{padding:20px 5px 5px}.igo-form-button-group[_ngcontent-%COMP%]{text-align:center;padding-top:10px}\"]\n  });\n  return ShareMapApiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction ShareMapUrlComponent_h4_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.included\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.context\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.center\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.zoom\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.addedLayers\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.visibleInvisible\"));\n  }\n}\n\nfunction ShareMapUrlComponent_h4_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.excluded\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.order\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.opacity\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.filterOgc\"));\n  }\n}\n\nfunction ShareMapUrlComponent_li_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"igo.context.shareMap.filterTime\"));\n  }\n}\n\nlet ShareMapUrlComponent = /*#__PURE__*/(() => {\n  class ShareMapUrlComponent {\n    constructor(languageService, messageService, shareMapService, cdRef) {\n      this.languageService = languageService;\n      this.messageService = messageService;\n      this.shareMapService = shareMapService;\n      this.cdRef = cdRef;\n      this.publicShareOption = {\n        layerlistControls: {\n          querystring: ''\n        }\n      };\n    }\n\n    ngOnInit() {\n      this.resetUrl();\n      this.mapState$$ = combineLatest([this.map.viewController.state$, this.map.status$]).subscribe(c => {\n        this.resetUrl();\n        this.cdRef.detectChanges();\n      });\n    }\n\n    ngAfterViewInit() {\n      this.resetUrl();\n    }\n\n    ngOnDestroy() {\n      this.mapState$$.unsubscribe();\n    }\n\n    resetUrl(values = {}) {\n      this.url = this.shareMapService.getUrlWithoutApi(this.map, this.publicShareOption);\n    }\n\n    copyTextToClipboard(textArea) {\n      const successful = Clipboard.copy(textArea);\n\n      if (successful) {\n        const translate = this.languageService.translate;\n        const title = translate.instant('igo.context.shareMap.dialog.copyTitle');\n        const msg = translate.instant('igo.context.shareMap.dialog.copyMsg');\n        this.messageService.success(msg, title);\n      }\n    }\n\n  }\n\n  ShareMapUrlComponent.ɵfac = function ShareMapUrlComponent_Factory(t) {\n    return new (t || ShareMapUrlComponent)(i0.ɵɵdirectiveInject(i3.LanguageService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(ShareMapService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ShareMapUrlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShareMapUrlComponent,\n    selectors: [[\"igo-share-map-url\"]],\n    inputs: {\n      map: \"map\"\n    },\n    decls: 37,\n    vars: 40,\n    consts: [[1, \"igo-input-container\", \"linkToShare\"], [\"matInput\", \"\", \"readonly\", \"\", \"rows\", \"3\", 3, \"placeholder\", \"value\"], [\"textArea\", \"\"], [1, \"igo-form-button-group\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"svgIcon\", \"content-copy\"], [1, \"mat-typography\"], [4, \"ngIf\"]],\n    template: function ShareMapUrlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r12 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-form-field\");\n        i0.ɵɵelement(2, \"textarea\", 1, 2);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ShareMapUrlComponent_Template_button_click_6_listener() {\n          i0.ɵɵrestoreView(_r12);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.copyTextToClipboard(_r0);\n        });\n        i0.ɵɵelement(7, \"mat-icon\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"section\", 6);\n        i0.ɵɵtemplate(13, ShareMapUrlComponent_h4_13_Template, 3, 3, \"h4\", 7);\n        i0.ɵɵpipe(14, \"translate\");\n        i0.ɵɵelementStart(15, \"ul\");\n        i0.ɵɵtemplate(16, ShareMapUrlComponent_li_16_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(17, \"translate\");\n        i0.ɵɵtemplate(18, ShareMapUrlComponent_li_18_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(19, \"translate\");\n        i0.ɵɵtemplate(20, ShareMapUrlComponent_li_20_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵtemplate(22, ShareMapUrlComponent_li_22_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵtemplate(24, ShareMapUrlComponent_li_24_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(25, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, ShareMapUrlComponent_h4_26_Template, 3, 3, \"h4\", 7);\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵelementStart(28, \"ul\");\n        i0.ɵɵtemplate(29, ShareMapUrlComponent_li_29_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵtemplate(31, ShareMapUrlComponent_li_31_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(32, \"translate\");\n        i0.ɵɵtemplate(33, ShareMapUrlComponent_li_33_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(34, \"translate\");\n        i0.ɵɵtemplate(35, ShareMapUrlComponent_li_35_Template, 3, 3, \"li\", 7);\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(4, 14, \"igo.context.shareMap.placeholderLink\"))(\"value\", ctx.url);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 16, \"igo.context.shareMap.copy\"), \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(14, 18, \"igo.context.shareMap.included\") !== \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(17, 20, \"igo.context.shareMap.context\") !== \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(19, 22, \"igo.context.shareMap.center\") !== \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(21, 24, \"igo.context.shareMap.zoom\") !== \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(23, 26, \"igo.context.shareMap.addedLayers\") !== \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(25, 28, \"igo.context.shareMap.visibleInvisible\") !== \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(27, 30, \"igo.context.shareMap.excluded\") !== \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(30, 32, \"igo.context.shareMap.order\") !== \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(32, 34, \"igo.context.shareMap.opacity\") !== \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(34, 36, \"igo.context.shareMap.filterOgc\") !== \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(36, 38, \"igo.context.shareMap.filterTime\") !== \"\");\n      }\n    },\n    directives: [i3$1.MatFormField, i3$2.MatInput, i5.MatButton, i9.MatIcon, i7.NgIf],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\"@charset \\\"UTF-8\\\";mat-form-field[_ngcontent-%COMP%]{width:100%}.linkToShare\\\\a0[_ngcontent-%COMP%] {padding:25px 5px 5px}.linkToShare\\\\a0[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{resize:none;width:100%;line-height:1.3;height:40px;overflow-y:hidden;word-wrap:normal;word-break:break-all}.linkToShare\\\\a0[_ngcontent-%COMP%]   textarea.textAreaWithButton[_ngcontent-%COMP%]{width:calc(100% - 60px)}.linkToShare\\\\a0[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{float:right;margin:-10px 0}.igo-form-button-group[_ngcontent-%COMP%]{text-align:center;padding-top:10px}\"]\n  });\n  return ShareMapUrlComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction ShareMapComponent_mat_tab_group_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-tab-group\");\n    i0.ɵɵelementStart(1, \"mat-tab\", 2);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"igo-share-map-api\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-tab\", 2);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelement(6, \"igo-share-map-url\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(2, 4, \"igo.context.shareMap.shareWithApi\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"map\", ctx_r0.map);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", i0.ɵɵpipeBind1(5, 6, \"igo.context.shareMap.shareWithUrl\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"map\", ctx_r0.map);\n  }\n}\n\nfunction ShareMapComponent_igo_share_map_url_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-share-map-url\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"map\", ctx_r1.map);\n  }\n}\n\nlet ShareMapComponent = /*#__PURE__*/(() => {\n  class ShareMapComponent {\n    constructor(config) {\n      this.config = config;\n      this.hasApi = false;\n      this.hasApi = this.config.getConfig('context.url') ? true : false;\n    }\n\n  }\n\n  ShareMapComponent.ɵfac = function ShareMapComponent_Factory(t) {\n    return new (t || ShareMapComponent)(i0.ɵɵdirectiveInject(i3.ConfigService));\n  };\n\n  ShareMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShareMapComponent,\n    selectors: [[\"igo-share-map\"]],\n    inputs: {\n      map: \"map\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"map\", 4, \"ngIf\"], [3, \"label\"], [3, \"map\"]],\n    template: function ShareMapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ShareMapComponent_mat_tab_group_0_Template, 7, 8, \"mat-tab-group\", 0);\n        i0.ɵɵtemplate(1, ShareMapComponent_igo_share_map_url_1_Template, 1, 1, \"igo-share-map-url\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.hasApi);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasApi);\n      }\n    },\n    directives: [i7.NgIf, i3$4.MatTabGroup, i3$4.MatTab, ShareMapApiComponent, ShareMapUrlComponent],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\"\"]\n  });\n  return ShareMapComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoShareMapModule = /*#__PURE__*/(() => {\n  class IgoShareMapModule {\n    static forRoot() {\n      return {\n        ngModule: IgoShareMapModule\n      };\n    }\n\n  }\n\n  IgoShareMapModule.ɵfac = function IgoShareMapModule_Factory(t) {\n    return new (t || IgoShareMapModule)();\n  };\n\n  IgoShareMapModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoShareMapModule\n  });\n  IgoShareMapModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, MatIconModule, MatTooltipModule, MatTabsModule, MatFormFieldModule, MatInputModule, MatButtonModule, IgoLanguageModule]]\n  });\n  return IgoShareMapModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoShareMapModule, {\n    declarations: [ShareMapComponent, ShareMapUrlComponent, ShareMapApiComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, MatIconModule, MatTooltipModule, MatTabsModule, MatFormFieldModule, MatInputModule, MatButtonModule, IgoLanguageModule],\n    exports: [ShareMapComponent, ShareMapUrlComponent, ShareMapApiComponent]\n  });\n})();\n\nfunction SidenavComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 1, \"igo.context.sidenav.goBack\"));\n  }\n}\n\nfunction SidenavComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"mat-icon\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"matTooltip\", i0.ɵɵpipeBind1(1, 1, \"igo.context.sidenav.mainMenu\"));\n  }\n}\n\nfunction SidenavComponent_igo_panel_11_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function SidenavComponent_igo_panel_11_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.zoomToFeatureExtent();\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 20);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SidenavComponent_igo_panel_11_igo_feature_details_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"igo-feature-details\", 21);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"feature\", ctx_r6.feature);\n  }\n}\n\nconst _c0 = function () {\n  return [\"collapsed\", \"initial\"];\n};\n\nfunction SidenavComponent_igo_panel_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"igo-panel\", 6);\n    i0.ɵɵelementStart(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function SidenavComponent_igo_panel_11_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.toggleTopPanel();\n    });\n    i0.ɵɵelement(2, \"mat-icon\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, SidenavComponent_igo_panel_11_button_3_Template, 2, 0, \"button\", 17);\n    i0.ɵɵtemplate(4, SidenavComponent_igo_panel_11_igo_feature_details_4_Template, 1, 1, \"igo-feature-details\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(4);\n\n    i0.ɵɵproperty(\"title\", ctx_r4.featureTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", i0.ɵɵpureFunction0(4, _c0).indexOf(_r1.state) >= 0 ? \"arrow_downward\" : \"arrow_upward\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.feature.geometry);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction0(5, _c0).indexOf(_r1.state) >= 0);\n  }\n}\n\nlet SidenavComponent = /*#__PURE__*/(() => {\n  class SidenavComponent {\n    constructor(titleService) {\n      this.titleService = titleService;\n      this.format = new GeoJSON();\n      this._title = this.titleService.getTitle();\n      this.topPanelState = 'initial';\n    }\n\n    get map() {\n      return this._map;\n    }\n\n    set map(value) {\n      this._map = value;\n    }\n\n    get opened() {\n      return this._opened;\n    }\n\n    set opened(value) {\n      this._opened = value;\n    }\n\n    get feature() {\n      return this._feature;\n    }\n\n    set feature(value) {\n      this._feature = value;\n    }\n\n    get tool() {\n      return this._tool;\n    }\n\n    set tool(value) {\n      this._tool = value;\n    }\n\n    get media() {\n      return this._media;\n    }\n\n    set media(value) {\n      this._media = value;\n    }\n\n    get title() {\n      return this._title;\n    }\n\n    set title(value) {\n      if (value) {\n        this._title = value;\n      }\n    }\n\n    get featureTitle() {\n      return this.feature ? getEntityTitle(this.feature) : undefined;\n    }\n\n    zoomToFeatureExtent() {\n      if (this.feature.geometry) {\n        const olFeature = this.format.readFeature(this.feature, {\n          dataProjection: this.feature.projection,\n          featureProjection: this.map.projection\n        });\n        moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\n      }\n    }\n\n    toggleTopPanel() {\n      if (this.topPanelState === 'initial') {\n        this.topPanelState = 'expanded';\n      } else {\n        this.topPanelState = 'initial';\n      }\n    }\n\n  }\n\n  SidenavComponent.ɵfac = function SidenavComponent_Factory(t) {\n    return new (t || SidenavComponent)(i0.ɵɵdirectiveInject(i1$3.Title));\n  };\n\n  SidenavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SidenavComponent,\n    selectors: [[\"igo-sidenav\"]],\n    inputs: {\n      map: \"map\",\n      opened: \"opened\",\n      feature: \"feature\",\n      tool: \"tool\",\n      media: \"media\",\n      title: \"title\"\n    },\n    decls: 12,\n    vars: 8,\n    consts: [[\"igoSidenavShim\", \"\", \"mode\", \"side\", 3, \"opened\"], [\"sidenav\", \"\"], [1, \"igo-sidenav-content\"], [\"initial\", \"50%\", \"initialMobile\", \"100%\", \"expanded\", \"calc(100% - 58px)\", 3, \"state\"], [\"topPanel\", \"\"], [1, \"igo-content\"], [3, \"title\"], [\"mat-icon-button\", \"\", \"panelLeftButton\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"panelRightButton\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\", 4, \"ngIf\"], [\"igoFlexibleFill\", \"\", 1, \"igo-content\"], [3, \"title\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"panelLeftButton\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\"], [\"svgIcon\", \"arrow-back\"], [\"mat-icon-button\", \"\", \"panelRightButton\", \"\", \"tooltip-position\", \"below\", \"matTooltipShowDelay\", \"500\", 3, \"matTooltip\"], [\"svgIcon\", \"menu\"], [\"mat-icon-button\", \"\", \"panelLeftButton\", \"\", 1, \"igo-icon-button\", 3, \"click\"], [3, \"svgIcon\"], [\"mat-icon-button\", \"\", \"panelRightButton\", \"\", \"class\", \"igo-icon-button\", 3, \"click\", 4, \"ngIf\"], [3, \"feature\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"panelRightButton\", \"\", 1, \"igo-icon-button\", 3, \"click\"], [\"svgIcon\", \"zoom-in\"], [3, \"feature\"]],\n    template: function SidenavComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-sidenav\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"igo-flexible\", 3, 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"igo-panel\", 6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵtemplate(8, SidenavComponent_button_8_Template, 3, 3, \"button\", 7);\n        i0.ɵɵtemplate(9, SidenavComponent_button_9_Template, 3, 3, \"button\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵtemplate(11, SidenavComponent_igo_panel_11_Template, 5, 6, \"igo-panel\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"opened\", ctx.opened);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"state\", ctx.topPanelState);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"title\", ctx.tool ? i0.ɵɵpipeBind1(7, 6, ctx.tool.title) : ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.tool);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.tool);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.feature && ctx.media !== \"mobile\");\n      }\n    },\n    directives: [i2$1.MatSidenav, i5$1.FlexibleComponent, i5$1.PanelComponent, i7.NgIf, i5.MatButton, i6$2.MatTooltip, i9.MatIcon, i1$1.FeatureDetailsComponent],\n    pipes: [i6$1.TranslatePipe],\n    styles: [\"[_nghost-%COMP%]     .igo-flexible-fill .igo-container, .igo-sidenav-content[_ngcontent-%COMP%]   .igo-flexible-fill[_ngcontent-%COMP%]   .igo-container[_ngcontent-%COMP%]{box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}[_nghost-%COMP%]     .igo-flexible-fill .igo-container, .igo-sidenav-content[_ngcontent-%COMP%]   .igo-flexible-fill[_ngcontent-%COMP%]   .igo-container[_ngcontent-%COMP%]{border-top-width:1px;border-top-style:solid;border-top-color:#0003}mat-sidenav[_ngcontent-%COMP%]{-o-box-shadow:2px 0px 2px 0px #dddddd;box-shadow:2px 0 2px #ddd}[_nghost-%COMP%]{background-color:#fff}[_nghost-%COMP%]     mat-sidenav{z-index:3!important}mat-sidenav[_ngcontent-%COMP%]{width:400px}@media only screen and (orientation:portrait) and (max-width: 599px),only screen and (orientation:landscape) and (max-width: 959px){mat-sidenav[_ngcontent-%COMP%]{width:calc(100% - 40px - 5px)}}.igo-sidenav-content[_ngcontent-%COMP%]{margin-top:50px;height:calc(100% - 50px)}igo-feature-details[_ngcontent-%COMP%]     table{width:100%}\"]\n  });\n  return SidenavComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IgoSidenavModule = /*#__PURE__*/(() => {\n  class IgoSidenavModule {\n    static forRoot() {\n      return {\n        ngModule: IgoSidenavModule\n      };\n    }\n\n  }\n\n  IgoSidenavModule.ɵfac = function IgoSidenavModule_Factory(t) {\n    return new (t || IgoSidenavModule)();\n  };\n\n  IgoSidenavModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoSidenavModule\n  });\n  IgoSidenavModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatIconModule, MatButtonModule, MatSidenavModule, MatTooltipModule, IgoLanguageModule, IgoPanelModule, IgoFlexibleModule, IgoFeatureModule, IgoContextManagerModule]]\n  });\n  return IgoSidenavModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoSidenavModule, {\n    declarations: [SidenavComponent],\n    imports: [CommonModule, MatIconModule, MatButtonModule, MatSidenavModule, MatTooltipModule, IgoLanguageModule, IgoPanelModule, IgoFlexibleModule, IgoFeatureModule, IgoContextManagerModule],\n    exports: [SidenavComponent]\n  });\n})();\n\nlet IgoContextModule = /*#__PURE__*/(() => {\n  class IgoContextModule {\n    static forRoot() {\n      return {\n        ngModule: IgoContextModule,\n        providers: []\n      };\n    }\n\n  }\n\n  IgoContextModule.ɵfac = function IgoContextModule_Factory(t) {\n    return new (t || IgoContextModule)();\n  };\n\n  IgoContextModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: IgoContextModule\n  });\n  IgoContextModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[MatInputModule, MatFormFieldModule, MatMenuModule], IgoContextImportExportModule, IgoContextManagerModule, IgoContextMapButtonModule, IgoShareMapModule, IgoSidenavModule]\n  });\n  return IgoContextModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(IgoContextModule, {\n    imports: [MatInputModule, MatFormFieldModule, MatMenuModule],\n    exports: [IgoContextImportExportModule, IgoContextManagerModule, IgoContextMapButtonModule, IgoShareMapModule, IgoSidenavModule]\n  });\n})();\n/*\r\n * Public API Surface of context\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { BookmarkButtonComponent, BookmarkDialogComponent, ContextEditBindingDirective, ContextEditComponent, ContextExportService, ContextFormComponent, ContextImportExportComponent, ContextImportService, ContextItemComponent, ContextListBindingDirective, ContextListComponent, ContextPermissionsBindingDirective, ContextPermissionsComponent, ContextService, ExportError, ExportInvalidFileError, ExportNothingToExportError, IgoContextImportExportModule, IgoContextManagerModule, IgoContextMapButtonModule, IgoContextModule, IgoShareMapModule, IgoSidenavModule, ImportError, ImportInvalidFileError, ImportNothingToImportError, ImportSRSError, ImportSizeError, ImportUnreadableFileError, LayerContextDirective, MapContextDirective, PoiButtonComponent, PoiDialogComponent, PoiService, Scope, ShareMapApiComponent, ShareMapComponent, ShareMapService, ShareMapUrlComponent, SidenavComponent, TypePermission, UserButtonComponent, UserDialogComponent, addContextToContextList, addImportedFeaturesStyledToMap, addImportedFeaturesToMap, computeLayerTitleFromFile, getFileExtension, handleFileExportError, handleFileExportSuccess, handleFileImportError, handleFileImportSuccess, handleInvalidFileImportError, handleNothingToExportError, handleNothingToImportError, handleSizeFileImportError, handleUnreadbleFileImportError };","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\shared\\context-export.errors.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\shared\\context-export.utils.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\shared\\context-import.utils.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\shared\\context-import.errors.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\shared\\context-import.service.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\shared\\context-export.service.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\shared\\context.enum.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\shared\\context.service.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\context-import-export\\context-import-export.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\context-import-export\\context-import-export.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-import-export\\context-import-export.module.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\shared\\map-context.directive.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\shared\\layer-context.directive.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-list\\context-list.enum.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\bookmark-button\\bookmark-dialog.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\bookmark-button\\bookmark-dialog.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-item\\context-item.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-item\\context-item.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-list\\context-list.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-list\\context-list.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-list\\context-list-binding.directive.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-form\\context-form.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-form\\context-form.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-edit\\context-edit.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-edit\\context-edit.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-edit\\context-edit-binding.directive.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-permissions\\context-permissions.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-permissions\\context-permissions.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-permissions\\context-permissions-binding.directive.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\bookmark-button\\bookmark-button.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\bookmark-button\\bookmark-button.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\poi-button\\poi-dialog.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\poi-button\\poi-dialog.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\poi-button\\shared\\poi.service.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\poi-button\\poi-button.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\poi-button\\poi-button.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\user-button\\user-dialog.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\user-button\\user-dialog.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\user-button\\user-button.animation.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\user-button\\user-button.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\user-button\\user-button.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-map-button\\context-map-button.module.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context-manager\\context-manager.module.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\share-map\\shared\\share-map.service.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\share-map\\share-map\\share-map-api.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\share-map\\share-map\\share-map-api.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\share-map\\share-map\\share-map-url.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\share-map\\share-map\\share-map-url.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\share-map\\share-map\\share-map.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\share-map\\share-map\\share-map.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\share-map\\share-map.module.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\sidenav\\sidenav.component.html","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\sidenav\\sidenav.component.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\sidenav\\sidenav.module.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\lib\\context.module.ts","C:\\Users\\admin\\Downloads\\angular\\igo2-lib-master\\packages\\context\\src\\public_api.ts"],"names":["olFormatGeoJSON"],"mappings":"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","sourcesContent":["export class ExportError extends Error {}\n\nexport class ExportInvalidFileError extends ExportError {\n  constructor() {\n    super('Invalid context');\n    Object.setPrototypeOf(this, ExportInvalidFileError.prototype);\n  }\n}\n\nexport class ExportNothingToExportError extends ExportError {\n  constructor() {\n    super('Nothing to export');\n    Object.setPrototypeOf(this, ExportNothingToExportError.prototype);\n  }\n}\n","import { MessageService, LanguageService } from '@igo2/core';\nimport { ExportNothingToExportError } from './context-export.errors';\n\nexport function handleFileExportError(\n    error: Error,\n    messageService: MessageService,\n    languageService: LanguageService\n  ) {\n    if (error instanceof ExportNothingToExportError) {\n      this.handleNothingToExportError(messageService, languageService);\n      return;\n    }\n    const translate = languageService.translate;\n    const title = translate.instant('igo.context.contextImportExport.export.failed.title');\n    const message = translate.instant('igo.context.contextImportExport.export.failed.text');\n    messageService.error(message, title);\n}\n\nexport function handleFileExportSuccess(\n    messageService: MessageService,\n    languageService: LanguageService\n  ) {\n    const translate = languageService.translate;\n    const title = translate.instant('igo.context.contextImportExport.export.success.title');\n    const message = translate.instant('igo.context.contextImportExport.export.success.text');\n    messageService.success(message, title);\n}\n\nexport function handleNothingToExportError(\n    messageService: MessageService,\n    languageService: LanguageService\n  ) {\n    const translate = languageService.translate;\n    const title = translate.instant('igo.context.contextImportExport.export.nothing.title');\n    const message = translate.instant('igo.context.contextImportExport.export.nothing.text');\n    messageService.error(message, title);\n}\n","import * as olStyle from 'ol/style';\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\n\nimport {\n  FeatureDataSource,\n  FeatureDataSourceOptions,\n  IgoMap,\n  VectorLayer,\n  QueryableDataSourceOptions,\n  StyleService,\n  StyleListService,\n  StyleByAttribute,\n  ClusterParam,\n  ClusterDataSourceOptions,\n  ClusterDataSource\n} from '@igo2/geo';\nimport { MessageService, LanguageService } from '@igo2/core';\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\nimport { ContextService } from '../../context-manager/shared/context.service';\nimport OlFeature from 'ol/Feature';\n\nexport function handleFileImportSuccess(\n  file: File,\n  context: DetailedContext,\n  messageService: MessageService,\n  languageService: LanguageService,\n  contextService: ContextService\n) {\n  if (Object.keys(context).length <= 0) {\n    handleNothingToImportError(file, messageService, languageService);\n    return;\n  }\n\n  const contextTitle = computeLayerTitleFromFile(file);\n\n  addContextToContextList(context, contextTitle, contextService);\n\n  const translate = languageService.translate;\n  const messageTitle = translate.instant(\n    'igo.context.contextImportExport.import.success.title'\n  );\n  const message = translate.instant(\n    'igo.context.contextImportExport.import.success.text',\n    {\n      value: contextTitle\n    }\n  );\n  messageService.success(message, messageTitle);\n}\n\nexport function handleFileImportError(\n  file: File,\n  error: Error,\n  messageService: MessageService,\n  languageService: LanguageService,\n  sizeMb?: number\n) {\n  sizeMb = sizeMb ? sizeMb : 30;\n  const errMapping = {\n    'Invalid file': handleInvalidFileImportError,\n    'File is too large': handleSizeFileImportError,\n    'Failed to read file': handleUnreadbleFileImportError\n  };\n  errMapping[error.message](\n    file,\n    error,\n    messageService,\n    languageService,\n    sizeMb\n  );\n}\n\nexport function handleInvalidFileImportError(\n  file: File,\n  error: Error,\n  messageService: MessageService,\n  languageService: LanguageService\n) {\n  const translate = languageService.translate;\n  const title = translate.instant(\n    'igo.context.contextImportExport.import.invalid.title'\n  );\n  const message = translate.instant(\n    'igo.context.contextImportExport.import.invalid.text',\n    {\n      value: file.name,\n      mimeType: file.type\n    }\n  );\n  messageService.error(message, title);\n}\n\nexport function handleSizeFileImportError(\n  file: File,\n  error: Error,\n  messageService: MessageService,\n  languageService: LanguageService,\n  sizeMb: number\n) {\n  const translate = languageService.translate;\n  const title = translate.instant(\n    'igo.context.contextImportExport.import.tooLarge.title'\n  );\n  const message = translate.instant(\n    'igo.context.contextImportExport.import.tooLarge.text',\n    {\n      value: file.name,\n      size: sizeMb\n    }\n  );\n  messageService.error(message, title);\n}\n\nexport function handleUnreadbleFileImportError(\n  file: File,\n  error: Error,\n  messageService: MessageService,\n  languageService: LanguageService\n) {\n  const translate = languageService.translate;\n  const title = translate.instant(\n    'igo.context.contextImportExport.import.unreadable.title'\n  );\n  const message = translate.instant(\n    'igo.context.contextImportExport.import.unreadable.text',\n    {\n      value: file.name\n    }\n  );\n  messageService.error(message, title);\n}\n\nexport function handleNothingToImportError(\n  file: File,\n  messageService: MessageService,\n  languageService: LanguageService\n) {\n  const translate = languageService.translate;\n  const title = translate.instant(\n    'igo.context.contextImportExport.import.empty.title'\n  );\n  const message = translate.instant(\n    'igo.context.contextImportExport.import.empty.text',\n    {\n      value: file.name\n    }\n  );\n  messageService.error(message, title);\n}\n\nexport function addContextToContextList(\n  context: DetailedContext,\n  contextTitle: string,\n  contextService: ContextService\n) {\n  context.title = contextTitle;\n  context.imported = true;\n  contextService.contexts$.value.ours.unshift(context);\n  contextService.contexts$.next(contextService.contexts$.value);\n  contextService.importedContext.unshift(context);\n  contextService.loadContext(context.uri);\n}\n\nexport function getFileExtension(file: File): string {\n  return file.name.split('.').pop().toLowerCase();\n}\n\nexport function computeLayerTitleFromFile(file: File): string {\n  return file.name.substr(0, file.name.lastIndexOf('.'));\n}\n\nexport function addImportedFeaturesToMap(\n  olFeatures: OlFeature<OlGeometry>[],\n  map: IgoMap,\n  layerTitle: string\n): VectorLayer {\n  const r = Math.floor(Math.random() * 255);\n  const g = Math.floor(Math.random() * 255);\n  const b = Math.floor(Math.random() * 255);\n  const stroke = new olStyle.Stroke({\n    color: [r, g, b, 1],\n    width: 2\n  });\n\n  const fill = new olStyle.Fill({\n    color: [r, g, b, 0.4]\n  });\n  const sourceOptions: FeatureDataSourceOptions & QueryableDataSourceOptions = {\n    type: 'vector',\n    queryable: true\n  };\n  const source = new FeatureDataSource(sourceOptions);\n  source.ol.addFeatures(olFeatures);\n  const layer = new VectorLayer({\n    title: layerTitle,\n    source,\n    style: new olStyle.Style({\n      stroke,\n      fill,\n      image: new olStyle.Circle({\n        radius: 5,\n        stroke,\n        fill\n      })\n    })\n  });\n  map.addLayer(layer);\n\n  return layer;\n}\n\nexport function addImportedFeaturesStyledToMap(\n  olFeatures: OlFeature<OlGeometry>[],\n  map: IgoMap,\n  layerTitle: string,\n  styleListService: StyleListService,\n  styleService: StyleService\n): VectorLayer {\n  let style;\n  let distance: number;\n\n  if (\n    styleListService.getStyleList(layerTitle.toString() + '.styleByAttribute')\n  ) {\n    const styleByAttribute: StyleByAttribute = styleListService.getStyleList(\n      layerTitle.toString() + '.styleByAttribute'\n    );\n\n    style = (feature) => {\n      return styleService.createStyleByAttribute(feature, styleByAttribute);\n    };\n  } else if (\n    styleListService.getStyleList(layerTitle.toString() + '.clusterStyle')\n  ) {\n    const clusterParam: ClusterParam = styleListService.getStyleList(\n      layerTitle.toString() + '.clusterParam'\n    );\n    distance = styleListService.getStyleList(\n      layerTitle.toString() + '.distance'\n    );\n\n    const baseStyle = styleService.createStyle(\n      styleListService.getStyleList(layerTitle.toString() + '.clusterStyle')\n    );\n\n    style = (feature) => {\n      return styleService.createClusterStyle(feature, clusterParam, baseStyle);\n    };\n  } else if (styleListService.getStyleList(layerTitle.toString() + '.style')) {\n    style = styleService.createStyle(\n      styleListService.getStyleList(layerTitle.toString() + '.style')\n    );\n  } else {\n    style = styleService.createStyle(\n      styleListService.getStyleList('default.style')\n    );\n  }\n  let source;\n\n  if (styleListService.getStyleList(layerTitle.toString() + '.clusterStyle')) {\n    const sourceOptions: ClusterDataSourceOptions &\n      QueryableDataSourceOptions = {\n      distance,\n      type: 'cluster',\n      queryable: true\n    };\n    source = new ClusterDataSource(sourceOptions);\n    source.ol.source.addFeatures(olFeatures);\n  } else {\n    const sourceOptions: FeatureDataSourceOptions &\n      QueryableDataSourceOptions = {\n      type: 'vector',\n      queryable: true\n    };\n    source = new FeatureDataSource(sourceOptions);\n    source.ol.addFeatures(olFeatures);\n  }\n\n  const layer = new VectorLayer({\n    title: layerTitle,\n    source,\n    style\n  });\n  map.addLayer(layer);\n\n  return layer;\n}\n","export class ImportError extends Error {}\n\nexport class ImportInvalidFileError extends ImportError {\n  constructor() {\n    super('Invalid file');\n    Object.setPrototypeOf(this, ImportInvalidFileError.prototype);\n  }\n}\n\nexport class ImportUnreadableFileError extends ImportError {\n  constructor() {\n      super('Failed to read file');\n      Object.setPrototypeOf(this, ImportUnreadableFileError.prototype);\n  }\n}\n\nexport class ImportNothingToImportError extends ImportError {\n  constructor() {\n      super('Nothing to import');\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\n  }\n}\n\nexport class ImportSizeError extends ImportError {\n  constructor() {\n      super('File is too large');\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\n  }\n}\n\nexport class ImportSRSError extends ImportError {\n  constructor() {\n      super('Invalid SRS definition');\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { ConfigService } from '@igo2/core';\n\nimport {\n  ImportInvalidFileError,\n  ImportUnreadableFileError,\n  ImportSizeError\n} from './context-import.errors';\nimport { getFileExtension } from './context-import.utils';\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContextImportService {\n  static allowedMimeTypes = ['application/json'];\n\n  static allowedExtensions = 'json';\n\n  private clientSideFileSizeMax: number;\n\n  constructor(private config: ConfigService) {\n    const configFileSizeMb = this.config.getConfig(\n      'importExport.clientSideFileSizeMaxMb'\n    );\n    this.clientSideFileSizeMax =\n      (configFileSizeMb ? configFileSizeMb : 30) * Math.pow(1024, 2);\n  }\n\n  import(file: File): Observable<DetailedContext> {\n    return this.importAsync(file);\n  }\n\n  private getFileImporter(\n    file: File\n  ): (\n    file: File,\n    observer: Observer<DetailedContext>,\n    projectionIn: string,\n    projectionOut: string\n  ) => void {\n    const extension = getFileExtension(file);\n    const mimeType = file.type;\n    const allowedMimeTypes = [...ContextImportService.allowedMimeTypes];\n    const allowedExtensions = ContextImportService.allowedExtensions;\n\n    if (\n      allowedMimeTypes.indexOf(mimeType) < 0 &&\n      allowedExtensions.indexOf(extension) < 0\n    ) {\n      return undefined;\n    } else if (\n      mimeType === 'application/json' ||\n      extension === ContextImportService.allowedExtensions\n    ) {\n      return this.importFile;\n    }\n    return undefined;\n  }\n\n  private importAsync(file: File): Observable<DetailedContext> {\n    const doImport = (observer: Observer<DetailedContext>) => {\n      if (file.size >= this.clientSideFileSizeMax) {\n        observer.error(new ImportSizeError());\n        return;\n      }\n      const importer = this.getFileImporter(file);\n      if (importer === undefined) {\n        observer.error(new ImportInvalidFileError());\n        return;\n      }\n\n      importer.call(this, file, observer);\n    };\n\n    return new Observable(doImport);\n  }\n\n  private importFile(file: File, observer: Observer<DetailedContext>) {\n    const reader = new FileReader();\n\n    reader.onload = (event: any) => {\n      try {\n        const context = this.parseContextFromFile(file, event.target.result);\n        observer.next(context);\n      } catch (e) {\n        observer.error(new ImportUnreadableFileError());\n      }\n\n      observer.complete();\n    };\n\n    reader.onerror = (evt) => {\n      observer.error(new ImportUnreadableFileError());\n    };\n\n    reader.readAsText(file, 'UTF-8');\n  }\n\n  private parseContextFromFile(file: File, data: string): DetailedContext {\n    const context: DetailedContext = JSON.parse(data);\n    return context;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { downloadContent } from '@igo2/utils';\n\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\nimport { ExportNothingToExportError } from './context-export.errors';\nimport { Observer, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContextExportService {\n\n  export(res: DetailedContext): Observable<void> {\n    return this.exportAsync(res);\n  }\n\n  protected exportAsync(res: DetailedContext): Observable<void> {\n    const doExport = (observer: Observer<void>) => {\n        const nothingToExport = this.nothingToExport(res);\n        if (nothingToExport === true) {\n            observer.error(new ExportNothingToExportError());\n            return;\n        }\n        const contextJSON = JSON.stringify(res);\n        downloadContent(contextJSON, 'text/json;charset=utf-8', `${res.uri}.json`);\n        observer.complete();\n    };\n    return new Observable(doExport);\n  }\n\n  protected nothingToExport(res: DetailedContext): boolean {\n    if (res.map === undefined) {\n      return true;\n    }\n    return false;\n  }\n}\n","export enum TypePermission {\n  null,\n  read,\n  write\n}\n\nexport enum Scope {\n  public,\n  protected,\n  private\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport {\n  map,\n  tap,\n  catchError,\n  debounceTime,\n  mergeMap,\n  first,\n  skip\n} from 'rxjs/operators';\n\nimport olPoint from 'ol/geom/Point';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Cluster from 'ol/source/Cluster';\nimport olVectorSource from 'ol/source/Vector';\n\nimport { Tool } from '@igo2/common';\nimport { uuid, ObjectUtils } from '@igo2/utils';\nimport {\n  ConfigService,\n  RouteService,\n  Message,\n  MessageService,\n  LanguageService\n} from '@igo2/core';\n\nimport { AuthService } from '@igo2/auth';\nimport type { IgoMap, Layer } from '@igo2/geo';\n\nimport { TypePermission } from './context.enum';\nimport {\n  ContextsList,\n  ContextServiceOptions,\n  Context,\n  DetailedContext,\n  ContextMapView,\n  ContextPermission,\n  ContextProfils\n} from './context.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContextService {\n  public context$ = new BehaviorSubject<DetailedContext>(undefined);\n  public contexts$ = new BehaviorSubject<ContextsList>({ ours: [] });\n  public defaultContextId$ = new BehaviorSubject<string>(undefined);\n  public editedContext$ = new BehaviorSubject<DetailedContext>(undefined);\n  public importedContext: Array<DetailedContext> = [];\n  public toolsChanged$ = new Subject<DetailedContext>();\n  private mapViewFromRoute: ContextMapView = {};\n  private options: ContextServiceOptions;\n  private baseUrl: string;\n\n  // Until the ContextService is completely refactored, this is needed\n  // to track the current tools\n  private tools: Tool[];\n  private toolbar: string[];\n\n  get defaultContextUri(): string {\n    return this._defaultContextUri || this.options.defaultContextUri;\n  }\n  set defaultContextUri(uri: string) {\n    this._defaultContextUri = uri;\n  }\n  private _defaultContextUri: string;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private languageService: LanguageService,\n    private config: ConfigService,\n    private messageService: MessageService,\n    @Optional() private route: RouteService\n  ) {\n    this.options = Object.assign(\n      {\n        basePath: 'contexts',\n        contextListFile: '_contexts.json',\n        defaultContextUri: '_default'\n      },\n      this.config.getConfig('context')\n    );\n\n    this.baseUrl = this.options.url;\n\n    this.readParamsFromRoute();\n\n    if (this.authService.hasAuthService) {\n      this.authService.logged$.subscribe((logged) => {\n        if (logged) {\n          this.contexts$.pipe(skip(1), first()).subscribe((c) => {\n            this.handleContextsChange();\n          });\n          this.loadContexts();\n        }\n      });\n    } else {\n      this.loadContexts();\n      this.handleContextsChange(false);\n    }\n  }\n\n  get(permissions?: string[], hidden?: boolean): Observable<ContextsList> {\n    let url = this.baseUrl + '/contexts';\n    if (permissions && this.authService.authenticated) {\n      url += '?permission=' + permissions.join();\n      if (hidden) {\n        url += '&hidden=true';\n      }\n    }\n    return this.http.get<ContextsList>(url);\n  }\n\n  getById(id: string): Observable<Context> {\n    const url = this.baseUrl + '/contexts/' + id;\n    return this.http.get<Context>(url);\n  }\n\n  getDetails(id: string): Observable<DetailedContext> {\n    const url = `${this.baseUrl}/contexts/${id}/details`;\n    return this.http.get<DetailedContext>(url).pipe(\n      catchError((res) => {\n        this.handleError(res, id);\n        throw res;\n      })\n    );\n  }\n\n  getDefault(): Observable<DetailedContext> {\n    const url = this.baseUrl + '/contexts/default';\n    return this.http.get<DetailedContext>(url).pipe(\n      tap((context) => {\n        this.defaultContextId$.next(context.id);\n      })\n    );\n  }\n\n  getProfilByUser(): Observable<ContextProfils[]> {\n    if (this.baseUrl) {\n      const url = this.baseUrl + '/profils?';\n      return this.http.get<ContextProfils[]>(url);\n    }\n    return of([]);\n  }\n\n  setDefault(id: string): Observable<any> {\n    const url = this.baseUrl + '/contexts/default';\n    return this.http.post(url, { defaultContextId: id });\n  }\n\n  hideContext(id: string) {\n    const url = this.baseUrl + '/contexts/' + id + '/hide';\n    return this.http.post(url, {});\n  }\n\n  showContext(id: string) {\n    const url = this.baseUrl + '/contexts/' + id + '/show';\n    return this.http.post(url, {});\n  }\n\n  delete(id: string, imported = false): Observable<void> {\n    const contexts: ContextsList = { ours: [] };\n    Object.keys(this.contexts$.value).forEach(\n      (key) =>\n        (contexts[key] = this.contexts$.value[key].filter((c) => c.id !== id))\n    );\n\n    if (imported) {\n      this.importedContext = this.importedContext.filter((c) => c.id !== id);\n      return of(this.contexts$.next(contexts));\n    }\n\n    const url = this.baseUrl + '/contexts/' + id;\n    return this.http.delete<void>(url).pipe(\n      tap((res) => {\n        this.contexts$.next(contexts);\n      })\n    );\n  }\n\n  create(context: DetailedContext): Observable<Context> {\n    const url = this.baseUrl + '/contexts';\n    return this.http.post<Context>(url, context).pipe(\n      map((contextCreated) => {\n        if (this.authService.authenticated) {\n          contextCreated.permission = TypePermission[TypePermission.write];\n        } else {\n          contextCreated.permission = TypePermission[TypePermission.read];\n        }\n        this.contexts$.value.ours.unshift(contextCreated);\n        this.contexts$.next(this.contexts$.value);\n        return contextCreated;\n      })\n    );\n  }\n\n  clone(id: string, properties = {}): Observable<Context> {\n    const url = this.baseUrl + '/contexts/' + id + '/clone';\n    return this.http.post<Context>(url, properties).pipe(\n      map((contextCloned) => {\n        contextCloned.permission = TypePermission[TypePermission.write];\n        this.contexts$.value.ours.unshift(contextCloned);\n        this.contexts$.next(this.contexts$.value);\n        return contextCloned;\n      })\n    );\n  }\n\n  update(id: string, context: Context): Observable<Context> {\n    const url = this.baseUrl + '/contexts/' + id;\n    return this.http.patch<Context>(url, context);\n  }\n\n  // =================================================================\n\n  addToolAssociation(contextId: string, toolId: string): Observable<void> {\n    const url = `${this.baseUrl}/contexts/${contextId}/tools`;\n    const association = {\n      toolId\n    };\n    return this.http.post<void>(url, association);\n  }\n\n  deleteToolAssociation(contextId: string, toolId: string): Observable<any> {\n    const url = `${this.baseUrl}/contexts/${contextId}/tools/${toolId}`;\n    return this.http.delete(url);\n  }\n\n  getPermissions(id: string): Observable<ContextPermission[]> {\n    const url = this.baseUrl + '/contexts/' + id + '/permissions';\n    return this.http.get<ContextPermission[]>(url);\n  }\n\n  addPermissionAssociation(\n    contextId: string,\n    profil: string,\n    type: TypePermission\n  ): Observable<ContextPermission[]> {\n    const url = `${this.baseUrl}/contexts/${contextId}/permissions`;\n    const association = {\n      profil,\n      typePermission: type\n    };\n\n    return this.http.post<ContextPermission[]>(url, association).pipe(\n      catchError((res) => {\n        this.handleError(res, undefined, true);\n        throw [res]; // TODO Not sure about this.\n      })\n    );\n  }\n\n  deletePermissionAssociation(\n    contextId: string,\n    permissionId: string\n  ): Observable<void> {\n    const url = `${this.baseUrl}/contexts/${contextId}/permissions/${permissionId}`;\n    return this.http.delete<void>(url);\n  }\n\n  // ======================================================================\n\n  getLocalContexts(): Observable<ContextsList> {\n    const url = this.getPath(this.options.contextListFile);\n    return this.http.get<ContextsList>(url).pipe(\n      map((res: any) => {\n        return { ours: res };\n      })\n    );\n  }\n\n  getLocalContext(uri: string): Observable<DetailedContext> {\n    const url = this.getPath(`${uri}.json`);\n    return this.http.get<DetailedContext>(url).pipe(\n      mergeMap((res) => {\n        if (!res.base) {\n          return of(res);\n        }\n        const urlBase = this.getPath(`${res.base}.json`);\n        return this.http.get<DetailedContext>(urlBase).pipe(\n          map((resBase: DetailedContext) => {\n            const resMerge = res;\n            resMerge.map = ObjectUtils.mergeDeep(resBase.map, res.map);\n            resMerge.layers = (resBase.layers || [])\n              .concat(res.layers || [])\n              .reverse()\n              .filter(\n                (l, index, self) =>\n                  !l.id || self.findIndex((l2) => l2.id === l.id) === index\n              )\n              .reverse();\n            resMerge.toolbar = res.toolbar || resBase.toolbar;\n            resMerge.message = res.message || resBase.message;\n            resMerge.messages = res.messages || resBase.messages;\n            resMerge.tools = (res.tools || [])\n              .concat(resBase.tools || [])\n              .filter(\n                (t, index, self) =>\n                  self.findIndex((t2) => t2.name === t.name) === index\n              );\n            return resMerge;\n          }),\n          catchError((err) => {\n            this.handleError(err, uri);\n            throw err;\n          })\n        );\n      }),\n      catchError((err2) => {\n        this.handleError(err2, uri);\n        throw err2;\n      })\n    );\n  }\n\n  loadContexts(permissions?: string[], hidden?: boolean) {\n    let request;\n    if (this.baseUrl) {\n      request = this.get(permissions, hidden);\n    } else {\n      request = this.getLocalContexts();\n    }\n    request.subscribe((contexts) => {\n      contexts.ours = this.importedContext.concat(contexts.ours);\n      this.contexts$.next(contexts);\n    });\n  }\n\n  loadDefaultContext() {\n    const loadFct = (direct = false) => {\n      if (!direct && this.baseUrl && this.authService.authenticated) {\n        this.getDefault().subscribe(\n          (_context: DetailedContext) => {\n            this.defaultContextUri = _context.uri;\n            this.addContextToList(_context);\n            this.setContext(_context);\n          },\n          () => {\n            this.defaultContextId$.next(undefined);\n            this.loadContext(this.defaultContextUri);\n          }\n        );\n      } else {\n        this.loadContext(this.defaultContextUri);\n      }\n    };\n\n    if (this.route && this.route.options.contextKey) {\n      this.route.queryParams.pipe(debounceTime(100)).subscribe((params) => {\n        const contextParam = params[this.route.options.contextKey as string];\n        let direct = false;\n        if (contextParam) {\n          this.defaultContextUri = contextParam;\n          direct = true;\n        }\n        loadFct(direct);\n      });\n    } else {\n      loadFct();\n    }\n  }\n\n  loadContext(uri: string) {\n    const context = this.context$.value;\n\n    if (context && context.uri === uri) {\n      return;\n    }\n\n    this.getContextByUri(uri)\n      .pipe(first())\n      .subscribe(\n        (_context: DetailedContext) => {\n          this.addContextToList(_context);\n          this.setContext(_context);\n        },\n        (err) => {\n          if (uri !== this.options.defaultContextUri) {\n            this.loadContext(this.options.defaultContextUri);\n          }\n        }\n      );\n  }\n\n  setContext(context: DetailedContext) {\n    this.handleContextMessage(context);\n    const currentContext = this.context$.value;\n    if (currentContext && context && context.id === currentContext.id) {\n      if (context.map.view.keepCurrentView === undefined) {\n        context.map.view.keepCurrentView = true;\n      }\n      this.context$.next(context);\n      return;\n    }\n\n    if (!context.map) {\n      context.map = { view: {} };\n    }\n\n    Object.assign(context.map.view, this.mapViewFromRoute);\n\n    this.context$.next(context);\n  }\n\n  loadEditedContext(uri: string) {\n    this.getContextByUri(uri).subscribe((_context: DetailedContext) => {\n      this.setEditedContext(_context);\n    });\n  }\n\n  setEditedContext(context: DetailedContext) {\n    this.editedContext$.next(context);\n  }\n\n  getContextFromMap(igoMap: IgoMap, empty?: boolean): DetailedContext {\n    const view = igoMap.ol.getView();\n    const proj = view.getProjection().getCode();\n    const center: any = new olPoint(view.getCenter()).transform(\n      proj,\n      'EPSG:4326'\n    );\n\n    const context = {\n      uri: uuid(),\n      title: '',\n      scope: 'private',\n      map: {\n        view: {\n          center: center.getCoordinates(),\n          zoom: view.getZoom(),\n          projection: proj,\n          maxZoomOnExtent: igoMap.viewController.maxZoomOnExtent\n        }\n      },\n      layers: [],\n      tools: []\n    };\n\n    let layers = [];\n    if (empty === true) {\n      layers = igoMap.layers$\n        .getValue()\n        .filter(\n          (lay) =>\n            lay.baseLayer === true ||\n            lay.options.id === 'searchPointerSummaryId'\n        )\n        .sort((a, b) => a.zIndex - b.zIndex);\n    } else {\n      layers = igoMap.layers$.getValue().filter(lay => !lay.id.includes('WfsWorkspaceTableDest')).sort((a, b) => a.zIndex - b.zIndex);\n    }\n\n    let i = 0;\n    for (const l of layers) {\n      const layer: any = l;\n      const opts = {\n        id: layer.options.id ? String(layer.options.id) : undefined,\n        layerOptions: {\n          title: layer.options.title,\n          zIndex: ++i,\n          visible: layer.visible\n        },\n        sourceOptions: {\n          type: layer.dataSource.options.type,\n          params: layer.dataSource.options.params,\n          url: layer.dataSource.options.url,\n          queryable: layer.queryable\n        }\n      };\n      if (opts.sourceOptions.type) {\n        context.layers.push(opts);\n      }\n    }\n\n    context.tools = this.tools.map((tool) => {\n      return { id: String(tool.id), global: tool.global };\n    });\n\n    return context;\n  }\n\n  getContextFromLayers(\n    igoMap: IgoMap,\n    layers: Layer[],\n    name: string\n  ): DetailedContext {\n    const currentContext = this.context$.getValue();\n    const view = igoMap.ol.getView();\n    const proj = view.getProjection().getCode();\n    const center: any = new olPoint(view.getCenter()).transform(\n      proj,\n      'EPSG:4326'\n    );\n\n    const context = {\n      uri: name,\n      title: name,\n      map: {\n        view: {\n          center: center.getCoordinates(),\n          zoom: view.getZoom(),\n          projection: proj\n        }\n      },\n      layers: [],\n      toolbar: [],\n      tools: [],\n      extraFeatures: []\n    };\n\n    const currentLayers = igoMap.layers$.getValue();\n    context.layers = currentLayers\n      .filter((l) => l.baseLayer)\n      .map((l) => {\n        return {\n          baseLayer: true,\n          sourceOptions: l.options.sourceOptions,\n          title: l.options.title,\n          visible: l.visible\n        };\n      });\n\n    layers.forEach((layer) => {\n      const layerFound = currentContext.layers.find(\n        (contextLayer) =>\n          layer.id === contextLayer.source.id && !contextLayer.baseLayer\n      );\n\n      if (layerFound) {\n        let layerStyle = layerFound[`style`];\n        if (layerFound[`styleByAttribute`]) {\n          layerStyle = undefined;\n        } else if (layerFound[`clusterBaseStyle`]) {\n          layerStyle = undefined;\n          delete layerFound.sourceOptions[`source`];\n          delete layerFound.sourceOptions[`format`];\n        }\n        const opts = {\n          baseLayer: layerFound.baseLayer,\n          title: layer.options.title,\n          zIndex: layer.zIndex,\n          styleByAttribute: layerFound[`styleByAttribute`],\n          clusterBaseStyle: layerFound[`clusterBaseStyle`],\n          style: layerStyle,\n          clusterParam: layerFound[`clusterParam`],\n          visible: layer.visible,\n          opacity: layer.opacity,\n          sourceOptions: layerFound.sourceOptions\n        };\n        context.layers.push(opts);\n      } else {\n        if (!(layer.ol.getSource() instanceof olVectorSource)) {\n          const catalogLayer = layer.options;\n          catalogLayer.zIndex = layer.zIndex;\n          delete catalogLayer.source;\n          context.layers.push(catalogLayer);\n        } else {\n          let features;\n          const writer = new GeoJSON();\n          if (layer.ol.getSource() instanceof Cluster) {\n            const clusterSource = layer.ol.getSource() as Cluster;\n            features = writer.writeFeatures(\n              clusterSource.getFeatures(),\n              {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              }\n            );\n          } else {\n            const source = layer.ol.getSource() as any;\n            features = writer.writeFeatures(\n              source.getFeatures(),\n              {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              }\n            );\n          }\n          features = JSON.parse(features);\n          features.name = layer.options.title;\n          context.extraFeatures.push(features);\n        }\n      }\n    });\n\n    context.toolbar = this.toolbar;\n    context.tools = this.tools;\n\n    return context;\n  }\n\n  setTools(tools: Tool[]) {\n    this.tools = tools;\n  }\n\n  setToolbar(toolbar: string[]) {\n    this.toolbar = toolbar;\n  }\n\n  private handleContextMessage(context: DetailedContext) {\n    if (this.context$.value && context.uri && this.context$.value.uri !== context.uri) {\n      this.messageService.removeAllAreNotError();\n    }\n\n    context.messages = context.messages ? context.messages : [];\n    context.messages.push(context.message);\n    context.messages.map(message => {\n      if (message) {\n        message.title = message.title\n          ? this.languageService.translate.instant(message.title)\n          : undefined;\n        message.text = message.text\n          ? this.languageService.translate.instant(message.text)\n          : undefined;\n        this.messageService.message(message as Message);\n      }\n    });\n  }\n\n  private getContextByUri(uri: string): Observable<DetailedContext> {\n    if (this.baseUrl) {\n      let contextToLoad;\n      for (const key of Object.keys(this.contexts$.value)) {\n        contextToLoad = this.contexts$.value[key].find((c) => {\n          return c.uri === uri;\n        });\n        if (contextToLoad) {\n          break;\n        }\n      }\n\n      if (contextToLoad && contextToLoad.imported) {\n        return of(contextToLoad);\n      }\n\n      // TODO : use always id or uri\n      const id = contextToLoad ? contextToLoad.id : uri;\n      return this.getDetails(id);\n    }\n\n    const importedContext = this.contexts$.value.ours.find((currentContext) => {\n      return currentContext.uri === uri && currentContext.imported === true;\n    });\n\n    if (importedContext) {\n      return of(importedContext);\n    } else {\n      return this.getLocalContext(uri);\n    }\n  }\n\n  getContextLayers(igoMap: IgoMap) {\n    const layers: Layer[] = [];\n    const mapLayers = igoMap.layers$.getValue();\n    mapLayers.forEach((layer) => {\n      if (!layer.baseLayer && layer.options.id !== 'searchPointerSummaryId') {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  }\n\n  private readParamsFromRoute() {\n    if (!this.route) {\n      return;\n    }\n\n    this.route.queryParams.subscribe((params) => {\n      const centerKey = this.route.options.centerKey;\n      if (centerKey && params[centerKey as string]) {\n        const centerParams = params[centerKey as string];\n        this.mapViewFromRoute.center = centerParams.split(',').map(Number);\n        this.mapViewFromRoute.geolocate = false;\n      }\n\n      const projectionKey = this.route.options.projectionKey;\n      if (projectionKey && params[projectionKey as string]) {\n        const projectionParam = params[projectionKey as string];\n        this.mapViewFromRoute.projection = projectionParam;\n      }\n\n      const zoomKey = this.route.options.zoomKey;\n      if (zoomKey && params[zoomKey as string]) {\n        const zoomParam = params[zoomKey as string];\n        this.mapViewFromRoute.zoom = Number(zoomParam);\n      }\n    });\n  }\n\n  private getPath(file: string) {\n    const basePath = this.options.basePath.replace(/\\/$/, '');\n\n    return `${basePath}/${file}`;\n  }\n\n  private handleError(\n    error: HttpErrorResponse,\n    uri: string,\n    permissionError?: boolean\n  ) {\n    const context = this.contexts$.value.ours.find((obj) => obj.uri === uri);\n    const titleContext = context ? context.title : uri;\n    error.error.title = this.languageService.translate.instant(\n      'igo.context.contextManager.invalid.title'\n    );\n\n    error.error.message = this.languageService.translate.instant(\n      'igo.context.contextManager.invalid.text',\n      { value: titleContext }\n    );\n\n    error.error.toDisplay = true;\n\n    if (permissionError) {\n      error.error.title = this.languageService.translate.instant(\n        'igo.context.contextManager.errors.addPermissionTitle'\n      );\n      error.error.message = this.languageService.translate.instant(\n        'igo.context.contextManager.errors.addPermission'\n      );\n    }\n    this.messageService.error(error.error.message, error.error.title);\n  }\n\n  private handleContextsChange(\n    keepCurrentContext = true\n  ) {\n    const context = this.context$.value;\n    const editedContext = this.editedContext$.value;\n    if (!context || context.uri === this.options.defaultContextUri) {\n      keepCurrentContext = false;\n    }\n    if (!keepCurrentContext || !this.findContext(context)) {\n      this.defaultContextUri = undefined;\n      this.loadDefaultContext();\n    } else {\n      this.getContextByUri(context.uri)\n        .pipe(first())\n        .subscribe(\n          (newContext: DetailedContext) => {\n            this.toolsChanged$.next(newContext);\n          }\n        );\n\n      if (this.baseUrl && this.authService.authenticated) {\n        this.getDefault().subscribe();\n      }\n    }\n    const editedFound = this.findContext(editedContext);\n    if (!editedFound || editedFound.permission !== 'write') {\n      this.setEditedContext(undefined);\n    }\n  }\n\n  private addContextToList(context: Context) {\n    const contextFound = this.findContext(context);\n    if (!contextFound) {\n      const contextSimplifie = {\n        id: context.id,\n        uri: context.uri,\n        title: context.title,\n        scope: context.scope,\n        permission: TypePermission[TypePermission.read]\n      };\n\n      if (this.contexts$.value && this.contexts$.value.public) {\n        this.contexts$.value.public.push(contextSimplifie);\n        this.contexts$.next(this.contexts$.value);\n      }\n    }\n  }\n\n  private findContext(context: Context) {\n    if (!context) {\n      return false;\n    }\n\n    const contexts = this.contexts$.value;\n    let found;\n    for (const key of Object.keys(contexts)) {\n      const value = contexts[key];\n      found = value.find(\n        (c) =>\n          (context.id && c.id === context.id) ||\n          (context.uri && c.uri === context.uri)\n      );\n      if (found) {\n        break;\n      }\n    }\n\n    return found;\n  }\n}\n","<div class=\"import-export-toggle mat-typography\">\n    <mat-button-toggle-group\n          [value]=\"activeImportExport\"\n          (change)=\"onImportExportChange($event)\">\n          <mat-button-toggle [value]=\"'import'\">\n            {{'igo.geo.importExportForm.importTabTitle' | translate}}\n          </mat-button-toggle>\n          <mat-button-toggle [value]=\"'export'\">\n            {{'igo.geo.importExportForm.exportTabTitle' | translate}}\n          </mat-button-toggle>\n    </mat-button-toggle-group>\n</div>\n\n<div *ngIf=\"activeImportExport === 'import'\">\n    <form class=\"igo-form\">\n        <div class=\"igo-form-button-group\">\n            <button mat-raised-button type=\"button\" (click)=\"fileInput.click()\" [disabled]=\"loading$ | async\">\n                {{'igo.geo.importExportForm.importButton' | translate}}\n            </button>\n            <igo-spinner [shown]=\"loading$ | async\"></igo-spinner>\n            <input\n                #fileInput\n                type=\"file\"\n                [style.display]=\"'none'\"\n                (click)=\"fileInput.value = null\"\n                (change)=\"importFiles($event.target.files)\">\n        </div>\n    </form>\n    <section class=\"mat-typography\">\n        <h4>{{'igo.geo.importExportForm.importClarifications' | translate}}</h4>\n            <ul>\n                <li>{{'igo.geo.importExportForm.importSizeMax' | translate: {size: fileSizeMb} }}</li>\n            </ul>\n    </section>\n</div>\n\n\n<form class=\"igo-form\" *ngIf=\"activeImportExport === 'export'\" [formGroup]=\"form\">\n    <div class=\"igo-input-container\">\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>{{'igo.context.contextImportExport.export.exportContextName' | translate}}</mat-label>\n            <input formControlName=\"name\" matInput [value]=\"\">\n        </mat-form-field>\n    </div>\n    <div class=\"igo-input-container\">\n        <mat-form-field>\n            <mat-label>{{'igo.context.contextImportExport.export.exportPlaceHolder' | translate}}</mat-label>\n            <mat-select formControlName=\"layers\" multiple>\n                <mat-option [value]=\"1\" (click)=\"selectAll(e)\" #e>\n                    {{'igo.context.contextImportExport.export.exportSelectAll' | translate}}\n                </mat-option>\n                <mat-divider></mat-divider>\n                <mat-option *ngFor=\"let layer of userControlledLayerList\" [value]=\"layer\">{{layer.title}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"igo-form-button-group\">\n        <button\n            mat-raised-button\n            type=\"button\"\n            [disabled]=\"!form.valid || (loading$ | async)\"\n            (click)=\"handleExportFormSubmit(form.value)\">\n            {{'igo.geo.importExportForm.exportButton' | translate}}\n        </button>\n        <igo-spinner [shown]=\"loading$ | async\"></igo-spinner>\n    </div>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { MessageService, LanguageService, ConfigService } from '@igo2/core';\nimport { Layer, VectorLayer } from '@igo2/geo';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { handleFileExportError } from '../shared/context-export.utils';\nimport {\n  handleFileImportSuccess,\n  handleFileImportError\n} from '../shared/context-import.utils';\nimport { handleFileExportSuccess } from '../shared/context-export.utils';\nimport { ContextService } from '../../context-manager/shared/context.service';\nimport { ContextImportService } from '../shared/context-import.service';\nimport { ContextExportService } from '../shared/context-export.service';\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\n\n@Component({\n  selector: 'igo-context-import-export',\n  templateUrl: './context-import-export.component.html',\n  styleUrls: ['./context-import-export.component.scss']\n})\nexport class ContextImportExportComponent implements OnInit {\n  public form: FormGroup;\n  public layers: VectorLayer[];\n  public inputProj: string = 'EPSG:4326';\n  public loading$ = new BehaviorSubject(false);\n  public forceNaming = false;\n  public layerList: Layer[];\n  public userControlledLayerList: Layer[];\n  public res: DetailedContext;\n  private clientSideFileSizeMax: number;\n  public fileSizeMb: number;\n  public activeImportExport: string = 'import';\n\n  @Input() map: IgoMap;\n\n  constructor(\n    private contextImportService: ContextImportService,\n    private contextExportService: ContextExportService,\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private formBuilder: FormBuilder,\n    private config: ConfigService,\n    private contextService: ContextService\n  ) {\n    this.buildForm();\n  }\n\n  ngOnInit() {\n    const configFileSizeMb = this.config.getConfig(\n      'importExport.clientSideFileSizeMaxMb'\n    );\n    this.clientSideFileSizeMax =\n      (configFileSizeMb ? configFileSizeMb : 30) * Math.pow(1024, 2);\n    this.fileSizeMb = this.clientSideFileSizeMax / Math.pow(1024, 2);\n    this.layerList = this.contextService.getContextLayers(this.map);\n    this.userControlledLayerList = this.layerList.filter(layer => layer.showInLayerList);\n  }\n\n  importFiles(files: File[]) {\n    this.loading$.next(true);\n    for (const file of files) {\n      this.contextImportService.import(file).pipe(take(1)).subscribe(\n        (context: DetailedContext) => this.onFileImportSuccess(file, context),\n        (error: Error) => this.onFileImportError(file, error),\n        () => {\n          this.loading$.next(false);\n        }\n      );\n    }\n  }\n\n  handleExportFormSubmit(contextOptions) {\n    this.loading$.next(true);\n    this.res = this.contextService.getContextFromLayers(\n      this.map,\n      contextOptions.layers,\n      contextOptions.name\n    );\n    this.res.imported = true;\n    this.contextExportService.export(this.res).pipe(take(1)).subscribe(\n      () => {},\n      (error: Error) => this.onFileExportError(error),\n      () => {\n        this.onFileExportSuccess();\n        this.loading$.next(false);\n      }\n    );\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      layers: ['', [Validators.required]],\n      name: ['', [Validators.required]]\n    });\n  }\n\n  private onFileImportSuccess(file: File, context: DetailedContext) {\n    handleFileImportSuccess(\n      file,\n      context,\n      this.messageService,\n      this.languageService,\n      this.contextService\n    );\n  }\n\n  private onFileImportError(file: File, error: Error) {\n    this.loading$.next(false);\n    handleFileImportError(\n      file,\n      error,\n      this.messageService,\n      this.languageService,\n      this.fileSizeMb\n    );\n  }\n\n  private onFileExportError(error: Error) {\n    this.loading$.next(false);\n    handleFileExportError(error, this.messageService, this.languageService);\n  }\n\n  private onFileExportSuccess() {\n    handleFileExportSuccess(this.messageService, this.languageService);\n  }\n\n  selectAll(e) {\n    if (e._selected) {\n      this.form.controls.layers.setValue(this.userControlledLayerList);\n      e._selected = true;\n    }\n    if (e._selected === false) {\n      this.form.controls.layers.setValue([]);\n    }\n  }\n\n  onImportExportChange(event) {\n    this.activeImportExport = event.value;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { ContextImportExportComponent } from './context-import-export/context-import-export.component';\nimport { IgoSpinnerModule } from '@igo2/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    IgoLanguageModule,\n    IgoSpinnerModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    ContextImportExportComponent\n  ],\n  declarations: [\n    ContextImportExportComponent\n  ]\n})\nexport class IgoContextImportExportModule {\n  static forRoot(): ModuleWithProviders<IgoContextImportExportModule> {\n    return {\n      ngModule: IgoContextImportExportModule\n    };\n  }\n}\n","import { Directive, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { MapViewOptions, MapBrowserComponent, MapControlsOptions, MapScaleLineOptions } from '@igo2/geo';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { ContextService } from './context.service';\nimport { DetailedContext, ContextMapView } from './context.interface';\nimport { MediaService } from '@igo2/core';\n\n@Directive({\n  selector: '[igoMapContext]'\n})\nexport class MapContextDirective implements OnInit, OnDestroy {\n  private component: MapBrowserComponent;\n  private context$$: Subscription;\n\n  get map(): IgoMap {\n    return this.component.map;\n  }\n\n  constructor(\n    component: MapBrowserComponent,\n    private contextService: ContextService,\n    private mediaService: MediaService\n  ) {\n    this.component = component;\n  }\n\n  ngOnInit() {\n    this.context$$ = this.contextService.context$\n      .pipe(filter(context => context !== undefined))\n      .subscribe(context => this.handleContextChange(context));\n  }\n\n  ngOnDestroy() {\n    this.context$$.unsubscribe();\n  }\n\n  private handleContextChange(context: DetailedContext) {\n    if (context.map === undefined) {\n      return;\n    }\n\n    // This creates a new ol.Map when the context changes. Doing that\n    // allows the print tool to work properly even when the map's canvas\n    // has been tainted (CORS) with the layers of another context. This could\n    // have some side effects such as unbinding all listeners on the first map.\n    // A better solution would be to create a new map (preview) before\n    // printing and avoid the tainted canvas issue. This will come later so\n    // this snippet of code is kept here in case it takes too long becomes\n    // an issue\n\n    // const target = this.component.map.ol.getTarget();\n    // this.component.map.ol.setTarget(undefined);\n    // this.component.map.init();\n    // this.component.map.ol.setTarget(target);\n\n    const viewContext: ContextMapView = context.map.view;\n    if (!this.component.view || viewContext.keepCurrentView !== true) {\n      this.component.view = viewContext as MapViewOptions;\n    }\n\n    const controlsContext: MapControlsOptions = context.map.controls;\n    if (!this.component.controls && controlsContext) {\n      if (this.mediaService.isMobile()) {\n        if (typeof(controlsContext.scaleLine) !== 'boolean') {\n          const scaleLineOption = controlsContext.scaleLine as MapScaleLineOptions;\n          if (!scaleLineOption.minWidth) {\n            scaleLineOption.minWidth = Math.min(64, scaleLineOption.minWidth);\n            controlsContext.scaleLine = scaleLineOption;\n          }\n        }\n      }\n      this.component.controls = controlsContext;\n    }\n  }\n}\n","import { Directive, OnInit, OnDestroy, Optional, Input } from '@angular/core';\n\nimport { Subscription, merge } from 'rxjs';\nimport { buffer, debounceTime, filter } from 'rxjs/operators';\n\nimport { RouteService, ConfigService } from '@igo2/core';\nimport {\n  MapBrowserComponent,\n  Layer,\n  LayerService,\n  LayerOptions,\n  StyleListService,\n  StyleService\n} from '@igo2/geo';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { ContextService } from './context.service';\nimport { DetailedContext } from './context.interface';\nimport {\n  addImportedFeaturesToMap,\n  addImportedFeaturesStyledToMap\n} from '../../context-import-export/shared/context-import.utils';\nimport GeoJSON from 'ol/format/GeoJSON';\n\n@Directive({\n  selector: '[igoLayerContext]'\n})\nexport class LayerContextDirective implements OnInit, OnDestroy {\n  private context$$: Subscription;\n  private queryParams: any;\n\n  private contextLayers: Layer[] = [];\n\n  @Input() removeLayersOnContextChange: boolean = true;\n\n  get map(): IgoMap {\n    return this.component.map;\n  }\n\n  constructor(\n    private component: MapBrowserComponent,\n    private contextService: ContextService,\n    private layerService: LayerService,\n    private configService: ConfigService,\n    private styleListService: StyleListService,\n    private styleService: StyleService,\n    @Optional() private route: RouteService\n  ) {}\n\n  ngOnInit() {\n    this.context$$ = this.contextService.context$\n      .pipe(filter((context) => context !== undefined))\n      .subscribe((context) => this.handleContextChange(context));\n\n    if (\n      this.route &&\n      this.route.options.visibleOnLayersKey &&\n      this.route.options.visibleOffLayersKey &&\n      this.route.options.contextKey\n    ) {\n      const queryParams$$ = this.route.queryParams.subscribe((params) => {\n        if (Object.keys(params).length > 0) {\n          this.queryParams = params;\n          queryParams$$.unsubscribe();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.context$$.unsubscribe();\n  }\n\n  private handleContextChange(context: DetailedContext) {\n    if (context.layers === undefined) {\n      return;\n    }\n    if (this.removeLayersOnContextChange === true) {\n      this.map.removeAllLayers();\n    } else {\n      this.map.removeLayers(this.contextLayers);\n    }\n    this.contextLayers = [];\n\n    const layersAndIndex$ = merge(\n      ...context.layers.map((layerOptions: LayerOptions, index: number) => {\n        return this.layerService.createAsyncLayer(layerOptions, context.uri);\n      })\n    );\n\n    layersAndIndex$\n      .pipe(buffer(layersAndIndex$.pipe(debounceTime(500))))\n      .subscribe((layers: Layer[]) => {\n        layers = layers\n          .filter((layer: Layer) => layer !== undefined)\n          .map((layer) => {\n            layer.visible = this.computeLayerVisibilityFromUrl(layer);\n            layer.zIndex = layer.zIndex;\n\n            return layer;\n          });\n\n        this.contextLayers.concat(layers);\n        this.map.addLayers(layers);\n\n        if (context.extraFeatures) {\n          context.extraFeatures.forEach((featureCollection) => {\n            const format = new GeoJSON();\n            const title = featureCollection.name;\n            featureCollection = JSON.stringify(featureCollection);\n            featureCollection = format.readFeatures(featureCollection, {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            if (!this.configService.getConfig('importWithStyle')) {\n              addImportedFeaturesToMap(featureCollection, this.map, title);\n            } else {\n              addImportedFeaturesStyledToMap(\n                featureCollection,\n                this.map,\n                title,\n                this.styleListService,\n                this.styleService\n              );\n            }\n          });\n        }\n      });\n  }\n\n  private computeLayerVisibilityFromUrl(layer: Layer): boolean {\n    const params = this.queryParams;\n    const currentContext = this.contextService.context$.value.uri;\n    const currentLayerid: string = layer.id;\n\n    let visible = layer.visible;\n    if (!params || !currentLayerid) {\n      return visible;\n    }\n\n    const contextParams = params[this.route.options.contextKey as string];\n    if (contextParams === currentContext || !contextParams) {\n      let visibleOnLayersParams = '';\n      let visibleOffLayersParams = '';\n      let visiblelayers: string[] = [];\n      let invisiblelayers: string[] = [];\n\n      if (\n        this.route.options.visibleOnLayersKey &&\n        params[this.route.options.visibleOnLayersKey as string]\n      ) {\n        visibleOnLayersParams =\n          params[this.route.options.visibleOnLayersKey as string];\n      }\n      if (\n        this.route.options.visibleOffLayersKey &&\n        params[this.route.options.visibleOffLayersKey as string]\n      ) {\n        visibleOffLayersParams =\n          params[this.route.options.visibleOffLayersKey as string];\n      }\n\n      /* This order is important because to control whichever\n       the order of * param. First whe open and close everything.*/\n      if (visibleOnLayersParams === '*') {\n        visible = true;\n      }\n      if (visibleOffLayersParams === '*') {\n        visible = false;\n      }\n\n      // After, managing named layer by id (context.json OR id from datasource)\n      visiblelayers = visibleOnLayersParams.split(',');\n      invisiblelayers = visibleOffLayersParams.split(',');\n      if (visiblelayers.indexOf(currentLayerid) > -1 || visiblelayers.indexOf(currentLayerid.toString()) > -1) {\n        visible = true;\n      }\n      if (invisiblelayers.indexOf(currentLayerid) > -1 || invisiblelayers.indexOf(currentLayerid.toString()) > -1) {\n        visible = false;\n      }\n    }\n\n    return visible;\n  }\n}\n","export enum ContextListControlsEnum {\n  always = 'always',\n  never = 'never',\n  default = 'default'\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'igo-bookmark-dialog',\n  templateUrl: './bookmark-dialog.component.html'\n})\nexport class BookmarkDialogComponent {\n  public title: string;\n\n  constructor(public dialogRef: MatDialogRef<BookmarkDialogComponent>) {}\n}\n","<h1 mat-dialog-title class=\"mat-typography\">{{ 'igo.context.bookmarkButton.dialog.title' | translate }}</h1>\n<div mat-dialog-content class=\"mat-typography\">\n  <mat-form-field>\n    <input matInput required autocomplete=\"off\"\n      maxlength=\"128\"\n      [placeholder]=\"'igo.context.bookmarkButton.dialog.placeholder' | translate\"\n      [(ngModel)]=\"title\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button color=\"primary\"\n         [disabled]=\"!title\"\n         (click)=\"dialogRef.close(title)\">\n    {{'igo.common.confirmDialog.confirmBtn' | translate}}\n  </button>\n  <button mat-button\n          (click)=\"dialogRef.close(false)\">\n    {{'igo.common.confirmDialog.cancelBtn' | translate}}\n  </button>\n</div>\n","<mat-list-item\n  class=\"mat-list-item\"\n  [ngClass]=\"{'mat-list-item-light': hidden}\">\n  <button mat-list-avatar\n    *ngIf=\"auth.authenticated\"\n    mat-icon-button\n    igoStopPropagation\n    [matTooltip]=\"auth.authenticated ? ('igo.context.contextManager.favorite' | translate) : ''\"\n    matTooltipShowDelay=\"500\"\n    [color]=\"default ? 'primary' : 'default'\"\n    (click)=\"favoriteClick(context)\">\n    <mat-icon *ngIf=\"!context.iconImage\" svgIcon=\"{{context.icon ? context.icon : context.scope === 'public' ? 'earth' : 'star'}}\"></mat-icon>\n    <img *ngIf=\"context.iconImage\" [src]=\"context.iconImage\">\n  </button>\n  <h4 matLine>{{context.title}}</h4>\n\n  <div *ngIf=\"auth.authenticated\"\n       igoStopPropagation\n       class=\"igo-actions-container\">\n\n     <button *ngIf=\"collapsed && selected && (context.permission === typePermission[typePermission.write] || context.imported)\"\n       class=\"save-button\"\n       mat-icon-button\n       [matTooltip]=\"'igo.context.contextManager.save' | translate\"\n       matTooltipShowDelay=\"500\"\n       [color]=\"color\"\n       (click)=\"save.emit(context)\">\n       <mat-icon svgIcon=\"content-save\"></mat-icon>\n     </button>\n\n    <div #actions class=\"igo-actions-expand-container\">\n\n      <button *ngIf=\"canShare && !context.imported\"\n        mat-icon-button\n        [matTooltip]=\"'igo.context.contextManager.managePermissions' | translate\"\n        matTooltipShowDelay=\"500\"\n        [color]=\"color\"\n        (click)=\"managePermissions.emit(context)\">\n        <mat-icon svgIcon=\"account-arrow-right\"></mat-icon>\n      </button>\n\n      <!--button\n        mat-icon-button\n        [matTooltip]=\"'igo.context.contextManager.manageTools' | translate\"\n        [color]=\"color\"\n        (click)=\"manageTools.emit(context)\">\n        <mat-icon svgIcon=\"widgets\"></mat-icon>\n      </button-->\n\n      <button *ngIf=\"!context.imported\"\n        class=\"clone-button\"\n        mat-icon-button\n        [matTooltip]=\"'igo.context.contextManager.clone' | translate\"\n        matTooltipShowDelay=\"500\"\n        [color]=\"color\"\n        (click)=\"clone.emit(context)\">\n        <mat-icon svgIcon=\"content-copy\"></mat-icon>\n      </button>\n\n      <button *ngIf=\"context.permission === typePermission[typePermission.write] && !context.imported\"\n        class=\"edit-button\"\n        mat-icon-button\n        [color]=\"color\"\n        [matTooltip]=\"'igo.context.contextManager.edit' | translate\"\n        matTooltipShowDelay=\"500\"\n        (click)=\"edit.emit(context)\">\n        <mat-icon svgIcon=\"pencil\"></mat-icon>\n      </button>\n\n      <button *ngIf=\"!context.hidden && !context.imported\"\n        class=\"hide-button\"\n        mat-icon-button\n        [color]=\"color\"\n        [matTooltip]=\"'igo.context.contextManager.hide' | translate\"\n        matTooltipShowDelay=\"500\"\n        (click)=\"hide.emit(context)\">\n        <mat-icon svgIcon=\"eye\"></mat-icon>\n      </button>\n\n      <button *ngIf=\"context.hidden && !context.imported\"\n        class=\"hide-button\"\n        mat-icon-button\n        [color]=\"color\"\n        [matTooltip]=\"'igo.context.contextManager.show' | translate\"\n        matTooltipShowDelay=\"500\"\n        (click)=\"show.emit(context)\">\n        <mat-icon svgIcon=\"eye-off\"></mat-icon>\n      </button>\n\n      <button *ngIf=\"context.permission === typePermission[typePermission.write] || context.imported\"\n        class=\"delete-button\"\n        mat-icon-button\n        color=\"warn\"\n        [matTooltip]=\"'igo.context.contextManager.delete' | translate\"\n        matTooltipShowDelay=\"500\"\n        (click)=\"delete.emit(context)\">\n        <mat-icon svgIcon=\"delete\"></mat-icon>\n      </button>\n    </div>\n\n    <button\n      class=\"actions-button\"\n      mat-icon-button\n      igoCollapse\n      [color]=\"color\"\n      [target]=\"actions\"\n      [collapsed]=collapsed\n      (click)=\"collapsed = !collapsed\">\n      <mat-icon svgIcon=\"dots-horizontal\"></mat-icon>\n    </button>\n\n  </div>\n\n</mat-list-item>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { StorageService } from '@igo2/core';\nimport { AuthService } from '@igo2/auth';\nimport { TypePermission } from '../shared/context.enum';\nimport { DetailedContext } from '../shared/context.interface';\n\n@Component({\n  selector: 'igo-context-item',\n  templateUrl: './context-item.component.html',\n  styleUrls: ['./context-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextItemComponent {\n  public typePermission = TypePermission;\n  public color = 'primary';\n  public collapsed = true;\n\n  @Input()\n  get context(): DetailedContext {\n    return this._context;\n  }\n  set context(value: DetailedContext) {\n    this._context = value;\n  }\n  private _context: DetailedContext;\n\n  @Input()\n  get default(): boolean {\n    return this._default;\n  }\n  set default(value: boolean) {\n    this._default = value;\n  }\n  private _default = false;\n\n  @Input() selected: boolean;\n\n  @Output() edit = new EventEmitter<DetailedContext>();\n  @Output() delete = new EventEmitter<DetailedContext>();\n  @Output() save = new EventEmitter<DetailedContext>();\n  @Output() clone = new EventEmitter<DetailedContext>();\n  @Output() hide = new EventEmitter<DetailedContext>();\n  @Output() show = new EventEmitter<DetailedContext>();\n  @Output() favorite = new EventEmitter<DetailedContext>();\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\n  @Output() manageTools = new EventEmitter<DetailedContext>();\n\n  get hidden(): boolean {\n    return this.context.hidden;\n  }\n\n  get canShare(): boolean {\n    return this.storageService.get('canShare') === true;\n  }\n\n  constructor(\n    public auth: AuthService,\n    private storageService: StorageService\n  ) {}\n\n  favoriteClick(context) {\n    if (this.auth.authenticated) {\n      this.favorite.emit(context);\n    }\n  }\n}\n","<igo-list [navigation]=\"true\">\n  <mat-form-field *ngIf=\"showFilter()\" [ngClass]=\"auth.authenticated && configService.getConfig('context') ? 'context-filter-min-width' : 'context-filter-max-width'\">\n    <input\n      matInput\n      type=\"text\"\n      [placeholder]=\"'igo.context.contextManager.filterPlaceHolder' | translate\"\n      [(ngModel)]=\"term\">\n    <button\n      mat-button\n      mat-icon-button\n      matSuffix\n      class=\"clear-button\"\n      *ngIf=\"term.length\"\n      aria-label=\"Clear\"\n      color=\"warn\"\n      (click)=\"clearFilter()\">\n      <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n  </mat-form-field>\n\n  <button\n  *ngIf=\"!sortedAlpha\"\n  class=\"sort-alpha\"\n  mat-icon-button\n  [matTooltip]=\"'igo.context.contextManager.sortAlphabetically' | translate\"\n  matTooltipShowDelay=\"500\"\n  (click)=\"toggleSort(true)\">\n  <mat-icon color=\"primary\" svgIcon=\"sort-alphabetical-variant\"></mat-icon>\n  </button>\n  <button\n    *ngIf=\"sortedAlpha\"\n    class=\"sort-alpha\"\n    mat-icon-button\n    [matTooltip]=\"'igo.context.contextManager.sortContextOrder' | translate\"\n    matTooltipShowDelay=\"500\"\n    (click)=\"toggleSort(false)\">\n    <mat-icon color=\"warn\" svgIcon=\"sort-variant-remove\"></mat-icon>\n  </button>\n\n  <igo-actionbar *ngIf=\"auth.authenticated && configService.getConfig('context')\"\n    class=\"add-context-button\"\n    [iconColor]=\"color\"\n    [store]=\"actionStore\"\n    [withIcon]=\"true\"\n    icon=\"plus\"\n    [withTitle]=\"actionbarMode === 'overlay'\"\n    [horizontal]=\"false\"\n    [mode]=\"actionbarMode\">\n  </igo-actionbar>\n\n  <button *ngIf=\"auth.authenticated && configService.getConfig('context')\"\n    class=\"users-filter\"\n    mat-icon-button\n    [matTooltip]=\"'igo.context.contextManager.filterUser' | translate\"\n    matTooltipShowDelay=\"500\"\n    [matMenuTriggerFor]=\"accountMenu\">\n    <mat-icon color=\"primary\" svgIcon=\"filter-menu\"></mat-icon>\n  </button>\n\n  <mat-menu #accountMenu=\"matMenu\">\n    <ng-container *ngFor=\"let user of users\">\n      <span class=\"profilsMenu\">\n        <mat-checkbox\n          class=\"mat-menu-item\"\n          [checked]=\"getPermission(user).checked\"\n          [indeterminate]=\"getPermission(user).indeterminate\"\n          (click)=\"$event.stopPropagation()\"\n          (change)=\"userSelection(user)\">\n        </mat-checkbox>\n        <button *ngIf=\"user.childs\"\n          [matMenuTriggerFor]=\"subAccountMenu\"\n          mat-menu-item>\n          {{user.title}}\n        </button>\n        <button\n          mat-menu-item\n          *ngIf=\"!user.childs\">\n          {{user.title}}\n        </button>\n      </span>\n\n      <mat-menu #subAccountMenu=\"matMenu\">\n        <mat-checkbox *ngFor=\"let child of user.childs\"\n          class=\"mat-menu-item\"\n          [checked]=\"getPermission(child).checked\"\n          (click)=\"$event.stopPropagation()\"\n          (change)=\"userSelection(child, user)\">\n          {{child.title}}\n        </mat-checkbox>\n      </mat-menu>\n    </ng-container>\n\n    <span class=\"profilsMenu\">\n      <mat-checkbox\n        class=\"mat-menu-item\"\n        [checked]=\"showHidden\"\n        (click)=\"$event.stopPropagation()\"\n        (change)=\"showHiddenContexts.emit()\">\n      </mat-checkbox>\n      <button mat-menu-item>\n        {{ 'igo.context.contextManager.showHidden' | translate }}\n      </button>\n    </span>\n  </mat-menu>\n\n  <ng-template ngFor let-groupContexts [ngForOf]=\"contexts$ | async | keyvalue\">\n\n    <igo-collapsible *ngIf=\"groupContexts.value.length && auth.authenticated\" [title]=\"titleMapping[groupContexts.key] | translate\"\n      [collapsed]=\"collapsed[titleMapping[groupContexts.key]]\" (toggle)=\"collapsed[titleMapping[groupContexts.key]] = $event\">\n\n      <ng-template ngFor let-context [ngForOf]=\"groupContexts.value\">\n        <igo-context-item\n          igoListItem\n          color=\"accent\"\n          [selected]=\"selectedContext && selectedContext.uri === context.uri\"\n          [context]=\"context\"\n          [default]=\"context.id && this.defaultContextId && this.defaultContextId === context.id\"\n          (edit)=\"edit.emit(context)\"\n          (delete)=\"delete.emit(context)\"\n          (clone)=\"clone.emit(context)\"\n          (save)=\"save.emit(context)\"\n          (hide)=\"hideContext(context)\"\n          (show)=\"showContext(context)\"\n          (favorite)=\"favorite.emit(context)\"\n          (manageTools)=\"manageTools.emit(context)\"\n          (managePermissions)=\"managePermissions.emit(context)\"\n          (select)=\"select.emit(context)\"\n          (unselect)=\"unselect.emit(context)\">\n        </igo-context-item>\n      </ng-template>\n\n    </igo-collapsible>\n\n    <ng-template *ngIf=\"groupContexts.value.length && !auth.authenticated\" ngFor let-context [ngForOf]=\"groupContexts.value\">\n      <igo-context-item\n        igoListItem\n        color=\"accent\"\n        [selected]=\"selectedContext && selectedContext.uri === context.uri\"\n        [context]=\"context\"\n        [default]=\"this.defaultContextId === context.id\"\n        (select)=\"select.emit(context)\"\n        (unselect)=\"unselect.emit(context)\">\n      </igo-context-item>\n    </ng-template>\n\n  </ng-template>\n</igo-list>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\n\nimport { AuthService } from '@igo2/auth';\nimport { ConfigService, LanguageService, StorageService } from '@igo2/core';\nimport type { IgoMap } from '@igo2/geo';\n\nimport {\n  DetailedContext,\n  ContextsList,\n  ContextUserPermission,\n  ContextProfils\n} from '../shared/context.interface';\nimport { ContextListControlsEnum } from './context-list.enum';\nimport {\n  Subscription,\n  BehaviorSubject,\n  ReplaySubject,\n  EMPTY,\n  timer\n} from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookmarkDialogComponent } from '../../context-map-button/bookmark-button/bookmark-dialog.component';\nimport { debounce } from 'rxjs/operators';\nimport { ActionStore, ActionbarMode } from '@igo2/common';\nimport { ContextService } from '../shared/context.service';\n\n@Component({\n  selector: 'igo-context-list',\n  templateUrl: './context-list.component.html',\n  styleUrls: ['./context-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextListComponent implements OnInit, OnDestroy {\n  private contextsInitial: ContextsList = { ours: [] };\n  contexts$: BehaviorSubject<ContextsList> = new BehaviorSubject(\n    this.contextsInitial\n  );\n\n  change$ = new ReplaySubject<void>(1);\n\n  private change$$: Subscription;\n\n  @Input()\n  get contexts(): ContextsList {\n    return this._contexts;\n  }\n  set contexts(value: ContextsList) {\n    this._contexts = value;\n    this.cdRef.detectChanges();\n    this.next();\n  }\n  private _contexts: ContextsList = { ours: [] };\n\n  @Input()\n  get selectedContext(): DetailedContext {\n    return this._selectedContext;\n  }\n  set selectedContext(value: DetailedContext) {\n    this._selectedContext = value;\n    this.cdRef.detectChanges();\n  }\n  private _selectedContext: DetailedContext;\n\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n\n  @Input()\n  get defaultContextId(): string {\n    return this._defaultContextId;\n  }\n  set defaultContextId(value: string) {\n    this._defaultContextId = value;\n  }\n  private _defaultContextId: string;\n\n  public collapsed: { contextScope }[] = [];\n\n  @Output() select = new EventEmitter<DetailedContext>();\n  @Output() unselect = new EventEmitter<DetailedContext>();\n  @Output() edit = new EventEmitter<DetailedContext>();\n  @Output() delete = new EventEmitter<DetailedContext>();\n  @Output() save = new EventEmitter<DetailedContext>();\n  @Output() clone = new EventEmitter<DetailedContext>();\n  @Output() create = new EventEmitter<{ title: string; empty: boolean }>();\n  @Output() hide = new EventEmitter<DetailedContext>();\n  @Output() show = new EventEmitter<DetailedContext>();\n  @Output() showHiddenContexts = new EventEmitter<boolean>();\n  @Output() favorite = new EventEmitter<DetailedContext>();\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\n  @Output() manageTools = new EventEmitter<DetailedContext>();\n  @Output() filterPermissionsChanged = new EventEmitter<\n    ContextUserPermission[]\n  >();\n\n  public titleMapping = {\n    ours: 'igo.context.contextManager.ourContexts',\n    shared: 'igo.context.contextManager.sharedContexts',\n    public: 'igo.context.contextManager.publicContexts'\n  };\n\n  public users: ContextProfils[];\n  public permissions: ContextUserPermission[] = [];\n\n  public actionStore = new ActionStore([]);\n  public actionbarMode = ActionbarMode.Overlay;\n\n  public color = 'primary';\n\n  public showHidden = false;\n\n  /**\n   * Context filter term\n   */\n  @Input()\n  set term(value: string) {\n    this._term = value;\n    this.next();\n  }\n  get term(): string {\n    return this._term;\n  }\n  public _term: string = '';\n\n  get sortedAlpha(): boolean {\n    return this._sortedAlpha;\n  }\n  set sortedAlpha(value: boolean) {\n    this._sortedAlpha = value;\n    this.next();\n  }\n  private _sortedAlpha: boolean = undefined;\n\n  public showContextFilter = ContextListControlsEnum.always;\n\n  public thresholdToFilter = 5;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private contextService: ContextService,\n    public configService: ConfigService,\n    public auth: AuthService,\n    private dialog: MatDialog,\n    private languageService: LanguageService,\n    private storageService: StorageService\n  ) {}\n\n  ngOnInit() {\n    this.change$$ = this.change$\n      .pipe(\n        debounce(() => {\n          return this.contexts.ours.length === 0 ? EMPTY : timer(50);\n        })\n      )\n      .subscribe(() => {\n        this.contexts$.next(this.filterContextsList(this.contexts));\n      });\n\n    this.actionStore.load([\n      {\n        id: 'emptyContext',\n        title: this.languageService.translate.instant(\n          'igo.context.contextManager.emptyContext'\n        ),\n        icon: 'map-outline',\n        tooltip: this.languageService.translate.instant(\n          'igo.context.contextManager.emptyContextTooltip'\n        ),\n        handler: () => {\n          this.createContext(true);\n        }\n      },\n      {\n        id: 'contextFromMap',\n        title: this.languageService.translate.instant(\n          'igo.context.contextManager.contextMap'\n        ),\n        icon: 'map-check',\n        tooltip: this.languageService.translate.instant(\n          'igo.context.contextManager.contextMapTooltip'\n        ),\n        handler: () => {\n          this.createContext(false);\n        }\n      }\n    ]);\n  }\n\n  private next() {\n    this.change$.next();\n  }\n\n  private filterContextsList(contexts: ContextsList) {\n    if (this.term === '') {\n      if (this.sortedAlpha) {\n        contexts = this.sortContextsList(contexts);\n      }\n      return contexts;\n    } else {\n      const ours = contexts.ours.filter((context) => {\n        const filterNormalized = this.term\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        const contextTitleNormalized = context.title\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n        return contextTitleNormalized.includes(filterNormalized);\n      });\n\n      let updateContexts: ContextsList = {\n        ours\n      };\n\n      if (this.contexts.public) {\n        const publics = contexts.public.filter((context) => {\n          const filterNormalized = this.term\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '');\n          const contextTitleNormalized = context.title\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '');\n          return contextTitleNormalized.includes(filterNormalized);\n        });\n        updateContexts.public = publics;\n      }\n\n      if (this.contexts.shared) {\n        const shared = contexts.shared.filter((context) => {\n          const filterNormalized = this.term\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '');\n          const contextTitleNormalized = context.title\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '');\n          return contextTitleNormalized.includes(filterNormalized);\n        });\n        updateContexts.shared = shared;\n      }\n\n      if (this.sortedAlpha) {\n        updateContexts = this.sortContextsList(updateContexts);\n      }\n      return updateContexts;\n    }\n  }\n\n  ngOnDestroy() {\n    this.change$$.unsubscribe();\n  }\n\n  public showFilter() {\n    switch (this.showContextFilter) {\n      case ContextListControlsEnum.always:\n        return true;\n      case ContextListControlsEnum.never:\n        return false;\n      default:\n        let totalLength = this.contexts.ours.length;\n        this.contexts.public\n          ? (totalLength += this.contexts.public.length)\n          : (totalLength += 0);\n        this.contexts.shared\n          ? (totalLength += this.contexts.shared.length)\n          : (totalLength += 0);\n        if (totalLength >= this.thresholdToFilter) {\n          return true;\n        }\n        return false;\n    }\n  }\n\n  sortContextsList(contexts: ContextsList) {\n    if (contexts) {\n      const contextsList = JSON.parse(JSON.stringify(contexts));\n      contextsList.ours.sort((a, b) => {\n        if (this.normalize(a.title) < this.normalize(b.title)) {\n          return -1;\n        }\n        if (this.normalize(a.title) > this.normalize(b.title)) {\n          return 1;\n        }\n        return 0;\n      });\n\n      if (contextsList.shared) {\n        contextsList.shared.sort((a, b) => {\n          if (this.normalize(a.title) < this.normalize(b.title)) {\n            return -1;\n          }\n          if (this.normalize(a.title) > this.normalize(b.title)) {\n            return 1;\n          }\n          return 0;\n        });\n      } else if (contextsList.public) {\n        contextsList.public.sort((a, b) => {\n          if (this.normalize(a.title) < this.normalize(b.title)) {\n            return -1;\n          }\n          if (this.normalize(a.title) > this.normalize(b.title)) {\n            return 1;\n          }\n          return 0;\n        });\n      }\n      return contextsList;\n    }\n  }\n\n  normalize(str: string) {\n    return str\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '')\n      .toLowerCase();\n  }\n\n  toggleSort(sortAlpha: boolean) {\n    this.sortedAlpha = sortAlpha;\n  }\n\n  clearFilter() {\n    this.term = '';\n  }\n\n  createContext(empty?: boolean) {\n    this.dialog\n      .open(BookmarkDialogComponent, { disableClose: false })\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe((title: string) => {\n        if (title) {\n          this.create.emit({ title, empty });\n        }\n      });\n  }\n\n  getPermission(user?): ContextUserPermission {\n    if (user) {\n      const permission = this.permissions.find((p) => p.name === user.name);\n      return permission;\n    }\n  }\n\n  userSelection(user, parent?) {\n    const permission = this.getPermission(user);\n    if (permission) {\n      permission.checked = !permission.checked;\n      this.storageService.set(\n        'contexts.permissions.' + permission.name,\n        permission.checked\n      );\n      permission.indeterminate = false;\n    }\n\n    if (parent) {\n      let indeterminate = false;\n\n      for (const c of parent.childs) {\n        const cPermission = this.getPermission(c);\n        if (cPermission.checked !== permission.checked) {\n          indeterminate = true;\n          break;\n        }\n      }\n      const parentPermission = this.getPermission(parent);\n      if (parentPermission) {\n        parentPermission.checked = permission.checked;\n        this.storageService.set(\n          'contexts.permissions.' + parentPermission.name,\n          permission.checked\n        );\n        parentPermission.indeterminate = indeterminate;\n      }\n    }\n\n    if (user.childs) {\n      for (const c of user.childs) {\n        const childrenPermission = this.getPermission(c);\n        if (\n          childrenPermission &&\n          childrenPermission.checked !== permission.checked\n        ) {\n          childrenPermission.checked = permission.checked;\n          this.storageService.set(\n            'contexts.permissions.' + childrenPermission.name,\n            permission.checked\n          );\n        }\n      }\n    }\n\n    this.filterPermissionsChanged.emit(this.permissions);\n  }\n\n  hideContext(context: DetailedContext) {\n    context.hidden = true;\n    if (!this.showHidden) {\n      const contexts: ContextsList = { ours: [], shared: [], public: [] };\n      contexts.ours = this.contexts.ours.filter((c) => c.id !== context.id);\n      contexts.shared = this.contexts.shared.filter((c) => c.id !== context.id);\n      contexts.public = this.contexts.public.filter((c) => c.id !== context.id);\n      this.contexts = contexts;\n    }\n    this.hide.emit(context);\n  }\n\n  showContext(context: DetailedContext) {\n    context.hidden = false;\n    this.show.emit(context);\n  }\n}\n","import {\n  Directive,\n  Self,\n  OnInit,\n  OnDestroy,\n  HostListener\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { MessageService, LanguageService, StorageService } from '@igo2/core';\nimport { AuthService } from '@igo2/auth';\nimport { ConfirmDialogService } from '@igo2/common';\nimport { MapService } from '@igo2/geo';\n\nimport {\n  Context,\n  DetailedContext,\n  ContextsList,\n  ContextUserPermission\n} from '../shared/context.interface';\nimport { ContextService } from '../shared/context.service';\nimport { ContextListComponent } from './context-list.component';\n\n@Directive({\n  selector: '[igoContextListBinding]'\n})\nexport class ContextListBindingDirective implements OnInit, OnDestroy {\n  private component: ContextListComponent;\n  private contexts$$: Subscription;\n  private selectedContext$$: Subscription;\n  private defaultContextId$$: Subscription;\n\n  @HostListener('select', ['$event'])\n  onSelect(context: Context) {\n    this.contextService.loadContext(context.uri);\n  }\n\n  @HostListener('edit', ['$event'])\n  onEdit(context: Context) {\n    this.contextService.loadEditedContext(context.uri);\n  }\n\n  @HostListener('save', ['$event'])\n  onSave(context: Context) {\n    const map = this.mapService.getMap();\n    const contextFromMap = this.contextService.getContextFromMap(map);\n\n    const msgSuccess = () => {\n      const translate = this.languageService.translate;\n      const message = translate.instant(\n        'igo.context.contextManager.dialog.saveMsg',\n        {\n          value: context.title\n        }\n      );\n      const title = translate.instant(\n        'igo.context.contextManager.dialog.saveTitle'\n      );\n      this.messageService.success(message, title);\n    };\n\n    if (context.imported) {\n      contextFromMap.title = context.title;\n      this.contextService.delete(context.id, true);\n      this.contextService.create(contextFromMap).subscribe((contextCreated) => {\n        this.contextService.loadContext(contextCreated.uri);\n        msgSuccess();\n      });\n      return;\n    }\n\n    const changes: any = {\n      layers: contextFromMap.layers,\n      map: {\n        view: contextFromMap.map.view\n      }\n    };\n\n    this.contextService.update(context.id, changes).subscribe(() => {\n      msgSuccess();\n    });\n  }\n\n  @HostListener('favorite', ['$event'])\n  onFavorite(context: Context) {\n    this.contextService.setDefault(context.id).subscribe(() => {\n      this.contextService.defaultContextId$.next(context.id);\n      const translate = this.languageService.translate;\n      const message = translate.instant(\n        'igo.context.contextManager.dialog.favoriteMsg',\n        {\n          value: context.title\n        }\n      );\n      const title = translate.instant(\n        'igo.context.contextManager.dialog.favoriteTitle'\n      );\n      this.messageService.success(message, title);\n    });\n  }\n\n  @HostListener('manageTools', ['$event'])\n  onManageTools(context: Context) {\n    this.contextService.loadEditedContext(context.uri);\n  }\n\n  @HostListener('managePermissions', ['$event'])\n  onManagePermissions(context: Context) {\n    this.contextService.loadEditedContext(context.uri);\n  }\n\n  @HostListener('delete', ['$event'])\n  onDelete(context: Context) {\n    const translate = this.languageService.translate;\n    this.confirmDialogService\n      .open(\n        translate.instant('igo.context.contextManager.dialog.confirmDelete')\n      )\n      .subscribe((confirm) => {\n        if (confirm) {\n          this.contextService\n            .delete(context.id, context.imported)\n            .subscribe(() => {\n              const message = translate.instant(\n                'igo.context.contextManager.dialog.deleteMsg',\n                {\n                  value: context.title\n                }\n              );\n              const title = translate.instant(\n                'igo.context.contextManager.dialog.deleteTitle'\n              );\n              this.messageService.info(message, title);\n            });\n        }\n      });\n  }\n\n  @HostListener('clone', ['$event'])\n  onClone(context: DetailedContext) {\n    const properties = {\n      title: context.title + '-copy',\n      uri: context.uri + '-copy'\n    };\n    this.contextService.clone(context.id, properties).subscribe(() => {\n      const translate = this.languageService.translate;\n      const message = translate.instant(\n        'igo.context.contextManager.dialog.cloneMsg',\n        {\n          value: context.title\n        }\n      );\n      const title = translate.instant(\n        'igo.context.contextManager.dialog.cloneTitle'\n      );\n      this.messageService.success(message, title);\n    });\n  }\n\n  @HostListener('create', ['$event'])\n  onCreate(opts: { title: string; empty: boolean }) {\n    const { title, empty } = opts;\n    const context = this.contextService.getContextFromMap(\n      this.component.map,\n      empty\n    );\n    context.title = title;\n    this.contextService.create(context).subscribe(() => {\n      const translate = this.languageService.translate;\n      const titleD = translate.instant(\n        'igo.context.bookmarkButton.dialog.createTitle'\n      );\n      const message = translate.instant(\n        'igo.context.bookmarkButton.dialog.createMsg',\n        {\n          value: context.title\n        }\n      );\n      this.messageService.success(message, titleD);\n      this.contextService.loadContext(context.uri);\n    });\n  }\n\n  @HostListener('filterPermissionsChanged')\n  loadContexts() {\n    const permissions = ['none'];\n    for (const p of this.component.permissions) {\n      if (p.checked === true || p.indeterminate === true) {\n        permissions.push(p.name);\n      }\n    }\n    this.component.showHidden\n      ? this.contextService.loadContexts(permissions, true)\n      : this.contextService.loadContexts(permissions, false);\n  }\n\n  @HostListener('showHiddenContexts')\n  showHiddenContexts() {\n    this.component.showHidden = !this.component.showHidden;\n    this.storageService.set('contexts.showHidden', this.component.showHidden);\n    this.loadContexts();\n  }\n\n  @HostListener('show', ['$event'])\n  onShowContext(context: DetailedContext) {\n    this.contextService.showContext(context.id).subscribe();\n  }\n\n  @HostListener('hide', ['$event'])\n  onHideContext(context: DetailedContext) {\n    this.contextService.hideContext(context.id).subscribe();\n  }\n\n  constructor(\n    @Self() component: ContextListComponent,\n    private contextService: ContextService,\n    private mapService: MapService,\n    private languageService: LanguageService,\n    private confirmDialogService: ConfirmDialogService,\n    private messageService: MessageService,\n    private auth: AuthService,\n    private storageService: StorageService\n  ) {\n    this.component = component;\n  }\n\n  ngOnInit() {\n    // Override input contexts\n    this.component.contexts = { ours: [] };\n    this.component.showHidden = this.storageService.get(\n      'contexts.showHidden'\n    ) as boolean;\n\n    this.contexts$$ = this.contextService.contexts$.subscribe((contexts) =>\n      this.handleContextsChange(contexts)\n    );\n\n    this.defaultContextId$$ = this.contextService.defaultContextId$.subscribe(\n      (id) => {\n        this.component.defaultContextId = id;\n      }\n    );\n\n    // See feature-list.component for an explanation about the debounce time\n    this.selectedContext$$ = this.contextService.context$\n      .pipe(debounceTime(100))\n      .subscribe((context) => (this.component.selectedContext = context));\n\n    this.auth.authenticate$.subscribe((authenticate) => {\n      if (authenticate) {\n        this.contextService.getProfilByUser().subscribe((profils) => {\n          this.component.users = profils;\n          this.component.permissions = [];\n          const profilsAcc = this.component.users.reduce((acc, cur) => {\n            acc = acc.concat(cur);\n            acc = cur.childs ? acc.concat(cur.childs) : acc;\n            return acc;\n          }, []);\n\n          for (const user of profilsAcc) {\n            const permission: ContextUserPermission = {\n              name: user.name,\n              checked: this.storageService.get(\n                'contexts.permissions.' + user.name\n              ) as boolean\n            };\n            if (permission.checked === null) {\n              permission.checked = true;\n            }\n            this.component.permissions.push(permission);\n          }\n\n          const permissions = ['none'];\n          for (const p of this.component.permissions) {\n            if (p.checked === true || p.indeterminate === true) {\n              permissions.push(p.name);\n            }\n          }\n\n          this.component.showHidden\n            ? this.contextService.loadContexts(permissions, true)\n            : this.contextService.loadContexts(permissions, false);\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.contexts$$.unsubscribe();\n    this.selectedContext$$.unsubscribe();\n    this.defaultContextId$$.unsubscribe();\n  }\n\n  private handleContextsChange(contexts: ContextsList) {\n    this.component.contexts = contexts;\n  }\n}\n","<form class=\"igo-form\" [formGroup]=\"form\"\n  (ngSubmit)=\"handleFormSubmit(form.value)\">\n\n  <mat-form-field class=\"full-width\">\n    <input matInput required\n           maxlength=\"128\"\n           [placeholder]=\"'igo.context.contextManager.form.title' | translate\"\n           formControlName=\"title\">\n   <mat-error>\n    {{ 'igo.context.contextManager.form.titleRequired' | translate }}\n   </mat-error>\n  </mat-form-field>\n\n  <mat-form-field id=\"uriInput\" class=\"full-width\">\n    <span *ngIf=\"prefix\" class=\"prefix\">{{prefix}}-</span>\n    <span class=\"fieldWrapper\">\n      <input matInput\n           maxlength=\"64\"\n           floatLabel = \"always\"\n           [placeholder]=\"'igo.context.contextManager.form.uri' | translate\"\n           formControlName=\"uri\">\n    </span>\n  </mat-form-field>\n\n  <button\n    id=\"copyButton\"\n    type=\"button\"\n    mat-icon-button\n    tooltip-position=\"below\"\n    matTooltipShowDelay=\"500\"\n    [matTooltip]=\"'igo.context.contextManager.form.copy' | translate\"\n    color=\"primary\"\n    (click)=\"copyTextToClipboard()\">\n    <mat-icon svgIcon=\"content-copy\"></mat-icon>\n  </button>\n\n  <div class=\"igo-form-button-group\">\n    <button\n      mat-raised-button\n      type=\"submit\"\n      [disabled]=\"!form.valid || disabled\">\n      {{ 'igo.context.contextManager.form.edit' | translate }}\n    </button>\n  </div>\n\n</form>\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { ObjectUtils, Clipboard } from '@igo2/utils';\nimport { MessageService, LanguageService } from '@igo2/core';\nimport { Context } from '../shared/context.interface';\n\n@Component({\n  selector: 'igo-context-form',\n  templateUrl: './context-form.component.html',\n  styleUrls: ['./context-form.component.scss']\n})\nexport class ContextFormComponent implements OnInit {\n  public form: FormGroup;\n  public prefix: string;\n\n  @Input()\n  get btnSubmitText(): string {\n    return this._btnSubmitText;\n  }\n  set btnSubmitText(value: string) {\n    this._btnSubmitText = value;\n  }\n  private _btnSubmitText: string;\n\n  @Input()\n  get context(): Context {\n    return this._context;\n  }\n  set context(value: Context) {\n    this._context = value;\n    this.buildForm();\n  }\n  private _context: Context;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n  private _disabled = false;\n\n  // TODO: replace any by ContextOptions or Context\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\n  @Output() clone: EventEmitter<any> = new EventEmitter();\n  @Output() delete: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private languageService: LanguageService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  public handleFormSubmit(value) {\n    let inputs = Object.assign({}, value);\n    inputs = ObjectUtils.removeNull(inputs);\n    inputs.uri = inputs.uri.replace(' ', '');\n    if (inputs.uri) {\n      inputs.uri = this.prefix + '-' + inputs.uri;\n    } else {\n      inputs.uri = this.prefix;\n    }\n    this.submitForm.emit(inputs);\n  }\n\n  public copyTextToClipboard() {\n    const text = this.prefix + '-' + this.form.value.uri.replace(' ', '');\n    const successful = Clipboard.copy(text);\n    if (successful) {\n      const translate = this.languageService.translate;\n      const title = translate.instant(\n        'igo.context.contextManager.dialog.copyTitle'\n      );\n      const msg = translate.instant(\n        'igo.context.contextManager.dialog.copyMsg'\n      );\n      this.messageService.success(msg, title);\n    }\n  }\n\n  private buildForm(): void {\n    const context: any = this.context || {};\n\n    const uriSplit = context.uri.split('-');\n    this.prefix = uriSplit.shift();\n    const uri = uriSplit.join('-');\n\n    this.form = this.formBuilder.group({\n      title: [context.title],\n      uri: [uri || ' ']\n    });\n  }\n}\n","<igo-context-form *ngIf=\"context\"\n   [btnSubmitText]=\"'igo.context.contextManager.save' | translate\"\n   [context]=\"context\"\n   (submitForm)=\"submitForm.emit($event)\">\n</igo-context-form>\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\n\nimport { Context } from '../shared/context.interface';\n\n@Component({\n  selector: 'igo-context-edit',\n  templateUrl: './context-edit.component.html'\n})\nexport class ContextEditComponent {\n  @Input()\n  get context(): Context {\n    return this._context;\n  }\n  set context(value: Context) {\n    this._context = value;\n    this.refresh();\n  }\n  private _context: Context;\n\n  @Output() submitForm: EventEmitter<Context> = new EventEmitter();\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  refresh() {\n    this.cd.detectChanges();\n  }\n}\n","import {\n  Output,\n  EventEmitter,\n  Directive,\n  Self,\n  OnInit,\n  OnDestroy,\n  HostListener\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { MessageService, LanguageService } from '@igo2/core';\n\nimport { Context, DetailedContext } from '../shared/context.interface';\nimport { ContextService } from '../shared/context.service';\nimport { ContextEditComponent } from './context-edit.component';\n\n@Directive({\n  selector: '[igoContextEditBinding]'\n})\nexport class ContextEditBindingDirective implements OnInit, OnDestroy {\n  private component: ContextEditComponent;\n  private editedContext$$: Subscription;\n\n  @Output() submitSuccessed: EventEmitter<Context> = new EventEmitter();\n\n  @HostListener('submitForm', ['$event'])\n  onEdit(context: Context) {\n    const id = this.component.context.id;\n    this.contextService.update(id, context).subscribe(() => {\n      const translate = this.languageService.translate;\n      const message = translate.instant('igo.context.contextManager.dialog.saveMsg', {\n        value: context.title || this.component.context.title\n      });\n      const title = translate.instant('igo.context.contextManager.dialog.saveTitle');\n      this.messageService.success(message, title);\n      this.contextService.setEditedContext(undefined);\n      this.submitSuccessed.emit(context);\n    });\n  }\n\n  constructor(\n    @Self() component: ContextEditComponent,\n    private contextService: ContextService,\n    private messageService: MessageService,\n    private languageService: LanguageService\n  ) {\n    this.component = component;\n  }\n\n  ngOnInit() {\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\n      context => this.handleEditedContextChange(context)\n    );\n  }\n\n  ngOnDestroy() {\n    this.editedContext$$.unsubscribe();\n  }\n\n  private handleEditedContextChange(context: DetailedContext) {\n    this.component.context = context;\n  }\n}\n","<div *ngIf=\"context\">\n\n  <div *ngIf=\"!canWrite\" class=\"scopeForm\">\n    <h4>{{ 'igo.context.permission.readOnlyTitle' | translate }}</h4>\n    <p>{{ 'igo.context.permission.readOnlyMsg' | translate }}</p>\n  </div>\n\n  <div *ngIf=\"canWrite\" class=\"scopeForm\">\n    <mat-radio-group [(ngModel)]=\"context.scope\"\n                    (change)=\"scopeChanged.emit(context)\">\n      <mat-radio-button value=\"private\">\n        {{ 'igo.context.permission.scope.private' | translate }}\n      </mat-radio-button>\n      <mat-radio-button value=\"protected\">\n        {{ 'igo.context.permission.scope.shared' | translate }}\n      </mat-radio-button>\n      <mat-radio-button *ngIf=\"authService.isAdmin\" value=\"public\">\n        {{ 'igo.context.permission.scope.public' | translate }}\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n  <form *ngIf=\"context.scope !== 'private' && canWrite\" [formGroup]=\"form\"\n    (ngSubmit)=\"handleFormSubmit(form.value)\">\n\n    <mat-form-field class=\"full-width\">\n      <input matInput required\n             [placeholder]=\"'igo.context.permission.user' | translate\"\n             [formControl]=\"formControl\"\n             [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onProfilSelected($event.option.value)\"\n        [displayWith]=\"displayFn\">\n          <mat-option *ngFor=\"let profil of this.profils\" [value]=\"profil\">\n              {{profil.title}}<br>\n              <small class=\"mat-typography\">{{profil.name}}</small>\n          </mat-option>\n      </mat-autocomplete>\n     <mat-error>\n       {{ 'igo.context.permission.profilRequired' | translate }}\n     </mat-error>\n    </mat-form-field>\n\n\n    <mat-radio-group formControlName=\"typePermission\">\n      <mat-radio-button value=\"read\">\n        {{ 'igo.context.permission.read' | translate }}\n      </mat-radio-button>\n      <mat-radio-button value=\"write\">\n        {{ 'igo.context.permission.write' | translate }}\n      </mat-radio-button>\n    </mat-radio-group>\n\n\n    <div class=\"igo-form-button-group\">\n      <button\n        mat-raised-button\n        type=\"submit\"\n        [disabled]=\"!form.valid\">\n        {{ 'igo.context.permission.addBtn' | translate }}\n      </button>\n    </div>\n\n  </form>\n\n  <igo-list *ngIf=\"permissions && context.scope !== 'private'\">\n    <ng-template ngFor let-groupPermissions [ngForOf]=\"permissions | keyvalue\">\n      <igo-collapsible\n        *ngIf=\"groupPermissions.value.length\"\n        [title]=\"'igo.context.permission.' + groupPermissions.key | translate\">\n\n        <ng-template ngFor let-permission [ngForOf]=\"groupPermissions.value\">\n          <mat-list-item>\n            <mat-icon mat-list-avatar svgIcon=\"account-outline\"></mat-icon>\n            <h4 mat-line>{{permission.profilTitle}} <small class=\"mat-typography\">{{permission.profil}}</small></h4>\n\n            <div igoStopPropagation\n                 class=\"igo-actions-container\">\n\n               <button *ngIf=\"canWrite || permission.profil === authService.decodeToken().user.sourceId\"\n                 mat-icon-button\n                 [matTooltip]=\"'igo.context.permission.delete' | translate\"\n                 matTooltipShowDelay=\"500\"\n                 color=\"warn\"\n                 (click)=\"removePermission.emit(permission)\">\n                 <mat-icon svgIcon=\"delete\"></mat-icon>\n               </button>\n            </div>\n\n          </mat-list-item>\n        </ng-template>\n      </igo-collapsible>\n    </ng-template>\n  </igo-list>\n\n</div>\n","import { Component, Input, Output, EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\n\nimport {\n  Context,\n  ContextPermission,\n  ContextPermissionsList,\n  ContextProfils\n} from '../shared/context.interface';\nimport { TypePermission } from '../shared/context.enum';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '@igo2/auth';\nimport { ConfigService } from '@igo2/core';\n\n@Component({\n  selector: 'igo-context-permissions',\n  templateUrl: './context-permissions.component.html',\n  styleUrls: ['./context-permissions.component.scss']\n})\nexport class ContextPermissionsComponent implements OnInit {\n  public form: FormGroup;\n\n  @Input()\n  get context(): Context {\n    return this._context;\n  }\n  set context(value: Context) {\n    this._context = value;\n    this.cd.detectChanges();\n  }\n  private _context: Context;\n\n  @Input()\n  get permissions(): ContextPermissionsList {\n    return this._permissions;\n  }\n  set permissions(value: ContextPermissionsList) {\n    this._permissions = value;\n    this.cd.detectChanges();\n  }\n  private _permissions: ContextPermissionsList;\n\n  get profils(): ContextProfils[] {\n    return this._profils;\n  }\n  set profils(value: ContextProfils[]) {\n    this._profils = value;\n    this.cd.detectChanges();\n  }\n  private _profils: ContextProfils[] = [];\n\n  get canWrite(): boolean {\n    return this.context.permission === TypePermission[TypePermission.write];\n  }\n\n  private baseUrlProfils;\n\n  public formControl = new FormControl();\n  formValueChanges$$: Subscription;\n\n  @Output() addPermission: EventEmitter<ContextPermission> = new EventEmitter();\n  @Output() removePermission: EventEmitter<ContextPermission> = new EventEmitter();\n  @Output() scopeChanged: EventEmitter<Context> = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private http: HttpClient,\n              public authService: AuthService,\n              private config: ConfigService) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n\n    this.baseUrlProfils = this.config.getConfig('context.url') + '/profils-users?';\n\n    this.formValueChanges$$ = this.formControl.valueChanges.subscribe((value) => {\n      if (value.length) {\n        this.http.get(this.baseUrlProfils + 'q=' + value).subscribe(profils => {\n          this.profils = profils as ContextProfils[];\n        });\n        this.profils.filter((profil) => {\n          const filterNormalized = value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n          const profilTitleNormalized = profil.title.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n          const profilNameNormalized = profil.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n          const profilNormalized = profilNameNormalized + profilTitleNormalized;\n          return profilNormalized.includes(filterNormalized);\n        });\n      } else {\n        this.profils = [];\n      }\n    });\n  }\n\n  displayFn(profil?: ContextProfils): string | undefined {\n    return profil ? profil.title : undefined;\n  }\n\n  public handleFormSubmit(value) {\n    this.addPermission.emit(value);\n  }\n\n  private buildForm(): void {\n    this.form = this.formBuilder.group({\n      profil: [],\n      typePermission: ['read']\n    });\n  }\n\n  onProfilSelected(value) {\n    this.form.setValue({\n      profil: value.name,\n      typePermission: this.form.value.typePermission\n    });\n  }\n}\n","import {\n  Directive,\n  Self,\n  OnInit,\n  OnDestroy,\n  HostListener,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { MessageService, LanguageService } from '@igo2/core';\n\nimport {\n  Context,\n  ContextPermission,\n  DetailedContext\n} from '../shared/context.interface';\nimport { ContextService } from '../shared/context.service';\nimport { ContextPermissionsComponent } from './context-permissions.component';\n\n@Directive({\n  selector: '[igoContextPermissionsBinding]'\n})\nexport class ContextPermissionsBindingDirective implements OnInit, OnDestroy {\n  private component: ContextPermissionsComponent;\n  private editedContext$$: Subscription;\n\n  @HostListener('addPermission', ['$event'])\n  onAddPermission(permission: ContextPermission) {\n    const translate = this.languageService.translate;\n    if (!permission.profil) {\n      const message = translate.instant(\n        'igo.context.contextManager.errors.addPermissionEmpty'\n      );\n      const title = translate.instant(\n        'igo.context.contextManager.errors.addPermissionTitle'\n      );\n      this.messageService.error(message, title);\n      return;\n    }\n    const contextId = this.component.context.id;\n    this.contextService\n      .addPermissionAssociation(\n        contextId,\n        permission.profil,\n        permission.typePermission\n      )\n      .subscribe(profils => {\n        for (const p of profils) {\n          this.component.permissions[permission.typePermission].push(p);\n        }\n        const profil = permission.profil;\n        const message = translate.instant(\n          'igo.context.permission.dialog.addMsg',\n          {\n            value: profil\n          }\n        );\n        const title = translate.instant(\n          'igo.context.permission.dialog.addTitle'\n        );\n        this.messageService.success(message, title);\n        this.cd.detectChanges();\n      });\n  }\n\n  @HostListener('removePermission', ['$event'])\n  onRemovePermission(permission: ContextPermission) {\n    const contextId = this.component.context.id;\n    this.contextService\n      .deletePermissionAssociation(contextId, permission.id)\n      .subscribe(() => {\n        const index = this.component.permissions[\n          permission.typePermission\n        ].findIndex(p => {\n          return p.id === permission.id;\n        });\n        this.component.permissions[permission.typePermission].splice(index, 1);\n\n        const profil = permission.profil;\n        const translate = this.languageService.translate;\n        const message = translate.instant(\n          'igo.context.permission.dialog.deleteMsg',\n          {\n            value: profil\n          }\n        );\n        const title = translate.instant(\n          'igo.context.permission.dialog.deleteTitle'\n        );\n        this.messageService.success(message, title);\n        this.cd.detectChanges();\n      });\n  }\n\n  @HostListener('scopeChanged', ['$event'])\n  onScopeChanged(context: Context) {\n    const scope = context.scope;\n    this.contextService.update(context.id, { scope }).subscribe(() => {\n      const translate = this.languageService.translate;\n      const message = translate.instant(\n        'igo.context.permission.dialog.scopeChangedMsg',\n        {\n          value: translate.instant('igo.context.permission.scope.' + scope)\n        }\n      );\n      const title = translate.instant(\n        'igo.context.permission.dialog.scopeChangedTitle'\n      );\n      this.messageService.success(message, title);\n    });\n  }\n\n  constructor(\n    @Self() component: ContextPermissionsComponent,\n    private contextService: ContextService,\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private cd: ChangeDetectorRef\n  ) {\n    this.component = component;\n  }\n\n  ngOnInit() {\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\n      context => this.handleEditedContextChange(context)\n    );\n  }\n\n  ngOnDestroy() {\n    this.editedContext$$.unsubscribe();\n    this.contextService.editedContext$.next(undefined);\n  }\n\n  private handleEditedContextChange(context: DetailedContext) {\n    this.component.context = context;\n\n    if (context) {\n      this.contextService\n        .getPermissions(context.id)\n        .subscribe(permissionsArray => {\n          permissionsArray = permissionsArray || [];\n          const permissions = {\n            read: permissionsArray.filter(p => {\n              return p.typePermission.toString() === 'read';\n            }),\n            write: permissionsArray.filter(p => {\n              return p.typePermission.toString() === 'write';\n            })\n          };\n          return (this.component.permissions = permissions);\n        });\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { take } from 'rxjs/operators';\n\nimport { MessageService, LanguageService } from '@igo2/core';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { ContextService } from '../../context-manager/shared/context.service';\nimport { BookmarkDialogComponent } from './bookmark-dialog.component';\n\n@Component({\n  selector: 'igo-bookmark-button',\n  templateUrl: './bookmark-button.component.html',\n  styleUrls: ['./bookmark-button.component.scss']\n})\nexport class BookmarkButtonComponent {\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n\n  @Input()\n  get color(): string {\n    return this._color;\n  }\n  set color(value: string) {\n    this._color = value;\n  }\n  private _color: string;\n\n  constructor(\n    private dialog: MatDialog,\n    private contextService: ContextService,\n    private languageService: LanguageService,\n    private messageService: MessageService\n  ) {}\n\n  createContext() {\n    this.dialog\n      .open(BookmarkDialogComponent, { disableClose: false })\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe(title => {\n        if (title) {\n          const context = this.contextService.getContextFromMap(this.map);\n          context.title = title;\n          this.contextService.create(context).subscribe(() => {\n            const translate = this.languageService.translate;\n            const titleD = translate.instant(\n              'igo.context.bookmarkButton.dialog.createTitle'\n            );\n            const message = translate.instant(\n              'igo.context.bookmarkButton.dialog.createMsg',\n              {\n                value: context.title\n              }\n            );\n            this.messageService.success(message, titleD);\n            this.contextService.loadContext(context.uri);\n          });\n        }\n      });\n  }\n}\n","<div class=\"igo-bookmark-button-container\">\n  <button\n    mat-icon-button\n    [matTooltip]=\"'igo.context.bookmarkButton.create' | translate\"\n    matTooltipPosition=\"above\"\n    [color]=\"color\"\n    (click)=\"createContext()\">\n    <mat-icon svgIcon=\"star\"></mat-icon>\n  </button>\n</div>\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'igo-poi-dialog',\n  templateUrl: './poi-dialog.component.html'\n})\nexport class PoiDialogComponent {\n  public title: string;\n\n  constructor(public dialogRef: MatDialogRef<PoiDialogComponent>) {}\n}\n","<h1 mat-dialog-title class=\"mat-typography\">{{ 'igo.context.poiButton.dialog.title' | translate }}</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <input matInput required autocomplete=\"off\"\n      [placeholder]=\"'igo.context.poiButton.dialog.placeholder' | translate\"\n      [(ngModel)]=\"title\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button color=\"primary\"\n         [disabled]=\"!title\"\n         (click)=\"dialogRef.close(title)\">\n    {{'igo.common.confirmDialog.confirmBtn' | translate}}\n  </button>\n  <button mat-button\n          (click)=\"dialogRef.close(false)\">\n    {{'igo.common.confirmDialog.cancelBtn' | translate}}\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\nimport { ConfigService } from '@igo2/core';\nimport { Poi } from './poi.interface';\n\n@Injectable()\nexport class PoiService {\n  private baseUrl: string;\n\n  constructor(private http: HttpClient, private config: ConfigService) {\n    this.baseUrl = this.config.getConfig('context.url');\n  }\n\n  get(): Observable<Poi[]> {\n    if (!this.baseUrl) {\n      return EMPTY;\n    }\n\n    const url = this.baseUrl + '/pois';\n    return this.http.get<Poi[]>(url);\n  }\n\n  delete(id: string): Observable<void> {\n    const url = this.baseUrl + '/pois/' + id;\n    return this.http.delete<void>(url);\n  }\n\n  create(context: Poi): Observable<Poi> {\n    const url = this.baseUrl + '/pois';\n    return this.http.post<Poi>(url, context);\n  }\n}\n","<mat-select [placeholder]=\"'igo.context.poiButton.placeholder' | translate\"\n           floatPlaceholder=\"never\">\n\n  <mat-option (click)=\"createPoi()\">\n    <div class=\"titlePoi\">{{ 'igo.context.poiButton.create' | translate }}</div>\n    <button igoStopPropagation class=\"addPoi buttonPoi\"\n      mat-icon-button\n      color=\"primary\"\n      (click)=\"createPoi()\">\n      <mat-icon svgIcon=\"plus-circle\"></mat-icon>\n    </button>\n  </mat-option>\n  <mat-option *ngFor=\"let poi of pois\" [value]=\"poi.id\" (click)=\"zoomOnPoi(poi.id)\">\n    <div class=\"titlePoi\">{{ poi.title }}</div>\n    <button igoStopPropagation class=\"deletePoi buttonPoi\"\n      mat-icon-button\n      color=\"warn\"\n      (click)=\"deletePoi(poi)\">\n      <mat-icon svgIcon=\"delete\"></mat-icon>\n    </button>\n  </mat-option>\n</mat-select>\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport * as olproj from 'ol/proj';\nimport * as oleasing from 'ol/easing';\nimport olPoint from 'ol/geom/Point';\n\nimport { MessageService, LanguageService } from '@igo2/core';\nimport { ConfirmDialogService } from '@igo2/common';\nimport { AuthService } from '@igo2/auth';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { PoiService } from './shared/poi.service';\nimport { Poi } from './shared/poi.interface';\nimport { PoiDialogComponent } from './poi-dialog.component';\n\n@Component({\n  selector: 'igo-poi-button',\n  templateUrl: './poi-button.component.html',\n  styleUrls: ['./poi-button.component.scss']\n})\nexport class PoiButtonComponent implements OnInit, OnDestroy {\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n\n  @Input()\n  get color(): string {\n    return this._color;\n  }\n  set color(value: string) {\n    this._color = value;\n  }\n  private _color: string;\n\n  public pois: Poi[];\n  private authenticate$$: Subscription;\n\n  constructor(\n    private dialog: MatDialog,\n    private authService: AuthService,\n    private poiService: PoiService,\n    private messageService: MessageService,\n    private languageService: LanguageService,\n    private confirmDialogService: ConfirmDialogService\n  ) {}\n\n  ngOnInit() {\n    this.authenticate$$ = this.authService.authenticate$.subscribe(auth => {\n      if (auth) {\n        this.getPois();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.authenticate$$.unsubscribe();\n  }\n\n  deletePoi(poi: Poi) {\n    if (poi && poi.id) {\n      const translate = this.languageService.translate;\n      this.confirmDialogService\n        .open(translate.instant('igo.context.poiButton.dialog.confirmDelete'))\n        .subscribe(confirm => {\n          if (confirm) {\n            this.poiService.delete(poi.id).subscribe(\n              () => {\n                const title = translate.instant(\n                  'igo.context.poiButton.dialog.deleteTitle'\n                );\n                const message = translate.instant(\n                  'igo.context.poiButton.dialog.deleteMsg',\n                  {\n                    value: poi.title\n                  }\n                );\n                this.messageService.info(message, title);\n                this.pois = this.pois.filter(p => p.id !== poi.id);\n              },\n              err => {\n                err.error.title = 'DELETE Pois';\n                this.messageService.showError(err);\n              }\n            );\n          }\n        });\n    }\n  }\n\n  private getPois() {\n    this.poiService.get().pipe(take(1)).subscribe(\n      rep => {\n        this.pois = rep;\n      },\n      err => {\n        err.error.title = 'GET Pois';\n        this.messageService.showError(err);\n      }\n    );\n  }\n\n  createPoi() {\n    const view = this.map.ol.getView();\n    const proj = view.getProjection().getCode();\n    const center: any = new olPoint(view.getCenter()).transform(\n      proj,\n      'EPSG:4326'\n    );\n\n    const poi: Poi = {\n      title: '',\n      x: center.getCoordinates()[0],\n      y: center.getCoordinates()[1],\n      zoom: view.getZoom()\n    };\n\n    this.dialog\n      .open(PoiDialogComponent, { disableClose: false })\n      .afterClosed()\n      .subscribe(title => {\n        if (title) {\n          poi.title = title;\n          this.poiService.create(poi).subscribe(\n            newPoi => {\n              const translate = this.languageService.translate;\n              const titleD = translate.instant(\n                'igo.context.poiButton.dialog.createTitle'\n              );\n              const message = translate.instant(\n                'igo.context.poiButton.dialog.createMsg',\n                {\n                  value: poi.title\n                }\n              );\n              this.messageService.success(message, titleD);\n              poi.id = newPoi.id;\n              this.pois.push(poi);\n            },\n            err => {\n              err.error.title = 'POST Pois';\n              this.messageService.showError(err);\n            }\n          );\n        }\n      });\n  }\n\n  zoomOnPoi(id) {\n    const poi = this.pois.find(p => p.id === id);\n\n    const center = olproj.fromLonLat(\n      [Number(poi.x), Number(poi.y)],\n      this.map.projection\n    );\n\n    this.map.ol.getView().animate({\n      center,\n      zoom: poi.zoom,\n      duration: 500,\n      easing: oleasing.easeOut\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { StorageService } from '@igo2/core';\nimport { AuthService } from '@igo2/auth';\n\n@Component({\n  selector: 'igo-user-dialog',\n  templateUrl: './user-dialog.component.html'\n})\nexport class UserDialogComponent {\n  public user;\n  public exp;\n\n  constructor(\n    public dialogRef: MatDialogRef<UserDialogComponent>,\n    private auth: AuthService,\n    private storageService: StorageService\n  ) {\n    const decodeToken = this.auth.decodeToken();\n    this.user = decodeToken.user;\n    this.exp = new Date(decodeToken.exp * 1000).toLocaleString();\n  }\n\n  clearPreferences() {\n    this.storageService.clear();\n  }\n}\n","<h1 mat-dialog-title class=\"mat-typography\">{{'igo.context.userButton.infoTitle' | translate}}</h1>\n<div mat-dialog-content class=\"mat-typography\">\n  <p>{{'igo.context.userButton.dialog.user' | translate}}: {{user.sourceId}}</p>\n  <p>{{'igo.context.userButton.dialog.email' | translate}}: {{user.email}}</p>\n  <p>{{'igo.context.userButton.dialog.expiration' | translate}}: {{exp}}</p>\n  <button mat-stroked-button color=\"primary\" (click)=\"clearPreferences()\">\n    {{'igo.context.userButton.dialog.clearPreferences' | translate}}\n  </button>\n  <br>\n</div>\n<div mat-dialog-actions style=\"justify-content: center\">\n  <button mat-raised-button color=\"primary\"\n         (click)=\"dialogRef.close(false)\">\n    OK\n  </button>\n</div>\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function userButtonSlideInOut(): AnimationTriggerMetadata {\n  return trigger('userButtonState', [\n    state(\n      'collapse',\n      style({\n        width: '0',\n        overflow: 'hidden',\n        display: 'none'\n      })\n    ),\n    state(\n      'expand',\n      style({\n        overflow: 'hidden',\n        display: 'display'\n      })\n    ),\n    transition('collapse => expand', animate('200ms')),\n    transition('expand => collapse', animate('200ms'))\n  ]);\n}\n","<div *ngIf=\"visible\" class=\"igo-user-button-container\">\n  <div class=\"igo-user-button-more-container\" [@userButtonState]=\"expand ? 'expand' : 'collapse'\">\n\n    <igo-poi-button *ngIf=\"hasApi\" [color]=\"color\" [map]=\"map\"></igo-poi-button>\n\n    <button\n      mat-icon-button\n      [matTooltip]=\"'igo.context.userButton.infoTitle' | translate\"\n      matTooltipPosition=\"above\"\n      [color]=\"color\"\n      (click)=\"infoUser()\">\n      <mat-icon svgIcon=\"information-outline\"></mat-icon>\n    </button>\n\n    <button\n      mat-icon-button\n      [matTooltip]=\"'igo.context.userButton.logout' | translate\"\n      matTooltipPosition=\"above\"\n      [color]=\"color\"\n      (click)=\"logout()\">\n      <mat-icon svgIcon=\"power\"></mat-icon>\n    </button>\n\n  </div>\n\n  <button\n    mat-icon-button\n    [color]=\"auth.authenticated ? color : 'warn'\"\n    (click)=\"accountClick()\">\n    <mat-icon svgIcon=\"account-box\"></mat-icon>\n  </button>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ConfigService } from '@igo2/core';\nimport { AuthService } from '@igo2/auth';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { UserDialogComponent } from './user-dialog.component';\nimport { userButtonSlideInOut } from './user-button.animation';\n\n@Component({\n  selector: 'igo-user-button',\n  templateUrl: './user-button.component.html',\n  styleUrls: ['./user-button.component.scss'],\n  animations: [userButtonSlideInOut()]\n})\nexport class UserButtonComponent {\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n\n  @Input()\n  get color(): string {\n    return this._color;\n  }\n  set color(value: string) {\n    this._color = value;\n  }\n  private _color: string;\n\n  public expand = false;\n  public visible = false;\n  public hasApi = false;\n\n  constructor(\n    private dialog: MatDialog,\n    private config: ConfigService,\n    public auth: AuthService\n  ) {\n    this.visible = this.config.getConfig('auth') ? true : false;\n    this.hasApi = this.config.getConfig('context.url') !== undefined;\n  }\n\n  accountClick() {\n    if (this.auth.authenticated) {\n      this.expand = !this.expand;\n    } else {\n      this.auth.logout();\n    }\n  }\n\n  logout() {\n    this.expand = false;\n    this.auth.logout();\n  }\n\n  infoUser() {\n    this.dialog.open(UserDialogComponent, { disableClose: false });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoConfirmDialogModule, IgoStopPropagationModule } from '@igo2/common';\nimport { IgoAuthModule } from '@igo2/auth';\n\nimport { BookmarkButtonComponent } from './bookmark-button/bookmark-button.component';\nimport { BookmarkDialogComponent } from './bookmark-button/bookmark-dialog.component';\nimport { PoiButtonComponent } from './poi-button/poi-button.component';\nimport { PoiDialogComponent } from './poi-button/poi-dialog.component';\nimport { PoiService } from './poi-button/shared/poi.service';\nimport { UserDialogComponent } from './user-button/user-dialog.component';\nimport { UserButtonComponent } from './user-button/user-button.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IgoLanguageModule,\n    IgoConfirmDialogModule,\n    IgoStopPropagationModule,\n    IgoAuthModule,\n    FormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatTooltipModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatInputModule\n  ],\n  exports: [BookmarkButtonComponent, PoiButtonComponent, UserButtonComponent, BookmarkDialogComponent],\n  declarations: [\n    BookmarkButtonComponent,\n    BookmarkDialogComponent,\n    PoiButtonComponent,\n    PoiDialogComponent,\n    UserButtonComponent,\n    UserDialogComponent\n  ],\n  providers: [PoiService]\n})\nexport class IgoContextMapButtonModule {\n  static forRoot(): ModuleWithProviders<IgoContextMapButtonModule> {\n    return {\n      ngModule: IgoContextMapButtonModule\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoAuthModule } from '@igo2/auth';\nimport { IgoLanguageModule } from '@igo2/core';\nimport {\n  IgoListModule,\n  IgoKeyValueModule,\n  IgoCollapsibleModule,\n  IgoStopPropagationModule,\n  IgoActionbarModule\n} from '@igo2/common';\n\nimport { MapContextDirective } from './shared/map-context.directive';\nimport { LayerContextDirective } from './shared/layer-context.directive';\nimport { ContextListComponent } from './context-list/context-list.component';\nimport { ContextListBindingDirective } from './context-list/context-list-binding.directive';\nimport { ContextItemComponent } from './context-item/context-item.component';\nimport { ContextFormComponent } from './context-form/context-form.component';\nimport { ContextEditComponent } from './context-edit/context-edit.component';\nimport { ContextEditBindingDirective } from './context-edit/context-edit-binding.directive';\nimport { ContextPermissionsComponent } from './context-permissions/context-permissions.component';\nimport { ContextPermissionsBindingDirective } from './context-permissions/context-permissions-binding.directive';\nimport { IgoContextMapButtonModule } from '../context-map-button/context-map-button.module';\nimport { IgoContextImportExportModule } from '../context-import-export/context-import-export.module';\n\nconst CONTEXT_DIRECTIVES = [\n  MapContextDirective,\n  LayerContextDirective\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatAutocompleteModule,\n    IgoAuthModule,\n    IgoListModule,\n    IgoKeyValueModule,\n    IgoCollapsibleModule,\n    IgoStopPropagationModule,\n    IgoLanguageModule,\n    IgoContextImportExportModule,\n    IgoContextMapButtonModule,\n    IgoActionbarModule\n  ],\n  exports: [\n    ContextListComponent,\n    ContextListBindingDirective,\n    ContextItemComponent,\n    ContextFormComponent,\n    ContextEditComponent,\n    ContextEditBindingDirective,\n    ContextPermissionsComponent,\n    ContextPermissionsBindingDirective,\n\n    ...CONTEXT_DIRECTIVES\n  ],\n  declarations: [\n    ContextListComponent,\n    ContextListBindingDirective,\n    ContextItemComponent,\n    ContextFormComponent,\n    ContextEditComponent,\n    ContextEditBindingDirective,\n    ContextPermissionsComponent,\n    ContextPermissionsBindingDirective,\n\n    ...CONTEXT_DIRECTIVES\n  ]\n})\nexport class IgoContextManagerModule {\n  static forRoot(): ModuleWithProviders<IgoContextManagerModule> {\n    return {\n      ngModule: IgoContextManagerModule\n    };\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\n\nimport { RouteService, MessageService } from '@igo2/core';\nimport { Layer, WMSDataSourceOptions } from '@igo2/geo';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\nimport { ContextService } from '../../context-manager/shared/context.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShareMapService {\n\n  constructor(\n    private contextService: ContextService,\n    private messageService: MessageService,\n    @Optional() private route: RouteService\n  ) {}\n\n  getUrlWithApi(formValues) {\n    return `${location.origin + location.pathname}?context=${formValues.uri}`;\n  }\n\n  createContextShared(map: IgoMap, formValues) {\n    const context = this.contextService.getContextFromMap(map);\n    context.scope = 'public';\n    context.title = formValues.title;\n    context.uri = formValues.uri;\n    return this.contextService.create(context);\n  }\n\n  updateContextShared(map: IgoMap, formValues, id: string) {\n    const context = this.contextService.getContextFromMap(map);\n    return this.contextService.update(id, {\n      title: formValues.title,\n      map: context.map\n    } as DetailedContext);\n  }\n\n  getUrlWithoutApi(map: IgoMap, publicShareOption) {\n    if (\n      !this.route ||\n      !this.route.options.visibleOnLayersKey ||\n      !this.route.options.visibleOffLayersKey ||\n      !map.viewController.getZoom()\n    ) {\n      return;\n    }\n    const llc = publicShareOption.layerlistControls.querystring;\n\n    let visibleKey = this.route.options.visibleOnLayersKey;\n    let invisibleKey = this.route.options.visibleOffLayersKey;\n    const layers = map.layers;\n\n    const visibleLayers = layers.filter(lay => lay.visible && !lay.isIgoInternalLayer);\n    const invisibleLayers = layers.filter(lay => !lay.visible && !lay.isIgoInternalLayer);\n\n    if (visibleLayers.length === 0) {\n      visibleKey = '';\n    }\n    if (invisibleLayers.length === 0) {\n      invisibleKey = '';\n    }\n\n    let layersUrl = '';\n    let layersToLoop = [];\n    if (visibleLayers.length > invisibleLayers.length) {\n      layersUrl = `${visibleKey}=*&${invisibleKey}=`;\n      layersToLoop = invisibleLayers;\n    } else {\n      layersUrl = `${invisibleKey}=*&${visibleKey}=`;\n      layersToLoop = visibleLayers;\n    }\n\n    for (const layer of layersToLoop) {\n      if (layer.id) {\n        layersUrl += layer.id + ',';\n      }\n    }\n    const contextLayersID = [];\n    const contextLayers = this.contextService.context$.value.layers;\n    for (const contextLayer of contextLayers) {\n      if ( typeof contextLayer.id !== 'undefined' || typeof contextLayer.source !== 'undefined' ) {\n        contextLayersID.push(contextLayer.id || contextLayer.source.id);\n      }\n    }\n\n    const addedLayersQueryParamsWms = this.makeLayersByService(layers, contextLayersID, 'wms');\n    const addedLayersQueryParamsWmts = this.makeLayersByService(layers, contextLayersID, 'wmts');\n    const addedLayersQueryParamsArcgisRest = this.makeLayersByService(layers, contextLayersID, 'arcgisrest');\n    const addedLayersQueryParamsImageArcgisRest = this.makeLayersByService(layers, contextLayersID, 'imagearcgisrest');\n    const addedLayersQueryParamsTileArcgisRest = this.makeLayersByService(layers, contextLayersID, 'tilearcgisrest');\n\n    layersUrl = layersUrl.substr(0, layersUrl.length - 1);\n\n    const zoomKey = this.route.options.zoomKey;\n    const centerKey = this.route.options.centerKey;\n    const contextKey = this.route.options.contextKey;\n\n    const zoom = `${zoomKey}=${map.viewController.getZoom()}`;\n    const arrayCenter = map.viewController.getCenter('EPSG:4326') || [];\n    const long = arrayCenter[0].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\n    const lat = arrayCenter[1].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\n    const center = `${centerKey}=${long},${lat}`.replace(/.00000/g, '');\n    let context = '';\n    if (this.contextService.context$.value) {\n      context = `${contextKey}=${this.contextService.context$.value.uri}`;\n    }\n\n    let url = `${location.origin}${location.pathname}?${context}&${zoom}&${center}&${layersUrl}&${llc}&${addedLayersQueryParamsWms}&${llc}&${addedLayersQueryParamsWmts}&${addedLayersQueryParamsArcgisRest}&${addedLayersQueryParamsImageArcgisRest}&${addedLayersQueryParamsTileArcgisRest}`;\n\n    for (let i = 0; i < 5; i++) {\n      url = url.replace(/&&/g, '&');\n      url = url.endsWith('&') ? url.slice(0, -1) : url;\n    }\n    url = url.endsWith('&') ? url.slice(0, -1) : url;\n    url = url.replace('?&wm', '&wm');\n    url = url.replace('?&', '?');\n\n    return url;\n  }\n\n  private makeLayersByService(layers: Layer[], contextLayersID: any[], typeService: string): string {\n\n    const addedLayersByService = [];\n    for (const layer of layers.filter(l => l.dataSource.options?.type === typeService)) {\n      if (contextLayersID.indexOf(layer.id) === -1) {\n        let linkUrl = encodeURIComponent((layer.dataSource.options as any).url);\n        let addedLayer = '';\n        let layerVersion: string;\n        switch (layer.dataSource.options.type.toLowerCase()) {\n          case 'wms':\n            const datasourceOptions = layer.dataSource.options as WMSDataSourceOptions;\n            addedLayer = encodeURIComponent(datasourceOptions.params.LAYERS);\n            layerVersion = datasourceOptions.params.VERSION === '1.3.0' ? layerVersion : datasourceOptions.params.VERSION;\n            break;\n          case 'wmts':\n          case 'arcgisrest':\n          case 'imagearcgisrest':\n          case 'tilearcgisrest':\n            addedLayer = encodeURIComponent((layer.dataSource.options as any).layer);\n            break;\n        }\n        const addedLayerPosition = `${addedLayer}:igoz${layer.zIndex}`;\n\n        let version = '';\n        if (layerVersion) {\n          const operator = (layer.dataSource.options as any).url.indexOf('?') === -1 ? '?' : '&';\n          version = encodeURIComponent(`${operator}VERSION=${layerVersion}`);\n        }\n        linkUrl = `${linkUrl}${version}`;\n\n        if (\n          !addedLayersByService.find(definedUrl => definedUrl.url === linkUrl)\n        ) {\n          addedLayersByService.push({\n            url: linkUrl,\n            layers: [addedLayerPosition]\n          });\n        } else {\n          addedLayersByService.forEach(service => {\n            if (service.url === linkUrl) {\n              service.layers.push(addedLayerPosition);\n            }\n          });\n        }\n      }\n    }\n\n    let addedLayersQueryParams = '';\n    if (addedLayersByService.length >= 1) {\n      let linkUrlKey;\n      let layersKey;\n      /*\n      const linkUrlKey = (typeService === 'wms') ? this.route.options.wmsUrlKey :\n        (typeService === 'wmts') ? this.route.options.wmtsUrlKey : '' ;\n      const layersKey = (typeService === 'wms') ? this.route.options.wmsLayersKey :\n        (typeService === 'wmts') ? this.route.options.wmtsLayersKey : '' ;\n*/\n      switch (typeService.toLowerCase()) {\n        case 'wms':\n          linkUrlKey = this.route.options.wmsUrlKey;\n          layersKey = this.route.options.wmsLayersKey;\n          break;\n        case 'wmts':\n          linkUrlKey = this.route.options.wmtsUrlKey;\n          layersKey = this.route.options.wmtsLayersKey;\n          break;\n        case 'arcgisrest':\n          linkUrlKey = this.route.options.arcgisUrlKey;\n          layersKey = this.route.options.arcgisLayersKey;\n          break;\n        case 'imagearcgisrest':\n          linkUrlKey = this.route.options.iarcgisUrlKey;\n          layersKey = this.route.options.iarcgisLayersKey;\n          break;\n        case 'tilearcgisrest':\n          linkUrlKey = this.route.options.tarcgisUrlKey;\n          layersKey = this.route.options.tarcgisLayersKey;\n          break;\n        default:\n          linkUrlKey = '';\n          layersKey = '';\n      }\n\n      let linkUrlQueryParams = '';\n      let layersQueryParams = '';\n      addedLayersByService.forEach(service => {\n        linkUrlQueryParams += `${service.url},`;\n        layersQueryParams += `(${service.layers.join(',')}),`;\n      });\n      linkUrlQueryParams = linkUrlQueryParams.endsWith(',')\n        ? linkUrlQueryParams.slice(0, -1)\n        : linkUrlQueryParams;\n      layersQueryParams = layersQueryParams.endsWith(',')\n        ? layersQueryParams.slice(0, -1)\n        : layersQueryParams;\n      addedLayersQueryParams = `${linkUrlKey}=${linkUrlQueryParams}&${layersKey}=${layersQueryParams}`;\n    }\n\n    return addedLayersQueryParams;\n  }\n}\n","<form class=\"igo-form\" [formGroup]=\"form\"\n  (ngSubmit)=\"createUrl(form.value)\">\n\n  <div class=\"igo-input-container\">\n    <mat-form-field>\n      <input matInput required\n             [placeholder]=\"'igo.context.contextManager.form.title' | translate\"\n             formControlName=\"title\">\n     <mat-error>\n      {{ 'igo.context.contextManager.form.titleRequired' | translate }}\n     </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div id=\"uriInput\" class=\"igo-input-container\">\n    <mat-form-field>\n      <span *ngIf=\"userId\" class=\"prefix\">{{userId}}-</span>\n      <span class=\"fieldWrapper\">\n        <input matInput required\n             [readonly]=\"!userId\"\n             [placeholder]=\"'igo.context.contextManager.form.uri' | translate\"\n             formControlName=\"uri\">\n       </span>\n     <mat-error>\n      {{ 'igo.context.contextManager.form.uriRequired' | translate }}\n     </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div class=\"igo-form-button-group\">\n    <button *ngIf=\"!url\"\n      mat-raised-button\n      type=\"submit\"\n      [disabled]=\"!form.valid\">\n      {{ 'igo.context.shareMap.button' | translate }}\n    </button>\n    <button *ngIf=\"url\"\n      mat-raised-button\n      type=\"button\"\n      (click)=\"updateContextShared(form.value)\">\n      {{ 'igo.context.shareMap.refreshBtn' | translate }}\n    </button>\n  </div>\n</form>\n\n<div *ngIf=\"url\" class=\"igo-input-container linkToShare\">\n  <mat-form-field>\n    <textarea #textArea matInput readonly rows=\"3\"\n      class=\"textAreaWithButton\"\n      [placeholder]=\"'igo.context.shareMap.placeholderLink' | translate\"\n      [value]=\"url\"></textarea>\n    <button\n      mat-icon-button\n      tooltip-position=\"below\"\n      matTooltipShowDelay=\"500\"\n      [matTooltip]=\"'igo.context.shareMap.copy' | translate\"\n      color=\"primary\"\n      (click)=\"copyTextToClipboard(textArea)\">\n      <mat-icon svgIcon=\"content-copy\"></mat-icon>\n    </button>\n  </mat-form-field>\n<div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { uuid, Clipboard } from '@igo2/utils';\nimport { MessageService, LanguageService } from '@igo2/core';\nimport { AuthService } from '@igo2/auth';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { ShareMapService } from '../shared/share-map.service';\n\n@Component({\n  selector: 'igo-share-map-api',\n  templateUrl: './share-map-api.component.html',\n  styleUrls: ['./share-map-api.component.scss']\n})\nexport class ShareMapApiComponent implements OnInit {\n  public form: FormGroup;\n\n  @Input() map: IgoMap;\n\n  public url: string;\n  public userId: string;\n  public idContextShared: string;\n\n  constructor(\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private auth: AuthService,\n    private shareMapService: ShareMapService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.auth.authenticate$.subscribe(auth => {\n      const decodeToken = this.auth.decodeToken();\n      this.userId = decodeToken.user ? decodeToken.user.id : undefined;\n      this.buildForm();\n    });\n  }\n\n  createUrl(values: any = {}) {\n    const inputs = Object.assign({}, values);\n    inputs.uri = this.userId ? `${this.userId}-${values.uri}` : values.uri;\n    this.url = this.shareMapService.getUrlWithApi(inputs);\n    this.shareMapService.createContextShared(this.map, inputs).subscribe(\n      rep => {\n        this.idContextShared = rep.id;\n        const title = this.languageService.translate.instant(\n          'igo.context.contextManager.dialog.saveTitle'\n        );\n        const msg = this.languageService.translate.instant('igo.context.contextManager.dialog.saveMsg', {\n          value: inputs.title\n        });\n        this.messageService.success(msg, title);\n      },\n      err => {\n        err.error.title = this.languageService.translate.instant(\n          'igo.context.shareMap.errorTitle'\n        );\n        this.messageService.showError(err);\n      }\n    );\n  }\n\n  updateContextShared(values: any = {}) {\n    const inputs = Object.assign({}, values);\n    inputs.uri = this.userId ? `${this.userId}-${values.uri}` : values.uri;\n    this.shareMapService.updateContextShared(this.map, inputs, this.idContextShared).subscribe(\n      rep => {\n        const title = this.languageService.translate.instant(\n          'igo.context.contextManager.dialog.saveTitle'\n        );\n        const msg = this.languageService.translate.instant('igo.context.contextManager.dialog.saveMsg', {\n          value: inputs.title\n        });\n        this.messageService.success(msg, title);\n      },\n      err => {\n        err.error.title = this.languageService.translate.instant(\n          'igo.context.shareMap.errorTitle'\n        );\n        this.messageService.showError(err);\n      }\n    );\n  }\n\n  copyTextToClipboard(textArea) {\n    const successful = Clipboard.copy(textArea);\n    if (successful) {\n      const translate = this.languageService.translate;\n      const title = translate.instant(\n        'igo.context.shareMap.dialog.copyTitle'\n      );\n      const msg = translate.instant('igo.context.shareMap.dialog.copyMsg');\n      this.messageService.success(msg, title);\n    }\n  }\n\n  buildForm(): void {\n    this.url = undefined;\n    const id = uuid();\n    let title = 'Partage ';\n    title += this.userId ? `(${this.userId}-${id})` : `(${id})`;\n    this.form = this.formBuilder.group({\n      title: [title],\n      uri: [id]\n    });\n  }\n}\n","<div class=\"igo-input-container linkToShare\">\n  <mat-form-field>\n    <textarea #textArea matInput readonly rows=\"3\"\n      [placeholder]=\"'igo.context.shareMap.placeholderLink' | translate\"\n      [value]=\"url\"></textarea>\n  </mat-form-field>\n\n  <div class=\"igo-form-button-group\">\n    <button\n      mat-raised-button\n      (click)=\"copyTextToClipboard(textArea)\">\n      <mat-icon svgIcon=\"content-copy\"></mat-icon>\n      {{ 'igo.context.shareMap.copy' | translate }}\n    </button>\n  </div>\n  <div>\n    <br/>\n    <section class=\"mat-typography\">\n        <h4 *ngIf=\"('igo.context.shareMap.included' | translate)!==''\">{{'igo.context.shareMap.included' | translate}}</h4>\n        <ul>\n          <li *ngIf=\"('igo.context.shareMap.context' | translate)!==''\">{{'igo.context.shareMap.context' | translate}}</li>\n          <li *ngIf=\"('igo.context.shareMap.center' | translate)!==''\">{{'igo.context.shareMap.center' | translate}}</li>\n          <li *ngIf=\"('igo.context.shareMap.zoom' | translate)!==''\">{{'igo.context.shareMap.zoom' | translate}}</li>\n          <li *ngIf=\"('igo.context.shareMap.addedLayers' | translate)!==''\">{{'igo.context.shareMap.addedLayers' | translate}}</li>\n          <li *ngIf=\"('igo.context.shareMap.visibleInvisible' | translate)!==''\">{{'igo.context.shareMap.visibleInvisible' | translate}}</li>\n        </ul>\n\n      <h4 *ngIf=\"('igo.context.shareMap.excluded' | translate)!==''\">{{'igo.context.shareMap.excluded' | translate}}</h4>\n      <ul>\n        <li *ngIf=\"('igo.context.shareMap.order' | translate)!==''\">{{'igo.context.shareMap.order' | translate}}</li>\n        <li *ngIf=\"('igo.context.shareMap.opacity' | translate)!==''\">{{'igo.context.shareMap.opacity' | translate}}</li>\n        <li *ngIf=\"('igo.context.shareMap.filterOgc' | translate)!==''\">{{'igo.context.shareMap.filterOgc' | translate}}</li>\n        <li *ngIf=\"('igo.context.shareMap.filterTime' | translate)!==''\">{{'igo.context.shareMap.filterTime' | translate}}</li>\n      </ul>\n    </section>\n  </div>\n</div>\n","import { AfterViewInit, Component, Input, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\n\nimport { Clipboard } from '@igo2/utils';\nimport { MessageService, LanguageService } from '@igo2/core';\nimport type { IgoMap } from '@igo2/geo';\n\nimport { ShareMapService } from '../shared/share-map.service';\nimport { combineLatest, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'igo-share-map-url',\n  templateUrl: './share-map-url.component.html',\n  styleUrls: ['./share-map-url.component.scss']\n})\nexport class ShareMapUrlComponent implements AfterViewInit, OnInit, OnDestroy {\n  private mapState$$: Subscription;\n\n  @Input() map: IgoMap;\n\n  public url: string;\n  public publicShareOption = {\n    layerlistControls: { querystring: '' }\n  };\n\n  constructor(\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private shareMapService: ShareMapService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.resetUrl();\n    this.mapState$$ = combineLatest([\n      this.map.viewController.state$,\n      this.map.status$]).subscribe(c => {\n        this.resetUrl();\n        this.cdRef.detectChanges();\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.resetUrl();\n  }\n\n  ngOnDestroy(): void {\n    this.mapState$$.unsubscribe();\n  }\n\n  resetUrl(values: any = {}) {\n    this.url = this.shareMapService.getUrlWithoutApi(this.map, this.publicShareOption);\n  }\n\n  copyTextToClipboard(textArea) {\n    const successful = Clipboard.copy(textArea);\n    if (successful) {\n      const translate = this.languageService.translate;\n      const title = translate.instant(\n        'igo.context.shareMap.dialog.copyTitle'\n      );\n      const msg = translate.instant('igo.context.shareMap.dialog.copyMsg');\n      this.messageService.success(msg, title);\n    }\n  }\n}\n","<mat-tab-group *ngIf=\"hasApi\" >\n  <mat-tab [label]=\"'igo.context.shareMap.shareWithApi' | translate\">\n    <igo-share-map-api [map]=\"map\"></igo-share-map-api>\n  </mat-tab>\n  <mat-tab [label]=\"'igo.context.shareMap.shareWithUrl' | translate\">\n    <igo-share-map-url [map]=\"map\"></igo-share-map-url>\n  </mat-tab>\n</mat-tab-group>\n\n<igo-share-map-url *ngIf=\"!hasApi\" [map]=\"map\"></igo-share-map-url>\n","import { Component, Input } from '@angular/core';\n\nimport { ConfigService } from '@igo2/core';\nimport type { IgoMap } from '@igo2/geo';\n\n@Component({\n  selector: 'igo-share-map',\n  templateUrl: './share-map.component.html',\n  styleUrls: ['./share-map.component.scss']\n})\nexport class ShareMapComponent {\n\n  @Input() map: IgoMap;\n\n  public hasApi = false;\n\n  constructor(\n    private config: ConfigService\n  ) {\n    this.hasApi = this.config.getConfig('context.url') ? true : false;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { ShareMapComponent } from './share-map/share-map.component';\nimport { ShareMapUrlComponent } from './share-map/share-map-url.component';\nimport { ShareMapApiComponent } from './share-map/share-map-api.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    IgoLanguageModule\n  ],\n  exports: [ShareMapComponent, ShareMapUrlComponent, ShareMapApiComponent],\n  declarations: [ShareMapComponent, ShareMapUrlComponent, ShareMapApiComponent]\n})\nexport class IgoShareMapModule {\n  static forRoot(): ModuleWithProviders<IgoShareMapModule> {\n    return {\n      ngModule: IgoShareMapModule\n    };\n  }\n}\n","<mat-sidenav\n  #sidenav\n  igoSidenavShim\n  mode=\"side\"\n  [opened]=\"opened\">\n\n  <div class=\"igo-sidenav-content\">\n\n    <igo-flexible\n      #topPanel\n      initial=\"50%\" initialMobile=\"100%\"\n      expanded=\"calc(100% - 58px)\"\n      [state]=\"topPanelState\">\n\n      <div class=\"igo-content\">\n        <igo-panel [title]=\"tool ? (tool.title | translate) : title\">\n          <button\n            mat-icon-button\n            panelLeftButton\n            tooltip-position=\"below\"\n            matTooltipShowDelay=\"500\"\n            [matTooltip]=\"'igo.context.sidenav.goBack' | translate\"\n            *ngIf=\"tool\">\n            <mat-icon svgIcon=\"arrow-back\"></mat-icon>\n          </button>\n\n          <button\n            mat-icon-button\n            panelRightButton\n            tooltip-position=\"below\"\n            matTooltipShowDelay=\"500\"\n            [matTooltip]=\"'igo.context.sidenav.mainMenu' | translate\"\n            *ngIf=\"tool\">\n            <mat-icon svgIcon=\"menu\"></mat-icon>\n          </button>\n\n        </igo-panel>\n      </div>\n\n      <div igoFlexibleFill class=\"igo-content\">\n        <igo-panel\n          [title]=\"featureTitle\"\n          *ngIf=\"feature && media !== 'mobile'\">\n\n          <button\n            mat-icon-button\n            panelLeftButton\n            class=\"igo-icon-button\"\n            (click)=\"toggleTopPanel()\">\n            <mat-icon [svgIcon]=\"['collapsed', 'initial'].indexOf(topPanel.state) >= 0 ? 'arrow_downward' : 'arrow_upward'\"></mat-icon>\n          </button>\n\n          <button\n            mat-icon-button\n            panelRightButton\n            class=\"igo-icon-button\"\n            (click)=\"zoomToFeatureExtent()\"\n            *ngIf=\"feature.geometry\">\n            <mat-icon svgIcon=\"zoom-in\"></mat-icon>\n          </button>\n\n          <igo-feature-details\n            [feature]=\"feature\"\n            *ngIf=\"['collapsed', 'initial'].indexOf(topPanel.state) >= 0\">\n          </igo-feature-details>\n        </igo-panel>\n      </div>\n\n    </igo-flexible>\n\n  </div>\n</mat-sidenav>\n","import { Component, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport type { Media } from '@igo2/core';\nimport { FlexibleState, Tool, getEntityTitle } from '@igo2/common';\nimport { Feature, FeatureMotion, moveToOlFeatures } from '@igo2/geo';\nimport type { IgoMap } from '@igo2/geo';\n\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\n\n@Component({\n  selector: 'igo-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  private format = new olFormatGeoJSON();\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n  @Input()\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this._opened = value;\n  }\n  private _opened: boolean;\n\n  @Input()\n  get feature(): Feature {\n    return this._feature;\n  }\n  set feature(value: Feature) {\n    this._feature = value;\n  }\n  private _feature: Feature;\n\n  @Input()\n  get tool(): Tool {\n    return this._tool;\n  }\n  set tool(value: Tool) {\n    this._tool = value;\n  }\n  private _tool: Tool;\n\n  @Input()\n  get media(): Media {\n    return this._media;\n  }\n  set media(value: Media) {\n    this._media = value;\n  }\n  private _media: Media;\n\n  @Input()\n  get title(): string {\n    return this._title;\n  }\n  set title(value: string) {\n    if (value) {\n      this._title = value;\n    }\n  }\n  private _title: string = this.titleService.getTitle();\n\n  public topPanelState: FlexibleState = 'initial';\n\n  get featureTitle(): string {\n    return this.feature ? getEntityTitle(this.feature) : undefined;\n  }\n\n  constructor(public titleService: Title) {}\n\n  zoomToFeatureExtent() {\n    if (this.feature.geometry) {\n      const olFeature = this.format.readFeature(this.feature, {\n        dataProjection: this.feature.projection,\n        featureProjection: this.map.projection\n      });\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\n    }\n  }\n\n  toggleTopPanel() {\n    if (this.topPanelState === 'initial') {\n      this.topPanelState = 'expanded';\n    } else {\n      this.topPanelState = 'initial';\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoPanelModule, IgoFlexibleModule } from '@igo2/common';\nimport { IgoFeatureModule } from '@igo2/geo';\n\nimport { IgoContextManagerModule } from '../context-manager/context-manager.module';\nimport { SidenavComponent } from './sidenav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatTooltipModule,\n    IgoLanguageModule,\n    IgoPanelModule,\n    IgoFlexibleModule,\n    IgoFeatureModule,\n    IgoContextManagerModule\n  ],\n  exports: [SidenavComponent],\n  declarations: [SidenavComponent]\n})\nexport class IgoSidenavModule {\n  static forRoot(): ModuleWithProviders<IgoSidenavModule> {\n    return {\n      ngModule: IgoSidenavModule\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { IgoContextImportExportModule } from './context-import-export/context-import-export.module';\nimport { IgoContextManagerModule } from './context-manager/context-manager.module';\nimport { IgoContextMapButtonModule } from './context-map-button/context-map-button.module';\nimport { IgoShareMapModule } from './share-map/share-map.module';\nimport { IgoSidenavModule } from './sidenav/sidenav.module';\n\n@NgModule({\n  imports: [MatInputModule, MatFormFieldModule, MatMenuModule],\n  declarations: [],\n  exports: [\n    IgoContextImportExportModule,\n    IgoContextManagerModule,\n    IgoContextMapButtonModule,\n    IgoShareMapModule,\n    IgoSidenavModule\n  ]\n})\nexport class IgoContextModule {\n  static forRoot(): ModuleWithProviders<IgoContextModule> {\n    return {\n      ngModule: IgoContextModule,\n      providers: []\n    };\n  }\n}\n","/*\n * Public API Surface of context\n */\n\nexport * from './lib/context.module';\nexport * from './lib/context-import-export/context-import-export.module';\nexport * from './lib/context-manager/context-manager.module';\nexport * from './lib/context-map-button/context-map-button.module';\nexport * from './lib/share-map/share-map.module';\nexport * from './lib/sidenav/sidenav.module';\n\nexport * from './lib/context-import-export';\nexport * from './lib/context-manager';\nexport * from './lib/context-map-button';\nexport * from './lib/share-map';\nexport * from './lib/sidenav';\n"]},"metadata":{},"sourceType":"module"}