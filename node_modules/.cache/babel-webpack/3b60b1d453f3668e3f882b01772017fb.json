{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\n\n\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects as intersectsExtent } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport { toString as toTransformString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\n\nvar CanvasImageLayerRenderer = function (_super) {\n  __extends(CanvasImageLayerRenderer, _super);\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n\n\n  function CanvasImageLayerRenderer(imageLayer) {\n    var _this = _super.call(this, imageLayer) || this;\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n\n\n    _this.image_ = null;\n    return _this;\n  }\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n\n\n  CanvasImageLayerRenderer.prototype.getImage = function () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n\n\n  CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n    var layerState = frameState.layerStatesArray[frameState.layerIndex];\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n    var imageSource = this.getLayer().getSource();\n    var hints = frameState.viewHints;\n    var renderedExtent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      if (imageSource) {\n        var projection = viewState.projection;\n\n        if (!ENABLE_RASTER_REPROJECTION) {\n          var sourceProjection = imageSource.getProjection();\n\n          if (sourceProjection) {\n            projection = sourceProjection;\n          }\n        }\n\n        var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n\n        if (image && this.loadImage(image)) {\n          this.image_ = image;\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  };\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n\n\n  CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n    var image = this.image_;\n    var imageExtent = image.getExtent();\n    var imageResolution = image.getResolution();\n    var imagePixelRatio = image.getPixelRatio();\n    var layerState = frameState.layerStatesArray[frameState.layerIndex];\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var size = frameState.size;\n    var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n    var width = Math.round(size[0] * pixelRatio);\n    var height = Math.round(size[1] * pixelRatio);\n    var rotation = viewState.rotation;\n\n    if (rotation) {\n      var size_1 = Math.round(Math.sqrt(width * width + height * height));\n      width = size_1;\n      height = size_1;\n    } // set forward and inverse pixel transforms\n\n\n    composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n    var canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    var context = this.context;\n    var canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    } // clipped rendering if layer extent is set\n\n\n    var clipped = false;\n    var render = true;\n\n    if (layerState.extent) {\n      var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    var img = image.getImage();\n    var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    var dw = img.width * transform[0];\n    var dh = img.height * transform[3];\n    assign(context, this.getLayer().getSource().getContextOptions());\n    this.preRender(context, frameState);\n\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      var dx = transform[4];\n      var dy = transform[5];\n      var opacity = layerState.opacity;\n      var previousAlpha = void 0;\n\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n\n      context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  };\n\n  return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer);\n\nexport default CanvasImageLayerRenderer;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/renderer/canvas/ImageLayer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","CanvasLayerRenderer","ViewHint","ENABLE_RASTER_REPROJECTION","assign","compose","composeTransform","makeInverse","containsExtent","intersects","intersectsExtent","fromUserExtent","getIntersection","isEmpty","toString","toTransformString","CanvasImageLayerRenderer","_super","imageLayer","_this","image_","getImage","prepareFrame","frameState","layerState","layerStatesArray","layerIndex","pixelRatio","viewState","viewResolution","resolution","imageSource","getLayer","getSource","hints","viewHints","renderedExtent","extent","undefined","projection","ANIMATING","INTERACTING","sourceProjection","getProjection","image","loadImage","renderFrame","target","imageExtent","getExtent","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","center","size","scale","width","Math","round","height","rotation","size_1","sqrt","pixelTransform","inversePixelTransform","canvasTransform","useContainer","opacity","context","canvas","containerReused","clearRect","clipped","render","layerExtent","clipUnrotated","img","transform","tempTransform","renderedResolution","dw","dh","getContextOptions","preRender","dx","dy","previousAlpha","globalAlpha","drawImage","postRender","restore","style","container"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects as intersectsExtent } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport { toString as toTransformString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        assign(context, this.getLayer().getSource().getContextOptions());\n        this.preRender(context, frameState);\n        if (render && dw >= 0.5 && dh >= 0.5) {\n            var dx = transform[4];\n            var dy = transform[5];\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = context.globalAlpha;\n                context.globalAlpha = opacity;\n            }\n            context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n"]},"metadata":{},"sourceType":"module"}