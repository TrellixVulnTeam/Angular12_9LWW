{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/source/Image\n */\n\n\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\n\nexport var ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\n\nvar ImageSourceEvent = function (_super) {\n  __extends(ImageSourceEvent, _super);\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n\n\n  function ImageSourceEvent(type, image) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n\n\n    _this.image = image;\n    return _this;\n  }\n\n  return ImageSourceEvent;\n}(Event);\n\nexport { ImageSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./State.js\").default} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\n\nvar ImageSource = function (_super) {\n  __extends(ImageSource, _super);\n  /**\n   * @param {Options} options Single image source options.\n   */\n\n\n  function ImageSource(options) {\n    var _this = _super.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    }) || this;\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n\n\n    _this.on;\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.resolutions_ = options.resolutions !== undefined ? options.resolutions : null;\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n\n    _this.reprojectedImage_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.reprojectedRevision_ = 0;\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n\n    _this.contextOptions_ = options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n    return _this;\n  }\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n\n\n  ImageSource.prototype.getResolutions = function () {\n    return this.resolutions_;\n  };\n  /**\n   * @return {Object|undefined} Context options.\n   */\n\n\n  ImageSource.prototype.getContextOptions = function () {\n    return this.contextOptions_;\n  };\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n\n\n  ImageSource.prototype.findNearestResolution = function (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n\n    return resolution;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n\n\n  ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n\n    if (!ENABLE_RASTER_REPROJECTION || !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() && equivalent(this.reprojectedImage_.getProjection(), projection) && this.reprojectedImage_.getResolution() == resolution && equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n        return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n      }.bind(this), this.contextOptions_);\n      this.reprojectedRevision_ = this.getRevision();\n      return this.reprojectedImage_;\n    }\n  };\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n\n\n  ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n    return abstract();\n  };\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n\n\n  ImageSource.prototype.handleImageChange = function (event) {\n    var image = event.target;\n\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n        break;\n\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n        break;\n\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n        break;\n\n      default: // pass\n\n    }\n  };\n\n  return ImageSource;\n}(Source);\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\n\n\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */\n  image.getImage().src = src;\n}\nexport default ImageSource;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/source/Image.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Event","ImageState","ReprojImage","Source","ENABLE_RASTER_REPROJECTION","IMAGE_SMOOTHING_DISABLED","abstract","equals","equivalent","linearFindNearest","ImageSourceEventType","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent","_super","type","image","_this","ImageSource","options","attributions","projection","state","on","once","un","resolutions_","resolutions","undefined","reprojectedImage_","reprojectedRevision_","contextOptions_","imageSmoothing","getResolutions","getContextOptions","findNearestResolution","resolution","idx","getImage","extent","pixelRatio","sourceProjection","getProjection","getImageInternal","getRevision","getResolution","getExtent","dispose","bind","handleImageChange","event","target","getState","LOADING","loading","dispatchEvent","LOADED","ERROR","defaultImageLoadFunction","src"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnB,QAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;AACJF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASW,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBb,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;AACH,GAND;AAOH,CAd2C,EAA5C;AAeA;AACA;AACA;;;AACA,OAAOG,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,0BAAT,QAA2C,qBAA3C;AACA,SAASC,wBAAT,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA;AACA;AACA;;AACA,OAAO,IAAIC,oBAAoB,GAAG;AAC9B;AACJ;AACA;AACA;AACA;AACIC,EAAAA,cAAc,EAAE,gBANc;;AAO9B;AACJ;AACA;AACA;AACA;AACIC,EAAAA,YAAY,EAAE,cAZgB;;AAa9B;AACJ;AACA;AACA;AACA;AACIC,EAAAA,cAAc,EAAE;AAlBc,CAA3B;AAoBP;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAkB,UAAUC,MAAV,EAAkB;AACpDhC,EAAAA,SAAS,CAAC+B,gBAAD,EAAmBC,MAAnB,CAAT;AACA;AACJ;AACA;AACA;;;AACI,WAASD,gBAAT,CAA0BE,IAA1B,EAAgCC,KAAhC,EAAuC;AACnC,QAAIC,KAAK,GAAGH,MAAM,CAACrB,IAAP,CAAY,IAAZ,EAAkBsB,IAAlB,KAA2B,IAAvC;AACA;AACR;AACA;AACA;AACA;;;AACQE,IAAAA,KAAK,CAACD,KAAN,GAAcA,KAAd;AACA,WAAOC,KAAP;AACH;;AACD,SAAOJ,gBAAP;AACH,CAjBqC,CAiBpCd,KAjBoC,CAAtC;;AAkBA,SAASc,gBAAT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIK,WAAW,GAAkB,UAAUJ,MAAV,EAAkB;AAC/ChC,EAAAA,SAAS,CAACoC,WAAD,EAAcJ,MAAd,CAAT;AACA;AACJ;AACA;;;AACI,WAASI,WAAT,CAAqBC,OAArB,EAA8B;AAC1B,QAAIF,KAAK,GAAGH,MAAM,CAACrB,IAAP,CAAY,IAAZ,EAAkB;AAC1B2B,MAAAA,YAAY,EAAED,OAAO,CAACC,YADI;AAE1BC,MAAAA,UAAU,EAAEF,OAAO,CAACE,UAFM;AAG1BC,MAAAA,KAAK,EAAEH,OAAO,CAACG;AAHW,KAAlB,KAIN,IAJN;AAKA;AACR;AACA;;;AACQL,IAAAA,KAAK,CAACM,EAAN;AACA;AACR;AACA;;AACQN,IAAAA,KAAK,CAACO,IAAN;AACA;AACR;AACA;;AACQP,IAAAA,KAAK,CAACQ,EAAN;AACA;AACR;AACA;AACA;;AACQR,IAAAA,KAAK,CAACS,YAAN,GACIP,OAAO,CAACQ,WAAR,KAAwBC,SAAxB,GAAoCT,OAAO,CAACQ,WAA5C,GAA0D,IAD9D;AAEA;AACR;AACA;AACA;;AACQV,IAAAA,KAAK,CAACY,iBAAN,GAA0B,IAA1B;AACA;AACR;AACA;AACA;;AACQZ,IAAAA,KAAK,CAACa,oBAAN,GAA6B,CAA7B;AACA;AACR;AACA;AACA;;AACQb,IAAAA,KAAK,CAACc,eAAN,GACIZ,OAAO,CAACa,cAAR,KAA2B,KAA3B,GAAmC5B,wBAAnC,GAA8DwB,SADlE;AAEA,WAAOX,KAAP;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,WAAW,CAAC3B,SAAZ,CAAsB0C,cAAtB,GAAuC,YAAY;AAC/C,WAAO,KAAKP,YAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIR,EAAAA,WAAW,CAAC3B,SAAZ,CAAsB2C,iBAAtB,GAA0C,YAAY;AAClD,WAAO,KAAKH,eAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIb,EAAAA,WAAW,CAAC3B,SAAZ,CAAsB4C,qBAAtB,GAA8C,UAAUC,UAAV,EAAsB;AAChE,QAAI,KAAKV,YAAT,EAAuB;AACnB,UAAIW,GAAG,GAAG7B,iBAAiB,CAAC,KAAKkB,YAAN,EAAoBU,UAApB,EAAgC,CAAhC,CAA3B;AACAA,MAAAA,UAAU,GAAG,KAAKV,YAAL,CAAkBW,GAAlB,CAAb;AACH;;AACD,WAAOD,UAAP;AACH,GAND;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIlB,EAAAA,WAAW,CAAC3B,SAAZ,CAAsB+C,QAAtB,GAAiC,UAAUC,MAAV,EAAkBH,UAAlB,EAA8BI,UAA9B,EAA0CnB,UAA1C,EAAsD;AACnF,QAAIoB,gBAAgB,GAAG,KAAKC,aAAL,EAAvB;;AACA,QAAI,CAACvC,0BAAD,IACA,CAACsC,gBADD,IAEA,CAACpB,UAFD,IAGAd,UAAU,CAACkC,gBAAD,EAAmBpB,UAAnB,CAHd,EAG8C;AAC1C,UAAIoB,gBAAJ,EAAsB;AAClBpB,QAAAA,UAAU,GAAGoB,gBAAb;AACH;;AACD,aAAO,KAAKE,gBAAL,CAAsBJ,MAAtB,EAA8BH,UAA9B,EAA0CI,UAA1C,EAAsDnB,UAAtD,CAAP;AACH,KARD,MASK;AACD,UAAI,KAAKQ,iBAAT,EAA4B;AACxB,YAAI,KAAKC,oBAAL,IAA6B,KAAKc,WAAL,EAA7B,IACArC,UAAU,CAAC,KAAKsB,iBAAL,CAAuBa,aAAvB,EAAD,EAAyCrB,UAAzC,CADV,IAEA,KAAKQ,iBAAL,CAAuBgB,aAAvB,MAA0CT,UAF1C,IAGA9B,MAAM,CAAC,KAAKuB,iBAAL,CAAuBiB,SAAvB,EAAD,EAAqCP,MAArC,CAHV,EAGwD;AACpD,iBAAO,KAAKV,iBAAZ;AACH;;AACD,aAAKA,iBAAL,CAAuBkB,OAAvB;AACA,aAAKlB,iBAAL,GAAyB,IAAzB;AACH;;AACD,WAAKA,iBAAL,GAAyB,IAAI5B,WAAJ,CAAgBwC,gBAAhB,EAAkCpB,UAAlC,EAA8CkB,MAA9C,EAAsDH,UAAtD,EAAkEI,UAAlE,EAA8E,UAAUD,MAAV,EAAkBH,UAAlB,EAA8BI,UAA9B,EAA0C;AAC7I,eAAO,KAAKG,gBAAL,CAAsBJ,MAAtB,EAA8BH,UAA9B,EAA0CI,UAA1C,EAAsDC,gBAAtD,CAAP;AACH,OAFsG,CAErGO,IAFqG,CAEhG,IAFgG,CAA9E,EAEX,KAAKjB,eAFM,CAAzB;AAGA,WAAKD,oBAAL,GAA4B,KAAKc,WAAL,EAA5B;AACA,aAAO,KAAKf,iBAAZ;AACH;AACJ,GA5BD;AA6BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIX,EAAAA,WAAW,CAAC3B,SAAZ,CAAsBoD,gBAAtB,GAAyC,UAAUJ,MAAV,EAAkBH,UAAlB,EAA8BI,UAA9B,EAA0CnB,UAA1C,EAAsD;AAC3F,WAAOhB,QAAQ,EAAf;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIa,EAAAA,WAAW,CAAC3B,SAAZ,CAAsB0D,iBAAtB,GAA0C,UAAUC,KAAV,EAAiB;AACvD,QAAIlC,KAAK,GAAiDkC,KAAK,CAACC,MAAhE;;AACA,YAAQnC,KAAK,CAACoC,QAAN,EAAR;AACI,WAAKpD,UAAU,CAACqD,OAAhB;AACI,aAAKC,OAAL,GAAe,IAAf;AACA,aAAKC,aAAL,CAAmB,IAAI1C,gBAAJ,CAAqBJ,oBAAoB,CAACC,cAA1C,EAA0DM,KAA1D,CAAnB;AACA;;AACJ,WAAKhB,UAAU,CAACwD,MAAhB;AACI,aAAKF,OAAL,GAAe,KAAf;AACA,aAAKC,aAAL,CAAmB,IAAI1C,gBAAJ,CAAqBJ,oBAAoB,CAACE,YAA1C,EAAwDK,KAAxD,CAAnB;AACA;;AACJ,WAAKhB,UAAU,CAACyD,KAAhB;AACI,aAAKH,OAAL,GAAe,KAAf;AACA,aAAKC,aAAL,CAAmB,IAAI1C,gBAAJ,CAAqBJ,oBAAoB,CAACG,cAA1C,EAA0DI,KAA1D,CAAnB;AACA;;AACJ,cAbJ,CAcI;;AAdJ;AAgBH,GAlBD;;AAmBA,SAAOE,WAAP;AACH,CAhJgC,CAgJ/BhB,MAhJ+B,CAAjC;AAiJA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASwD,wBAAT,CAAkC1C,KAAlC,EAAyC2C,GAAzC,EAA8C;AACjD;AAAkD3C,EAAAA,KAAK,CAACsB,QAAN,EAAD,CAAmBqB,GAAnB,GAAyBA,GAAzB;AACpD;AACD,eAAezC,WAAf","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror',\n};\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./State.js\").default} [state] State.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state,\n        }) || this;\n        /***\n         * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ImageSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ =\n            options.resolutions !== undefined ? options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    ImageSource.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this), this.contextOptions_);\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n"]},"metadata":{},"sourceType":"module"}