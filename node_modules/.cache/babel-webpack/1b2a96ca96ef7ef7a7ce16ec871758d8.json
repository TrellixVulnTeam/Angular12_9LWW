{"ast":null,"code":"/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\n\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\n\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\n\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\n\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\n\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (fillStyle || strokeStyle) {\n    var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\n\n\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n  var loading = false;\n  var imageStyle = style.getImage();\n\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n  return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n  var geometry = style.getGeometryFunction()(feature);\n\n  if (!geometry) {\n    return;\n  }\n\n  var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n  var renderer = style.getRenderer();\n\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries =\n    /** @type {import(\"../geom/GeometryCollection.js\").default} */\n    geometry.getGeometries();\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n\n    return;\n  }\n\n  var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(geometry, feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n\n  var declutterImageWithText;\n\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText = imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n\n    var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n\n  var declutterImageWithText;\n\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText = imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n\n    var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/renderer/vector.js"],"names":["BuilderType","GeometryType","ImageState","getUid","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","resolution","pixelRatio","tolerance","getTolerance","builderGroup","geometry","style","feature","opt_declutterBuilderGroup","fillStyle","getFill","strokeStyle","getStroke","circleReplay","getBuilder","getZIndex","CIRCLE","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","TEXT","setTextStyle","drawText","renderFeature","replayGroup","squaredTolerance","listener","opt_transform","loading","imageStyle","getImage","imageState","getImageState","LOADED","ERROR","unlistenImageChange","IDLE","load","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","simplifyTransformed","renderer","getRenderer","renderGeometry","geometryRenderer","getType","GEOMETRY_COLLECTION","geometries","getGeometries","i","ii","length","replay","DEFAULT","drawCustom","getHitDetectionRenderer","getGeometriesArray","lineStringReplay","LINE_STRING","drawLineString","drawMultiLineString","polygonReplay","POLYGON","drawMultiPolygon","declutterImageWithText","undefined","imageReplay","IMAGE","setImageStyle","drawPoint","drawMultiPoint","drawPolygon"],"mappings":"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","sourcesContent":["/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = \n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}