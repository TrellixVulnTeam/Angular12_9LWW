{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/WMSGetFeatureInfo\n */\n\n\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport { assign } from '../obj.js';\nimport { extend, includes } from '../array.js';\nimport { makeArrayPusher, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\n\nvar featureIdentifier = '_feature';\n/**\n * @const\n * @type {string}\n */\n\nvar layerIdentifier = '_layer';\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\n\nvar WMSGetFeatureInfo = function (_super) {\n  __extends(WMSGetFeatureInfo, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function WMSGetFeatureInfo(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n    /**\n     * @private\n     * @type {GML2}\n     */\n\n    _this.gmlFormat_ = new GML2();\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n\n    _this.layers_ = options.layers ? options.layers : null;\n    return _this;\n  }\n  /**\n   * @return {Array<string>} layers\n   */\n\n\n  WMSGetFeatureInfo.prototype.getLayers = function () {\n    return this.layers_;\n  };\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n\n\n  WMSGetFeatureInfo.prototype.setLayers = function (layers) {\n    this.layers_ = layers;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n\n\n  WMSGetFeatureInfo.prototype.readFeatures_ = function (node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    var localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n\n    var features = [];\n\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n\n    if (localName == 'msGMLOutput') {\n      for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n        var layer = node.childNodes[i];\n\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        var layerElement = layer;\n        var context = objectStack[0];\n        var toRemove = layerIdentifier;\n        var layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !includes(this.layers_, layerName)) {\n          continue;\n        }\n\n        var featureType = layerName + featureIdentifier;\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n\n        var parsers = {};\n        parsers[featureType] = makeArrayPusher(this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n        var parsersNS = makeStructureNS([context['featureNS'], null], parsers);\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        var layerFeatures = pushParseAndPop([], // @ts-ignore\n        parsersNS, layerElement, objectStack, this.gmlFormat_);\n\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n\n    if (localName == 'FeatureCollection') {\n      var gmlFeatures = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, [{}], this.gmlFormat_);\n\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n\n    return features;\n  };\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  WMSGetFeatureInfo.prototype.readFeaturesFromNode = function (node, opt_options) {\n    var options = {};\n\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n\n    return this.readFeatures_(node, [options]);\n  };\n\n  return WMSGetFeatureInfo;\n}(XMLFeature);\n\nexport default WMSGetFeatureInfo;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/format/WMSGetFeatureInfo.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","GML2","XMLFeature","assign","extend","includes","makeArrayPusher","makeStructureNS","pushParseAndPop","featureIdentifier","layerIdentifier","WMSGetFeatureInfo","_super","opt_options","_this","options","featureNS_","gmlFormat_","layers_","layers","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","layerElement","context","toRemove","layerName","replace","featureType","parsers","readFeatureElement","parsersNS","layerFeatures","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeaturesFromNode","getReadOptions"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport { assign } from '../obj.js';\nimport { extend, includes } from '../array.js';\nimport { makeArrayPusher, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = /** @class */ (function (_super) {\n    __extends(WMSGetFeatureInfo, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function WMSGetFeatureInfo(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n        /**\n         * @private\n         * @type {GML2}\n         */\n        _this.gmlFormat_ = new GML2();\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * @return {Array<string>} layers\n     */\n    WMSGetFeatureInfo.prototype.getLayers = function () {\n        return this.layers_;\n    };\n    /**\n     * @param {Array<string>} layers Layers to parse.\n     */\n    WMSGetFeatureInfo.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    WMSGetFeatureInfo.prototype.readFeatures_ = function (node, objectStack) {\n        node.setAttribute('namespaceURI', this.featureNS_);\n        var localName = node.localName;\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        if (node.childNodes.length === 0) {\n            return features;\n        }\n        if (localName == 'msGMLOutput') {\n            for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n                var layer = node.childNodes[i];\n                if (layer.nodeType !== Node.ELEMENT_NODE) {\n                    continue;\n                }\n                var layerElement = /** @type {Element} */ (layer);\n                var context = objectStack[0];\n                var toRemove = layerIdentifier;\n                var layerName = layerElement.localName.replace(toRemove, '');\n                if (this.layers_ && !includes(this.layers_, layerName)) {\n                    continue;\n                }\n                var featureType = layerName + featureIdentifier;\n                context['featureType'] = featureType;\n                context['featureNS'] = this.featureNS_;\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                parsers[featureType] = makeArrayPusher(this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n                var parsersNS = makeStructureNS([context['featureNS'], null], parsers);\n                layerElement.setAttribute('namespaceURI', this.featureNS_);\n                var layerFeatures = pushParseAndPop([], \n                // @ts-ignore\n                parsersNS, layerElement, objectStack, this.gmlFormat_);\n                if (layerFeatures) {\n                    extend(features, layerFeatures);\n                }\n            }\n        }\n        if (localName == 'FeatureCollection') {\n            var gmlFeatures = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, [{}], this.gmlFormat_);\n            if (gmlFeatures) {\n                features = gmlFeatures;\n            }\n        }\n        return features;\n    };\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    WMSGetFeatureInfo.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {};\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        return this.readFeatures_(node, [options]);\n    };\n    return WMSGetFeatureInfo;\n}(XMLFeature));\nexport default WMSGetFeatureInfo;\n"]},"metadata":{},"sourceType":"module"}