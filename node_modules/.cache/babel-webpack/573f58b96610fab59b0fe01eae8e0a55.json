{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/events/Target\n */\n\n\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\n\nvar Target = function (_super) {\n  __extends(Target, _super);\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n\n\n  function Target(opt_target) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {*}\n     */\n\n\n    _this.eventTarget_ = opt_target;\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n\n    _this.pendingRemovals_ = null;\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n\n    _this.dispatching_ = null;\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n\n    _this.listeners_ = null;\n    return _this;\n  }\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n\n\n  Target.prototype.addEventListener = function (type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n\n    var listeners = this.listeners_ || (this.listeners_ = {});\n    var listenersForType = listeners[type] || (listeners[type] = []);\n\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  };\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n\n\n  Target.prototype.dispatchEvent = function (event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n\n    var listeners = this.listeners_ && this.listeners_[type];\n    var propagate;\n\n    if (listeners) {\n      var dispatching = this.dispatching_ || (this.dispatching_ = {});\n      var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n\n      ++dispatching[type];\n\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate =\n          /** @type {import(\"../events.js\").ListenerObject} */\n          listeners[i].handleEvent(evt);\n        } else {\n          propagate =\n          /** @type {import(\"../events.js\").ListenerFunction} */\n          listeners[i].call(this, evt);\n        }\n\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n\n      --dispatching[type];\n\n      if (dispatching[type] === 0) {\n        var pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n\n        delete dispatching[type];\n      }\n\n      return propagate;\n    }\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Target.prototype.disposeInternal = function () {\n    this.listeners_ && clear(this.listeners_);\n  };\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n\n\n  Target.prototype.getListeners = function (type) {\n    return this.listeners_ && this.listeners_[type] || undefined;\n  };\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n\n\n  Target.prototype.hasListener = function (opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n\n    return opt_type ? opt_type in this.listeners_ : Object.keys(this.listeners_).length > 0;\n  };\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n\n\n  Target.prototype.removeEventListener = function (type, listener) {\n    var listeners = this.listeners_ && this.listeners_[type];\n\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable);\n\nexport default Target;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/events/Target.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Disposable","Event","VOID","clear","Target","_super","opt_target","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","type","listener","listeners","listenersForType","indexOf","push","dispatchEvent","event","evt","target","propagate","dispatching","pendingRemovals","i","ii","length","handleEvent","propagationStopped","pr","removeEventListener","disposeInternal","getListeners","undefined","hasListener","opt_type","keys","index","splice"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnB,QAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;AACJF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASW,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBb,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;AACH,GAND;AAOH,CAd2C,EAA5C;AAeA;AACA;AACA;;;AACA,OAAOG,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAkB,UAAUC,MAAV,EAAkB;AAC1CtB,EAAAA,SAAS,CAACqB,MAAD,EAASC,MAAT,CAAT;AACA;AACJ;AACA;;;AACI,WAASD,MAAT,CAAgBE,UAAhB,EAA4B;AACxB,QAAIC,KAAK,GAAGF,MAAM,CAACX,IAAP,CAAY,IAAZ,KAAqB,IAAjC;AACA;AACR;AACA;AACA;;;AACQa,IAAAA,KAAK,CAACC,YAAN,GAAqBF,UAArB;AACA;AACR;AACA;AACA;;AACQC,IAAAA,KAAK,CAACE,gBAAN,GAAyB,IAAzB;AACA;AACR;AACA;AACA;;AACQF,IAAAA,KAAK,CAACG,YAAN,GAAqB,IAArB;AACA;AACR;AACA;AACA;;AACQH,IAAAA,KAAK,CAACI,UAAN,GAAmB,IAAnB;AACA,WAAOJ,KAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIH,EAAAA,MAAM,CAACZ,SAAP,CAAiBoB,gBAAjB,GAAoC,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AAC1D,QAAI,CAACD,IAAD,IAAS,CAACC,QAAd,EAAwB;AACpB;AACH;;AACD,QAAIC,SAAS,GAAG,KAAKJ,UAAL,KAAoB,KAAKA,UAAL,GAAkB,EAAtC,CAAhB;AACA,QAAIK,gBAAgB,GAAGD,SAAS,CAACF,IAAD,CAAT,KAAoBE,SAAS,CAACF,IAAD,CAAT,GAAkB,EAAtC,CAAvB;;AACA,QAAIG,gBAAgB,CAACC,OAAjB,CAAyBH,QAAzB,MAAuC,CAAC,CAA5C,EAA+C;AAC3CE,MAAAA,gBAAgB,CAACE,IAAjB,CAAsBJ,QAAtB;AACH;AACJ,GATD;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIV,EAAAA,MAAM,CAACZ,SAAP,CAAiB2B,aAAjB,GAAiC,UAAUC,KAAV,EAAiB;AAC9C;AACA,QAAIC,GAAG,GAAG,OAAOD,KAAP,KAAiB,QAAjB,GAA4B,IAAInB,KAAJ,CAAUmB,KAAV,CAA5B,GAA+CA,KAAzD;AACA,QAAIP,IAAI,GAAGQ,GAAG,CAACR,IAAf;;AACA,QAAI,CAACQ,GAAG,CAACC,MAAT,EAAiB;AACbD,MAAAA,GAAG,CAACC,MAAJ,GAAa,KAAKd,YAAL,IAAqB,IAAlC;AACH;;AACD,QAAIO,SAAS,GAAG,KAAKJ,UAAL,IAAmB,KAAKA,UAAL,CAAgBE,IAAhB,CAAnC;AACA,QAAIU,SAAJ;;AACA,QAAIR,SAAJ,EAAe;AACX,UAAIS,WAAW,GAAG,KAAKd,YAAL,KAAsB,KAAKA,YAAL,GAAoB,EAA1C,CAAlB;AACA,UAAIe,eAAe,GAAG,KAAKhB,gBAAL,KAA0B,KAAKA,gBAAL,GAAwB,EAAlD,CAAtB;;AACA,UAAI,EAAEI,IAAI,IAAIW,WAAV,CAAJ,EAA4B;AACxBA,QAAAA,WAAW,CAACX,IAAD,CAAX,GAAoB,CAApB;AACAY,QAAAA,eAAe,CAACZ,IAAD,CAAf,GAAwB,CAAxB;AACH;;AACD,QAAEW,WAAW,CAACX,IAAD,CAAb;;AACA,WAAK,IAAIa,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGZ,SAAS,CAACa,MAA/B,EAAuCF,CAAC,GAAGC,EAA3C,EAA+C,EAAED,CAAjD,EAAoD;AAChD,YAAI,iBAAiBX,SAAS,CAACW,CAAD,CAA9B,EAAmC;AAC/BH,UAAAA,SAAS;AAAG;AAAsDR,UAAAA,SAAS,CAACW,CAAD,CAAV,CAAeG,WAAf,CAA2BR,GAA3B,CAAjE;AACH,SAFD,MAGK;AACDE,UAAAA,SAAS;AAAG;AAAwDR,UAAAA,SAAS,CAACW,CAAD,CAAV,CAAehC,IAAf,CAAoB,IAApB,EAA0B2B,GAA1B,CAAnE;AACH;;AACD,YAAIE,SAAS,KAAK,KAAd,IAAuBF,GAAG,CAACS,kBAA/B,EAAmD;AAC/CP,UAAAA,SAAS,GAAG,KAAZ;AACA;AACH;AACJ;;AACD,QAAEC,WAAW,CAACX,IAAD,CAAb;;AACA,UAAIW,WAAW,CAACX,IAAD,CAAX,KAAsB,CAA1B,EAA6B;AACzB,YAAIkB,EAAE,GAAGN,eAAe,CAACZ,IAAD,CAAxB;AACA,eAAOY,eAAe,CAACZ,IAAD,CAAtB;;AACA,eAAOkB,EAAE,EAAT,EAAa;AACT,eAAKC,mBAAL,CAAyBnB,IAAzB,EAA+BX,IAA/B;AACH;;AACD,eAAOsB,WAAW,CAACX,IAAD,CAAlB;AACH;;AACD,aAAOU,SAAP;AACH;AACJ,GAxCD;AAyCA;AACJ;AACA;;;AACInB,EAAAA,MAAM,CAACZ,SAAP,CAAiByC,eAAjB,GAAmC,YAAY;AAC3C,SAAKtB,UAAL,IAAmBR,KAAK,CAAC,KAAKQ,UAAN,CAAxB;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIP,EAAAA,MAAM,CAACZ,SAAP,CAAiB0C,YAAjB,GAAgC,UAAUrB,IAAV,EAAgB;AAC5C,WAAQ,KAAKF,UAAL,IAAmB,KAAKA,UAAL,CAAgBE,IAAhB,CAApB,IAA8CsB,SAArD;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI/B,EAAAA,MAAM,CAACZ,SAAP,CAAiB4C,WAAjB,GAA+B,UAAUC,QAAV,EAAoB;AAC/C,QAAI,CAAC,KAAK1B,UAAV,EAAsB;AAClB,aAAO,KAAP;AACH;;AACD,WAAO0B,QAAQ,GACTA,QAAQ,IAAI,KAAK1B,UADR,GAETxB,MAAM,CAACmD,IAAP,CAAY,KAAK3B,UAAjB,EAA6BiB,MAA7B,GAAsC,CAF5C;AAGH,GAPD;AAQA;AACJ;AACA;AACA;;;AACIxB,EAAAA,MAAM,CAACZ,SAAP,CAAiBwC,mBAAjB,GAAuC,UAAUnB,IAAV,EAAgBC,QAAhB,EAA0B;AAC7D,QAAIC,SAAS,GAAG,KAAKJ,UAAL,IAAmB,KAAKA,UAAL,CAAgBE,IAAhB,CAAnC;;AACA,QAAIE,SAAJ,EAAe;AACX,UAAIwB,KAAK,GAAGxB,SAAS,CAACE,OAAV,CAAkBH,QAAlB,CAAZ;;AACA,UAAIyB,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,YAAI,KAAK9B,gBAAL,IAAyBI,IAAI,IAAI,KAAKJ,gBAA1C,EAA4D;AACxD;AACAM,UAAAA,SAAS,CAACwB,KAAD,CAAT,GAAmBrC,IAAnB;AACA,YAAE,KAAKO,gBAAL,CAAsBI,IAAtB,CAAF;AACH,SAJD,MAKK;AACDE,UAAAA,SAAS,CAACyB,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;;AACA,cAAIxB,SAAS,CAACa,MAAV,KAAqB,CAAzB,EAA4B;AACxB,mBAAO,KAAKjB,UAAL,CAAgBE,IAAhB,CAAP;AACH;AACJ;AACJ;AACJ;AACJ,GAlBD;;AAmBA,SAAOT,MAAP;AACH,CAnJ2B,CAmJ1BJ,UAnJ0B,CAA5B;;AAoJA,eAAeI,MAAf","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*} [opt_target] Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string} [opt_type] Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}