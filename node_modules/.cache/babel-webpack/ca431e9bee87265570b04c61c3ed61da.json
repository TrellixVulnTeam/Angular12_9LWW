{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport olFeature from 'ol/Feature';\nimport olPoint from 'ol/geom/Point';\nimport olPolygon from 'ol/geom/Polygon';\nimport olLineString from 'ol/geom/LineString';\nimport * as olproj from 'ol/proj';\nimport { LanguageService } from '@igo2/core';\nimport { IgoMap, DataSourceService, LayerService, OverlayService, QueryFormat, QueryHtmlTarget, FeatureMotion } from '@igo2/geo';\nimport { getEntityTitle } from '@igo2/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@igo2/core\";\nimport * as i2 from \"@igo2/geo\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@igo2/common\";\nimport * as i5 from \"@angular/common\";\n\nfunction AppQueryComponent_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\");\n    i0.ɵɵtext(2, \"Query Title : \");\n    i0.ɵɵelementStart(3, \"span\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"igo-feature-details\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const feature_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getTitle(feature_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"feature\", feature_r1);\n  }\n}\n\nexport let AppQueryComponent = /*#__PURE__*/(() => {\n  class AppQueryComponent {\n    constructor(languageService, dataSourceService, layerService, overlayService) {\n      this.languageService = languageService;\n      this.dataSourceService = dataSourceService;\n      this.layerService = layerService;\n      this.overlayService = overlayService;\n      this.feature$ = new BehaviorSubject(undefined);\n      this.map = new IgoMap({\n        controls: {\n          attribution: {\n            collapsed: true\n          }\n        }\n      });\n      this.view = {\n        center: [-73, 47.2],\n        zoom: 6\n      };\n      this.dataSourceService.createAsyncDataSource({\n        type: 'osm'\n      }).subscribe(dataSource => {\n        this.map.addLayer(this.layerService.createLayer({\n          title: 'OSM',\n          source: dataSource\n        }));\n      });\n      this.dataSourceService.createAsyncDataSource({\n        type: 'wms',\n        url: 'https://ws.mapserver.transports.gouv.qc.ca/swtq',\n        queryable: true,\n        queryTitle: 'num_rts',\n        params: {\n          layers: 'bgr_v_sous_route_res_sup_act',\n          version: '1.3.0'\n        }\n      }).subscribe(dataSource => {\n        this.map.addLayer(this.layerService.createLayer({\n          title: 'WMS',\n          source: dataSource,\n          sourceOptions: dataSource.options\n        }));\n      });\n      this.dataSourceService.createAsyncDataSource({\n        type: 'wms',\n        url: 'https://ws.mapserver.transports.gouv.qc.ca/swtq',\n        queryable: true,\n        queryFormat: QueryFormat.HTMLGML2,\n        queryHtmlTarget: QueryHtmlTarget.IFRAME,\n        params: {\n          layers: 'bgr_v_sous_route_res_sup_act',\n          version: '1.3.0'\n        }\n      }).subscribe(dataSource => {\n        this.map.addLayer(this.layerService.createLayer({\n          title: 'WMS html with a pre call in GML',\n          source: dataSource,\n          sourceOptions: dataSource.options\n        }));\n      });\n      this.dataSourceService.createAsyncDataSource({\n        type: 'vector',\n        queryable: true,\n        queryTitle: 'So beautiful ${name}',\n        sourceFields: [{\n          name: 'name',\n          alias: 'Alias name'\n        }, {\n          name: 'description',\n          alias: 'Alias description'\n        }]\n      }).subscribe(dataSource => {\n        this.map.addLayer(this.layerService.createLayer({\n          title: 'Vector Layer',\n          source: dataSource,\n          sourceOptions: dataSource.options\n        }));\n        this.addFeatures(dataSource);\n      });\n    }\n\n    addFeatures(dataSource) {\n      const feature1 = new olFeature({\n        name: 'feature1',\n        geometry: new olLineString([olproj.transform([-72, 47.8], 'EPSG:4326', 'EPSG:3857'), olproj.transform([-73.5, 47.4], 'EPSG:4326', 'EPSG:3857'), olproj.transform([-72.4, 48.6], 'EPSG:4326', 'EPSG:3857')])\n      });\n      const feature2 = new olFeature({\n        name: 'feature2',\n        geometry: new olPoint(olproj.transform([-73, 46.6], 'EPSG:4326', 'EPSG:3857'))\n      });\n      const feature3 = new olFeature({\n        name: 'feature3',\n        geometry: new olPolygon([[olproj.transform([-71, 46.8], 'EPSG:4326', 'EPSG:3857'), olproj.transform([-73, 47], 'EPSG:4326', 'EPSG:3857'), olproj.transform([-71.2, 46.6], 'EPSG:4326', 'EPSG:3857')]])\n      });\n      dataSource.ol.addFeatures([feature1, feature2, feature3]);\n      this.layerService.createAsyncLayer({\n        title: 'Vector tile with custom getfeatureinfo url',\n        visible: true,\n        sourceOptions: {\n          type: 'mvt',\n          url: 'https://ahocevar.com/geoserver/gwc/service/tms/1.0.0/ne:ne_10m_admin_0_countries@EPSG:900913@pbf/{z}/{x}/{-y}.pbf',\n          queryable: true,\n          queryUrl: 'https://geoegl.msp.gouv.qc.ca/apis/wss/amenagement.fcgi?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetFeatureInfo&FORMAT=image%2Fpng&TRANSPARENT=true&QUERY_LAYERS=SDA_REGION_S_20K&LAYERS=SDA_REGION_S_20K&DPI=96&MAP_RESOLUTION=96&FORMAT_OPTIONS=dpi%3A96&INFO_FORMAT=geojson&FEATURE_COUNT=5&I=50&J=50&CRS=EPSG:{srid}&STYLES=&WIDTH=101&HEIGHT=101&BBOX={xmin},{ymin},{xmax},{ymax}',\n          queryLayerFeatures: false,\n          queryFormat: 'geojson'\n        },\n        mapboxStyle: {\n          url: 'assets/mapboxStyleExample-vectortile.json',\n          source: 'ahocevar'\n        }\n      }).subscribe(l => this.map.addLayer(l));\n      this.dataSourceService.createAsyncDataSource({\n        type: 'wms',\n        url: 'https://geoegl.msp.gouv.qc.ca/apis/wss/incendie.fcgi',\n        queryable: true,\n        queryUrl: 'https://geoegl.msp.gouv.qc.ca/apis/wss/amenagement.fcgi?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetFeatureInfo&FORMAT=image%2Fpng&TRANSPARENT=true&QUERY_LAYERS=SDA_MUNIC_S_20K&LAYERS=SDA_MUNIC_S_20K&DPI=96&MAP_RESOLUTION=96&FORMAT_OPTIONS=dpi%3A96&INFO_FORMAT=geojson&FEATURE_COUNT=5&I=50&J=50&CRS=EPSG:{srid}&STYLES=&WIDTH=101&HEIGHT=101&BBOX={xmin},{ymin},{xmax},{ymax}',\n        queryFormat: 'geojson',\n        params: {\n          layers: 'caserne',\n          version: '1.3.0'\n        }\n      }).subscribe(dataSource => {\n        this.map.addLayer(this.layerService.createLayer({\n          title: 'WMS with custom getfeatureinfo url',\n          source: dataSource,\n          sourceOptions: dataSource.options\n        }));\n      });\n    }\n\n    handleQueryResults(results) {\n      const features = results.features;\n      let feature;\n\n      if (features.length && features[0]) {\n        feature = features[0];\n        this.feature$.next(feature);\n        this.map.queryResultsOverlay.setFeatures([feature], FeatureMotion.None);\n      }\n    }\n\n    getTitle(result) {\n      return getEntityTitle(result);\n    }\n\n  }\n\n  AppQueryComponent.ɵfac = function AppQueryComponent_Factory(t) {\n    return new (t || AppQueryComponent)(i0.ɵɵdirectiveInject(i1.LanguageService), i0.ɵɵdirectiveInject(i2.DataSourceService), i0.ɵɵdirectiveInject(i2.LayerService), i0.ɵɵdirectiveInject(i2.OverlayService));\n  };\n\n  AppQueryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppQueryComponent,\n    selectors: [[\"app-query\"]],\n    decls: 18,\n    vars: 7,\n    consts: [[\"href\", \"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/geo/query\"], [\"igoOverlay\", \"\", \"igoQuery\", \"\", 3, \"map\", \"view\", \"queryFeatures\", \"query\"], [\"color\", \"primary\", 3, \"map\"], [\"title\", \"Details\"], [4, \"ngIf\"], [2, \"background-color\", \"#e0e0e0\"], [3, \"feature\"]],\n    template: function AppQueryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-subtitle\");\n        i0.ɵɵtext(2, \"Geo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Query\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵelementStart(6, \"li\");\n        i0.ɵɵtext(7, \"Dependencies: LanguageService\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵtext(9, \" See the \");\n        i0.ɵɵelementStart(10, \"a\", 0);\n        i0.ɵɵtext(11, \"code of this example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"igo-map-browser\", 1);\n        i0.ɵɵlistener(\"query\", function AppQueryComponent_Template_igo_map_browser_query_13_listener($event) {\n          return ctx.handleQueryResults($event);\n        });\n        i0.ɵɵelement(14, \"igo-zoom-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"igo-panel\", 3);\n        i0.ɵɵtemplate(16, AppQueryComponent_ng_container_16_Template, 6, 2, \"ng-container\", 4);\n        i0.ɵɵpipe(17, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"map\", ctx.map)(\"view\", ctx.view)(\"queryFeatures\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"map\", ctx.map);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(17, 5, ctx.feature$));\n      }\n    },\n    directives: [i3.MatCard, i3.MatCardSubtitle, i3.MatCardTitle, i3.MatCardContent, i2.MapBrowserComponent, i2.OverlayDirective, i2.QueryDirective, i2.ZoomButtonComponent, i4.PanelComponent, i5.NgIf, i2.FeatureDetailsComponent],\n    pipes: [i5.AsyncPipe],\n    styles: [\"igo-map-browser[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 300px;\\n}\\n\\nigo-panel[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxpQkFBQTtBQUNGIiwiZmlsZSI6InF1ZXJ5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaWdvLW1hcC1icm93c2VyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwcHg7XG59XG5cbmlnby1wYW5lbCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLXRvcDogMTBweDtcbn1cbiJdfQ== */\"]\n  });\n  return AppQueryComponent;\n})();","map":{"version":3,"sources":["C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\geo\\query\\query.component.ts","C:\\Users\\admin\\Downloads\\igo2-lib-master\\igo2-lib-master\\demo\\src\\app\\geo\\query\\query.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport olFeature from 'ol/Feature';\nimport olPoint from 'ol/geom/Point';\nimport olPolygon from 'ol/geom/Polygon';\nimport olLineString from 'ol/geom/LineString';\nimport * as olproj from 'ol/proj';\n\nimport { LanguageService } from '@igo2/core';\nimport {\n  IgoMap,\n  FeatureDataSource,\n  DataSourceService,\n  LayerService,\n  OverlayService,\n  Feature,\n  QueryableDataSourceOptions,\n  QueryFormat,\n  QueryHtmlTarget,\n  SearchResult,\n  FeatureMotion\n} from '@igo2/geo';\n\nimport { getEntityTitle } from '@igo2/common';\n\n@Component({\n  selector: 'app-query',\n  templateUrl: './query.component.html',\n  styleUrls: ['./query.component.scss']\n})\nexport class AppQueryComponent {\n  public feature$ = new BehaviorSubject<Feature>(undefined);\n\n  public map = new IgoMap({\n    controls: {\n      attribution: {\n        collapsed: true\n      }\n    }\n  });\n\n  public view = {\n    center: [-73, 47.2],\n    zoom: 6\n  };\n\n  constructor(\n    private languageService: LanguageService,\n    private dataSourceService: DataSourceService,\n    private layerService: LayerService,\n    private overlayService: OverlayService\n  ) {\n    this.dataSourceService\n      .createAsyncDataSource({\n        type: 'osm'\n      })\n      .subscribe(dataSource => {\n        this.map.addLayer(\n          this.layerService.createLayer({\n            title: 'OSM',\n            source: dataSource\n          })\n        );\n      });\n\n    this.dataSourceService\n      .createAsyncDataSource({\n        type: 'wms',\n        url: 'https://ws.mapserver.transports.gouv.qc.ca/swtq',\n        queryable: true,\n        queryTitle: 'num_rts',\n        params: {\n          layers: 'bgr_v_sous_route_res_sup_act',\n          version: '1.3.0'\n        }\n      } as QueryableDataSourceOptions)\n      .subscribe(dataSource => {\n        this.map.addLayer(\n          this.layerService.createLayer({\n            title: 'WMS',\n            source: dataSource,\n            sourceOptions: dataSource.options\n          })\n        );\n      });\n\n    this.dataSourceService\n      .createAsyncDataSource({\n        type: 'wms',\n        url: 'https://ws.mapserver.transports.gouv.qc.ca/swtq',\n        queryable: true,\n        queryFormat: QueryFormat.HTMLGML2,\n        queryHtmlTarget: QueryHtmlTarget.IFRAME,\n        params: {\n          layers: 'bgr_v_sous_route_res_sup_act',\n          version: '1.3.0'\n        }\n      } as QueryableDataSourceOptions)\n      .subscribe(dataSource => {\n        this.map.addLayer(\n          this.layerService.createLayer({\n            title: 'WMS html with a pre call in GML',\n            source: dataSource,\n            sourceOptions: dataSource.options\n          })\n        );\n      });\n\n    this.dataSourceService\n      .createAsyncDataSource({\n        type: 'vector',\n        queryable: true,\n        queryTitle: 'So beautiful ${name}',\n        sourceFields: [\n          { name: 'name', alias: 'Alias name' },\n          { name: 'description', alias: 'Alias description' }\n        ]\n      } as QueryableDataSourceOptions)\n      .subscribe(dataSource => {\n        this.map.addLayer(\n          this.layerService.createLayer({\n            title: 'Vector Layer',\n            source: dataSource,\n            sourceOptions: dataSource.options\n          })\n        );\n        this.addFeatures(dataSource as FeatureDataSource);\n      });\n  }\n\n  addFeatures(dataSource: FeatureDataSource) {\n    const feature1 = new olFeature({\n      name: 'feature1',\n      geometry: new olLineString([\n        olproj.transform([-72, 47.8], 'EPSG:4326', 'EPSG:3857'),\n        olproj.transform([-73.5, 47.4], 'EPSG:4326', 'EPSG:3857'),\n        olproj.transform([-72.4, 48.6], 'EPSG:4326', 'EPSG:3857')\n      ]),\n    });\n\n    const feature2 = new olFeature({\n      name: 'feature2',\n      geometry: new olPoint(\n        olproj.transform([-73, 46.6], 'EPSG:4326', 'EPSG:3857')\n      ),\n    });\n\n    const feature3 = new olFeature({\n      name: 'feature3',\n      geometry: new olPolygon([\n        [\n          olproj.transform([-71, 46.8], 'EPSG:4326', 'EPSG:3857'),\n          olproj.transform([-73, 47], 'EPSG:4326', 'EPSG:3857'),\n          olproj.transform([-71.2, 46.6], 'EPSG:4326', 'EPSG:3857')\n        ]\n      ]),\n    });\n\n    dataSource.ol.addFeatures([feature1, feature2, feature3]);\n\n    this.layerService\n      .createAsyncLayer({\n        title: 'Vector tile with custom getfeatureinfo url',\n        visible: true,\n        sourceOptions: {\n          type: 'mvt',\n          url:\n            'https://ahocevar.com/geoserver/gwc/service/tms/1.0.0/ne:ne_10m_admin_0_countries@EPSG:900913@pbf/{z}/{x}/{-y}.pbf',\n          queryable: true,\n          queryUrl: 'https://geoegl.msp.gouv.qc.ca/apis/wss/amenagement.fcgi?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetFeatureInfo&FORMAT=image%2Fpng&TRANSPARENT=true&QUERY_LAYERS=SDA_REGION_S_20K&LAYERS=SDA_REGION_S_20K&DPI=96&MAP_RESOLUTION=96&FORMAT_OPTIONS=dpi%3A96&INFO_FORMAT=geojson&FEATURE_COUNT=5&I=50&J=50&CRS=EPSG:{srid}&STYLES=&WIDTH=101&HEIGHT=101&BBOX={xmin},{ymin},{xmax},{ymax}',\n          queryLayerFeatures: false,\n          queryFormat: 'geojson'\n        },\n        mapboxStyle: {\n          url: 'assets/mapboxStyleExample-vectortile.json',\n          source: 'ahocevar'\n        }\n      } as any)\n      .subscribe(l => this.map.addLayer(l));\n\n\n      this.dataSourceService\n      .createAsyncDataSource({\n        type: 'wms',\n        url: 'https://geoegl.msp.gouv.qc.ca/apis/wss/incendie.fcgi',\n        queryable: true,\n        queryUrl: 'https://geoegl.msp.gouv.qc.ca/apis/wss/amenagement.fcgi?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetFeatureInfo&FORMAT=image%2Fpng&TRANSPARENT=true&QUERY_LAYERS=SDA_MUNIC_S_20K&LAYERS=SDA_MUNIC_S_20K&DPI=96&MAP_RESOLUTION=96&FORMAT_OPTIONS=dpi%3A96&INFO_FORMAT=geojson&FEATURE_COUNT=5&I=50&J=50&CRS=EPSG:{srid}&STYLES=&WIDTH=101&HEIGHT=101&BBOX={xmin},{ymin},{xmax},{ymax}',\n        queryFormat: 'geojson',\n        params: {\n          layers: 'caserne',\n          version: '1.3.0'\n        }\n      } as QueryableDataSourceOptions)\n      .subscribe(dataSource => {\n        this.map.addLayer(\n          this.layerService.createLayer({\n            title: 'WMS with custom getfeatureinfo url',\n            source: dataSource,\n            sourceOptions: dataSource.options\n          })\n        );\n      });\n\n  }\n\n  handleQueryResults(results) {\n    const features: Feature[] = results.features;\n    let feature: Feature;\n    if (features.length && features[0]) {\n      feature = features[0];\n      this.feature$.next(feature);\n      this.map.queryResultsOverlay.setFeatures([feature], FeatureMotion.None);\n    }\n\n  }\n\n  getTitle(result: SearchResult) {\n    return getEntityTitle(result);\n  }\n}\n","<mat-card>\n  <mat-card-subtitle>Geo</mat-card-subtitle>\n  <mat-card-title>Query</mat-card-title>\n  <mat-card-content>\n    <li>Dependencies: LanguageService</li>\n\n    <br>\n    See the <a href=\"https://github.com/infra-geo-ouverte/igo2-lib/tree/master/demo/src/app/geo/query\">code of this example</a>\n    <hr>\n  </mat-card-content>\n\n  <igo-map-browser\n    [map]=\"map\"\n    [view]=\"view\"\n    igoOverlay\n    igoQuery\n    [queryFeatures]=\"true\"\n    (query)=\"handleQueryResults($event)\">\n    <igo-zoom-button [map]=\"map\" color=\"primary\"></igo-zoom-button>\n  </igo-map-browser>\n\n  <igo-panel title=\"Details\">\n    <ng-container *ngIf=\"feature$ | async as feature\">\n      <h1>Query Title : <span style=\"background-color: #e0e0e0;\">{{getTitle(feature)}}</span></h1>\n      <igo-feature-details [feature]=\"feature\"></igo-feature-details>\n    </ng-container>\n  </igo-panel>\n\n</mat-card>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}