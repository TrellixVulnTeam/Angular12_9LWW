{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Select\n */\n\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\n\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\n\nvar SelectEvent = function (_super) {\n  __extends(SelectEvent, _super);\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n\n\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n\n    _this.selected = selected;\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n    _this.deselected = deselected;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n\n  return SelectEvent;\n}(Event);\n\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\n\nvar originalFeatureStyles = {};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\n\nvar Select = function (_super) {\n  __extends(Select, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function Select(opt_options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n\n\n    _this.on;\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n\n    _this.un;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     */\n\n    _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n    /**\n     * @private\n     */\n\n    _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.condition_ = options.condition ? options.condition : singleClick;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.addCondition_ = options.addCondition ? options.addCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.multi_ = options.multi ? options.multi : false;\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n\n    _this.filter_ = options.filter ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n\n    _this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n\n    _this.features_ = options.features || new Collection();\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n\n    var layerFilter;\n\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers_1 = options.layers;\n\n        layerFilter = function (layer) {\n          return includes(layers_1, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n\n\n    _this.layerFilter_ = layerFilter;\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n\n    _this.featureLayerAssociation_ = {};\n    return _this;\n  }\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n\n\n  Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n\n\n  Select.prototype.getFeatures = function () {\n    return this.features_;\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Select.prototype.getHitTolerance = function () {\n    return this.hitTolerance_;\n  };\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n\n\n  Select.prototype.getLayer = function (feature) {\n    return this.featureLayerAssociation_[getUid(feature)];\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Select.prototype.setHitTolerance = function (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n\n\n  Select.prototype.setMap = function (map) {\n    var currentMap = this.getMap();\n\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n\n    _super.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Select.prototype.addFeature_ = function (evt) {\n    var feature = evt.element;\n\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Select.prototype.removeFeature_ = function (evt) {\n    var feature = evt.element;\n\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  };\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n\n\n  Select.prototype.getStyle = function () {\n    return this.style_;\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n\n\n  Select.prototype.applySelectedStyle_ = function (feature) {\n    var key = getUid(feature);\n\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n\n    feature.setStyle(this.style_);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n\n\n  Select.prototype.restorePreviousStyle_ = function (feature) {\n    var interactions = this.getMap().getInteractions().getArray();\n\n    for (var i = interactions.length - 1; i >= 0; --i) {\n      var interaction = interactions[i];\n\n      if (interaction !== this && interaction instanceof Select && interaction.getStyle() && interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    var key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  };\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n\n\n  Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n\n\n  Select.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          selected.push(feature);\n          this.addFeatureLayerAssociation_(feature, layer);\n          return !this.multi_;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n\n      for (var i = features.getLength() - 1; i >= 0; --i) {\n        var feature = features.item(i);\n        var index = selected.indexOf(feature);\n\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if ((add || toggle) && !includes(features.getArray(), feature)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n          } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n\n          return !this.multi_;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n\n      for (var j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n\n      features.extend(selected);\n    }\n\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n\n    return true;\n  };\n\n  return Select;\n}(Interaction);\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\n\n\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/interaction/Select.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Collection","CollectionEventType","Event","GeometryType","Interaction","TRUE","clear","createEditingStyle","extend","includes","getUid","never","shiftKeyOnly","singleClick","SelectEventType","SELECT","SelectEvent","_super","type","selected","deselected","mapBrowserEvent","_this","originalFeatureStyles","Select","opt_options","on","once","un","options","boundAddFeature_","addFeature_","bind","boundRemoveFeature_","removeFeature_","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","style_","style","undefined","getDefaultStyleFunction","features_","features","layerFilter","layers","layers_1","layer","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","feature","getFeatures","getHitTolerance","getLayer","setHitTolerance","setMap","map","currentMap","getMap","forEach","restorePreviousStyle_","addEventListener","ADD","REMOVE","applySelectedStyle_","removeEventListener","evt","element","getStyle","key","setStyle","interactions","getInteractions","getArray","i","length","interaction","lastIndexOf","removeFeatureLayerAssociation_","handleEvent","add","remove","toggle","set","forEachFeatureAtPixel","pixel","push","getLength","item","index","indexOf","splice","j","dispatchEvent","styles","POLYGON","LINE_STRING","GEOMETRY_COLLECTION","getGeometry","getType"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnB,QAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;AACJF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASW,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBb,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;AACH,GAND;AAOH,CAd2C,EAA5C;AAeA;AACA;AACA;;;AACA,OAAOG,UAAP,MAAuB,kBAAvB;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,aAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,WAA9B,QAAiD,wBAAjD;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG;AAClB;AACJ;AACA;AACA;AACA;AACIC,EAAAA,MAAM,EAAE;AANU,CAAtB;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAkB,UAAUC,MAAV,EAAkB;AAC/ClC,EAAAA,SAAS,CAACiC,WAAD,EAAcC,MAAd,CAAT;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI,WAASD,WAAT,CAAqBE,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,eAAjD,EAAkE;AAC9D,QAAIC,KAAK,GAAGL,MAAM,CAACvB,IAAP,CAAY,IAAZ,EAAkBwB,IAAlB,KAA2B,IAAvC;AACA;AACR;AACA;AACA;AACA;;;AACQI,IAAAA,KAAK,CAACH,QAAN,GAAiBA,QAAjB;AACA;AACR;AACA;AACA;AACA;;AACQG,IAAAA,KAAK,CAACF,UAAN,GAAmBA,UAAnB;AACA;AACR;AACA;AACA;AACA;;AACQE,IAAAA,KAAK,CAACD,eAAN,GAAwBA,eAAxB;AACA,WAAOC,KAAP;AACH;;AACD,SAAON,WAAP;AACH,CAhCgC,CAgC/Bd,KAhC+B,CAAjC;;AAiCA,SAASc,WAAT;AACA;AACA;AACA;AACA;;AACA,IAA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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {SelectOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         */\n        _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n        /**\n         * @private\n         */\n        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition\n            ? options.removeCondition\n            : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition\n            ? options.toggleCondition\n            : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ =\n            options.style !== undefined ? options.style : getDefaultStyleFunction();\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @return {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return /** @type {import('../layer/Vector.js').default} */ (this.featureLayerAssociation_[getUid(feature)]);\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.restorePreviousStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n            if (this.style_) {\n                this.features_.forEach(this.applySelectedStyle_.bind(this));\n            }\n        }\n        else {\n            this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.applySelectedStyle_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.restorePreviousStyle_(feature);\n        }\n    };\n    /**\n     * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n     */\n    Select.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.applySelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        if (!(key in originalFeatureStyles)) {\n            originalFeatureStyles[key] = feature.getStyle();\n        }\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.restorePreviousStyle_ = function (feature) {\n        var interactions = this.getMap().getInteractions().getArray();\n        for (var i = interactions.length - 1; i >= 0; --i) {\n            var interaction = interactions[i];\n            if (interaction !== this &&\n                interaction instanceof Select &&\n                interaction.getStyle() &&\n                interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n                feature.setStyle(interaction.getStyle());\n                return;\n            }\n        }\n        var key = getUid(feature);\n        feature.setStyle(originalFeatureStyles[key]);\n        delete originalFeatureStyles[key];\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n     * selected state of features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {Select}\n     */\n    Select.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var add = this.addCondition_(mapBrowserEvent);\n        var remove = this.removeCondition_(mapBrowserEvent);\n        var toggle = this.toggleCondition_(mapBrowserEvent);\n        var set = !add && !remove && !toggle;\n        var map = mapBrowserEvent.map;\n        var features = this.getFeatures();\n        var deselected = [];\n        var selected = [];\n        if (set) {\n            // Replace the currently selected feature(s) with the feature(s) at the\n            // pixel, or clear the selected feature(s) if there is no feature at\n            // the pixel.\n            clear(this.featureLayerAssociation_);\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var i = features.getLength() - 1; i >= 0; --i) {\n                var feature = features.item(i);\n                var index = selected.indexOf(feature);\n                if (index > -1) {\n                    // feature is already selected\n                    selected.splice(index, 1);\n                }\n                else {\n                    features.remove(feature);\n                    deselected.push(feature);\n                }\n            }\n            if (selected.length !== 0) {\n                features.extend(selected);\n            }\n        }\n        else {\n            // Modify the currently selected feature(s).\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    if ((add || toggle) && !includes(features.getArray(), feature)) {\n                        selected.push(feature);\n                        this.addFeatureLayerAssociation_(feature, layer);\n                    }\n                    else if ((remove || toggle) &&\n                        includes(features.getArray(), feature)) {\n                        deselected.push(feature);\n                        this.removeFeatureLayerAssociation_(feature);\n                    }\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var j = deselected.length - 1; j >= 0; --j) {\n                features.remove(deselected[j]);\n            }\n            features.extend(selected);\n        }\n        if (selected.length > 0 || deselected.length > 0) {\n            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n        }\n        return true;\n    };\n    return Select;\n}(Interaction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}