{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/GPX\n */\n\n\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, parseNode, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { get as getProjection } from '../proj.js';\nimport { includes } from '../array.js';\nimport { readDateTime, readDecimal, readPositiveInteger, readString, writeDateTimeTextNode, writeDecimalTextNode, writeNonNegativeIntegerTextNode, writeStringTextNode } from './xsd.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\n\nvar NAMESPACE_URIS = [null, 'http://www.topografix.com/GPX/1/0', 'http://www.topografix.com/GPX/1/1'];\n/**\n * @const\n * @type {string}\n */\n\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' + 'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\n\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType')\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\n\nvar GPX = function (_super) {\n  __extends(GPX, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function GPX(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n\n    _this.dataProjection = getProjection('EPSG:4326');\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n\n    _this.readExtensions_ = options.readExtensions;\n    return _this;\n  }\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n\n\n  GPX.prototype.handleReadExtensions_ = function (features) {\n    if (!features) {\n      features = [];\n    }\n\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n\n      if (this.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n\n\n  GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n\n    var featureReader = FEATURE_READER[node.localName];\n\n    if (!featureReader) {\n      return null;\n    }\n\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n\n    if (!feature) {\n      return null;\n    }\n\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\n\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n\n    return [];\n  };\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n\n\n  GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options); //FIXME Serialize metadata\n\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n    pushSerializeAndPop({\n      node: gpx\n    }, GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\n\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\n\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */\n\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\n\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src', 'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop', 'ageofdgpsdata', 'dgpsid']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\n\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\n\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\n\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry =\n  /** @type {Feature} */\n  value.getGeometry();\n\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\n\n\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n\n  if ('ele' in values) {\n    flatCoordinates.push(values['ele']);\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n\n  if ('time' in values) {\n    flatCoordinates.push(values['time']);\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n\n  return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/GeometryLayout.js\").default} Layout.\n */\n\n\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n\n    if (ends) {\n      for (var i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n\n  return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseLink(node, objectStack) {\n  var values = objectStack[objectStack.length - 1];\n  var href = node.getAttribute('href');\n\n  if (href !== null) {\n    values['link'] = href;\n  }\n\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseExtensions(node, objectStack) {\n  var values = objectStack[objectStack.length - 1];\n  values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n\n  if (values) {\n    var rteValues = objectStack[objectStack.length - 1];\n    var flatCoordinates = rteValues['flatCoordinates'];\n    var layoutOptions = rteValues['layoutOptions'];\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n\n  if (values) {\n    var trkValues = objectStack[objectStack.length - 1];\n    var flatCoordinates = trkValues['flatCoordinates'];\n    var layoutOptions = trkValues['layoutOptions'];\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction parseTrkSeg(node, objectStack) {\n  var values = objectStack[objectStack.length - 1];\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = values['flatCoordinates'];\n  var ends = values['ends'];\n  ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\n\n\nfunction readRte(node, objectStack) {\n  var options = objectStack[0];\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n\n  if (!values) {\n    return undefined;\n  }\n\n  var flatCoordinates = values['flatCoordinates'];\n  delete values['flatCoordinates'];\n  var layoutOptions = values['layoutOptions'];\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\n\n\nfunction readTrk(node, objectStack) {\n  var options = objectStack[0];\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n\n  if (!values) {\n    return undefined;\n  }\n\n  var flatCoordinates = values['flatCoordinates'];\n  delete values['flatCoordinates'];\n  var ends = values['ends'];\n  delete values['ends'];\n  var layoutOptions = values['layoutOptions'];\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\n\n\nfunction readWpt(node, objectStack) {\n  var options = objectStack[0];\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n\n  if (!values) {\n    return undefined;\n  }\n\n  var layoutOptions = {};\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\n\n\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop({\n    node: node\n  }, LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties']; //FIXME Projection handling\n\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  var geometryLayout = context['geometryLayout'];\n\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n\n    // fall through\n\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n\n      break;\n\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n\n      break;\n\n    default: // pass\n\n  }\n\n  var orderedKeys = node.nodeName == 'rtept' ? RTEPT_TYPE_SEQUENCE[namespaceURI] : WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop({\n    node: node,\n    'properties': properties\n  }, WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeRte(node, feature, objectStack) {\n  var options = objectStack[0];\n  var properties = feature.getProperties();\n  var context = {\n    node: node\n  };\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    var lineString = transformGeometryWithOptions(geometry, true, options);\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeTrk(node, feature, objectStack) {\n  var options = objectStack[0];\n  var properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n\n  var context = {\n    node: node\n  };\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    var multiLineString = transformGeometryWithOptions(geometry, true, options);\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {\n    node: node\n  };\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeWpt(node, feature, objectStack) {\n  var options = objectStack[0];\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n\n  if (geometry.getType() == GeometryType.POINT) {\n    var point = transformGeometryWithOptions(geometry, true, options);\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/format/GPX.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Feature","GeometryLayout","GeometryType","LineString","MultiLineString","Point","XMLFeature","OBJECT_PROPERTY_NODE_FACTORY","XML_SCHEMA_INSTANCE_URI","createElementNS","makeArrayPusher","makeArraySerializer","makeChildAppender","makeObjectPropertySetter","makeSequence","makeSimpleNodeFactory","makeStructureNS","parseNode","pushParseAndPop","pushSerializeAndPop","get","getProjection","includes","readDateTime","readDecimal","readPositiveInteger","readString","writeDateTimeTextNode","writeDecimalTextNode","writeNonNegativeIntegerTextNode","writeStringTextNode","transformGeometryWithOptions","NAMESPACE_URIS","SCHEMA_LOCATION","FEATURE_READER","readRte","readTrk","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","writeRte","writeTrk","writeWpt","GPX","_super","opt_options","_this","options","dataProjection","readExtensions_","readExtensions","handleReadExtensions_","features","i","ii","length","feature","extensionsNode","set","undefined","readFeatureFromNode","node","namespaceURI","featureReader","localName","getReadOptions","readFeaturesFromNode","writeFeaturesNode","adaptOptions","gpx","xmlnsUri","setAttributeNS","setAttribute","GPX_NODE_FACTORY","RTE_PARSERS","parseLink","parseExtensions","parseRtePt","RTEPT_PARSERS","TRK_PARSERS","parseTrkSeg","TRKSEG_PARSERS","parseTrkPt","TRKPT_PARSERS","WPT_PARSERS","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","writeTrkSeg","TRKSEG_NODE_FACTORY","TRKSEG_SERIALIZERS","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","value","objectStack","opt_nodeName","geometry","getGeometry","nodeName","getType","parentNode","appendCoordinate","flatCoordinates","layoutOptions","values","push","parseFloat","getAttribute","hasZ","hasM","applyLayoutOptions","ends","layout","XY","stride","XYZM","XYZ","XYM","href","rteValues","trkValues","setProperties","coordinates","context","properties","link","coordinate","geometryLayout","orderedKeys","getProperties","LINE_STRING","lineString","getLayout","getCoordinates","MULTI_LINE_STRING","multiLineString","getLineStrings","POINT","point"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, parseNode, pushParseAndPop, pushSerializeAndPop, } from '../xml.js';\nimport { get as getProjection } from '../proj.js';\nimport { includes } from '../array.js';\nimport { readDateTime, readDecimal, readPositiveInteger, readString, writeDateTimeTextNode, writeDecimalTextNode, writeNonNegativeIntegerTextNode, writeStringTextNode, } from './xsd.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.topografix.com/GPX/1/0',\n    'http://www.topografix.com/GPX/1/1',\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n    'rte': readRte,\n    'trk': readTrk,\n    'wpt': readWpt,\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt),\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /** @class */ (function (_super) {\n    __extends(GPX, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function GPX(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @type {function(Feature, Node): void|undefined}\n         * @private\n         */\n        _this.readExtensions_ = options.readExtensions;\n        return _this;\n    }\n    /**\n     * @param {Array<Feature>} features List of features.\n     * @private\n     */\n    GPX.prototype.handleReadExtensions_ = function (features) {\n        if (!features) {\n            features = [];\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            var feature = features[i];\n            if (this.readExtensions_) {\n                var extensionsNode = feature.get('extensionsNode_') || null;\n                this.readExtensions_(feature, extensionsNode);\n            }\n            feature.set('extensionsNode_', undefined);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var featureReader = FEATURE_READER[node.localName];\n        if (!featureReader) {\n            return null;\n        }\n        var feature = featureReader(node, [\n            this.getReadOptions(node, opt_options),\n        ]);\n        if (!feature) {\n            return null;\n        }\n        this.handleReadExtensions_([feature]);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        if (node.localName == 'gpx') {\n            /** @type {Array<Feature>} */\n            var features = pushParseAndPop([], GPX_PARSERS, node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (features) {\n                this.handleReadExtensions_(features);\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        return [];\n    };\n    /**\n     * Encode an array of features in the GPX format as an XML node.\n     * LineString geometries are output as routes (`<rte>`), and MultiLineString\n     * as tracks (`<trk>`).\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @return {Node} Node.\n     * @api\n     */\n    GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        //FIXME Serialize metadata\n        var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        gpx.setAttribute('version', '1.1');\n        gpx.setAttribute('creator', 'OpenLayers');\n        pushSerializeAndPop(\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        ({ node: gpx }), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n        return gpx;\n    };\n    return GPX;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readPositiveInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt,\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readPositiveInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg,\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': parseTrkPt,\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readPositiveInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n    'extensions': parseExtensions,\n});\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name',\n    'cmt',\n    'desc',\n    'src',\n    'link',\n    'number',\n    'type',\n    'rtept',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name',\n    'cmt',\n    'desc',\n    'src',\n    'link',\n    'number',\n    'type',\n    'trkseg',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele',\n    'time',\n    'magvar',\n    'geoidheight',\n    'name',\n    'cmt',\n    'desc',\n    'src',\n    'link',\n    'sym',\n    'type',\n    'fix',\n    'sat',\n    'hdop',\n    'vdop',\n    'pdop',\n    'ageofdgpsdata',\n    'dgpsid',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'wpt',\n    'LineString': 'rte',\n    'MultiLineString': 'trk',\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n    var geometry = /** @type {Feature} */ (value).getGeometry();\n    if (geometry) {\n        var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n        if (nodeName) {\n            var parentNode = objectStack[objectStack.length - 1].node;\n            return createElementNS(parentNode.namespaceURI, nodeName);\n        }\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n    if ('ele' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['ele']));\n        delete values['ele'];\n        layoutOptions.hasZ = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    if ('time' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['time']));\n        delete values['time'];\n        layoutOptions.hasM = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/GeometryLayout.js\").default} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n    var layout = GeometryLayout.XY;\n    var stride = 2;\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\n        layout = GeometryLayout.XYZM;\n        stride = 4;\n    }\n    else if (layoutOptions.hasZ) {\n        layout = GeometryLayout.XYZ;\n        stride = 3;\n    }\n    else if (layoutOptions.hasM) {\n        layout = GeometryLayout.XYM;\n        stride = 3;\n    }\n    if (stride !== 4) {\n        for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n            if (layoutOptions.hasZ) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n            }\n            if (layoutOptions.hasM) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n            }\n        }\n        flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n        if (ends) {\n            for (var i = 0, ii = ends.length; i < ii; i++) {\n                ends[i] = (ends[i] / 4) * stride;\n            }\n        }\n    }\n    return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var href = node.getAttribute('href');\n    if (href !== null) {\n        values['link'] = href;\n    }\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n    var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n    if (values) {\n        var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n    var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n    if (values) {\n        var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    parseNode(TRKSEG_PARSERS, node, objectStack);\n    var flatCoordinates = \n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'layoutOptions': {},\n    }, RTE_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = \n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n    var geometry = new LineString(flatCoordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'ends': [],\n        'layoutOptions': {},\n    }, TRK_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = \n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    delete values['ends'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n    var geometry = new MultiLineString(flatCoordinates, layout, ends);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var layoutOptions = /** @type {LayoutOptions} */ ({});\n    var coordinates = appendCoordinate([], layoutOptions, node, values);\n    var layout = applyLayoutOptions(layoutOptions, coordinates);\n    var geometry = new Point(coordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n    node.setAttribute('href', value);\n    var context = objectStack[objectStack.length - 1];\n    var properties = context['properties'];\n    var link = [properties['linkText'], properties['linkType']];\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var namespaceURI = parentNode.namespaceURI;\n    var properties = context['properties'];\n    //FIXME Projection handling\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\n    var geometryLayout = context['geometryLayout'];\n    switch (geometryLayout) {\n        case GeometryLayout.XYZM:\n            if (coordinate[3] !== 0) {\n                properties['time'] = coordinate[3];\n            }\n        // fall through\n        case GeometryLayout.XYZ:\n            if (coordinate[2] !== 0) {\n                properties['ele'] = coordinate[2];\n            }\n            break;\n        case GeometryLayout.XYM:\n            if (coordinate[2] !== 0) {\n                properties['time'] = coordinate[2];\n            }\n            break;\n        default:\n        // pass\n    }\n    var orderedKeys = node.nodeName == 'rtept'\n        ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n        : WPT_TYPE_SEQUENCE[namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({ node: node, 'properties': properties }), WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.LINE_STRING) {\n        var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = lineString.getLayout();\n        properties['rtept'] = lineString.getCoordinates();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n        var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\n        properties['trkseg'] = multiLineString.getLineStrings();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['geometryLayout'] = lineString.getLayout();\n    context['properties'] = {};\n    pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var context = objectStack[objectStack.length - 1];\n    context['properties'] = feature.getProperties();\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.POINT) {\n        var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = point.getLayout();\n        writeWptType(node, point.getCoordinates(), objectStack);\n    }\n}\nexport default GPX;\n"]},"metadata":{},"sourceType":"module"}