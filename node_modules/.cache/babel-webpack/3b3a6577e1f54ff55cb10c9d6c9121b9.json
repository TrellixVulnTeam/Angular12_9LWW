{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/GML32\n */\n\n\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport { makeArrayPusher, makeChildAppender, makeReplacer } from '../xml.js';\nimport { writeStringTextNode } from '../format/xsd.js';\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\n\nvar GML32 = function (_super) {\n  __extends(GML32, _super);\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [opt_options] Optional configuration object.\n   */\n\n\n  function GML32(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, options) || this;\n    /**\n     * @type {string}\n     */\n\n    _this.schemaLocation = options.schemaLocation ? options.schemaLocation : _this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n    return _this;\n  }\n\n  return GML32;\n}(GML3);\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember),\n    'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember),\n    'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n  }\n};\nexport default GML32;","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/ol/format/GML32.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","GML2","GML3","GMLBase","makeArrayPusher","makeChildAppender","makeReplacer","writeStringTextNode","GML32","_super","opt_options","_this","options","schemaLocation","namespace","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatPos","readFlatPosList","readFlatCoordinates","FLAT_LINEAR_RINGS_PARSERS","interiorParser","exteriorParser","GEOMETRY_PARSERS","readPoint","readMultiPoint","readLineString","readMultiLineString","readLinearRing","readPolygon","readMultiPolygon","readSurface","readMultiSurface","readCurve","readMultiCurve","readEnvelope","MULTICURVE_PARSERS","curveMemberParser","MULTISURFACE_PARSERS","surfaceMemberParser","CURVEMEMBER_PARSERS","SURFACEMEMBER_PARSERS","SURFACE_PARSERS","readPatch","CURVE_PARSERS","readSegment","ENVELOPE_PARSERS","PATCHES_PARSERS","readPolygonPatch","SEGMENTS_PARSERS","readLineStringSegment","MULTIPOINT_PARSERS","pointMemberParser","MULTILINESTRING_PARSERS","lineStringMemberParser","MULTIPOLYGON_PARSERS","polygonMemberParser","POINTMEMBER_PARSERS","readFlatCoordinatesFromNode","LINESTRINGMEMBER_PARSERS","POLYGONMEMBER_PARSERS","RING_PARSERS","readFlatLinearRing","RING_SERIALIZERS","writeRing","ENVELOPE_SERIALIZERS","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","POINTMEMBER_SERIALIZERS","writePointMember","LINESTRINGORCURVEMEMBER_SERIALIZERS","writeLineStringOrCurveMember","GEOMETRY_SERIALIZERS","writeCurveOrLineString","writeMultiCurveOrLineString","writePoint","writeMultiPoint","writeLinearRing","writeSurfaceOrPolygon","writeMultiSurfaceOrPolygon","writeEnvelope"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport { makeArrayPusher, makeChildAppender, makeReplacer } from '../xml.js';\nimport { writeStringTextNode } from '../format/xsd.js';\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = /** @class */ (function (_super) {\n    __extends(GML32, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options} [opt_options] Optional configuration object.\n     */\n    function GML32(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @type {string}\n         */\n        _this.schemaLocation = options.schemaLocation\n            ? options.schemaLocation\n            : _this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n        return _this;\n    }\n    return GML32;\n}(GML3));\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList),\n        'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'interior': GML3.prototype.interiorParser,\n        'exterior': GML3.prototype.exteriorParser,\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML32.prototype.readSurface),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n        'Curve': makeReplacer(GML32.prototype.readCurve),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n        'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'patches': makeReplacer(GML3.prototype.readPatch),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'segments': makeReplacer(GML3.prototype.readSegment),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    },\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    },\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing),\n        'interior': makeChildAppender(GML3.prototype.writeRing),\n    },\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode),\n    },\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember),\n    },\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n    },\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember),\n    },\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n        'Point': makeChildAppender(GML32.prototype.writePoint),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n    },\n};\nexport default GML32;\n"]},"metadata":{},"sourceType":"module"}