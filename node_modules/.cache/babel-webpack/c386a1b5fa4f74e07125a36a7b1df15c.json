{"ast":null,"code":"/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\n\nvar DatabaseStorage = function () {\n  function DatabaseStorage(dbName, tableName, version) {\n    this.dbName = dbName;\n    this.tableName = tableName;\n    this.version = version;\n    this.dbOpen = false;\n  }\n  /**\r\n   * Opens IndexedDB instance.\r\n   */\n\n\n  DatabaseStorage.prototype.open = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          // TODO: Add timeouts?\n          var openDB = window.indexedDB.open(_this.dbName, _this.version);\n          openDB.addEventListener(\"upgradeneeded\", function (e) {\n            var event = e;\n            event.target.result.createObjectStore(_this.tableName);\n          });\n          openDB.addEventListener(\"success\", function (e) {\n            var event = e;\n            _this.db = event.target.result;\n            _this.dbOpen = true;\n            resolve();\n          });\n          openDB.addEventListener(\"error\", function (error) {\n            return reject(error);\n          });\n        })];\n      });\n    });\n  };\n  /**\r\n   * Retrieves item from IndexedDB instance.\r\n   * @param key\r\n   */\n\n\n  DatabaseStorage.prototype.get = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this.dbOpen) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.open()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              // TODO: Add timeouts?\n              if (!_this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n              }\n\n              var transaction = _this.db.transaction([_this.tableName], \"readonly\");\n\n              var objectStore = transaction.objectStore(_this.tableName);\n              var dbGet = objectStore.get(key);\n              dbGet.addEventListener(\"success\", function (e) {\n                var event = e;\n                resolve(event.target.result);\n              });\n              dbGet.addEventListener(\"error\", function (e) {\n                return reject(e);\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Adds item to IndexedDB under given key\r\n   * @param key\r\n   * @param payload\r\n   */\n\n\n  DatabaseStorage.prototype.put = function (key, payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this.dbOpen) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.open()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              // TODO: Add timeouts?\n              if (!_this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n              }\n\n              var transaction = _this.db.transaction([_this.tableName], \"readwrite\");\n\n              var objectStore = transaction.objectStore(_this.tableName);\n              var dbPut = objectStore.put(payload, key);\n              dbPut.addEventListener(\"success\", function (e) {\n                var event = e;\n                resolve(event.target.result);\n              });\n              dbPut.addEventListener(\"error\", function (e) {\n                return reject(e);\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  return DatabaseStorage;\n}();\n\nexport { DatabaseStorage };","map":{"version":3,"sources":["C:/Users/admin/Downloads/angular/igo2-lib-master/node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.js"],"names":["__awaiter","__generator","BrowserAuthError","DatabaseStorage","dbName","tableName","version","dbOpen","prototype","open","_this","_a","Promise","resolve","reject","openDB","window","indexedDB","addEventListener","e","event","target","result","createObjectStore","db","error","get","key","label","sent","createDatabaseNotOpenError","transaction","objectStore","dbGet","put","payload","dbPut"],"mappings":"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","sourcesContent":["/*! @azure/msal-browser v2.16.1 2021-08-02 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\r\nvar DatabaseStorage = /** @class */ (function () {\r\n    function DatabaseStorage(dbName, tableName, version) {\r\n        this.dbName = dbName;\r\n        this.tableName = tableName;\r\n        this.version = version;\r\n        this.dbOpen = false;\r\n    }\r\n    /**\r\n     * Opens IndexedDB instance.\r\n     */\r\n    DatabaseStorage.prototype.open = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        // TODO: Add timeouts?\r\n                        var openDB = window.indexedDB.open(_this.dbName, _this.version);\r\n                        openDB.addEventListener(\"upgradeneeded\", function (e) {\r\n                            var event = e;\r\n                            event.target.result.createObjectStore(_this.tableName);\r\n                        });\r\n                        openDB.addEventListener(\"success\", function (e) {\r\n                            var event = e;\r\n                            _this.db = event.target.result;\r\n                            _this.dbOpen = true;\r\n                            resolve();\r\n                        });\r\n                        openDB.addEventListener(\"error\", function (error) { return reject(error); });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves item from IndexedDB instance.\r\n     * @param key\r\n     */\r\n    DatabaseStorage.prototype.get = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.dbOpen) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            // TODO: Add timeouts?\r\n                            if (!_this.db) {\r\n                                return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n                            }\r\n                            var transaction = _this.db.transaction([_this.tableName], \"readonly\");\r\n                            var objectStore = transaction.objectStore(_this.tableName);\r\n                            var dbGet = objectStore.get(key);\r\n                            dbGet.addEventListener(\"success\", function (e) {\r\n                                var event = e;\r\n                                resolve(event.target.result);\r\n                            });\r\n                            dbGet.addEventListener(\"error\", function (e) { return reject(e); });\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds item to IndexedDB under given key\r\n     * @param key\r\n     * @param payload\r\n     */\r\n    DatabaseStorage.prototype.put = function (key, payload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.dbOpen) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            // TODO: Add timeouts?\r\n                            if (!_this.db) {\r\n                                return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n                            }\r\n                            var transaction = _this.db.transaction([_this.tableName], \"readwrite\");\r\n                            var objectStore = transaction.objectStore(_this.tableName);\r\n                            var dbPut = objectStore.put(payload, key);\r\n                            dbPut.addEventListener(\"success\", function (e) {\r\n                                var event = e;\r\n                                resolve(event.target.result);\r\n                            });\r\n                            dbPut.addEventListener(\"error\", function (e) { return reject(e); });\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return DatabaseStorage;\r\n}());\n\nexport { DatabaseStorage };\n"]},"metadata":{},"sourceType":"module"}