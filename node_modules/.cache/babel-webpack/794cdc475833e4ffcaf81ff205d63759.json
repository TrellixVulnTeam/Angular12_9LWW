{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/VectorRenderTile\n */\n\n\nimport Tile from './Tile.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getUid } from './util.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\n\nvar canvasPool = [];\n\nvar VectorRenderTile = function (_super) {\n  __extends(VectorRenderTile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n\n\n  function VectorRenderTile(tileCoord, state, urlTileCoord, getSourceTiles) {\n    var _this = _super.call(this, tileCoord, state, {\n      transition: 0\n    }) || this;\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n\n\n    _this.context_ = {};\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n\n    _this.executorGroups = {};\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n\n    _this.declutterExecutorGroups = {};\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n\n    _this.loadingSourceTiles = 0;\n    /**\n     * @type {Object<number, ImageData>}\n     */\n\n    _this.hitDetectionImageData = {};\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n\n    _this.replayState_ = {};\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n\n    _this.sourceTiles = [];\n    /**\n     * @type {Object<string, boolean>}\n     */\n\n    _this.errorTileKeys = {};\n    /**\n     * @type {number}\n     */\n\n    _this.wantedResolution;\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n\n    _this.getSourceTiles = getSourceTiles.bind(undefined, _this);\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n\n    _this.wrappedTileCoord = urlTileCoord;\n    return _this;\n  }\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n\n\n  VectorRenderTile.prototype.getContext = function (layer) {\n    var key = getUid(layer);\n\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n\n    return this.context_[key];\n  };\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n\n\n  VectorRenderTile.prototype.hasContext = function (layer) {\n    return getUid(layer) in this.context_;\n  };\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n\n\n  VectorRenderTile.prototype.getImage = function (layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  };\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n\n\n  VectorRenderTile.prototype.getReplayState = function (layer) {\n    var key = getUid(layer);\n\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1\n      };\n    }\n\n    return this.replayState_[key];\n  };\n  /**\n   * Load the tile.\n   */\n\n\n  VectorRenderTile.prototype.load = function () {\n    this.getSourceTiles();\n  };\n  /**\n   * Remove from the cache due to expiry\n   */\n\n\n  VectorRenderTile.prototype.release = function () {\n    for (var key in this.context_) {\n      canvasPool.push(this.context_[key].canvas);\n      delete this.context_[key];\n    }\n\n    _super.prototype.release.call(this);\n  };\n\n  return VectorRenderTile;\n}(Tile);\n\nexport default VectorRenderTile;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/VectorRenderTile.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Tile","createCanvasContext2D","getUid","canvasPool","VectorRenderTile","_super","tileCoord","state","urlTileCoord","getSourceTiles","_this","transition","context_","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","bind","undefined","wrappedTileCoord","getContext","layer","key","hasContext","getImage","canvas","getReplayState","dirty","renderedRenderOrder","renderedResolution","NaN","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","load","release","push"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getUid } from './util.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nvar canvasPool = [];\nvar VectorRenderTile = /** @class */ (function (_super) {\n    __extends(VectorRenderTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n     * to get source tiles for this tile.\n     */\n    function VectorRenderTile(tileCoord, state, urlTileCoord, getSourceTiles) {\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\n        /**\n         * @private\n         * @type {!Object<string, CanvasRenderingContext2D>}\n         */\n        _this.context_ = {};\n        /**\n         * Executor groups by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.executorGroups = {};\n        /**\n         * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.declutterExecutorGroups = {};\n        /**\n         * Number of loading source tiles. Read/written by the source.\n         * @type {number}\n         */\n        _this.loadingSourceTiles = 0;\n        /**\n         * @type {Object<number, ImageData>}\n         */\n        _this.hitDetectionImageData = {};\n        /**\n         * @private\n         * @type {!Object<string, ReplayState>}\n         */\n        _this.replayState_ = {};\n        /**\n         * @type {Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.sourceTiles = [];\n        /**\n         * @type {Object<string, boolean>}\n         */\n        _this.errorTileKeys = {};\n        /**\n         * @type {number}\n         */\n        _this.wantedResolution;\n        /**\n         * @type {!function():Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.getSourceTiles = getSourceTiles.bind(undefined, _this);\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord = urlTileCoord;\n        return _this;\n    }\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {CanvasRenderingContext2D} The rendering context.\n     */\n    VectorRenderTile.prototype.getContext = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.context_)) {\n            this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n        }\n        return this.context_[key];\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n    VectorRenderTile.prototype.hasContext = function (layer) {\n        return getUid(layer) in this.context_;\n    };\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    VectorRenderTile.prototype.getImage = function (layer) {\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n    VectorRenderTile.prototype.getReplayState = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.replayState_)) {\n            this.replayState_[key] = {\n                dirty: false,\n                renderedRenderOrder: null,\n                renderedResolution: NaN,\n                renderedRevision: -1,\n                renderedTileResolution: NaN,\n                renderedTileRevision: -1,\n                renderedTileZ: -1,\n            };\n        }\n        return this.replayState_[key];\n    };\n    /**\n     * Load the tile.\n     */\n    VectorRenderTile.prototype.load = function () {\n        this.getSourceTiles();\n    };\n    /**\n     * Remove from the cache due to expiry\n     */\n    VectorRenderTile.prototype.release = function () {\n        for (var key in this.context_) {\n            canvasPool.push(this.context_[key].canvas);\n            delete this.context_[key];\n        }\n        _super.prototype.release.call(this);\n    };\n    return VectorRenderTile;\n}(Tile));\nexport default VectorRenderTile;\n"]},"metadata":{},"sourceType":"module"}