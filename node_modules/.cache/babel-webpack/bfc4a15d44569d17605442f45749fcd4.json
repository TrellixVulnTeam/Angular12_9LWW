{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/Rotate\n */\n\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='â‡§'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\n\nvar Rotate = function (_super) {\n  __extends(Rotate, _super);\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n\n\n  function Rotate(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target\n    }) || this;\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n    var compassClassName = options.compassClassName !== undefined ? options.compassClassName : 'ol-compass';\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n\n    _this.label_ = null;\n\n    if (typeof label === 'string') {\n      _this.label_ = document.createElement('span');\n      _this.label_.className = compassClassName;\n      _this.label_.textContent = label;\n    } else {\n      _this.label_ = label;\n\n      _this.label_.classList.add(compassClassName);\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(_this.label_);\n    button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n    _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    _this.rotation_ = undefined;\n\n    if (_this.autoHide_) {\n      _this.element.classList.add(CLASS_HIDDEN);\n    }\n\n    return _this;\n  }\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n\n\n  Rotate.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Rotate.prototype.resetNorth_ = function () {\n    var map = this.getMap();\n    var view = map.getView();\n\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n\n    var rotation = view.getRotation();\n\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n\n\n  Rotate.prototype.render = function (mapEvent) {\n    var frameState = mapEvent.frameState;\n\n    if (!frameState) {\n      return;\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    if (rotation != this.rotation_) {\n      var transform = 'rotate(' + rotation + 'rad)';\n\n      if (this.autoHide_) {\n        var contains = this.element.classList.contains(CLASS_HIDDEN);\n\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n\n      this.label_.style.transform = transform;\n    }\n\n    this.rotation_ = rotation;\n  };\n\n  return Rotate;\n}(Control);\n\nexport default Rotate;","map":{"version":3,"sources":["C:/Users/admin/Downloads/igo2-lib-master/igo2-lib-master/node_modules/ol/control/Rotate.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Control","EventType","CLASS_CONTROL","CLASS_HIDDEN","CLASS_UNSELECTABLE","easeOut","Rotate","_super","opt_options","_this","options","element","document","createElement","render","target","className","undefined","label","compassClassName","label_","textContent","classList","add","tipLabel","button","setAttribute","title","appendChild","addEventListener","CLICK","handleClick_","bind","cssClasses","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","event","preventDefault","resetNorth_","map","getMap","view","getView","rotation","getRotation","Math","PI","animate","easing","setRotation","mapEvent","frameState","viewState","transform","contains","remove","style"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='â‡§'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options} [opt_options] Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n"]},"metadata":{},"sourceType":"module"}