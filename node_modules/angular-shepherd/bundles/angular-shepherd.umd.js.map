{"version":3,"file":"angular-shepherd.umd.js","sources":["../../../projects/shepherd/src/lib/utils/dom.ts","../../../projects/shepherd/src/lib/utils/buttons.ts","../../../projects/shepherd/src/lib/shepherd.service.ts","../../../projects/shepherd/src/public_api.ts","../../../projects/shepherd/src/angular-shepherd.ts"],"names":["Shepherd","Injectable"],"mappings":"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","sourcesContent":["/**\n * Helper method to check if element is hidden, since we cannot use :visible without jQuery\n * @param element The element to check for visibility\n * @returns true if element is hidden\n */\nexport function elementIsHidden(element: HTMLElement): boolean {\n  return element.offsetWidth === 0 && element.offsetHeight === 0;\n}\n","/**\n * Creates a button of the specified type, with the given classes and text\n *\n * @param button.type The type of button cancel, back, or next\n * @param button.classes Classes to apply to the button\n * @param button.text The text for the button\n * @param button.action The action to call\n */\nexport function makeButton(button) {\n  const { classes, disabled, label, secondary, type, text } = button;\n  const builtInButtonTypes = ['back', 'cancel', 'next'];\n\n  if (!type) {\n    return button;\n  }\n\n  if (builtInButtonTypes.indexOf(type) === -1) {\n    throw new Error(`'type' property must be one of 'back', 'cancel', or 'next'`);\n  }\n\n  return {\n    action: this[type].bind(this),\n    classes,\n    disabled,\n    label,\n    secondary,\n    text\n  };\n}\n","import { Injectable } from '@angular/core';\nimport Shepherd from 'shepherd.js';\nimport { elementIsHidden } from './utils/dom';\nimport { makeButton } from './utils/buttons';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShepherdService {\n  confirmCancel = false;\n  confirmCancelMessage: string = null;\n  defaultStepOptions: object = {};\n  errorTitle = null;\n  isActive = false;\n  messageForUser: string = null;\n  modal = false;\n  requiredElements = [];\n  steps = [];\n  tourName = undefined;\n  tourObject: Shepherd.Tour = null;\n\n  constructor() {\n  }\n\n  /**\n   * Get the tour object and call back\n   */\n  back() {\n    this.tourObject.back();\n  }\n\n  /**\n   * Cancel the tour\n   */\n  cancel() {\n    this.tourObject.cancel();\n  }\n\n  /**\n   * Complete the tour\n   */\n  complete() {\n    this.tourObject.complete();\n  }\n\n  /**\n   * Hides the current step\n   */\n  hide() {\n    this.tourObject.hide();\n  }\n\n  /**\n   * Advance the tour to the next step\n   */\n  next() {\n    this.tourObject.next();\n  }\n\n  /**\n   * Show a specific step, by passing its id\n   * @param id The id of the step you want to show\n   */\n  show(id) {\n    this.tourObject.show(id);\n  }\n\n  /**\n   * Start the tour\n   */\n  start() {\n    this.isActive = true;\n    this.tourObject.start();\n  }\n\n  /**\n   * This function is called when a tour is completed or cancelled to initiate cleanup.\n   * @param completeOrCancel 'complete' or 'cancel'\n   */\n  onTourFinish(completeOrCancel: string) {\n    this.isActive = false;\n  }\n\n  /**\n   * Take a set of steps and create a tour object based on the current configuration\n   * @param steps An array of steps\n   */\n  addSteps(steps: Array<any>) {\n    this._initialize();\n    const tour = this.tourObject;\n\n    // Return nothing if there are no steps\n    if (!steps || !Array.isArray(steps) || steps.length === 0) {\n      return;\n    }\n\n    if (!this.requiredElementsPresent()) {\n      tour.addStep({\n        buttons: [{\n          text: 'Exit',\n          action: tour.cancel\n        }],\n        id: 'error',\n        title: this.errorTitle,\n        text: [this.messageForUser]\n      });\n      return;\n    }\n\n    steps.forEach((step) => {\n      if (step.buttons) {\n        step.buttons = step.buttons.map(makeButton.bind(this), this);\n      }\n\n      tour.addStep(step);\n    });\n  }\n\n  /**\n   * Observes the array of requiredElements, which are the elements that must be present at the start of the tour,\n   * and determines if they exist, and are visible, if either is false, it will stop the tour from executing.\n   */\n  private requiredElementsPresent() {\n    let allElementsPresent = true;\n\n    /* istanbul ignore next: also can't test this due to things attached to root blowing up tests */\n    this.requiredElements.forEach((element) => {\n      const selectedElement = document.querySelector(element.selector);\n\n      if (allElementsPresent && (!selectedElement || elementIsHidden(selectedElement))) {\n        allElementsPresent = false;\n        this.errorTitle = element.title;\n        this.messageForUser = element.message;\n      }\n    });\n\n    return allElementsPresent;\n  }\n\n  /**\n   * Initializes the tour, creates a new Shepherd.Tour. sets options, and binds events\n   */\n  private _initialize() {\n    const tourObject = new Shepherd.Tour({\n      confirmCancel: this.confirmCancel,\n      confirmCancelMessage: this.confirmCancelMessage,\n      defaultStepOptions: this.defaultStepOptions,\n      tourName: this.tourName,\n      useModalOverlay: this.modal\n    });\n\n    tourObject.on('complete', this.onTourFinish.bind(this, 'complete'));\n    tourObject.on('cancel', this.onTourFinish.bind(this, 'cancel'));\n\n    this.tourObject = tourObject;\n  }\n}\n","/*\n * Public API Surface of shepherd\n */\n\nexport * from './lib/shepherd.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}