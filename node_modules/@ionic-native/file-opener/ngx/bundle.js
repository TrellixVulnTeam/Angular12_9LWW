'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

var ɵngcc0 = require('@angular/core');
var FileOpener = /** @class */ (function (_super) {
    tslib.__extends(FileOpener, _super);
    function FileOpener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileOpener.prototype.open = function (filePath, fileMIMEType) { return core.cordova(this, "open", { "callbackStyle": "object", "successName": "success", "errorName": "error" }, arguments); };
    FileOpener.prototype.uninstall = function (packageId) { return core.cordova(this, "uninstall", { "callbackStyle": "object", "successName": "success", "errorName": "error" }, arguments); };
    FileOpener.prototype.appIsInstalled = function (packageId) { return core.cordova(this, "appIsInstalled", { "callbackStyle": "object", "successName": "success", "errorName": "error" }, arguments); };
    FileOpener.prototype.showOpenWithDialog = function (filePath, fileMIMEType) { return core.cordova(this, "showOpenWithDialog", { "callbackStyle": "object", "successName": "success", "errorName": "error" }, arguments); };
    FileOpener.pluginName = "FileOpener";
    FileOpener.plugin = "cordova-plugin-file-opener2";
    FileOpener.pluginRef = "cordova.plugins.fileOpener2";
    FileOpener.repo = "https://github.com/pwlin/cordova-plugin-file-opener2";
    FileOpener.platforms = ["Android", "iOS", "Windows", "Windows Phone 8"];
FileOpener.ɵfac = /*@__PURE__*/ function () { var ɵFileOpener_BaseFactory; return function FileOpener_Factory(t) { return (ɵFileOpener_BaseFactory || (ɵFileOpener_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FileOpener)))(t || FileOpener); }; }();
FileOpener.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: FileOpener, factory: function (t) { return FileOpener.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileOpener, [{
        type: core$1.Injectable
    }], null, null); })();
    return FileOpener;
}(core.IonicNativePlugin));

exports.FileOpener = FileOpener;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJidW5kbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OzswQkFHTTtBQUNOO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgdHNsaWIgPSByZXF1aXJlKCd0c2xpYicpO1xudmFyIGNvcmUkMSA9IHJlcXVpcmUoJ0Bhbmd1bGFyL2NvcmUnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnQGlvbmljLW5hdGl2ZS9jb3JlJyk7XG5cbnZhciBGaWxlT3BlbmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIHRzbGliLl9fZXh0ZW5kcyhGaWxlT3BlbmVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEZpbGVPcGVuZXIoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgRmlsZU9wZW5lci5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uIChmaWxlUGF0aCwgZmlsZU1JTUVUeXBlKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJvcGVuXCIsIHsgXCJjYWxsYmFja1N0eWxlXCI6IFwib2JqZWN0XCIsIFwic3VjY2Vzc05hbWVcIjogXCJzdWNjZXNzXCIsIFwiZXJyb3JOYW1lXCI6IFwiZXJyb3JcIiB9LCBhcmd1bWVudHMpOyB9O1xuICAgIEZpbGVPcGVuZXIucHJvdG90eXBlLnVuaW5zdGFsbCA9IGZ1bmN0aW9uIChwYWNrYWdlSWQpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcInVuaW5zdGFsbFwiLCB7IFwiY2FsbGJhY2tTdHlsZVwiOiBcIm9iamVjdFwiLCBcInN1Y2Nlc3NOYW1lXCI6IFwic3VjY2Vzc1wiLCBcImVycm9yTmFtZVwiOiBcImVycm9yXCIgfSwgYXJndW1lbnRzKTsgfTtcbiAgICBGaWxlT3BlbmVyLnByb3RvdHlwZS5hcHBJc0luc3RhbGxlZCA9IGZ1bmN0aW9uIChwYWNrYWdlSWQpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcImFwcElzSW5zdGFsbGVkXCIsIHsgXCJjYWxsYmFja1N0eWxlXCI6IFwib2JqZWN0XCIsIFwic3VjY2Vzc05hbWVcIjogXCJzdWNjZXNzXCIsIFwiZXJyb3JOYW1lXCI6IFwiZXJyb3JcIiB9LCBhcmd1bWVudHMpOyB9O1xuICAgIEZpbGVPcGVuZXIucHJvdG90eXBlLnNob3dPcGVuV2l0aERpYWxvZyA9IGZ1bmN0aW9uIChmaWxlUGF0aCwgZmlsZU1JTUVUeXBlKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzaG93T3BlbldpdGhEaWFsb2dcIiwgeyBcImNhbGxiYWNrU3R5bGVcIjogXCJvYmplY3RcIiwgXCJzdWNjZXNzTmFtZVwiOiBcInN1Y2Nlc3NcIiwgXCJlcnJvck5hbWVcIjogXCJlcnJvclwiIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgRmlsZU9wZW5lci5wbHVnaW5OYW1lID0gXCJGaWxlT3BlbmVyXCI7XG4gICAgRmlsZU9wZW5lci5wbHVnaW4gPSBcImNvcmRvdmEtcGx1Z2luLWZpbGUtb3BlbmVyMlwiO1xuICAgIEZpbGVPcGVuZXIucGx1Z2luUmVmID0gXCJjb3Jkb3ZhLnBsdWdpbnMuZmlsZU9wZW5lcjJcIjtcbiAgICBGaWxlT3BlbmVyLnJlcG8gPSBcImh0dHBzOi8vZ2l0aHViLmNvbS9wd2xpbi9jb3Jkb3ZhLXBsdWdpbi1maWxlLW9wZW5lcjJcIjtcbiAgICBGaWxlT3BlbmVyLnBsYXRmb3JtcyA9IFtcIkFuZHJvaWRcIiwgXCJpT1NcIiwgXCJXaW5kb3dzXCIsIFwiV2luZG93cyBQaG9uZSA4XCJdO1xuICAgIEZpbGVPcGVuZXIuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBjb3JlJDEuSW5qZWN0YWJsZSB9XG4gICAgXTtcbiAgICByZXR1cm4gRmlsZU9wZW5lcjtcbn0oY29yZS5Jb25pY05hdGl2ZVBsdWdpbikpO1xuXG5leHBvcnRzLkZpbGVPcGVuZXIgPSBGaWxlT3BlbmVyO1xuIl19